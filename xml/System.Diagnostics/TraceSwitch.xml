<Type Name="TraceSwitch" FullName="System.Diagnostics.TraceSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a41ddbd161763d051f2a9f2389d762b508989c2" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86849137" /></Metadata><TypeSignature Language="C#" Value="public class TraceSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type TraceSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.TraceSource" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供多级开关，用于控制跟踪和调试输出，而无需重新编译代码。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用跟踪开关，根据消息的重要性来筛选消息。 <xref:System.Diagnostics.TraceSwitch>类提供 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> 和 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 属性以测试开关的级别。 <xref:System.Diagnostics.TraceSwitch.Level%2A>属性获取或设置开关的 <xref:System.Diagnostics.TraceLevel> 。  
  
 你可以 <xref:System.Diagnostics.TraceSwitch> 通过应用程序配置文件设置的级别，然后 <xref:System.Diagnostics.TraceSwitch> 在你的应用程序中使用配置的级别。 或者，您可以 <xref:System.Diagnostics.TraceSwitch> 在代码中创建，并直接设置级别来检测代码的特定部分。  
  
 若要配置 <xref:System.Diagnostics.TraceSwitch> ，请编辑应用程序的配置文件。 在此文件中，可以添加或删除开关、设置开关的值，或者清除以前由应用程序设置的所有开关。 配置文件的格式应类似于以下示例：  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 此配置节定义了 <xref:System.Diagnostics.TraceSwitch> <xref:System.Diagnostics.Switch.DisplayName%2A> ，并将设置为 `mySwitch` ，并 <xref:System.Diagnostics.TraceSwitch.Level%2A> 将设置为1，这对应于枚举值 <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> 。  
  
> [!NOTE]
>  在 .NET Framework 2.0 版中，你可以使用文本指定开关值。 例如， `true` 对于 <xref:System.Diagnostics.BooleanSwitch> 或表示枚举值的文本（例如） `Error` <xref:System.Diagnostics.TraceSwitch> 。 行 `<add name="mySwitch" value="Error" />` 等于 `<add name="mySwitch" value="1" />`。  
  
 在应用程序中，可以通过创建一个具有相同名称的来使用已配置的交换机级别 <xref:System.Diagnostics.TraceSwitch> ，如以下示例中所示：  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 默认情况下， <xref:System.Diagnostics.TraceSwitch.Level%2A> 使用配置文件中指定的值设置开关属性。 如果 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> 构造函数在配置文件中找不到初始开关设置，则 <xref:System.Diagnostics.TraceSwitch.Level%2A> 新开关的默认值为 <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType> 。  
  
 您必须启用跟踪或调试才能使用交换机。 以下语法是编译器特定的。 如果使用 c # 或 Visual Basic 以外的编译器，请参阅编译器的文档。  
  
-   若要在 c # 中启用调试，请在 `/d:DEBUG` 编译代码时将标志添加到编译器命令行，或将添加 `#define DEBUG` 到文件的顶部。 在 Visual Basic 中，将 `/d:DEBUG=True` 标志添加到编译器命令行。  
  
-   若要在 c # 中启用跟踪，请在 `/d:TRACE` 编译代码时将标志添加到编译器命令行，或将添加 `#define TRACE` 到文件的顶部。 在 Visual Basic 中，将 `/d:TRACE=True` 标志添加到编译器命令行。  
  
> [!NOTE]
>  在隔离中使用类时，不需要这些调试和跟踪编译器开关 <xref:System.Diagnostics.TraceSwitch> 。 只需结合 <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.Debug> 有条件地编译的或方法。  
  
 有关检测应用程序的详细信息，请参阅 <xref:System.Diagnostics.Debug> 和 <xref:System.Diagnostics.Trace> 。 有关配置和使用跟踪开关的详细信息，请参阅 [跟踪开关](/dotnet/framework/debug-trace-profile/trace-switches)。  
  
> [!NOTE]
>  若要提高性能，可以 <xref:System.Diagnostics.TraceSwitch> `static` 在类中创建成员。  
  
   
  
## Examples  
 下面的代码示例创建一个新的 <xref:System.Diagnostics.TraceSwitch> ，并使用开关来确定是否打印错误消息。 在类级别创建开关。 `MyMethod` 如果 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为或更高，则写入第一条错误消息 <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> 。 但是， `MyMethod` 如果小于，则不写入第二个错误消息 <xref:System.Diagnostics.TraceSwitch.Level%2A> <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType> 。  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceLevel" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Diagnostics.TraceSwitch" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string? description);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description)" />
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">要在用户界面上显示的名称。</param>
        <param name="description">切换描述。</param>
        <summary>使用指定的显示名称和说明初始化 <see cref="T:System.Diagnostics.TraceSwitch" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置的级别 <xref:System.Diagnostics.TraceSwitch> ，请编辑与应用程序名称对应的配置文件。 在此文件中，可以添加开关并设置其值、删除开关或清除以前由应用程序设置的所有开关。 配置文件的格式应类似于以下示例：  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  在 .NET Framework 2.0 版中，你可以使用文本指定开关值。 例如， `true` 对于 <xref:System.Diagnostics.BooleanSwitch> 或表示枚举值的文本（例如） `Error` <xref:System.Diagnostics.TraceSwitch> 。 行 `<add name="mySwitch" value="Error" />` 等于 `<add name="mySwitch" value="1" />`。  
  
 在应用程序中，可以通过创建一个具有相同名称的来使用已配置的交换机级别 <xref:System.Diagnostics.TraceSwitch> ，如以下示例中所示：  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/remarks.cpp#3)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/remarks.cs#3)]
 [!code-vb[Classic TraceSwitch.TraceError Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/remarks.vb#3)]  
  
 如果 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> 构造函数在配置文件中找不到初始开关设置，则 <xref:System.Diagnostics.TraceSwitch.Level%2A> 新开关的属性将设置为 <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType> 。  
  
 <xref:System.Diagnostics.TraceSwitch>类提供 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> 和 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 属性以测试 <xref:System.Diagnostics.TraceSwitch.Level%2A> 开关的。 <xref:System.Diagnostics.TraceSwitch.Level%2A>属性获取或设置开关的 <xref:System.Diagnostics.TraceLevel> 。  
  
> [!NOTE]
>  若要提高性能，可以 <xref:System.Diagnostics.TraceSwitch> `static` 在类中创建成员。  
  
   
  
## Examples  
 下面的代码示例创建一个新的 <xref:System.Diagnostics.TraceSwitch> ，并使用开关来确定是否打印错误消息。 在类级别创建开关。 `MyMethod` 如果 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为或更高，则写入第一条错误消息 <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> 。 但是， `MyMethod` 如果小于，则不写入第二个错误消息 <xref:System.Diagnostics.TraceSwitch.Level%2A> <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType> 。  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string? description, string defaultSwitchValue);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSwitch : string * string * string -&gt; System.Diagnostics.TraceSwitch" Usage="new System.Diagnostics.TraceSwitch (displayName, description, defaultSwitchValue)" />
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description, string defaultSwitchValue);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName">要在用户界面上显示的名称。</param>
        <param name="description">切换描述。</param>
        <param name="defaultSwitchValue">切换的默认值。</param>
        <summary>使用开关的指定显示名称、说明和默认值来初始化 <see cref="T:System.Diagnostics.TraceSwitch" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `displayName`参数用于设置属性的值 <xref:System.Diagnostics.Switch.DisplayName%2A> ， `description` 参数用于设置属性的值 <xref:System.Diagnostics.Switch.Description%2A> ，并且该 `defaultSwitchValue` 参数保存为字段并用于 <xref:System.Diagnostics.Switch.Value%2A> 在第一次引用时初始化属性。 <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>有关详细信息和代码示例，请参见构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLevel Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As TraceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLevel Level { System::Diagnostics::TraceLevel get(); void set(System::Diagnostics::TraceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Diagnostics.TraceLevel with get, set" Usage="System.Diagnostics.TraceSwitch.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置跟踪级别，它将确定开关所允许的消息。</summary>
        <value><see cref="T:System.Diagnostics.TraceLevel" />值之一，指定开关允许的消息级别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置的级别 <xref:System.Diagnostics.TraceSwitch> ，请编辑与应用程序名称对应的配置文件。 在此文件中，可以添加开关并设置其值、删除开关或清除以前由应用程序设置的所有开关。 配置文件的格式应类似于以下示例：  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="0" />  
      <add name="myNewSwitch" value="3" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  在 .NET Framework 2.0 版中，你可以使用文本指定开关值。 例如， `true` 对于 <xref:System.Diagnostics.BooleanSwitch> 或表示枚举值的文本（例如） `Error` <xref:System.Diagnostics.TraceSwitch> 。 行 `<add name="mySwitch" value="Error" />` 等于 `<add name="mySwitch" value="1" />`。  
  
 如果 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A> 构造函数在配置文件中找不到初始开关设置，则 <xref:System.Diagnostics.TraceSwitch.Level%2A> 新开关的属性将设置为 <xref:System.Diagnostics.TraceLevel.Off?displayProperty=nameWithType> 。  
  
 设置此属性将更新 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> 和 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 属性以反映新的值。  
  
   
  
## Examples  
 下面的代码示例创建一个新的 <xref:System.Diagnostics.TraceSwitch> ，并使用开关来确定是否打印错误消息。 在类级别创建开关。 `MyMethod` 如果 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为或更高，则写入第一条错误消息 <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> 。 但是， `MyMethod` 如果小于，则不写入第二个错误消息 <xref:System.Diagnostics.TraceSwitch.Level%2A> <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType> 。  
  
 [!code-cpp[Classic TraceSwitch.Level Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.Level Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.Level Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.Level Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.TraceSwitch.Level" /> 设置为非 <see cref="T:System.Diagnostics.TraceLevel" /> 值。</exception>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected override void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSwitchSettingChanged();" />
      <MemberSignature Language="F#" Value="override this.OnSwitchSettingChanged : unit -&gt; unit" Usage="traceSwitch.OnSwitchSettingChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>更新并更正此开关的级别。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged%2A>.Net framework 使用方法来验证和更正通过配置文件初始化的开关的值。 如果在配置文件中指定的开关值不是由枚举定义的 <xref:System.Diagnostics.TraceLevel> ，并且开关设置为定义的值，则会将消息写入所有跟踪侦听器。  
  
 如果你在代码中尝试将属性设置 <xref:System.Diagnostics.TraceSwitch.Level%2A> 为不是由枚举定义的值，则 <xref:System.Diagnostics.TraceLevel> <xref:System.ArgumentException> 会引发异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="traceSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 属性设置为 <see cref="P:System.Diagnostics.Switch.Value" /> 属性的整数等效值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当开关的属性更改时，会在内部调用此方法 <xref:System.Diagnostics.Switch.Value%2A> 。 方法可确保与开关的值相关的属性反映新的值。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>若要重写此属性，请将属性的字符串值转换 <see cref="P:System.Diagnostics.Switch.Value" /> 为 binary，然后设置 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 属性。</para></block>
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public bool TraceError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceError : bool" Usage="System.Diagnostics.TraceSwitch.TraceError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示开关是否允许错误处理消息。</summary>
        <value>如果 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 设置为 <see cref="F:System.Diagnostics.TraceLevel.Error" />、<see cref="F:System.Diagnostics.TraceLevel.Warning" />、<see cref="F:System.Diagnostics.TraceLevel.Info" /> 或 <see cref="F:System.Diagnostics.TraceLevel.Verbose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> 和 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 属性与和类结合使用， <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Trace> 以发出指定重要性或更高的所有消息。 如果将 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为最高重要性，则 <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> <xref:System.Diagnostics.TraceLevel.Error> 仅发出错误处理消息。  
  
   
  
## Examples  
 下面的代码示例创建一个新的 <xref:System.Diagnostics.TraceSwitch> ，并使用开关来确定是否发出错误消息。 在类级别创建开关。 `MyMethod` 如果 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为或更高，则写入第一条错误消息 <xref:System.Diagnostics.TraceLevel.Error?displayProperty=nameWithType> 。 但是， `MyMethod` 如果小于，则不写入第二个错误消息 <xref:System.Diagnostics.TraceSwitch.Level%2A> <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType> 。  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceInfo">
      <MemberSignature Language="C#" Value="public bool TraceInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceInfo : bool" Usage="System.Diagnostics.TraceSwitch.TraceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示开关是否允许信息性消息。</summary>
        <value>如果 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 属性设置为 <see cref="F:System.Diagnostics.TraceLevel.Info" /> 或 <see cref="F:System.Diagnostics.TraceLevel.Verbose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> 和 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 属性与和类结合使用， <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Trace> 以发出指定重要性或更高的所有消息。 当 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为时 <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType> ，将发出信息性消息、警告和错误处理消息。  
  
   
  
## Examples  
 下面的代码示例创建一个新的 <xref:System.Diagnostics.TraceSwitch> ，并使用开关来确定是否发出错误消息。 在类级别创建开关。 `MyMethod` 如果 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为或更高，则写入第一条错误消息 <xref:System.Diagnostics.TraceLevel.Info?displayProperty=nameWithType> 。 但是， `MyMethod` 如果小于，则不写入第二个错误消息 <xref:System.Diagnostics.TraceSwitch.Level%2A> <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType> 。  
  
 [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceVerbose">
      <MemberSignature Language="C#" Value="public bool TraceVerbose { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceVerbose" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceVerbose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceVerbose { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceVerbose : bool" Usage="System.Diagnostics.TraceSwitch.TraceVerbose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示开关是否允许所有消息。</summary>
        <value>如果 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 属性设置为 <see cref="F:System.Diagnostics.TraceLevel.Verbose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> 和 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 属性与和类结合使用， <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Trace> 以发出指定重要性或更高的所有消息。 当 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为时 <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType> ，将传输所有调试和跟踪消息。  
  
   
  
## Examples  
 下面的代码示例创建一个新的 <xref:System.Diagnostics.TraceSwitch> ，并使用开关来确定是否发出错误消息。 在类级别创建开关。 `MyMethod` 当属性设置为时，写入两个错误消息 <xref:System.Diagnostics.TraceSwitch.Level%2A> <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType> 。  
  
 [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceError Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public bool TraceWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceWarning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceWarning : bool" Usage="System.Diagnostics.TraceSwitch.TraceWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示开关是否允许警告消息。</summary>
        <value>如果 <see cref="P:System.Diagnostics.TraceSwitch.Level" /> 属性设置为 <see cref="F:System.Diagnostics.TraceLevel.Warning" />、<see cref="F:System.Diagnostics.TraceLevel.Info" /> 或 <see cref="F:System.Diagnostics.TraceLevel.Verbose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将 <xref:System.Diagnostics.TraceSwitch.TraceError%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 、 <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> 和 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> 属性与和类结合使用， <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Trace> 以发出指定重要性或更高的所有消息。 当 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为时 <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType> ，将发出警告和错误处理消息。  
  
   
  
## Examples  
 下面的代码示例创建一个新的 <xref:System.Diagnostics.TraceSwitch> ，并使用开关来确定是否发出错误消息。 在类级别创建开关。 `MyMethod` 如果 <xref:System.Diagnostics.TraceSwitch.Level%2A> 属性设置为或更高，则写入第一条错误消息 <xref:System.Diagnostics.TraceLevel.Warning?displayProperty=nameWithType> 。 但是， `MyMethod` 当小于时，不写入第二个错误消息 <xref:System.Diagnostics.TraceSwitch.Level%2A> <xref:System.Diagnostics.TraceLevel.Verbose?displayProperty=nameWithType> 。  
  
 [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/CS/source.cs#1)]
 [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceSwitch.TraceWarning Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.TraceLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
