<Type Name="EventLogEntry" FullName="System.Diagnostics.EventLogEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d482ff1ead1a386810f7385b7e182559c889712" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86850346" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventLogEntry extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogEntry" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogEntry&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogEntry sealed : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type EventLogEntry = class&#xA;    inherit Component&#xA;    interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EventLogEntry extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DesignTimeVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DesignTimeVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItem(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItem(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="421cc-101">在事件日志中封装单个记录。</span><span class="sxs-lookup"><span data-stu-id="421cc-101">Encapsulates a single record in the event log.</span></span> <span data-ttu-id="421cc-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="421cc-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-103">使用类时，通常不会直接创建的实例 <xref:System.Diagnostics.EventLogEntry> <xref:System.Diagnostics.EventLog> 。</span><span class="sxs-lookup"><span data-stu-id="421cc-103">You usually will not create instances of <xref:System.Diagnostics.EventLogEntry> directly when working with the <xref:System.Diagnostics.EventLog> class.</span></span> <span data-ttu-id="421cc-104"><xref:System.Diagnostics.EventLog.Entries%2A>类的成员 <xref:System.Diagnostics.EventLog> 包含实例的集合 <xref:System.Diagnostics.EventLogEntry> ，这些实例在通过使用 <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=nameWithType> 类索引成员读取时进行循环访问。</span><span class="sxs-lookup"><span data-stu-id="421cc-104">The <xref:System.Diagnostics.EventLog.Entries%2A> member of the <xref:System.Diagnostics.EventLog> class contains a collection of <xref:System.Diagnostics.EventLogEntry> instances, which you iterate over when reading by using the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=nameWithType> class index member.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="421cc-105">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="421cc-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="421cc-106">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="421cc-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="421cc-107">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="421cc-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="421cc-108">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="421cc-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="421cc-109">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="421cc-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="421cc-110">下面的代码示例演示如何使用 <xref:System.Diagnostics.EventLogEntry> 类。</span><span class="sxs-lookup"><span data-stu-id="421cc-110">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry> class.</span></span> <span data-ttu-id="421cc-111">在此示例中， `switch` 语句使用控制台输入搜索指定事件类型的事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="421cc-111">In this example, a `switch` statement uses console input to search for event log entries for the specified event type.</span></span>  <span data-ttu-id="421cc-112">如果找到匹配项，则会在控制台中显示日志条目的源信息。</span><span class="sxs-lookup"><span data-stu-id="421cc-112">If a match is found, log entry source information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
    <altmember cref="T:System.Diagnostics.EventInstance" />
  </Docs>
  <Members>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Diagnostics.EventLogEntry.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryCategory")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryCategory")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("The category of this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("The category of this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-113">获取与该项的 <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> 属性关联的文本。</span><span class="sxs-lookup"><span data-stu-id="421cc-113">Gets the text associated with the <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> property for this entry.</span></span></summary>
        <value><span data-ttu-id="421cc-114">应用程序特定的类别文本。</span><span class="sxs-lookup"><span data-stu-id="421cc-114">The application-specific category text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-115">每个应用程序 (事件源) 可以定义自己的编号类别以及它们所映射到的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="421cc-115">Each application (event source) can define its own numbered categories and the text strings to which they are mapped.</span></span> <span data-ttu-id="421cc-116">事件查看器可以使用类别来筛选日志中的事件。</span><span class="sxs-lookup"><span data-stu-id="421cc-116">The Event Viewer can use the category to filter events in the log.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="421cc-117">未能为与类别关联的插入字符串之一分配空间。</span><span class="sxs-lookup"><span data-stu-id="421cc-117">The space could not be allocated for one of the insertion strings associated with the category.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
      </Docs>
    </Member>
    <Member MemberName="CategoryNumber">
      <MemberSignature Language="C#" Value="public short CategoryNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 CategoryNumber" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryNumber As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short CategoryNumber { short get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryNumber : int16" Usage="System.Diagnostics.EventLogEntry.CategoryNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryCategoryNumber")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryCategoryNumber")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("An ID for the category of this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("An ID for the category of this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-118">获取事件日志项的类别号。</span><span class="sxs-lookup"><span data-stu-id="421cc-118">Gets the category number of the event log entry.</span></span></summary>
        <value><span data-ttu-id="421cc-119">该项的应用程序特定类别号。</span><span class="sxs-lookup"><span data-stu-id="421cc-119">The application-specific category number for this entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-120">每个应用程序 (事件源) 可以定义自己的编号类别以及它们所映射到的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="421cc-120">Each application (event source) can define its own numbered categories and the text strings to which they are mapped.</span></span> <span data-ttu-id="421cc-121">事件查看器可以使用类别来筛选日志中的事件。</span><span class="sxs-lookup"><span data-stu-id="421cc-121">The Event Viewer can use the category to filter events in the log.</span></span> <span data-ttu-id="421cc-122">类别必须从数字1开始连续编号。</span><span class="sxs-lookup"><span data-stu-id="421cc-122">The categories must be numbered consecutively beginning with the number 1.</span></span> <span data-ttu-id="421cc-123">类别号由 <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=nameWithType> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="421cc-123">The category number is specified by the <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="421cc-124">事件查看器可以将类别显示为数值，也可以将类别用作资源标识符以显示本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="421cc-124">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span> <span data-ttu-id="421cc-125">有关详细信息，请参阅 <xref:System.Diagnostics.EventInstance>。</span><span class="sxs-lookup"><span data-stu-id="421cc-125">For more information, see <xref:System.Diagnostics.EventInstance>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.Category" />
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[]" Usage="System.Diagnostics.EventLogEntry.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryData")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryData")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("Binary data associated with this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("Binary data associated with this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-126">获取与该项关联的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="421cc-126">Gets the binary data associated with the entry.</span></span></summary>
        <value><span data-ttu-id="421cc-127">包含与此项关联的二进制数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="421cc-127">An array of bytes that holds the binary data associated with the entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-128">获取此属性将创建一个数组，该数组保存项特定于事件的二进制数据的副本，该副本以十六进制和文本格式组合事件查看器显示。</span><span class="sxs-lookup"><span data-stu-id="421cc-128">Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format.</span></span> <span data-ttu-id="421cc-129">特定于事件的数据有时用于存储应用程序将独立于事件查看器处理的信息，例如，从日志文件中生成报表。</span><span class="sxs-lookup"><span data-stu-id="421cc-129">Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryType : System.Diagnostics.EventLogEntryType" Usage="System.Diagnostics.EventLogEntry.EntryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryEntryType")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryEntryType")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("The type of this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("The type of this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-130">获取该项的事件类型。</span><span class="sxs-lookup"><span data-stu-id="421cc-130">Gets the event type of this entry.</span></span></summary>
        <value><span data-ttu-id="421cc-131">与事件日志中的项相关联的事件类型。</span><span class="sxs-lookup"><span data-stu-id="421cc-131">The event type that is associated with the entry in the event log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-132">所有事件类型都有明确定义的通用数据，并且可以选择包括特定于事件的数据。</span><span class="sxs-lookup"><span data-stu-id="421cc-132">All event types have well-defined common data and can optionally include event-specific data.</span></span> <span data-ttu-id="421cc-133">每个事件都属于单个类型，应用程序在报告事件时指示该类型。</span><span class="sxs-lookup"><span data-stu-id="421cc-133">Each event is of a single type, which the application indicates when it reports the event.</span></span> <span data-ttu-id="421cc-134">事件查看器使用事件类型确定要在事件日志的列表视图中显示哪个图标。</span><span class="sxs-lookup"><span data-stu-id="421cc-134">The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="421cc-135">下面的代码示例演示属性的用法 <xref:System.Diagnostics.EventLogEntry.EntryType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="421cc-135">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry.EntryType%2A> property.</span></span> <span data-ttu-id="421cc-136">在此示例中， `switch` 语句使用控制台输入搜索指定的事件日志条目 <xref:System.Diagnostics.EventLogEntry.EntryType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="421cc-136">In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  <span data-ttu-id="421cc-137">如果找到匹配项，则会在控制台中显示日志条目的源信息。</span><span class="sxs-lookup"><span data-stu-id="421cc-137">If a match is found, log entry source information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventInstance.EntryType" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.EventLogEntry otherEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Diagnostics.EventLogEntry otherEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (otherEntry As EventLogEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Diagnostics::EventLogEntry ^ otherEntry);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Diagnostics.EventLogEntry -&gt; bool" Usage="eventLogEntry.Equals otherEntry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherEntry" Type="System.Diagnostics.EventLogEntry" />
      </Parameters>
      <Docs>
        <param name="otherEntry"><span data-ttu-id="421cc-138">要比较的 <see cref="T:System.Diagnostics.EventLogEntry" />。</span><span class="sxs-lookup"><span data-stu-id="421cc-138">The <see cref="T:System.Diagnostics.EventLogEntry" /> to compare.</span></span></param>
        <summary><span data-ttu-id="421cc-139">对两个事件日志项进行比较。</span><span class="sxs-lookup"><span data-stu-id="421cc-139">Performs a comparison between two event log entries.</span></span></summary>
        <returns><span data-ttu-id="421cc-140">如果 <see cref="T:System.Diagnostics.EventLogEntry" /> 对象完全相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="421cc-140"><see langword="true" /> if the <see cref="T:System.Diagnostics.EventLogEntry" /> objects are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-141">此方法对两个对象执行逐字节的比较。</span><span class="sxs-lookup"><span data-stu-id="421cc-141">This method performs a byte-by-byte comparison between the two objects.</span></span> <span data-ttu-id="421cc-142">它不确定两个实例是否 <xref:System.Diagnostics.EventLogEntry> 引用同一对象。</span><span class="sxs-lookup"><span data-stu-id="421cc-142">It does not determine whether the two <xref:System.Diagnostics.EventLogEntry> instances refer to the same object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventID">
      <MemberSignature Language="C#" Value="public int EventID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventID" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.EventID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EventID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EventID : int" Usage="System.Diagnostics.EventLogEntry.EventID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("This property has been deprecated.  Please use System.Diagnostics.EventLogEntry.InstanceId instead.  http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property has been deprecated.  Please use System.Diagnostics.EventLogEntry.InstanceId instead.  http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("This property has been deprecated.  Please use System.Diagnostics.EventLogEntry.InstanceId instead.  https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property has been deprecated.  Please use System.Diagnostics.EventLogEntry.InstanceId instead.  https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryEventID")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryEventID")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("An ID number for this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("An ID number for this event entry.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Use InstanceId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use InstanceId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-143">获取当前事件项的应用程序特定事件标识符。</span><span class="sxs-lookup"><span data-stu-id="421cc-143">Gets the application-specific event identifier for the current event entry.</span></span></summary>
        <value><span data-ttu-id="421cc-144">事件消息的应用程序特定标识符。</span><span class="sxs-lookup"><span data-stu-id="421cc-144">The application-specific identifier for the event message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-145">此值表示事件日志中的项的事件标识符，其中顶部两位被屏蔽。</span><span class="sxs-lookup"><span data-stu-id="421cc-145">This value represents the event identifier for the entry in the event log, with the top two bits masked off.</span></span> <span data-ttu-id="421cc-146"><xref:System.Diagnostics.EventLogEntry.InstanceId%2A>事件日志条目的属性表示事件源的消息资源文件中的事件的完整32位资源标识符。</span><span class="sxs-lookup"><span data-stu-id="421cc-146">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.</span></span> <span data-ttu-id="421cc-147">来自相同源的两个事件日志项可以具有匹配的 <xref:System.Diagnostics.EventLogEntry.EventID%2A> 值，但 <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> 由于事件标识符的前两位中存在差异，因此具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="421cc-147">Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the event identifier.</span></span>  
  
 <span data-ttu-id="421cc-148">如果应用程序使用其中一个方法编写事件项 <xref:System.Diagnostics.EventLog.WriteEntry%2A> ，则属性将 <xref:System.Diagnostics.EventLogEntry.EventID%2A> 与可选参数匹配 `eventId` 。</span><span class="sxs-lookup"><span data-stu-id="421cc-148">If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the optional `eventId` parameter.</span></span> <span data-ttu-id="421cc-149">如果应用程序使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 或 WINDOWS API 写入事件 `ReportEvent` ，则属性将与 <xref:System.Diagnostics.EventLogEntry.EventID%2A> 事件的资源标识符匹配，并将前两位屏蔽为关闭状态。</span><span class="sxs-lookup"><span data-stu-id="421cc-149">If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A> or the Windows API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the resource identifier for the event, with the top two bits masked off.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Diagnostics.EventLogEntry.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryIndex")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryIndex")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("Sequence numer of this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("Sequence numer of this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-150">获取该项在事件日志中的索引。</span><span class="sxs-lookup"><span data-stu-id="421cc-150">Gets the index of this entry in the event log.</span></span></summary>
        <value><span data-ttu-id="421cc-151">该项在事件日志中的索引。</span><span class="sxs-lookup"><span data-stu-id="421cc-151">The index of this entry in the event log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-152">此数字不一定是从零开始的。</span><span class="sxs-lookup"><span data-stu-id="421cc-152">This number is not necessarily zero-based.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : int64" Usage="System.Diagnostics.EventLogEntry.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryResourceId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryResourceId")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("The instance ID for this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("The instance ID for this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-153">获取指定事件项的消息文本的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="421cc-153">Gets the resource identifier that designates the message text of the event entry.</span></span></summary>
        <value><span data-ttu-id="421cc-154">资源标识符，与事件源的消息资源文件中的字符串定义对应。</span><span class="sxs-lookup"><span data-stu-id="421cc-154">A resource identifier that corresponds to a string definition in the message resource file of the event source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-155">此 <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> 属性唯一标识已配置事件源的事件条目。</span><span class="sxs-lookup"><span data-stu-id="421cc-155">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property uniquely identifies an event entry for a configured event source.</span></span> <span data-ttu-id="421cc-156"><xref:System.Diagnostics.EventLogEntry.InstanceId%2A>事件日志项的表示事件源的消息资源文件中的事件的完整32位资源标识符。</span><span class="sxs-lookup"><span data-stu-id="421cc-156">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.</span></span> <span data-ttu-id="421cc-157"><xref:System.Diagnostics.EventLogEntry.EventID%2A>属性等于， <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> 具有被屏蔽的前两位。</span><span class="sxs-lookup"><span data-stu-id="421cc-157">The <xref:System.Diagnostics.EventLogEntry.EventID%2A> property equals the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> with the top two bits masked off.</span></span> <span data-ttu-id="421cc-158">来自相同源的两个事件日志项可以具有匹配的 <xref:System.Diagnostics.EventLogEntry.EventID%2A> 值，但 <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> 由于资源标识符的前两位之间存在差异，因此具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="421cc-158">Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the resource identifier.</span></span>  
  
 <span data-ttu-id="421cc-159">如果应用程序使用其中一个方法编写事件项 <xref:System.Diagnostics.EventLog.WriteEntry%2A> ，则属性将 <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> 与可选参数匹配 `eventId` 。</span><span class="sxs-lookup"><span data-stu-id="421cc-159">If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the optional `eventId` parameter.</span></span> <span data-ttu-id="421cc-160">如果应用程序使用编写事件 <xref:System.Diagnostics.EventLog.WriteEvent%2A> ，则 <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> 属性将与在参数的中指定的资源标识符相匹配 <xref:System.Diagnostics.EventInstance.InstanceId%2A> `instance` 。</span><span class="sxs-lookup"><span data-stu-id="421cc-160">If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` parameter.</span></span> <span data-ttu-id="421cc-161">如果应用程序使用 Windows API 编写了事件 `ReportEvent` ，则该 <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> 属性将与参数中指定的资源标识符相匹配 `dwEventID` 。</span><span class="sxs-lookup"><span data-stu-id="421cc-161">If the application wrote the event using the Windows API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the `dwEventID` parameter.</span></span>  
  
 <span data-ttu-id="421cc-162">有关定义事件消息和生成事件日志资源文件的详细信息，请参阅 Platform SDK 文档中的 [消息编译器](/windows/win32/wes/message-compiler--mc-exe-) 一文。</span><span class="sxs-lookup"><span data-stu-id="421cc-162">For details about defining event messages and building event log resource files, see the [Message Compiler](/windows/win32/wes/message-compiler--mc-exe-) article in the Platform SDK documentation.</span></span> <span data-ttu-id="421cc-163">有关事件日志标识符的详细信息，请参阅 Platform SDK 文档中的 [事件标识符](/windows/win32/eventlog/event-categories) 一文。</span><span class="sxs-lookup"><span data-stu-id="421cc-163">For details about event log identifiers, see the [Event Identifiers](/windows/win32/eventlog/event-categories) article in the Platform SDK documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="421cc-164">下面的代码示例在事件日志中搜索具有特定资源标识符的条目。</span><span class="sxs-lookup"><span data-stu-id="421cc-164">The following code example searches an event log for entries with a particular resource identifier.</span></span> <span data-ttu-id="421cc-165">此代码示例显示每个匹配项的事件消息，并计算日志中匹配项的总数。</span><span class="sxs-lookup"><span data-stu-id="421cc-165">The code example displays the event message for each matching entry, and counts the total number of matching entries in the log.</span></span> <span data-ttu-id="421cc-166">每个条目的消息文本可能相同，也可能不相同;每个事件消息依赖于写入时使用的事件源消息文件、插入字符串和参数。</span><span class="sxs-lookup"><span data-stu-id="421cc-166">The message text for each entry may or may not be the same; each event message depends on the event source message file, insertion strings, and parameters used when it was written.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#10](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#10)]
 [!code-csharp[EventLog_WriteEvent#10](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#10)]
 [!code-vb[EventLog_WriteEvent#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Diagnostics.EventLogEntry.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryMachineName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryMachineName")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("The Computer on which this event entry occured.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("The Computer on which this event entry occured.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-167">获取在其上生成该项的计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="421cc-167">Gets the name of the computer on which this entry was generated.</span></span></summary>
        <value><span data-ttu-id="421cc-168">包含事件日志的计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="421cc-168">The name of the computer that contains the event log.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Diagnostics.EventLogEntry.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryMessage")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryMessage")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("The message of this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("The message of this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-169">获取与该事件项关联的本地化消息。</span><span class="sxs-lookup"><span data-stu-id="421cc-169">Gets the localized message associated with this event entry.</span></span></summary>
        <value><span data-ttu-id="421cc-170">消息的格式化、本地化文本。</span><span class="sxs-lookup"><span data-stu-id="421cc-170">The formatted, localized text for the message.</span></span> <span data-ttu-id="421cc-171">其中包含关联的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="421cc-171">This includes associated replacement strings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-172">获取此属性将打开注册表，以确定包含本地化文本的 .dll 文件的文件名。</span><span class="sxs-lookup"><span data-stu-id="421cc-172">Getting this property opens the registry to determine the file name of the .dll file that contains the localized text.</span></span> <span data-ttu-id="421cc-173">如果在测试源代码时收到注册表错误，请验证计算机上是否存在该 .dll 文件。</span><span class="sxs-lookup"><span data-stu-id="421cc-173">If you receive a registry error when testing your source code, verify that the .dll file exists on the computer.</span></span> <span data-ttu-id="421cc-174">如果消息中包含插入字符串，请在其分配中捕获错误。</span><span class="sxs-lookup"><span data-stu-id="421cc-174">If insertion strings are included in the message, catch errors in their allocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="421cc-175">未能为与消息关联的插入字符串之一分配空间。</span><span class="sxs-lookup"><span data-stu-id="421cc-175">The space could not be allocated for one of the insertion strings associated with the message.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventInstance" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="ReplacementStrings">
      <MemberSignature Language="C#" Value="public string[] ReplacementStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ReplacementStrings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.ReplacementStrings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplacementStrings As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ReplacementStrings { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementStrings : string[]" Usage="System.Diagnostics.EventLogEntry.ReplacementStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryReplacementStrings")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryReplacementStrings")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("Application strings for this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("Application strings for this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-176">获取与事件日志项关联的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="421cc-176">Gets the replacement strings associated with the event log entry.</span></span></summary>
        <value><span data-ttu-id="421cc-177">包含存储在事件项中的替换字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="421cc-177">An array that holds the replacement strings stored in the event entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-178">此属性仅检索条目的替换字符串。</span><span class="sxs-lookup"><span data-stu-id="421cc-178">This property retrieves only the replacement strings for the entry.</span></span> <span data-ttu-id="421cc-179">若要检索完整消息，请读取 <xref:System.Diagnostics.EventLogEntry.Message%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="421cc-179">To retrieve the full message, read the <xref:System.Diagnostics.EventLogEntry.Message%2A> property.</span></span>  
  
 <span data-ttu-id="421cc-180"><xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A>属性包含事件日志项中使用的替换字符串的本地化版本。</span><span class="sxs-lookup"><span data-stu-id="421cc-180">The <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> property contains the localized versions of replacement strings that are used in the event log entry.</span></span> <span data-ttu-id="421cc-181">如果为应用程序提供了每个目标语言中包含字符串的资源文件，则可以使用该计算机上所用的语言发出事件日志消息。</span><span class="sxs-lookup"><span data-stu-id="421cc-181">If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer.</span></span> <span data-ttu-id="421cc-182">为此，请 <xref:System.Resources.ResourceManager> 为包含替换字符串的资源程序集创建类的实例。</span><span class="sxs-lookup"><span data-stu-id="421cc-182">To do that, create an instance of the <xref:System.Resources.ResourceManager> class for the resource assembly that contains your replacement strings.</span></span> <span data-ttu-id="421cc-183">构造函数的第一个参数 <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> 标识要使用的资源程序集。</span><span class="sxs-lookup"><span data-stu-id="421cc-183">The first parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor identifies the resource assembly to be used.</span></span> <span data-ttu-id="421cc-184">使用 <xref:System.Resources.ResourceManager.GetString%2A> 该实例的方法可为日志事件提供本地化消息。</span><span class="sxs-lookup"><span data-stu-id="421cc-184">Use the <xref:System.Resources.ResourceManager.GetString%2A> method of that instance to supply localized messages for log events.</span></span> <span data-ttu-id="421cc-185">下面的代码自动将消息设置为当前区域性的语言。</span><span class="sxs-lookup"><span data-stu-id="421cc-185">The following code automatically sets the message to the language for the current culture.</span></span>  
  
```csharp  
ResourceManager LocRM = new ResourceManager("ReplacementStrings.TestStrings",   
      typeof(Program).Assembly);  
EventLog e1 = new EventLog("LocTest", "MyMachine", "LocTest");  
// Get the string associated with the current culture.  
e1.WriteEntry(LocRM.GetString("strMessage"),  
   EventLogEntryType.Information);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.Message" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Diagnostics.EventLogEntry.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntrySource")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntrySource")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("The source application of this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("The source application of this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-186">获取生成该事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="421cc-186">Gets the name of the application that generated this event.</span></span></summary>
        <value><span data-ttu-id="421cc-187">在事件日志中注册为该事件的源的名称。</span><span class="sxs-lookup"><span data-stu-id="421cc-187">The name registered with the event log as the source of this event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-188">事件源指示记录了哪些事件。</span><span class="sxs-lookup"><span data-stu-id="421cc-188">The event source indicates what logged the event.</span></span> <span data-ttu-id="421cc-189">如果应用程序较大，则通常是应用程序的名称或应用程序的子组件的名称。</span><span class="sxs-lookup"><span data-stu-id="421cc-189">It is often the name of the application or the name of a subcomponent of the application if the application is large.</span></span> <span data-ttu-id="421cc-190">应用程序和服务通常会写入到 (，因此它们是应用程序日志或自定义日志) 的源。</span><span class="sxs-lookup"><span data-stu-id="421cc-190">Applications and services usually write to (and therefore are sources for) the Application log or a custom log.</span></span> <span data-ttu-id="421cc-191">设备驱动程序通常会写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="421cc-191">Device drivers usually write to the System log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="421cc-192">下面的代码示例演示属性的用法 <xref:System.Diagnostics.EventLogEntry.Source%2A> 。</span><span class="sxs-lookup"><span data-stu-id="421cc-192">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry.Source%2A> property.</span></span> <span data-ttu-id="421cc-193">在此示例中， `switch` 语句使用控制台输入搜索指定的事件日志条目 <xref:System.Diagnostics.EventLogEntry.EntryType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="421cc-193">In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  <span data-ttu-id="421cc-194">如果找到匹配项，则 <xref:System.Diagnostics.EventLogEntry.Source%2A> 会在控制台中显示属性信息。</span><span class="sxs-lookup"><span data-stu-id="421cc-194">If a match is found, the <xref:System.Diagnostics.EventLogEntry.Source%2A> property information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="eventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Needs serialization support")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Needs serialization support")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="421cc-195">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="421cc-195">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="421cc-196">此序列化的目标（请参阅 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</span><span class="sxs-lookup"><span data-stu-id="421cc-196">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span></span></param>
        <summary><span data-ttu-id="421cc-197">使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="421cc-197">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeGenerated">
      <MemberSignature Language="C#" Value="public DateTime TimeGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeGenerated As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeGenerated { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeGenerated : DateTime" Usage="System.Diagnostics.EventLogEntry.TimeGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryTimeGenerated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryTimeGenerated")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("Generation time of this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("Generation time of this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-198">获取生成该事件的本地时间。</span><span class="sxs-lookup"><span data-stu-id="421cc-198">Gets the local time at which this event was generated.</span></span></summary>
        <value><span data-ttu-id="421cc-199">生成该事件的本地时间。</span><span class="sxs-lookup"><span data-stu-id="421cc-199">The local time at which this event was generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-200">此成员保存事件的生成时间。</span><span class="sxs-lookup"><span data-stu-id="421cc-200">This member holds the time that an event was generated.</span></span> <span data-ttu-id="421cc-201">这可能与事件信息写入事件日志的时间不同。</span><span class="sxs-lookup"><span data-stu-id="421cc-201">This might not be the same as the time when the event information was written to the event log.</span></span> <span data-ttu-id="421cc-202">对于后者，请读取 <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="421cc-202">For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> property.</span></span>  
  
 <span data-ttu-id="421cc-203">生成事件的时间与记录事件的时间之间通常存在延迟。</span><span class="sxs-lookup"><span data-stu-id="421cc-203">There is usually a lag between the time that an event is generated and the time it is logged.</span></span> <span data-ttu-id="421cc-204">了解事件的生成时间更重要，除非你想要查看日志记录是否存在明显的延迟。</span><span class="sxs-lookup"><span data-stu-id="421cc-204">It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging.</span></span> <span data-ttu-id="421cc-205">如果日志文件位于不同的服务器上并且遇到瓶颈，就会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="421cc-205">That can happen if your log files are on a different server and you are experiencing a bottleneck.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.TimeWritten" />
      </Docs>
    </Member>
    <Member MemberName="TimeWritten">
      <MemberSignature Language="C#" Value="public DateTime TimeWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeWritten" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.TimeWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeWritten As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeWritten { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeWritten : DateTime" Usage="System.Diagnostics.EventLogEntry.TimeWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryTimeWritten")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryTimeWritten")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("The time at which this event entry was written to the logfile.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("The time at which this event entry was written to the logfile.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-206">获取在日志中写入该事件的本地时间。</span><span class="sxs-lookup"><span data-stu-id="421cc-206">Gets the local time at which this event was written to the log.</span></span></summary>
        <value><span data-ttu-id="421cc-207">在日志中写入该事件的本地时间。</span><span class="sxs-lookup"><span data-stu-id="421cc-207">The local time at which this event was written to the log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-208">此成员保存事件信息写入事件日志的时间。</span><span class="sxs-lookup"><span data-stu-id="421cc-208">This member holds the time that an event's information is written to the event log.</span></span> <span data-ttu-id="421cc-209">这与生成事件时的时间可能不相同。</span><span class="sxs-lookup"><span data-stu-id="421cc-209">This might not be the same time as when the event was generated.</span></span> <span data-ttu-id="421cc-210">对于后者，请读取 <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="421cc-210">For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Diagnostics.EventLogEntry.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("LogEntryUserName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("LogEntryUserName")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.MonitoringDescription("The name of a user associated with this event entry.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.MonitoringDescription("The name of a user associated with this event entry.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="421cc-211">获取负责该事件的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="421cc-211">Gets the name of the user who is responsible for this event.</span></span></summary>
        <value><span data-ttu-id="421cc-212">唯一标识用户或组的安全标识符 (SID)。</span><span class="sxs-lookup"><span data-stu-id="421cc-212">The security identifier (SID) that uniquely identifies a user or group.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="421cc-213">对于除安全日志以外的日志中的事件，此属性通常为空白。</span><span class="sxs-lookup"><span data-stu-id="421cc-213">This property is often blank for events in logs other than the Security log.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="421cc-214">未能为用户的 SID 获取帐户信息。</span><span class="sxs-lookup"><span data-stu-id="421cc-214">Account information could not be obtained for the user's SID.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLogEntry.Source" />
      </Docs>
    </Member>
  </Members>
</Type>
