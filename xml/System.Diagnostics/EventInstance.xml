<Type Name="EventInstance" FullName="System.Diagnostics.EventInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d56c25e46c67222bff08ef27dd3bd67e7e3de300" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89944096" /></Metadata><TypeSignature Language="C#" Value="public class EventInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class EventInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventInstance" />
  <TypeSignature Language="F#" Value="type EventInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ece82-101">表示事件日志项的非特定语言信息。</span><span class="sxs-lookup"><span data-stu-id="ece82-101">Represents language-neutral information for an event log entry.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece82-102">使用 <xref:System.Diagnostics.EventInstance> 写入资源标识符而不是字符串值的事件日志项。</span><span class="sxs-lookup"><span data-stu-id="ece82-102">Use <xref:System.Diagnostics.EventInstance> to write an event log entry with a resource identifier rather than a string value.</span></span> <span data-ttu-id="ece82-103">若要编写事件日志项，请初始化 <xref:System.Diagnostics.EventInstance.InstanceId%2A> 属性，并将实例传递给 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ece82-103">To write an event log entry, initialize the <xref:System.Diagnostics.EventInstance.InstanceId%2A> property and pass the instance to the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span> <span data-ttu-id="ece82-104">事件查看器使用实例标识符从本地化的资源文件中查找和显示基于当前语言设置的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="ece82-104">The Event Viewer uses the instance identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="ece82-105">必须先向相应的资源文件注册事件源，然后才能使用资源标识符编写事件。</span><span class="sxs-lookup"><span data-stu-id="ece82-105">You must register the event source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="ece82-106">写入事件时，可以设置属性， <xref:System.Diagnostics.EventInstance.EntryType%2A> 以指定事件查看器为该项显示的图标。</span><span class="sxs-lookup"><span data-stu-id="ece82-106">When writing events, you can set the <xref:System.Diagnostics.EventInstance.EntryType%2A> property to specify the icon that the Event Viewer displays for the entry.</span></span> <span data-ttu-id="ece82-107">您还可以指定一个 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 属性以指定事件查看器为该项显示的类别。</span><span class="sxs-lookup"><span data-stu-id="ece82-107">You can also specify a <xref:System.Diagnostics.EventInstance.CategoryId%2A> property to specify the category that the Event Viewer displays for the entry.</span></span>  
  
 <span data-ttu-id="ece82-108">事件查看器使用类别来筛选由事件源写入的事件。</span><span class="sxs-lookup"><span data-stu-id="ece82-108">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="ece82-109">事件查看器可以将类别显示为数值，也可以将类别用作资源标识符以显示本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="ece82-109">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
 <span data-ttu-id="ece82-110">若要在事件查看器中显示本地化的类别字符串，必须使用配置有类别资源文件的事件源，并将设置 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 为类别资源文件中的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="ece82-110">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> to a resource identifier in the category resource file.</span></span> <span data-ttu-id="ece82-111">如果事件源没有已配置的类别资源文件，或者指定的不为 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 类别资源文件中的字符串编制索引，则事件查看器将显示该条目的数值类别值。</span><span class="sxs-lookup"><span data-stu-id="ece82-111">If the event source does not have a configured category resource file, or the specified <xref:System.Diagnostics.EventInstance.CategoryId%2A> does not index a string in the category resource file, and then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="ece82-112">使用或类配置类别资源文件以及资源文件中的类别字符串的数目 <xref:System.Diagnostics.EventLogInstaller> <xref:System.Diagnostics.EventSourceCreationData> 。</span><span class="sxs-lookup"><span data-stu-id="ece82-112">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="ece82-113">在使用编写带有方法的事件之前，必须注册事件日志的源 <xref:System.Diagnostics.EventInstance> <xref:System.Diagnostics.EventLog.WriteEvent%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ece82-113">You must register a source for an event log before using <xref:System.Diagnostics.EventInstance> to write an event with the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span> <span data-ttu-id="ece82-114">必须将源配置为将本地化项写入日志，并且源必须至少定义一个消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="ece82-114">The source must be configured for writing localized entries to the log and the source must define at least a message resource file.</span></span>  
  
 <span data-ttu-id="ece82-115">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="ece82-115">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="ece82-116">这样，操作系统就可以刷新其已注册事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="ece82-116">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="ece82-117">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="ece82-117">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="ece82-118">您可以使用或方法来配置新源 <xref:System.Diagnostics.EventLogInstaller> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ece82-118">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="ece82-119">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="ece82-119">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="ece82-120">有关定义事件消息和生成事件日志资源文件的详细信息，请参阅 Platform SDK 文档中的 [消息编译器](/windows/win32/wes/message-compiler--mc-exe-) 一文。</span><span class="sxs-lookup"><span data-stu-id="ece82-120">For details about defining event messages and building event log resource files, see the [Message Compiler](/windows/win32/wes/message-compiler--mc-exe-) article in the Platform SDK documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece82-121">下面的代码示例编写一个信息性事件项，然后重新使用将 <xref:System.Diagnostics.EventInstance> 警告事件的条目写入现有的事件日志。</span><span class="sxs-lookup"><span data-stu-id="ece82-121">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="ece82-122">使用消息资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-122">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="ece82-123">此代码示例假定已为源注册了相应的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="ece82-123">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="ece82-124">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="ece82-124">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="ece82-125">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="ece82-125">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="ece82-126">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-126">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ece82-127">使用非特定语言的信息初始化 <see cref="T:System.Diagnostics.EventInstance" /> 类的一个新实例以定义事件日志项。</span><span class="sxs-lookup"><span data-stu-id="ece82-127">Initializes a new instance of the <see cref="T:System.Diagnostics.EventInstance" /> class using language-neutral information to define an event log entry.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventInstance : int64 * int -&gt; System.Diagnostics.EventInstance" Usage="new System.Diagnostics.EventInstance (instanceId, categoryId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ece82-128">资源标识符，与事件源的消息资源文件中定义的字符串对应。</span><span class="sxs-lookup"><span data-stu-id="ece82-128">A resource identifier that corresponds to a string defined in the message resource file of the event source.</span></span></param>
        <param name="categoryId"><span data-ttu-id="ece82-129">资源标识符，与事件源的类别资源文件中定义的字符串对应。如果没有为事件指定类别，则为零。</span><span class="sxs-lookup"><span data-stu-id="ece82-129">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</span></span></param>
        <summary><span data-ttu-id="ece82-130">使用事件项的本地化消息和类别文本的指定资源标识符初始化 <see cref="T:System.Diagnostics.EventInstance" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="ece82-130">Initializes a new instance of the <see cref="T:System.Diagnostics.EventInstance" /> class using the specified resource identifiers for the localized message and category text of the event entry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece82-131">若要将信息性项写入事件日志，请初始化， <xref:System.Diagnostics.EventInstance> 并将其传递给 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ece82-131">To write an informational entry to an event log, initialize an <xref:System.Diagnostics.EventInstance> and pass it to the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span> <span data-ttu-id="ece82-132">`instanceId`在源的相应属性中将设置为事件消息的资源标识符 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ece82-132">Set the `instanceId` to the resource identifier of the event message in the corresponding <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property for the source.</span></span> <span data-ttu-id="ece82-133">将设置 `categoryId` 为数值类别值，或将源的属性中的事件类别的资源标识符设置为 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> ; 对于 "无事件类别"，将设置 `categoryId` 为零。</span><span class="sxs-lookup"><span data-stu-id="ece82-133">Set the `categoryId` to a numeric category value, or the resource identifier of the event category in the <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> property for the source; set the `categoryId` to zero for no event category.</span></span> <span data-ttu-id="ece82-134"><xref:System.Diagnostics.EventInstance.EntryType%2A>默认情况下，新实例的属性设置为 <xref:System.Diagnostics.EventLogEntryType.Information> 。</span><span class="sxs-lookup"><span data-stu-id="ece82-134">The <xref:System.Diagnostics.EventInstance.EntryType%2A> property for the new instance is set to <xref:System.Diagnostics.EventLogEntryType.Information> by default.</span></span>  
  
 <span data-ttu-id="ece82-135">事件查看器使用资源标识符显示源的本地化资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="ece82-135">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource files for the source.</span></span> <span data-ttu-id="ece82-136">必须先向相应的资源文件注册源，然后才能使用资源标识符编写事件。</span><span class="sxs-lookup"><span data-stu-id="ece82-136">You must register the source with the corresponding resource files before you can write events using resource identifiers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece82-137">下面的代码示例编写一个信息性事件项，然后重新使用将 <xref:System.Diagnostics.EventInstance> 警告事件的条目写入现有的事件日志。</span><span class="sxs-lookup"><span data-stu-id="ece82-137">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="ece82-138">使用消息资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-138">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="ece82-139">此代码示例假定已为源注册了相应的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="ece82-139">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="ece82-140">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="ece82-140">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="ece82-141">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="ece82-141">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="ece82-142">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-142">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ece82-143"><paramref name="instanceId" /> 参数是负值或大于 <see cref="F:System.UInt32.MaxValue" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="ece82-143">The <paramref name="instanceId" /> parameter is a negative value or a value larger than <see cref="F:System.UInt32.MaxValue" />.</span></span>  
  
<span data-ttu-id="ece82-144">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ece82-144">-or-</span></span> 
<span data-ttu-id="ece82-145"><paramref name="categoryId" /> 参数是负值或大于 <see cref="F:System.UInt16.MaxValue" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="ece82-145">The <paramref name="categoryId" /> parameter is a negative value or a value larger than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId, System.Diagnostics.EventLogEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId, valuetype System.Diagnostics.EventLogEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer, entryType As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId, System::Diagnostics::EventLogEntryType entryType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventInstance : int64 * int * System.Diagnostics.EventLogEntryType -&gt; System.Diagnostics.EventInstance" Usage="new System.Diagnostics.EventInstance (instanceId, categoryId, entryType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
        <Parameter Name="entryType" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ece82-146">资源标识符，与事件源的消息资源文件中定义的字符串对应。</span><span class="sxs-lookup"><span data-stu-id="ece82-146">A resource identifier that corresponds to a string defined in the message resource file of the event source.</span></span></param>
        <param name="categoryId"><span data-ttu-id="ece82-147">资源标识符，与事件源的类别资源文件中定义的字符串对应。如果没有为事件指定类别，则为零。</span><span class="sxs-lookup"><span data-stu-id="ece82-147">A resource identifier that corresponds to a string defined in the category resource file of the event source, or zero to specify no category for the event.</span></span></param>
        <param name="entryType"><span data-ttu-id="ece82-148">指示事件类型的 <see cref="T:System.Diagnostics.EventLogEntryType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ece82-148">An <see cref="T:System.Diagnostics.EventLogEntryType" /> value that indicates the event type.</span></span></param>
        <summary><span data-ttu-id="ece82-149">使用事件项的本地化消息和类别文本的指定资源标识符以及指定的事件日志项类型初始化 <see cref="T:System.Diagnostics.EventInstance" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="ece82-149">Initializes a new instance of the <see cref="T:System.Diagnostics.EventInstance" /> class using the specified resource identifiers for the localized message and category text of the event entry and the specified event log entry type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece82-150">若要将项写入事件日志，请初始化， <xref:System.Diagnostics.EventInstance> 并将其传递给 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ece82-150">To write an entry to an event log, initialize an <xref:System.Diagnostics.EventInstance> and pass it to the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span> <span data-ttu-id="ece82-151">`instanceId`在源的相应属性中将设置为事件消息的资源标识符 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ece82-151">Set the `instanceId` to the resource identifier of the event message in the corresponding <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property for the source.</span></span> <span data-ttu-id="ece82-152">将设置 `categoryId` 为数值类别值，或将源的属性中的事件类别的资源标识符设置为 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> ; 对于 "无事件类别"，将设置 `categoryId` 为零。</span><span class="sxs-lookup"><span data-stu-id="ece82-152">Set the `categoryId` to a numeric category value, or the resource identifier of the event category in the <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> property for the source; set the `categoryId` to zero for no event category.</span></span>  
  
 <span data-ttu-id="ece82-153">事件查看器使用资源标识符显示源的本地化资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="ece82-153">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource files for the source.</span></span> <span data-ttu-id="ece82-154">必须先向相应的资源文件注册源，然后才能使用资源标识符编写事件。</span><span class="sxs-lookup"><span data-stu-id="ece82-154">You must register the source with the corresponding resource files before you can write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="ece82-155">将设置 `entryType` 为预定义的项类型之一。</span><span class="sxs-lookup"><span data-stu-id="ece82-155">Set the `entryType` to one of the pre-defined entry types.</span></span> <span data-ttu-id="ece82-156">事件查看器使用事件类型确定要在事件日志的列表视图中显示哪个图标。</span><span class="sxs-lookup"><span data-stu-id="ece82-156">The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece82-157">下面的代码示例将两个审核事件项写入事件日志 `myNewLog` 。</span><span class="sxs-lookup"><span data-stu-id="ece82-157">The following code example writes two audit event entries to the event log `myNewLog`.</span></span> <span data-ttu-id="ece82-158">如果本地计算机上不存在新的事件源和新的事件日志，则代码示例将创建一个新的事件源和一个新的事件日志。</span><span class="sxs-lookup"><span data-stu-id="ece82-158">The code example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="ece82-159">使用资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-159">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="ece82-160">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="ece82-160">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="ece82-161">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="ece82-161">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="ece82-162">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-162">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="ece82-163"><paramref name="entryType" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ece82-163"><paramref name="entryType" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ece82-164"><paramref name="instanceId" /> 是负值或大于 <see cref="F:System.UInt32.MaxValue" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="ece82-164"><paramref name="instanceId" /> is a negative value or a value larger than <see cref="F:System.UInt32.MaxValue" />.</span></span>  
  
<span data-ttu-id="ece82-165">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ece82-165">-or-</span></span> 
 <span data-ttu-id="ece82-166"><paramref name="categoryId" /> 是负值或大于 <see cref="F:System.UInt16.MaxValue" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="ece82-166"><paramref name="categoryId" /> is a negative value or a value larger than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName="CategoryId">
      <MemberSignature Language="C#" Value="public int CategoryId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.CategoryId" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryId : int with get, set" Usage="System.Diagnostics.EventInstance.CategoryId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ece82-167">获取或设置指定事件项的应用程序定义类别的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="ece82-167">Gets or sets the resource identifier that specifies the application-defined category of the event entry.</span></span></summary>
        <value><span data-ttu-id="ece82-168">数字型类别值或资源标识符，与事件源的类别资源文件中定义的字符串对应。</span><span class="sxs-lookup"><span data-stu-id="ece82-168">A numeric category value or resource identifier that corresponds to a string defined in the category resource file of the event source.</span></span> <span data-ttu-id="ece82-169">默认值为零，这意味着将不会为该事件项显示类别。</span><span class="sxs-lookup"><span data-stu-id="ece82-169">The default is zero, which signifies that no category will be displayed for the event entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece82-170">事件日志类别是应用程序定义的值，可帮助筛选事件，或提供有关事件的详细信息。</span><span class="sxs-lookup"><span data-stu-id="ece82-170">Event log categories are application-defined values that help filter events, or provide further information about the event.</span></span> <span data-ttu-id="ece82-171">例如，你的应用程序可以为不同的组件或不同的操作定义单独的类别。</span><span class="sxs-lookup"><span data-stu-id="ece82-171">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="ece82-172">设置 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 属性以指定事件查看器为该项显示的类别。</span><span class="sxs-lookup"><span data-stu-id="ece82-172">Set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> property to specify the category that the Event Viewer displays for the entry.</span></span> <span data-ttu-id="ece82-173">事件查看器可以将类别显示为数值，也可以使用 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 作为资源标识符来基于当前语言设置显示本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="ece82-173">The Event Viewer can display the category as a numeric value, or it can use the <xref:System.Diagnostics.EventInstance.CategoryId%2A> as a resource identifier to display a localized category string based on the current language settings.</span></span>  
  
 <span data-ttu-id="ece82-174">若要在事件查看器中显示本地化的类别字符串，必须使用配置有类别资源文件的事件源，并将设置 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 为类别资源文件中的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="ece82-174">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> to a resource identifier in the category resource file.</span></span> <span data-ttu-id="ece82-175">如果事件源没有已配置的类别资源文件，或者指定的不为 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 类别资源文件中的字符串编制索引，则事件查看器将显示该条目的数值类别值。</span><span class="sxs-lookup"><span data-stu-id="ece82-175">If the event source does not have a configured category resource file, or the specified <xref:System.Diagnostics.EventInstance.CategoryId%2A> does not index a string in the category resource file, and then the Event Viewer displays the numeric category value for that entry.</span></span>  
  
 <span data-ttu-id="ece82-176">必须先向相应的资源文件注册源，然后才能使用资源标识符编写事件类别。</span><span class="sxs-lookup"><span data-stu-id="ece82-176">You must register the source with the corresponding resource file before you write event categories using resource identifiers.</span></span> <span data-ttu-id="ece82-177">使用或类配置类别资源文件以及资源文件中的类别字符串的数目 <xref:System.Diagnostics.EventLogInstaller> <xref:System.Diagnostics.EventSourceCreationData> 。</span><span class="sxs-lookup"><span data-stu-id="ece82-177">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span> <span data-ttu-id="ece82-178">在资源文件中定义类别字符串时，类别资源标识符必须从1开始连续编号，直到达到配置的 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="ece82-178">When defining category strings in a resource file, the category resource identifiers must be numbered consecutively starting at 1, up to the configured <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> property value.</span></span>  
  
 <span data-ttu-id="ece82-179">事件类别是可选的。</span><span class="sxs-lookup"><span data-stu-id="ece82-179">Event categories are optional.</span></span> <span data-ttu-id="ece82-180">如果你的应用程序不使用类别，请不要 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 为事件日志条目设置。</span><span class="sxs-lookup"><span data-stu-id="ece82-180">If your application does not use categories, do not set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> for the event log entry.</span></span>  
  
 <span data-ttu-id="ece82-181">有关定义事件消息和生成事件资源文件的详细信息，请参阅 Platform SDK 文档中的 [消息编译器](/windows/win32/wes/message-compiler--mc-exe-) 一文。</span><span class="sxs-lookup"><span data-stu-id="ece82-181">For details about defining event messages and building event resource files, see the [Message Compiler](/windows/win32/wes/message-compiler--mc-exe-) article in the Platform SDK documentation.</span></span> <span data-ttu-id="ece82-182">有关在资源文件中定义事件类别的详细信息，请参阅 Platform SDK 中的 "事件类别" 主题</span><span class="sxs-lookup"><span data-stu-id="ece82-182">For details about defining event categories in resource files, see the "Event Categories" topic in the Platform SDK</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece82-183">下面的代码示例编写一个信息性事件项，然后重新使用将 <xref:System.Diagnostics.EventInstance> 警告事件的条目写入现有的事件日志。</span><span class="sxs-lookup"><span data-stu-id="ece82-183">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="ece82-184">使用消息资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-184">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="ece82-185">此代码示例假定已为源注册了相应的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="ece82-185">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="ece82-186">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="ece82-186">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="ece82-187">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="ece82-187">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="ece82-188">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-188">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ece82-189">该属性设置为负值或大于 <see cref="F:System.UInt16.MaxValue" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="ece82-189">The property is set to a negative value or to a value larger than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); void set(System::Diagnostics::EventLogEntryType value); };" />
      <MemberSignature Language="F#" Value="member this.EntryType : System.Diagnostics.EventLogEntryType with get, set" Usage="System.Diagnostics.EventInstance.EntryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ece82-190">获取或设置事件日志项的事件类型。</span><span class="sxs-lookup"><span data-stu-id="ece82-190">Gets or sets the event type of the event log entry.</span></span></summary>
        <value><span data-ttu-id="ece82-191">指示事件项类型的 <see cref="T:System.Diagnostics.EventLogEntryType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ece82-191">An <see cref="T:System.Diagnostics.EventLogEntryType" /> value that indicates the event entry type.</span></span> <span data-ttu-id="ece82-192">默认值是 <see cref="F:System.Diagnostics.EventLogEntryType.Information" />。</span><span class="sxs-lookup"><span data-stu-id="ece82-192">The default value is <see cref="F:System.Diagnostics.EventLogEntryType.Information" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece82-193">每个事件都属于单个类型，应用程序在报告事件时指示该类型。</span><span class="sxs-lookup"><span data-stu-id="ece82-193">Each event is of a single type, which the application indicates when it reports the event.</span></span> <span data-ttu-id="ece82-194">事件查看器使用事件类型确定要在事件日志的列表视图中显示哪个图标。</span><span class="sxs-lookup"><span data-stu-id="ece82-194">The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece82-195">下面的代码示例编写一个信息性事件项，然后重新使用将 <xref:System.Diagnostics.EventInstance> 警告事件的条目写入现有的事件日志。</span><span class="sxs-lookup"><span data-stu-id="ece82-195">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="ece82-196">使用消息资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-196">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="ece82-197">此代码示例假定已为源注册了相应的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="ece82-197">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="ece82-198">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="ece82-198">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="ece82-199">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="ece82-199">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="ece82-200">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-200">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="ece82-201">该属性未设置为有效的 <see cref="T:System.Diagnostics.EventLogEntryType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ece82-201">The property is not set to a valid <see cref="T:System.Diagnostics.EventLogEntryType" /> value.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : int64 with get, set" Usage="System.Diagnostics.EventInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ece82-202">获取或设置指定事件项的消息文本的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="ece82-202">Gets or sets the resource identifier that designates the message text of the event entry.</span></span></summary>
        <value><span data-ttu-id="ece82-203">资源标识符，与事件源的消息资源文件中定义的字符串对应。</span><span class="sxs-lookup"><span data-stu-id="ece82-203">A resource identifier that corresponds to a string defined in the message resource file of the event source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece82-204">此 <xref:System.Diagnostics.EventInstance.InstanceId%2A> 属性唯一标识已配置事件源的事件条目。</span><span class="sxs-lookup"><span data-stu-id="ece82-204">The <xref:System.Diagnostics.EventInstance.InstanceId%2A> property uniquely identifies an event entry for a configured event source.</span></span> <span data-ttu-id="ece82-205">对于在消息资源文件中定义的事件， <xref:System.Diagnostics.EventInstance.InstanceId%2A> 对应于从消息文本文件的消息定义字段中编译的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="ece82-205">For events defined in message resource files, the <xref:System.Diagnostics.EventInstance.InstanceId%2A> corresponds to the resource identifier compiled from the message definition fields in the message text file.</span></span> <span data-ttu-id="ece82-206">应用程序可以通过将设置 <xref:System.Diagnostics.EventInstance.InstanceId%2A> 为资源标识符来编写本地化的事件日志项。</span><span class="sxs-lookup"><span data-stu-id="ece82-206">Your application can write localized event log entries by setting the <xref:System.Diagnostics.EventInstance.InstanceId%2A> to a resource identifier.</span></span> <span data-ttu-id="ece82-207">事件查看器使用 <xref:System.Diagnostics.EventInstance.InstanceId%2A> 资源标识符从本地化的资源文件中查找并显示相应的字符串。</span><span class="sxs-lookup"><span data-stu-id="ece82-207">The Event Viewer uses the <xref:System.Diagnostics.EventInstance.InstanceId%2A> resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="ece82-208">必须先向相应的资源文件注册源，然后才能使用资源标识符编写事件。</span><span class="sxs-lookup"><span data-stu-id="ece82-208">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="ece82-209">有关定义事件消息和生成事件日志资源文件的详细信息，请参阅 Platform SDK 文档中的 [消息编译器](/windows/win32/wes/message-compiler--mc-exe-) 一文。</span><span class="sxs-lookup"><span data-stu-id="ece82-209">For details about defining event messages and building event log resource files, see the [Message Compiler](/windows/win32/wes/message-compiler--mc-exe-) article in the Platform SDK documentation.</span></span> <span data-ttu-id="ece82-210">有关事件日志标识符的详细信息，请参阅 Platform SDK 文档中的 [事件标识符](/windows/win32/eventlog/event-categories) 一文。</span><span class="sxs-lookup"><span data-stu-id="ece82-210">For details about event log identifiers, see the [Event Identifiers](/windows/win32/eventlog/event-categories) article in the Platform SDK documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ece82-211">下面的代码示例编写一个信息性事件项，然后重新使用将 <xref:System.Diagnostics.EventInstance> 警告事件的条目写入现有的事件日志。</span><span class="sxs-lookup"><span data-stu-id="ece82-211">The following code example writes an informational event entry, and then reuses the <xref:System.Diagnostics.EventInstance> to write an entry for a warning event to an existing event log.</span></span> <span data-ttu-id="ece82-212">使用消息资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-212">The event message text is specified using a resource identifier in a message resource file.</span></span> <span data-ttu-id="ece82-213">此代码示例假定已为源注册了相应的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="ece82-213">The code example assumes that the corresponding message resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 <span data-ttu-id="ece82-214">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="ece82-214">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="ece82-215">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="ece82-215">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="ece82-216">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="ece82-216">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ece82-217">该属性设置为负值或大于 <see cref="F:System.UInt32.MaxValue" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="ece82-217">The property is set to a negative value or to a value larger than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
  </Members>
</Type>
