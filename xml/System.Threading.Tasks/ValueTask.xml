<Type Name="ValueTask" FullName="System.Threading.Tasks.ValueTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39ae14c57420d9839e643a12ea9abc8f0c686ca9" /><Meta Name="ms.sourcegitcommit" Value="75d042970105c611a6ea6721c7ddc9d7eb314dd4" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/09/2021" /><Meta Name="ms.locfileid" Value="102516263" /></Metadata><TypeSignature Language="C#" Value="public struct ValueTask : IEquatable&lt;System.Threading.Tasks.ValueTask&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTask extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Threading.Tasks.ValueTask&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ValueTask" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTask&#xA;Implements IEquatable(Of ValueTask)" />
  <TypeSignature Language="C++ CLI" Value="public value class ValueTask : IEquatable&lt;System::Threading::Tasks::ValueTask&gt;" />
  <TypeSignature Language="F#" Value="type ValueTask = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Threading.Tasks.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Threading.Tasks.Extensions" FromVersion="4.3.0.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Threading.Tasks.Extensions" FromVersion="4.3.1.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.Tasks.ValueTask&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncMethodBuilder(typeof(System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncMethodBuilder(typeof(System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e086d-101">提供异步操作的可等待结果。</span><span class="sxs-lookup"><span data-stu-id="e086d-101">Provides an awaitable result of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="e086d-102">`ValueTask`实例可以等待或使用转换为 <xref:System.Threading.Tasks.Task> <xref:System.Threading.Tasks.ValueTask.AsTask%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-102">A `ValueTask` instance may either be awaited or converted to a <xref:System.Threading.Tasks.Task> using <xref:System.Threading.Tasks.ValueTask.AsTask%2A>.</span></span> <span data-ttu-id="e086d-103">`ValueTask`实例仅可等待一次，并且 <xref:System.Threading.Tasks.ValueTask.GetAwaiter> 在实例完成之前，使用者可能不会调用。</span><span class="sxs-lookup"><span data-stu-id="e086d-103">A `ValueTask` instance may only be awaited once, and consumers may not call <xref:System.Threading.Tasks.ValueTask.GetAwaiter> until the instance has completed.</span></span> <span data-ttu-id="e086d-104">如果这些限制不可接受，请 `ValueTask` <xref:System.Threading.Tasks.Task> 通过调用将转换为 <xref:System.Threading.Tasks.ValueTask.AsTask%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-104">If these limitations are unacceptable, convert the `ValueTask` to a <xref:System.Threading.Tasks.Task> by calling <xref:System.Threading.Tasks.ValueTask.AsTask%2A>.</span></span>

<span data-ttu-id="e086d-105">永远不应对实例执行以下操作 `ValueTask` ：</span><span class="sxs-lookup"><span data-stu-id="e086d-105">The following operations should never be performed on a `ValueTask` instance:</span></span>

- <span data-ttu-id="e086d-106">等待实例多次。</span><span class="sxs-lookup"><span data-stu-id="e086d-106">Awaiting the instance multiple times.</span></span>
- <span data-ttu-id="e086d-107"><xref:System.Threading.Tasks.ValueTask.AsTask%2A>多次调用。</span><span class="sxs-lookup"><span data-stu-id="e086d-107">Calling <xref:System.Threading.Tasks.ValueTask.AsTask%2A> multiple times.</span></span>
- <span data-ttu-id="e086d-108">使用多种方法来使用此实例。</span><span class="sxs-lookup"><span data-stu-id="e086d-108">Using more than one of these techniques to consume the instance.</span></span>

<span data-ttu-id="e086d-109">如果执行上述任一操作，则结果是不确定的。</span><span class="sxs-lookup"><span data-stu-id="e086d-109">If you do any of the above, the results are undefined.</span></span>

<span data-ttu-id="e086d-110">`ValueTask`是可包装 <xref:System.Threading.Tasks.Task> 或实例的结构 <xref:System.Threading.Tasks.Sources.IValueTaskSource> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-110">A `ValueTask` is a structure that can wrap either a <xref:System.Threading.Tasks.Task> or a <xref:System.Threading.Tasks.Sources.IValueTaskSource> instance.</span></span> <span data-ttu-id="e086d-111">如果返回一个 `ValueTask` 从异步方法包装实例的，则会 <xref:System.Threading.Tasks.Sources.IValueTaskSource> 启用高吞吐量应用程序，以避免使用可重用对象池进行分配 <xref:System.Threading.Tasks.Sources.IValueTaskSource> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-111">Returning a `ValueTask` that wraps a <xref:System.Threading.Tasks.Sources.IValueTaskSource> instance from an asynchronous method enables high-throughput applications to avoid allocations by using a pool of reusable <xref:System.Threading.Tasks.Sources.IValueTaskSource> objects.</span></span> <span data-ttu-id="e086d-112">有关详细信息，请参阅 [了解原因和 ValueTask](https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/)的内容。</span><span class="sxs-lookup"><span data-stu-id="e086d-112">For more information, see [Understanding the Whys, Whats, and Whens of ValueTask](https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/).</span></span>

<span data-ttu-id="e086d-113">使用 `ValueTask` 而不是会 <xref:System.Threading.Tasks.Task> 引入一些开销。</span><span class="sxs-lookup"><span data-stu-id="e086d-113">Using a `ValueTask` instead of a <xref:System.Threading.Tasks.Task> introduces some overhead.</span></span> <span data-ttu-id="e086d-114">由于 `ValueTask` 是具有多个字段的结构，因此从方法返回它将导致复制更多的数据，并返回一个 <xref:System.Threading.Tasks.Task> 引用。</span><span class="sxs-lookup"><span data-stu-id="e086d-114">Because `ValueTask` is a structure with multiple fields, returning it from the method results in copying more data compared to returning a single <xref:System.Threading.Tasks.Task> reference.</span></span> <span data-ttu-id="e086d-115">因此，不返回结果的任何异步方法的默认选择都应该是返回 <xref:System.Threading.Tasks.Task> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-115">As such, the default choice for any asynchronous method that does not return a result should be to return a <xref:System.Threading.Tasks.Task>.</span></span> <span data-ttu-id="e086d-116">仅当性能分析证明需要使用时，才应 `ValueTask` 使用，而不是 <xref:System.Threading.Tasks.Task> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-116">Only if performance analysis proves it worthwhile should a `ValueTask` be used instead of a <xref:System.Threading.Tasks.Task>.</span></span> <span data-ttu-id="e086d-117"><xref:System.Threading.Tasks.Task.CompletedTask?displayProperty=nameWithType>此属性应该用于在方法返回成功完成的情况下，手动返回已成功完成的单一实例 <xref:System.Threading.Tasks.Task> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-117">The <xref:System.Threading.Tasks.Task.CompletedTask?displayProperty=nameWithType> property should be used to hand back a successfully completed singleton in the case where a method returning a <xref:System.Threading.Tasks.Task> completes synchronously and successfully.</span></span>

> [!NOTE]
> <span data-ttu-id="e086d-118">支持使用类型， `ValueTask` 从 c # 7.0 开始，不受 Visual Basic 的任何版本支持。</span><span class="sxs-lookup"><span data-stu-id="e086d-118">The use of the `ValueTask` type is supported starting with C# 7.0 and is not supported by any version of Visual Basic.</span></span>

> [!NOTE]
> <span data-ttu-id="e086d-119">用无参数构造函数创建的实例或通过 `default(ValueTask)` 语法 (零初始化结构) 表示同步、成功完成的操作。</span><span class="sxs-lookup"><span data-stu-id="e086d-119">An instance created with the parameterless constructor or by the `default(ValueTask)` syntax (a zero-initialized structure) represents a synchronously, successfully completed operation.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.#ctor(System.Threading.Tasks.Task)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (task As Task)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask : System.Threading.Tasks.Task -&gt; System.Threading.Tasks.ValueTask" Usage="new System.Threading.Tasks.ValueTask task" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="e086d-120">表示操作的任务。</span><span class="sxs-lookup"><span data-stu-id="e086d-120">The task that represents the operation.</span></span></param>
        <summary><span data-ttu-id="e086d-121">使用提供的表示操作的任务初始化 <see cref="T:System.Threading.Tasks.ValueTask" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e086d-121">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask" /> class using the supplied task that represents the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Sources.IValueTaskSource source, short token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Sources.IValueTaskSource source, int16 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.#ctor(System.Threading.Tasks.Sources.IValueTaskSource,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IValueTaskSource, token As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Sources::IValueTaskSource ^ source, short token);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask : System.Threading.Tasks.Sources.IValueTaskSource * int16 -&gt; System.Threading.Tasks.ValueTask" Usage="new System.Threading.Tasks.ValueTask (source, token)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Sources.IValueTaskSource" />
        <Parameter Name="token" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e086d-122">表示操作的对象。</span><span class="sxs-lookup"><span data-stu-id="e086d-122">An object that represents the operation.</span></span></param>
        <param name="token"><span data-ttu-id="e086d-123">一个传递给 <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /> 的不透明值</span><span class="sxs-lookup"><span data-stu-id="e086d-123">An opaque value that is passed through to the <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /></span></span></param>
        <summary><span data-ttu-id="e086d-124">使用提供的表示操作的 <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /> 对象初始化 <see cref="T:System.Threading.Tasks.ValueTask" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e086d-124">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask" /> class using the supplied <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /> object that represents the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AsTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AsTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.AsTask" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTask () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AsTask();" />
      <MemberSignature Language="F#" Value="member this.AsTask : unit -&gt; System.Threading.Tasks.Task" Usage="valueTask.AsTask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e086d-125">检索表示此 <see cref="T:System.Threading.Tasks.ValueTask" /> 的 <see cref="T:System.Threading.Tasks.Task" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e086d-125">Retrieves a <see cref="T:System.Threading.Tasks.Task" /> object that represents this <see cref="T:System.Threading.Tasks.ValueTask" />.</span></span></summary>
        <returns><span data-ttu-id="e086d-126">包装在此 <see cref="T:System.Threading.Tasks.ValueTask" /> 中的 <see cref="T:System.Threading.Tasks.Task" /> 对象（如果存在），或者表示结果的新 <see cref="T:System.Threading.Tasks.Task" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e086d-126">The <see cref="T:System.Threading.Tasks.Task" /> object that is wrapped in this <see cref="T:System.Threading.Tasks.ValueTask" /> if one exists, or a new <see cref="T:System.Threading.Tasks.Task" /> object that represents the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="e086d-127">此方法返回包装的任务对象（如果存在），或生成一个新的任务对象来表示结果。</span><span class="sxs-lookup"><span data-stu-id="e086d-127">This method either returns the wrapped task object, if one exists, or it manufactures a new task object to represent the result.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedTask">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask CompletedTask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Threading.Tasks.ValueTask CompletedTask" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.CompletedTask" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CompletedTask As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Tasks::ValueTask CompletedTask { System::Threading::Tasks::ValueTask get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedTask : System.Threading.Tasks.ValueTask" Usage="System.Threading.Tasks.ValueTask.CompletedTask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e086d-128">获取一个已成功完成的任务。</span><span class="sxs-lookup"><span data-stu-id="e086d-128">Gets a task that has already completed successfully.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredValueTaskAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberSignature Language="F#" Value="member this.ConfigureAwait : bool -&gt; System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable" Usage="valueTask.ConfigureAwait continueOnCapturedContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext"><span data-ttu-id="e086d-129">如果尝试将延续任务封送回捕获上下文，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-129"><see langword="true" /> to attempt to marshal the continuation back to the captured context; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e086d-130">为此值配置一个 awaiter。</span><span class="sxs-lookup"><span data-stu-id="e086d-130">Configures an awaiter for this value.</span></span></summary>
        <returns><span data-ttu-id="e086d-131">配置的 awaiter。</span><span class="sxs-lookup"><span data-stu-id="e086d-131">The configured awaiter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueTask.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e086d-132">要与当前对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="e086d-132">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="e086d-133">确定指定对象是否与当前的 <see cref="T:System.Threading.Tasks.ValueTask" /> 实例相等。</span><span class="sxs-lookup"><span data-stu-id="e086d-133">Determines whether the specified object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e086d-134">如果指定的对象是等于当前对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-134"><see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="e086d-135">当两个 <xref:System.Threading.Tasks.ValueTask> 实例包装相同 <xref:System.Threading.Tasks.Task> 或相同对对象和标记时，两个实例相等 <xref:System.Threading.Tasks.Sources.IValueTaskSource> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-135">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.Tasks.ValueTask other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.Tasks.ValueTask other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Equals(System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::Tasks::ValueTask other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.Tasks.ValueTask -&gt; bool" Usage="valueTask.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e086d-136">要与当前对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="e086d-136">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="e086d-137">确定指定的 <see cref="T:System.Threading.Tasks.ValueTask" /> 对象是否等同于当前的 <see cref="T:System.Threading.Tasks.ValueTask" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-137">Determines whether the specified <see cref="T:System.Threading.Tasks.ValueTask" /> object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask" /> object.</span></span></summary>
        <returns><span data-ttu-id="e086d-138">如果指定的对象是等于当前对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-138"><see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="e086d-139">当两个 <xref:System.Threading.Tasks.ValueTask> 实例包装相同 <xref:System.Threading.Tasks.Task> 或相同对对象和标记时，两个实例相等 <xref:System.Threading.Tasks.Sources.IValueTaskSource> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-139">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCanceled">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask FromCanceled (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask FromCanceled(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.FromCanceled(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromCanceled (cancellationToken As CancellationToken) As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ValueTask FromCanceled(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member FromCanceled : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="System.Threading.Tasks.ValueTask.FromCanceled cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="e086d-140">完成任务的取消标记。</span><span class="sxs-lookup"><span data-stu-id="e086d-140">The cancellation token with which to complete the task.</span></span></param>
        <summary><span data-ttu-id="e086d-141">创建 <see cref="T:System.Threading.Tasks.ValueTask" />，它因指定的取消标记进行的取消操作而完成。</span><span class="sxs-lookup"><span data-stu-id="e086d-141">Creates a <see cref="T:System.Threading.Tasks.ValueTask" /> that has completed due to cancellation with the specified cancellation token.</span></span></summary>
        <returns><span data-ttu-id="e086d-142">取消的任务。</span><span class="sxs-lookup"><span data-stu-id="e086d-142">The canceled task.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCanceled&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;TResult&gt; FromCanceled&lt;TResult&gt; (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;!!TResult&gt; FromCanceled&lt;TResult&gt;(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.FromCanceled``1(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromCanceled(Of TResult) (cancellationToken As CancellationToken) As ValueTask(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Threading::Tasks::ValueTask&lt;TResult&gt; FromCanceled(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member FromCanceled : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Result&gt;" Usage="System.Threading.Tasks.ValueTask.FromCanceled cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="e086d-143">返回的任务的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e086d-143">The type of the result of the returned task.</span></span></typeparam>
        <param name="cancellationToken"><span data-ttu-id="e086d-144">完成任务的取消标记。</span><span class="sxs-lookup"><span data-stu-id="e086d-144">The cancellation token with which to complete the task.</span></span></param>
        <summary><span data-ttu-id="e086d-145">创建 <see cref="T:System.Threading.Tasks.ValueTask`1" />，它因指定的取消标记进行的取消操作而完成。</span><span class="sxs-lookup"><span data-stu-id="e086d-145">Creates a <see cref="T:System.Threading.Tasks.ValueTask`1" /> that has completed due to cancellation with the specified cancellation token.</span></span></summary>
        <returns><span data-ttu-id="e086d-146">取消的任务。</span><span class="sxs-lookup"><span data-stu-id="e086d-146">The canceled task.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromException">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask FromException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask FromException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.FromException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromException (exception As Exception) As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::ValueTask FromException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="static member FromException : Exception -&gt; System.Threading.Tasks.ValueTask" Usage="System.Threading.Tasks.ValueTask.FromException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="e086d-147">完成任务的异常。</span><span class="sxs-lookup"><span data-stu-id="e086d-147">The exception with which to complete the task.</span></span></param>
        <summary><span data-ttu-id="e086d-148">创建 <see cref="T:System.Threading.Tasks.ValueTask" />，它是以指定的异常来完成的。</span><span class="sxs-lookup"><span data-stu-id="e086d-148">Creates a <see cref="T:System.Threading.Tasks.ValueTask" /> that has completed with the specified exception.</span></span></summary>
        <returns><span data-ttu-id="e086d-149">出错的任务。</span><span class="sxs-lookup"><span data-stu-id="e086d-149">The faulted task.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromException&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;TResult&gt; FromException&lt;TResult&gt; (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;!!TResult&gt; FromException&lt;TResult&gt;(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.FromException``1(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromException(Of TResult) (exception As Exception) As ValueTask(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Threading::Tasks::ValueTask&lt;TResult&gt; FromException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="static member FromException : Exception -&gt; System.Threading.Tasks.ValueTask&lt;'Result&gt;" Usage="System.Threading.Tasks.ValueTask.FromException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="e086d-150">返回的任务的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e086d-150">The type of the result of the returned task.</span></span></typeparam>
        <param name="exception"><span data-ttu-id="e086d-151">完成任务的异常。</span><span class="sxs-lookup"><span data-stu-id="e086d-151">The exception with which to complete the task.</span></span></param>
        <summary><span data-ttu-id="e086d-152">创建 <see cref="T:System.Threading.Tasks.ValueTask`1" />，它是以指定的异常来完成的。</span><span class="sxs-lookup"><span data-stu-id="e086d-152">Creates a <see cref="T:System.Threading.Tasks.ValueTask`1" /> that has completed with the specified exception.</span></span></summary>
        <returns><span data-ttu-id="e086d-153">出错的任务。</span><span class="sxs-lookup"><span data-stu-id="e086d-153">The faulted task.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromResult&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;TResult&gt; FromResult&lt;TResult&gt; (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;!!TResult&gt; FromResult&lt;TResult&gt;(!!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.FromResult``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromResult(Of TResult) (result As TResult) As ValueTask(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Threading::Tasks::ValueTask&lt;TResult&gt; FromResult(TResult result);" />
      <MemberSignature Language="F#" Value="static member FromResult : 'Result -&gt; System.Threading.Tasks.ValueTask&lt;'Result&gt;" Usage="System.Threading.Tasks.ValueTask.FromResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="result" Type="TResult" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="e086d-154">任务返回的结果的类型。</span><span class="sxs-lookup"><span data-stu-id="e086d-154">The type of the result returned by the task.</span></span></typeparam>
        <param name="result"><span data-ttu-id="e086d-155">存储入已完成任务的结果。</span><span class="sxs-lookup"><span data-stu-id="e086d-155">The result to store into the completed task.</span></span></param>
        <summary><span data-ttu-id="e086d-156">创建指定结果的、成功完成的 <see cref="T:System.Threading.Tasks.ValueTask`1" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-156">Creates a <see cref="T:System.Threading.Tasks.ValueTask`1" /> that's completed successfully with the specified result.</span></span></summary>
        <returns><span data-ttu-id="e086d-157">已成功完成的任务。</span><span class="sxs-lookup"><span data-stu-id="e086d-157">The successfully completed task.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ValueTaskAwaiter GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ValueTaskAwaiter GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As ValueTaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ValueTaskAwaiter GetAwaiter();" />
      <MemberSignature Language="F#" Value="member this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.ValueTaskAwaiter" Usage="valueTask.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ValueTaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e086d-158">为此值创建一个 awaiter。</span><span class="sxs-lookup"><span data-stu-id="e086d-158">Creates an awaiter for this value.</span></span></summary>
        <returns><span data-ttu-id="e086d-159">Awaiter。</span><span class="sxs-lookup"><span data-stu-id="e086d-159">The awaiter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueTask.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e086d-160">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e086d-160">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="e086d-161">当前对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e086d-161">The hash code for the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanceled">
      <MemberSignature Language="C#" Value="public bool IsCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanceled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCanceled : bool" Usage="System.Threading.Tasks.ValueTask.IsCanceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e086d-162">获取指示此对象是否表示取消的操作的值。</span><span class="sxs-lookup"><span data-stu-id="e086d-162">Gets a value that indicates whether this object represents a canceled operation.</span></span></summary>
        <value><span data-ttu-id="e086d-163"><see langword="true" /> 如果此对象表示取消的操作，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-163"><see langword="true" /> if this object represents a canceled operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="e086d-164">如果 <xref:System.Threading.Tasks.ValueTask> 通过结果或由支持 <xref:System.Threading.Tasks.Sources.IValueTaskSource> ，则将始终返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="e086d-164">If the <xref:System.Threading.Tasks.ValueTask> is backed by a result or by a <xref:System.Threading.Tasks.Sources.IValueTaskSource>, this will always return `false`.</span></span>  <span data-ttu-id="e086d-165">如果它由支持 <xref:System.Threading.Tasks.Task> ，它将返回任务的属性的值 <xref:System.Threading.Tasks.Task.IsCanceled> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-165">If it's backed by a <xref:System.Threading.Tasks.Task>, it'll return the value of the task's <xref:System.Threading.Tasks.Task.IsCanceled> property.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Threading.Tasks.ValueTask.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e086d-166">获取指示此对象是否表示完成的操作的值。</span><span class="sxs-lookup"><span data-stu-id="e086d-166">Gets a value that indicates whether this object represents a completed operation.</span></span></summary>
        <value><span data-ttu-id="e086d-167"><see langword="true" /> 如果此对象表示已完成的操作，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-167"><see langword="true" /> if this object represents a completed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompletedSuccessfully">
      <MemberSignature Language="C#" Value="public bool IsCompletedSuccessfully { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompletedSuccessfully" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCompletedSuccessfully" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompletedSuccessfully As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompletedSuccessfully { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompletedSuccessfully : bool" Usage="System.Threading.Tasks.ValueTask.IsCompletedSuccessfully" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e086d-168">获取指示此对象是否表示成功完成的操作的值。</span><span class="sxs-lookup"><span data-stu-id="e086d-168">Gets a value that indicates whether this object represents a successfully completed operation.</span></span></summary>
        <value><span data-ttu-id="e086d-169"><see langword="true" /> 如果此对象表示已成功完成的操作，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-169"><see langword="true" /> if this object represents a successfully completed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFaulted">
      <MemberSignature Language="C#" Value="public bool IsFaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFaulted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsFaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFaulted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFaulted : bool" Usage="System.Threading.Tasks.ValueTask.IsFaulted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e086d-170">获取指示此对象是否表示失败的操作的值。</span><span class="sxs-lookup"><span data-stu-id="e086d-170">Gets a value that indicates whether this object represents a failed operation.</span></span></summary>
        <value><span data-ttu-id="e086d-171"><see langword="true" /> 如果此对象表示失败的操作，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-171"><see langword="true" /> if this object represents a failed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.Tasks.ValueTask left, System.Threading.Tasks.ValueTask right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.Tasks.ValueTask left, valuetype System.Threading.Tasks.ValueTask right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.op_Equality(System.Threading.Tasks.ValueTask,System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValueTask, right As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::Tasks::ValueTask left, System::Threading::Tasks::ValueTask right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.Tasks.ValueTask * System.Threading.Tasks.ValueTask -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e086d-172">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="e086d-172">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="e086d-173">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="e086d-173">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="e086d-174">比较两个 <see cref="T:System.Threading.Tasks.ValueTask" /> 值以判断是否相等。</span><span class="sxs-lookup"><span data-stu-id="e086d-174">Compares two <see cref="T:System.Threading.Tasks.ValueTask" /> values for equality.</span></span></summary>
        <returns><span data-ttu-id="e086d-175">如果两个 <see cref="T:System.Threading.Tasks.ValueTask" /> 值相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-175"><see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask" /> values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="e086d-176">当两个 <xref:System.Threading.Tasks.ValueTask> 实例包装相同 <xref:System.Threading.Tasks.Task> 或相同对对象和标记时，两个实例相等 <xref:System.Threading.Tasks.Sources.IValueTaskSource> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-176">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.Tasks.ValueTask left, System.Threading.Tasks.ValueTask right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.Tasks.ValueTask left, valuetype System.Threading.Tasks.ValueTask right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.op_Inequality(System.Threading.Tasks.ValueTask,System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValueTask, right As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::Tasks::ValueTask left, System::Threading::Tasks::ValueTask right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.Tasks.ValueTask * System.Threading.Tasks.ValueTask -&gt; bool" Usage="System.Threading.Tasks.ValueTask.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e086d-177">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="e086d-177">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="e086d-178">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="e086d-178">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="e086d-179">确定两个 <see cref="T:System.Threading.Tasks.ValueTask" /> 值是否不相等。</span><span class="sxs-lookup"><span data-stu-id="e086d-179">Determines whether two <see cref="T:System.Threading.Tasks.ValueTask" /> values are unequal.</span></span></summary>
        <returns><span data-ttu-id="e086d-180">如果两个 <see cref="T:System.Threading.Tasks.ValueTask" /> 值相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-180"><see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="e086d-181">当两个 <xref:System.Threading.Tasks.ValueTask> 实例包装相同 <xref:System.Threading.Tasks.Task> 或相同对对象和标记时，两个实例相等 <xref:System.Threading.Tasks.Sources.IValueTaskSource> 。</span><span class="sxs-lookup"><span data-stu-id="e086d-181">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preserve">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask Preserve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask Preserve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Preserve" />
      <MemberSignature Language="VB.NET" Value="Public Function Preserve () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::ValueTask Preserve();" />
      <MemberSignature Language="F#" Value="member this.Preserve : unit -&gt; System.Threading.Tasks.ValueTask" Usage="valueTask.Preserve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e086d-182">获取将来随时可用的 <see cref="T:System.Threading.Tasks.ValueTask" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-182">Gets a <see cref="T:System.Threading.Tasks.ValueTask" /> that may be used at any point in the future.</span></span></summary>
        <returns><span data-ttu-id="e086d-183">保留的 <see cref="T:System.Threading.Tasks.ValueTask" />。</span><span class="sxs-lookup"><span data-stu-id="e086d-183">The preserved <see cref="T:System.Threading.Tasks.ValueTask" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
