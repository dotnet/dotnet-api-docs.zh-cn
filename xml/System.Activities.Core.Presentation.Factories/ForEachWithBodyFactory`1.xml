<Type Name="ForEachWithBodyFactory&lt;T&gt;" FullName="System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25f6ba6c058c793b2ed944e03041cec909137d97" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89906799" /></Metadata><TypeSignature Language="C#" Value="public sealed class ForEachWithBodyFactory&lt;T&gt; : System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ForEachWithBodyFactory`1&lt;T&gt; extends System.Object implements class System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ForEachWithBodyFactory(Of T)&#xA;Implements IActivityTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ForEachWithBodyFactory sealed : System::Activities::Presentation::IActivityTemplateFactory" />
  <TypeSignature Language="F#" Value="type ForEachWithBodyFactory&lt;'T&gt; = class&#xA;    interface IActivityTemplateFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.IActivityTemplateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">在 <see cref="P:System.Activities.Statements.ForEach`1.Values" /> 活动的 <see cref="T:System.Activities.Statements.ForEach`1" /> 集合中提供的值的类型。</typeparam>
    <summary>创建一些新的 <see cref="T:System.Activities.Statements.ForEach`1" /> 活动，其中每个活动均有一个主体。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForEachWithBodyFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ForEachWithBodyFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Create (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Activity Create(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.Create(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (target As DependencyObject) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Activity ^ Create(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Windows.DependencyObject -&gt; System.Activities.Activity&#xA;override this.Create : System.Windows.DependencyObject -&gt; System.Activities.Activity" Usage="forEachWithBodyFactory.Create target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.IActivityTemplateFactory.Create(System.Windows.DependencyObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">工作流 UI 元素，该元素是新活动的可视容器。</param>
        <summary>创建一个新的 <see cref="T:System.Activities.Statements.ForEach`1" /> 活动，该活动有一个主体。</summary>
        <returns>一个新的 <see cref="T:System.Activities.Statements.ForEach`1" /> 活动，该活动有一个主体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 忽略此参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
