<Type Name="ContextItem" FullName="System.Activities.Presentation.ContextItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dfe0ebb4f282d5d9a63492cba8c42f33eca38f2a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86836566" /></Metadata><TypeSignature Language="C#" Value="public abstract class ContextItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContextItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ContextItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ContextItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextItem abstract" />
  <TypeSignature Language="F#" Value="type ContextItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示一个必须从中派生所有上下文项的基类。 此类为抽象类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个上下文项表示设计器中的一条暂时状态。 上下文项由 <xref:System.Activities.Presentation.ContextItemManager> 管理，后者是 <xref:System.Activities.Presentation.EditingContext> 在直观地表示工作流模型时采用的 <xref:System.Activities.Presentation.WorkflowDesigner> 的一部分。 <xref:System.Activities.Presentation.ContextItemManager> 由 <xref:System.Activities.Presentation.EditingContext.Items%2A> 属性返回，其中包含在主机和设计器之间共享的数据。  此数据提供挂钩到订阅和更改通知时所需的机制。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContextItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ContextItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>启动 <see cref="T:System.Activities.Presentation.ContextItem" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.ContextItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Activities.Presentation.ContextItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在派生类中实现时，获取派生自编辑上下文类的项的类型。</summary>
        <value>项 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这不是为 <xref:System.Activities.Presentation.ContextItem> 基类实现的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.ContextItem previousItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem previousItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChanged (context As EditingContext, previousItem As ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChanged(System::Activities::Presentation::EditingContext ^ context, System::Activities::Presentation::ContextItem ^ previousItem);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChanged : System.Activities.Presentation.EditingContext * System.Activities.Presentation.ContextItem -&gt; unit&#xA;override this.OnItemChanged : System.Activities.Presentation.EditingContext * System.Activities.Presentation.ContextItem -&gt; unit" Usage="contextItem.OnItemChanged (context, previousItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="previousItem" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="context">正在其中进行更改的 <see cref="T:System.Activities.Presentation.EditingContext" />。</param>
        <param name="previousItem">之前处于活动状态的 <see cref="T:System.Activities.Presentation.ContextItem" />。</param>
        <summary>表示一个方法，在将上下文项存储在上下文项管理器中之前，将对上下文项调用该方法。 上下文项管理器上的上一项将作为参数传递。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于项必须有默认构造函数，因此，如果首次将项传递到上下文中，将会构造一个默认项。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
