<Type Name="TimerEventSubscriptionCollection" FullName="System.Workflow.Runtime.TimerEventSubscriptionCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="993c06d7b3bc0b205a947bbbe26fe9e2594877b8" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89722904" /></Metadata><TypeSignature Language="C#" Value="public class TimerEventSubscriptionCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TimerEventSubscriptionCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TimerEventSubscriptionCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimerEventSubscriptionCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type TimerEventSubscriptionCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示由 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 对象组成的有序列表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 一个 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>，表示与工作流实例关联的 <xref:System.Workflow.Runtime.TimerEventSubscription> 对象的队列，并提供管理此队列的方法。 订阅在队列中的排序方式基于其 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> 值；具有较小 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> 值的订阅将放置在具有较大 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> 值的订阅的前面。 您可以使用此类提供的方法，管理各个工作流实例的 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> 公开的活动计时器事件订阅的集合。 您可以使用 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> 或 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> 添加或移除计时器队列中的订阅。 只要计时器队列中的第一个元素更改，就会调用 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 来取消先前位于队列开头的计时器事件，并计划新的计时器事件。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item">要添加到计时器队列的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />。</param>
        <summary>将 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 添加到计时器队列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Workflow.Runtime.TimerEventSubscription> 添加到计时器队列。 订阅在队列中的放置方式基于其 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> 值；具有较小值的订阅将放置在具有较大值的订阅的前面。 如果将新订阅添加到队列的开头，则将调用 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> 取消先前位于队列开头的计时器事件，并调用 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> 计划新的计时器事件。 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> 将在添加新订阅之前锁定 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>，因此，这一过程是线程安全的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="timerEventSubscriptionCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> 所复制的元素的目标位置。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
        <param name="index"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
        <summary>从指定数组索引开始将 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> 元素复制到现有一维 <see cref="T:System.Array" /> 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> 是线程安全的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取计时器队列中的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 对象数。</summary>
        <value>队列中的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 对象数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="timerEventSubscriptionCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回循环访问 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> 的枚举数。</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已同步对 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 的访问，但是，枚举整个集合本质上不是一个线程安全的过程。 只要集合保持不变，枚举器就仍有效。 如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。 该枚举数不具有独占访问集合的权限；因此，枚举整个集合本质上不是一个线程安全的过程。 若要保证枚举过程中的线程安全，可通过使用 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 在整个枚举过程中锁定 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否同步对 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> 的访问（线程安全）。</summary>
        <value>始终返回 <see langword="true" />，指示已同步对 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> 的访问（线程安全）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已同步对 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 的访问，但是，枚举整个集合本质上不是一个线程安全的过程。 即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。 若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> 返回一个对象，该对象可用于同步对 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 的访问。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.TimerEventSubscription Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.TimerEventSubscription Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As TimerEventSubscription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::TimerEventSubscription ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; System.Workflow.Runtime.TimerEventSubscription" Usage="timerEventSubscriptionCollection.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.TimerEventSubscription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回位于计时器队列开始处的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 但不将其移除。</summary>
        <returns>返回位于计时器队列开始处的 ；如果计时器队列为空，则返回空引用（在 Visual Basic 中为）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> 是线程安全的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从计时器队列中移除指定的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Guid timerSubscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Guid timerSubscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (timerSubscriptionId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Guid timerSubscriptionId);" />
      <MemberSignature Language="F#" Value="member this.Remove : Guid -&gt; unit" Usage="timerEventSubscriptionCollection.Remove timerSubscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerSubscriptionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerSubscriptionId">要移除的 <see cref="T:System.Guid" /> 的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />。</param>
        <summary>从计时器队列中移除具有指定订阅 ID 的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从计时器队列中移除具有指定订阅 ID 的 <xref:System.Workflow.Runtime.TimerEventSubscription>。 订阅在队列中的放置方式基于其 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> 值；具有较小值的订阅将放置在具有较大值的订阅的前面。 如果移除的订阅为位于队列开始处的订阅，则将调用 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> 来取消与此订阅关联的计时器事件，并调用 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> 来为现在位于队列开始处的订阅计划计时器事件。 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> 是线程安全的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item">要从计时器队列中移除的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />。</param>
        <summary>从计时器队列中移除 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从计时器队列中移除 <xref:System.Workflow.Runtime.TimerEventSubscription>。 订阅在队列中的放置方式基于其 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> 值；具有较小值的订阅将放置在具有较大值的订阅的前面。 如果移除的订阅为位于队列开始处的订阅，则将调用 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> 来取消与此订阅关联的计时器事件，并调用 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> 来为现在位于队列开始处的订阅计划计时器事件。 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> 是线程安全的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可用于同步对 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> 的访问的对象。</summary>
        <value>用于同步 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> 访问的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> 返回一个对象，该对象可用于同步对 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 的访问。  
  
 已同步对 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 的访问，但是，枚举整个集合本质上不是一个线程安全的过程。 即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。 若要保证枚举过程中的线程安全，您可以通过使用 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 在整个枚举过程中锁定 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>，或通过捕获由于其他线程进行的更改而引发的异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimerCollectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TimerCollectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ TimerCollectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TimerCollectionProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>与工作流实例关联的计时器队列。 此队列包含组成工作流的按时间排序的 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
