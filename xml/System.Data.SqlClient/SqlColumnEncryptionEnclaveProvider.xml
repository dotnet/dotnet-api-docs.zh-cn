<Type Name="SqlColumnEncryptionEnclaveProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e44a6c589c23d9e967f683263f99b0050f5bb3cb" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="73343054" /></Metadata><TypeSignature Language="C#" Value="public abstract class SqlColumnEncryptionEnclaveProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlColumnEncryptionEnclaveProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlColumnEncryptionEnclaveProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionEnclaveProvider abstract" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionEnclaveProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a6ef3-101">为 Always Encrypted 的 enclave 提供程序定义接口的基类。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-101">The base class that defines the interface for enclave providers for Always Encrypted.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6ef3-102">Enclave 是 SQL Server 中的受保护的内存区域，用于计算加密列。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-102">An enclave is a protected region of memory inside SQL Server, used for computations on encrypted columns.</span></span> <span data-ttu-id="a6ef3-103">Enclave 提供程序封装了 enclave 证明协议的客户端实现详细信息，以及用于创建和缓存 enclave 会话的逻辑。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-103">An enclave provider encapsulates the client-side implementation details of the enclave attestation protocol as well as the logic for creating and caching enclave sessions.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlColumnEncryptionEnclaveProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlColumnEncryptionEnclaveProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6ef3-104">初始化 <see cref="T:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-104">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEnclaveSession">
      <MemberSignature Language="C#" Value="public abstract void CreateEnclaveSession (byte[] enclaveAttestationInfo, System.Security.Cryptography.ECDiffieHellmanCng clientDiffieHellmanKey, string attestationUrl, string servername, out System.Data.SqlClient.SqlEnclaveSession sqlEnclaveSession, out long counter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateEnclaveSession(unsigned int8[] enclaveAttestationInfo, class System.Security.Cryptography.ECDiffieHellmanCng clientDiffieHellmanKey, string attestationUrl, string servername, [out] class System.Data.SqlClient.SqlEnclaveSession&amp; sqlEnclaveSession, [out] int64&amp; counter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.CreateEnclaveSession(System.Byte[],System.Security.Cryptography.ECDiffieHellmanCng,System.String,System.String,System.Data.SqlClient.SqlEnclaveSession@,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateEnclaveSession (enclaveAttestationInfo As Byte(), clientDiffieHellmanKey As ECDiffieHellmanCng, attestationUrl As String, servername As String, ByRef sqlEnclaveSession As SqlEnclaveSession, ByRef counter As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateEnclaveSession(cli::array &lt;System::Byte&gt; ^ enclaveAttestationInfo, System::Security::Cryptography::ECDiffieHellmanCng ^ clientDiffieHellmanKey, System::String ^ attestationUrl, System::String ^ servername, [Runtime::InteropServices::Out] System::Data::SqlClient::SqlEnclaveSession ^ % sqlEnclaveSession, [Runtime::InteropServices::Out] long % counter);" />
      <MemberSignature Language="F#" Value="abstract member CreateEnclaveSession : byte[] * System.Security.Cryptography.ECDiffieHellmanCng * string * string * SqlEnclaveSession * int64 -&gt; unit" Usage="sqlColumnEncryptionEnclaveProvider.CreateEnclaveSession (enclaveAttestationInfo, clientDiffieHellmanKey, attestationUrl, servername, sqlEnclaveSession, counter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enclaveAttestationInfo" Type="System.Byte[]" />
        <Parameter Name="clientDiffieHellmanKey" Type="System.Security.Cryptography.ECDiffieHellmanCng" />
        <Parameter Name="attestationUrl" Type="System.String" />
        <Parameter Name="servername" Type="System.String" />
        <Parameter Name="sqlEnclaveSession" Type="System.Data.SqlClient.SqlEnclaveSession" RefType="out" />
        <Parameter Name="counter" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enclaveAttestationInfo"><span data-ttu-id="a6ef3-105">提供程序用以证明 enclave 并为会话生成对称密钥的信息。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-105">The information the provider uses to attest the enclave and generate a symmetric key for the session.</span></span> <span data-ttu-id="a6ef3-106">此信息的格式专门用于 enclave 证明协议。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-106">The format of this information is specific to the enclave attestation protocol.</span></span></param>
        <param name="clientDiffieHellmanKey"><span data-ttu-id="a6ef3-107">封装客户端密钥对的 Diffie-Hellman 算法对象。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-107">A Diffie-Hellman algorithm object that encapsulates a client-side key pair.</span></span></param>
        <param name="attestationUrl"><span data-ttu-id="a6ef3-108">用于证明 enclave 的证明服务的终结点。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-108">The endpoint of an attestation service for attesting the enclave.</span></span></param>
        <param name="servername"><span data-ttu-id="a6ef3-109">包含 enclave 的 SQL Server 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-109">The name of the SQL Server instance containing the enclave.</span></span></param>
        <param name="sqlEnclaveSession"><span data-ttu-id="a6ef3-110">返回请求的 enclave 会话；如果提供程序未执行会话缓存，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-110">The requested enclave session or <see langword="null" /> if the provider doesn't implement session caching.</span></span></param>
        <param name="counter"><span data-ttu-id="a6ef3-111">SqlClient 每次从缓存中检索会话时 enclave 提供程序预期递增的计数器。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-111">A counter that the enclave provider is expected to increment each time SqlClient retrieves the session from the cache.</span></span> <span data-ttu-id="a6ef3-112">此字段的用途是预防重播攻击。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-112">The purpose of this field is to prevent replay attacks.</span></span></param>
        <summary><span data-ttu-id="a6ef3-113">在派生类中重写后，将执行 enclave 证明、为会话生成对称密钥、创建 enclave 会话，并在缓存中存储会话信息。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-113">When overridden in a derived class, performs enclave attestation, generates a symmetric key for the session, creates a an enclave session and stores the session information in the cache.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttestationParameters">
      <MemberSignature Language="C#" Value="public abstract System.Data.SqlClient.SqlEnclaveAttestationParameters GetAttestationParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlClient.SqlEnclaveAttestationParameters GetAttestationParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.GetAttestationParameters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttestationParameters () As SqlEnclaveAttestationParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::SqlClient::SqlEnclaveAttestationParameters ^ GetAttestationParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetAttestationParameters : unit -&gt; System.Data.SqlClient.SqlEnclaveAttestationParameters" Usage="sqlColumnEncryptionEnclaveProvider.GetAttestationParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlEnclaveAttestationParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6ef3-114">获取 SqlClient 随后用于启动证明 enclave 的进程和建立具有 enclave 的安全会话的信息。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-114">Gets the information that SqlClient subsequently uses to initiate the process of attesting the enclave and to establish a secure session with the enclave.</span></span></summary>
        <returns><span data-ttu-id="a6ef3-115">SqlClient 随后用于启动证明 enclave 的进程和建立具有 enclave 的安全会话的信息。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-115">The information SqlClient subsequently uses to initiate the process of attesting the enclave and to establish a secure session with the enclave.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclaveSession">
      <MemberSignature Language="C#" Value="public abstract void GetEnclaveSession (string serverName, string attestationUrl, out System.Data.SqlClient.SqlEnclaveSession sqlEnclaveSession, out long counter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetEnclaveSession(string serverName, string attestationUrl, [out] class System.Data.SqlClient.SqlEnclaveSession&amp; sqlEnclaveSession, [out] int64&amp; counter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.GetEnclaveSession(System.String,System.String,System.Data.SqlClient.SqlEnclaveSession@,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GetEnclaveSession (serverName As String, attestationUrl As String, ByRef sqlEnclaveSession As SqlEnclaveSession, ByRef counter As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GetEnclaveSession(System::String ^ serverName, System::String ^ attestationUrl, [Runtime::InteropServices::Out] System::Data::SqlClient::SqlEnclaveSession ^ % sqlEnclaveSession, [Runtime::InteropServices::Out] long % counter);" />
      <MemberSignature Language="F#" Value="abstract member GetEnclaveSession : string * string * SqlEnclaveSession * int64 -&gt; unit" Usage="sqlColumnEncryptionEnclaveProvider.GetEnclaveSession (serverName, attestationUrl, sqlEnclaveSession, counter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="attestationUrl" Type="System.String" />
        <Parameter Name="sqlEnclaveSession" Type="System.Data.SqlClient.SqlEnclaveSession" RefType="out" />
        <Parameter Name="counter" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serverName"><span data-ttu-id="a6ef3-116">包含 enclave 的 SQL Server 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-116">The name of the SQL Server instance containing the enclave.</span></span></param>
        <param name="attestationUrl"><span data-ttu-id="a6ef3-117">用于证明 enclave 的证明服务 SqlClient 联系人的终结点。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-117">The endpoint of an attestation service, SqlClient contacts to attest the enclave.</span></span></param>
        <param name="sqlEnclaveSession"><span data-ttu-id="a6ef3-118">此方法将返回请求的 enclave 会话；如果提供程序未执行会话缓存，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-118">When this method returns, the requested enclave session or <see langword="null" /> if the provider doesn't implement session caching.</span></span> <span data-ttu-id="a6ef3-119">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-119">This parameter is treated as uninitialized.</span></span></param>
        <param name="counter"><span data-ttu-id="a6ef3-120">SqlClient 每次从缓存中检索会话时 enclave 提供程序预期递增的计数器。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-120">A counter that the enclave provider is expected to increment each time SqlClient retrieves the session from the cache.</span></span> <span data-ttu-id="a6ef3-121">此字段的用途是预防重播攻击。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-121">The purpose of this field is to prevent replay attacks.</span></span></param>
        <summary><span data-ttu-id="a6ef3-122">在派生类中重写后，将查找 enclave 会话缓存中的现有 enclave 会话信息。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-122">When overridden in a derived class, looks up an existing enclave session information in the enclave session cache.</span></span> <span data-ttu-id="a6ef3-123">如果 enclave 提供程序未执行 enclave 会话缓存，此方法应在 <paramref name="sqlEnclaveSession" /> 参数中返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-123">If the enclave provider doesn't implement enclave session caching, this method is expected to return <see langword="null" /> in the <paramref name="sqlEnclaveSession" /> parameter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateEnclaveSession">
      <MemberSignature Language="C#" Value="public abstract void InvalidateEnclaveSession (string serverName, string enclaveAttestationUrl, System.Data.SqlClient.SqlEnclaveSession enclaveSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateEnclaveSession(string serverName, string enclaveAttestationUrl, class System.Data.SqlClient.SqlEnclaveSession enclaveSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.InvalidateEnclaveSession(System.String,System.String,System.Data.SqlClient.SqlEnclaveSession)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InvalidateEnclaveSession (serverName As String, enclaveAttestationUrl As String, enclaveSession As SqlEnclaveSession)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InvalidateEnclaveSession(System::String ^ serverName, System::String ^ enclaveAttestationUrl, System::Data::SqlClient::SqlEnclaveSession ^ enclaveSession);" />
      <MemberSignature Language="F#" Value="abstract member InvalidateEnclaveSession : string * string * System.Data.SqlClient.SqlEnclaveSession -&gt; unit" Usage="sqlColumnEncryptionEnclaveProvider.InvalidateEnclaveSession (serverName, enclaveAttestationUrl, enclaveSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="enclaveAttestationUrl" Type="System.String" />
        <Parameter Name="enclaveSession" Type="System.Data.SqlClient.SqlEnclaveSession" />
      </Parameters>
      <Docs>
        <param name="serverName"><span data-ttu-id="a6ef3-124">包含 enclave 的 SQL Server 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-124">The name of the SQL Server instance containing the enclave.</span></span></param>
        <param name="enclaveAttestationUrl"><span data-ttu-id="a6ef3-125">用于证明 enclave 的证明服务 SqlClient 联系人的终结点。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-125">The endpoint of an attestation service, SqlClient contacts to attest the enclave.</span></span></param>
        <param name="enclaveSession"><span data-ttu-id="a6ef3-126">要令其失效的会话。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-126">The session to be invalidated.</span></span></param>
        <summary><span data-ttu-id="a6ef3-127">在派生类中重写后，如果提供程序实现会话缓存，将从 enclave 会话缓存中查找并逐出 enclave 会话。</span><span class="sxs-lookup"><span data-stu-id="a6ef3-127">When overridden in a derived class, looks up and evicts an enclave session from the enclave session cache, if the provider implements session caching.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
