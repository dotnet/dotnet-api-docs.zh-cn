<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4f637c7f9530ad29be157a3e744bfa7dc178437" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89771429" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Data.SqlClient.SqlDependency" /> 对象表示应用程序和 SQL Server 实例间的查询通知依赖关系。 应用程序可以创建一个 <see cref="T:System.Data.SqlClient.SqlDependency" /> 对象并进行注册以通过 <see cref="T:System.Data.SqlClient.OnChangeEventHandler" /> 事件处理程序接收通知。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> 适用于缓存方案，在此方案中，ASP.NET 应用程序或中间层服务需要将某些信息缓存在内存中。 <xref:System.Data.SqlClient.SqlDependency> 允许您在数据库中的原始数据发生更改时接收通知，以便刷新缓存。  
  
 若要设置依赖关系，需要将 <xref:System.Data.SqlClient.SqlDependency> 对象与一个或多个对象关联 <xref:System.Data.SqlClient.SqlCommand> 。 若要接收通知，你需要订阅该 <xref:System.Data.SqlClient.SqlDependency.OnChange> 事件。 有关创建通知查询的要求的详细信息，请参阅使用 [查询通知](/sql/relational-databases/native-client/features/working-with-query-notifications)。
  
> [!NOTE]
> <xref:System.Data.SqlClient.SqlDependency> 设计为在 ASP.NET 或中间层服务中使用，在该服务中，有相对较少数量的服务器依赖于数据库。 它不是用于在客户端应用程序中使用的，其中成百上千的客户端计算机将 <xref:System.Data.SqlClient.SqlDependency> 为单一数据库服务器设置对象。 如果正在开发的应用程序在数据更改时需要可靠的第二秒通知，请查看规划[通知](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v%3dsql.105))一文中的 "[规划有效的查询通知策略](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#planning-an-efficient-query-notifications-strategy)" 和 "[查询通知的替代方案](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#alternatives-to-query-notifications)" 部分。
  
 有关详细信息，请参阅 [SQL Server 中的查询通知](/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server) 和 [生成通知解决方案](https://docs.microsoft.com/previous-versions/sql/sql-server-2005/ms171065(v%3dsql.90))。  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency.OnChange>可能会在启动命令执行的线程的不同线程上生成事件。  
  
 只有满足下列特定要求的 SELECT 语句才支持查询通知。 
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
    <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建 <see cref="T:System.Data.SqlClient.SqlDependency" /> 类的新实例。</summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>用默认设置创建 <see cref="T:System.Data.SqlClient.SqlDependency" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数 <xref:System.Data.SqlClient.SqlDependency> 使用默认 Service Broker 服务名称和超时初始化对象。构造后的某个时间点，必须使用 <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> 方法将一个或多个命令关联到此 <xref:System.Data.SqlClient.SqlDependency> 对象。  
  
 只有满足下列特定要求的 SELECT 语句才支持查询通知。 有关详细信息，请参阅 [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) 和使用 [查询通知](/sql/connect/oledb/features/working-with-query-notifications)。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">要与此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象关联的 <see cref="T:System.Data.SqlClient.SqlDependency" /> 对象。 该构造函数将设置 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 对象，并将其绑定到此命令。</param>
        <summary>创建 <see cref="T:System.Data.SqlClient.SqlDependency" /> 类的新实例，并将其与 <see cref="T:System.Data.SqlClient.SqlCommand" /> 参数关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在内部，此构造函数创建类的一个实例 <xref:System.Data.Sql.SqlNotificationRequest> ，并将其绑定到 <xref:System.Data.SqlClient.SqlCommand> 对象。  
  
 只有满足下列特定要求的 SELECT 语句才支持查询通知。 有关详细信息，请参阅 [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) 和使用 [查询通知](/sql/connect/oledb/features/working-with-query-notifications)。
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" /> 参数为 NULL。</exception>
        <exception cref="T:System.InvalidOperationException">已将一个 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象赋值给了 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 对象的 <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> 属性，且该 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 未与此依赖项关联。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">要与此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象关联的 <see cref="T:System.Data.SqlClient.SqlDependency" /> 对象。 该构造函数将设置 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 对象，并将其绑定到此命令。</param>
        <param name="options">此依赖项要使用的通知请求选项。 如果使用默认服务，则为 <see langword="null" />。</param>
        <param name="timeout">此通知的超时时间（以秒为单位）。 默认值为 0，指示应当使用服务器的超时。</param>
        <summary>创建 <see cref="T:System.Data.SqlClient.SqlDependency" /> 类的一个新实例，将其与 <see cref="T:System.Data.SqlClient.SqlCommand" /> 参数关联，并指定通知选项和超时值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只有满足下列特定要求的 SELECT 语句才支持查询通知。 有关详细信息，请参阅 [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) 和使用 [查询通知](/sql/connect/oledb/features/working-with-query-notifications)。
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" /> 参数为 NULL。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">超时值小于零。</exception>
        <exception cref="T:System.InvalidOperationException">已将一个 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象赋值给了 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 对象的 <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> 属性，且该 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 未与此依赖项关联。  
  
进行了从 SQLCLR 内创建一个 SqlDependency 实例的尝试****。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">一个 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象，包含一个对通知有效的语句。</param>
        <summary>将 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象与此 <see cref="T:System.Data.SqlClient.SqlDependency" /> 实例关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只有满足下列特定要求的 SELECT 语句才支持查询通知。 有关详细信息，请参阅 [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) 和使用 [查询通知](/sql/connect/oledb/features/working-with-query-notifications)。
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" /> 参数为 null。</exception>
        <exception cref="T:System.InvalidOperationException">已将一个 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象赋值给了 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 对象的 <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> 属性，且该 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 未与此依赖项关联。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示与依赖项关联的结果集之一是否已经更改。</summary>
        <value>一个布尔值，指示结果集之一是否已经更改。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果使用的不是 <xref:System.Data.SqlClient.SqlDependency.OnChange> 事件，则可以通过检查 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> 属性来确定查询结果是否已更改。  
  
 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>属性不一定意味着数据发生更改。 其他情况（如超时过期和设置通知请求失败）还会生成更改事件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值唯一标识 <see cref="T:System.Data.SqlClient.SqlDependency" /> 类的此实例。</summary>
        <value>GUID 的字符串表示，为 <see cref="T:System.Data.SqlClient.SqlDependency" /> 类的每个实例都生成。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Id%2A>属性用于唯一标识给定的 <xref:System.Data.SqlClient.SqlDependency> 实例。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当收到与此 <see cref="T:System.Data.SqlClient.SqlDependency" /> 对象关联的任意命令的通知时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> 关联命令的结果更改时发生。 如果不使用 <xref:System.Data.SqlClient.SqlDependency.OnChange> ，则可以通过检查 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> 属性来确定查询结果是否已更改。  
  
 此 <xref:System.Data.SqlClient.SqlDependency.OnChange> 事件不一定表示数据发生了更改。 其他情况（如超时已过期和设置通知请求失败）还会生成 <xref:System.Data.SqlClient.SqlDependency.OnChange> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>启动用于接收依赖项更改通知的侦听器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency>当 SQL Server 连接中出现错误时，侦听器将重新启动。  
  
 对方法的多个调用 <xref:System.Data.SqlClient.SqlDependency.Start%2A> 可以进行，但受到以下限制：  
  
-   具有相同参数的多个调用 (调用线程) 中的相同连接字符串和 Windows 凭据有效。  
  
-   对于具有不同连接字符串的多个调用，只要：  
  
    -   每个连接字符串指定一个不同的数据库，或  
  
    -   每个连接字符串指定一个不同的用户，或者  
  
    -   调用来自不同的应用程序域。  
  
 <xref:System.Data.SqlClient.SqlDependency>对于使用多个线程来表示不同用户凭据的应用程序，你可以正确地完成工作，因为不同的用户可以使用 <xref:System.Web.Caching.SqlCacheDependency> 或 <xref:System.Data.SqlClient.SqlCommand>) 到管理员创建的通知队列来订阅和侦听 (。 当相关应用程序域启动时，请从有权初始化服务/队列的用户的 (Windows) 凭据开始， (数据库) 的 "创建队列" 和 "创建服务" 权限。 确保每个 AppDomain 只调用一次 Start，否则会引发多义性异常。  用户线程必须有权订阅通知 (数据库) 的 "订阅查询通知" 权限。 <xref:System.Data.SqlClient.SqlDependency> 将非管理员用户的订阅请求关联到管理员创建的服务/队列。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">SQL Server 实例（从中获取更改通知）的连接字符串。</param>
        <summary>启动用于接收依赖项更改通知的侦听器，该通知来自由连接字符串指定的 SQL Server 实例。</summary>
        <returns>如果侦听器初始化成功，则为 <see langword="true" />；如果已存在兼容的侦听器，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法启动的侦听器， <xref:System.AppDomain> 以便从参数指定的 SQL Server 实例接收依赖项通知 `connectionString` 。 对于多个服务器，可以多次调用此方法和不同的连接字符串。  
  
 有关其他备注，请参阅 <xref:System.Data.SqlClient.SqlDependency.Start%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> 参数为 NULL。</exception>
        <exception cref="T:System.InvalidOperationException">与上次调用此方法相比，<paramref name="connectionString" /> 参数相同，但其他参数不同。  
  
此方法是从 CLR 内部调用的。</exception>
        <exception cref="T:System.Security.SecurityException">调用方没有所必需的 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 代码访问安全性 (CAS) 权限。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">随后调用了该方法，调用使用等效的 <paramref name="connectionString" /> 参数和不同的用户，或者不是同一架构的默认用户的用户。  
  
还有所有基础 SqlClient 异常****。</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">SQL Server 实例（从中获取更改通知）的连接字符串。</param>
        <param name="queue">要使用的现有 SQL Server Service Broker 队列。 如果为 <see langword="null" />，则使用默认队列。</param>
        <summary>启动用于接收依赖项更改通知的侦听器，该侦听器使用指定的 SQL Server Service Broker 队列从由连接字符串指定的 SQL Server 实例接收。</summary>
        <returns>如果侦听器初始化成功，则为 <see langword="true" />；如果已存在兼容的侦听器，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法启动的侦听器， <xref:System.AppDomain> 以便从参数指定的 SQL Server 实例接收依赖项通知 `connectionString` 。 对于多个服务器，可以多次调用此方法和不同的连接字符串。  
  
 如果未指定任何队列名称，则 <xref:System.Data.SqlClient.SqlDependency> 会在服务器中创建用于整个进程的临时队列和服务，即使该进程涉及多个进程也是如此 <xref:System.AppDomain> 。 应用程序关闭时，队列和服务将自动删除。  
  
 有关其他备注，请参阅 <xref:System.Data.SqlClient.SqlDependency.Start%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> 参数为 NULL。</exception>
        <exception cref="T:System.InvalidOperationException">与上次调用此方法相比，<paramref name="connectionString" /> 参数相同，但其他参数不同。  
  
此方法是从 CLR 内部调用的。</exception>
        <exception cref="T:System.Security.SecurityException">调用方没有所必需的 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 代码访问安全性 (CAS) 权限。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">已经随后调用了该方法，调用使用等效的 <paramref name="connectionString" /> 参数和不同的用户，或者不是同一架构的默认用户的用户。  
  
还有所有基础 SqlClient 异常****。</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>停止在上一次 <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> 调用中指定的连接的侦听器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency>当 SQL Server 连接中出现错误时，侦听器将重新启动。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">SQL Server 实例的连接字符串，在上一次 <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> 调用中使用。</param>
        <summary>停止在上一次 <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> 调用中指定的连接的侦听器。</summary>
        <returns>如果侦听器完全停止，则为 <see langword="true" />；如果 <see cref="T:System.AppDomain" /> 从侦听器解除绑定，但至少还有另一个 <see cref="T:System.AppDomain" /> 使用同一侦听器，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A>必须为每个调用调用方法 <xref:System.Data.SqlClient.SqlDependency.Start%2A> 。 给定的侦听器在收到与请求相同数量的请求时，只会完全关闭 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> <xref:System.Data.SqlClient.SqlDependency.Start%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> 参数为 NULL。</exception>
        <exception cref="T:System.InvalidOperationException">此方法是从 SQLCLR 内部调用的。</exception>
        <exception cref="T:System.Security.SecurityException">调用方没有所必需的 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 代码访问安全性 (CAS) 权限。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">发生基础 SqlClient 异常****。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">SQL Server 实例的连接字符串，在上一次 <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> 调用中使用。</param>
        <param name="queue">在上一次 <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> 调用中使用的 SQL Server Service Broker 队列。</param>
        <summary>停止在上一次 <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> 调用中指定的连接的侦听器。</summary>
        <returns>如果侦听器完全停止，则为 <see langword="true" />；如果 <see cref="T:System.AppDomain" /> 从侦听器解除绑定，但至少还有另一个 <see cref="T:System.AppDomain" /> 使用同一侦听器，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A>必须为每个调用调用方法 <xref:System.Data.SqlClient.SqlDependency.Start%2A> 。 给定的侦听器在收到与请求相同数量的请求时，只会完全关闭 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> <xref:System.Data.SqlClient.SqlDependency.Start%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> 参数为 NULL。</exception>
        <exception cref="T:System.InvalidOperationException">此方法是从 SQLCLR 内部调用的。</exception>
        <exception cref="T:System.Security.SecurityException">调用方没有所必需的 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 代码访问安全性 (CAS) 权限。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">发生基础 SqlClient 异常****。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server">使用查询通知</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
