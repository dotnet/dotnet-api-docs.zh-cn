<Type Name="SqlCommand" FullName="System.Data.SqlClient.SqlCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00b82bf2339abf99fb84c2610f1bac27f057a555" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83913003" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public sealed class SqlCommand : System.ComponentModel.Component, ICloneable, IDisposable, System.Data.IDbCommand" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.ComponentModel.Component implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits Component&#xA;Implements ICloneable, IDbCommand, IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::ComponentModel::Component, ICloneable, IDisposable, System::Data::IDbCommand" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit Component&#xA;    interface IDbCommand&#xA;    interface IDisposable&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface IDbCommand&#xA;    interface ICloneable&#xA;    interface IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.1</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbCommand</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="129e0-101">表示要对 SQL Server 数据库执行的一个 Transact-SQL 语句或存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-101">Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database.</span></span> <span data-ttu-id="129e0-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="129e0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-103">当创建 <xref:System.Data.SqlClient.SqlCommand> 的实例时，读/写属性将设置为其初始值。</span><span class="sxs-lookup"><span data-stu-id="129e0-103">When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values.</span></span> <span data-ttu-id="129e0-104">有关这些值的列表，请参阅 <xref:System.Data.SqlClient.SqlCommand> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="129e0-104">For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor.</span></span>  
  
 <span data-ttu-id="129e0-105"><xref:System.Data.SqlClient.SqlCommand> 在 SQL Server 数据库中执行命令的方法如下：</span><span class="sxs-lookup"><span data-stu-id="129e0-105"><xref:System.Data.SqlClient.SqlCommand> features the following methods for executing commands at a SQL Server database:</span></span>  
  
|<span data-ttu-id="129e0-106">项</span><span class="sxs-lookup"><span data-stu-id="129e0-106">Item</span></span>|<span data-ttu-id="129e0-107">说明</span><span class="sxs-lookup"><span data-stu-id="129e0-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|<span data-ttu-id="129e0-108">启动此 <xref:System.Data.SqlClient.SqlCommand>描述的 Transact-sql 语句或存储过程的异步执行，通常执行 INSERT、DELETE、UPDATE 和 SET 语句等命令。</span><span class="sxs-lookup"><span data-stu-id="129e0-108">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements.</span></span> <span data-ttu-id="129e0-109">对 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 的每个调用必须与完成操作的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 配对，通常在单独的线程上完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-109">Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|<span data-ttu-id="129e0-110">启动此 <xref:System.Data.SqlClient.SqlCommand> 描述的 Transact-sql 语句或存储过程的异步执行，并从服务器中检索一个或多个结果集。</span><span class="sxs-lookup"><span data-stu-id="129e0-110">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server.</span></span> <span data-ttu-id="129e0-111">对 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 的每个调用必须与完成操作的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 配对，通常在单独的线程上完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-111">Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|<span data-ttu-id="129e0-112">启动此 <xref:System.Data.SqlClient.SqlCommand> 描述的 Transact-SQL 语句或存储过程的异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-112">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>.</span></span> <span data-ttu-id="129e0-113">对 `BeginExecuteXmlReader` 的每个调用都必须与对 `EndExecuteXmlReader`的调用配对，后者通常在单独的线程上完成操作，并返回 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-113">Each call to `BeginExecuteXmlReader` must be paired with a call to `EndExecuteXmlReader`, which finishes the operation, typically on a separate thread, and returns an <xref:System.Xml.XmlReader> object.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|<span data-ttu-id="129e0-114">执行返回行的命令。</span><span class="sxs-lookup"><span data-stu-id="129e0-114">Executes commands that return rows.</span></span> <span data-ttu-id="129e0-115">为了提高性能，<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 使用 Transact-sql `sp_executesql` 系统存储过程来调用命令。</span><span class="sxs-lookup"><span data-stu-id="129e0-115">For increased performance, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invokes commands using the Transact-SQL `sp_executesql` system stored procedure.</span></span> <span data-ttu-id="129e0-116">因此，<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 可能不会产生所需的效果，因为用于执行 Transact-sql SET 语句等命令。</span><span class="sxs-lookup"><span data-stu-id="129e0-116">Therefore, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|<span data-ttu-id="129e0-117">执行 Transact-sql INSERT、DELETE、UPDATE 和 SET 语句等命令。</span><span class="sxs-lookup"><span data-stu-id="129e0-117">Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|<span data-ttu-id="129e0-118">从数据库中检索单个值（例如聚合值）。</span><span class="sxs-lookup"><span data-stu-id="129e0-118">Retrieves a single value (for example, an aggregate value) from a database.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|<span data-ttu-id="129e0-119">将 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 发送到 <xref:System.Data.SqlClient.SqlCommand.Connection%2A>，并生成一个 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-119">Sends the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> to the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> and builds an <xref:System.Xml.XmlReader> object.</span></span>|  
  
 <span data-ttu-id="129e0-120">可以重置 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 属性，并重新使用 <xref:System.Data.SqlClient.SqlCommand> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-120">You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-121">但是，必须先关闭 <xref:System.Data.SqlClient.SqlDataReader>，然后才能执行新的或前一个命令。</span><span class="sxs-lookup"><span data-stu-id="129e0-121">However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command.</span></span>  
  
 <span data-ttu-id="129e0-122">如果 <xref:System.Data.SqlClient.SqlException> 是由执行 <xref:System.Data.SqlClient.SqlCommand>的方法生成的，则当严重性级别为19或更低时，<xref:System.Data.SqlClient.SqlConnection> 保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="129e0-122">If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less.</span></span> <span data-ttu-id="129e0-123">当严重性级别为20或更大时，服务器通常会关闭 <xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="129e0-123">When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>.</span></span> <span data-ttu-id="129e0-124">但是，用户可以重新打开连接并继续操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-124">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129e0-125">无名称（也称为序号） .NET Framework 数据提供程序不支持 SQL Server 的参数。</span><span class="sxs-lookup"><span data-stu-id="129e0-125">Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-126">下面的示例创建 <xref:System.Data.SqlClient.SqlConnection>、<xref:System.Data.SqlClient.SqlCommand>和 <xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="129e0-126">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="129e0-127">该示例将读取数据，并将数据写入控制台。</span><span class="sxs-lookup"><span data-stu-id="129e0-127">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="129e0-128">最后，该示例关闭了 <xref:System.Data.SqlClient.SqlDataReader>，然后在 <xref:System.Data.SqlClient.SqlConnection> 退出 `Using` 代码块时关闭了。</span><span class="sxs-lookup"><span data-stu-id="129e0-128">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 <span data-ttu-id="129e0-129">下面的示例演示如何创建和执行不同类型的 SqlCommand 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-129">The following sample shows how to create and execute different types of SqlCommand objects.</span></span>  
  
 <span data-ttu-id="129e0-130">首先，必须通过执行以下脚本来创建示例数据库：</span><span class="sxs-lookup"><span data-stu-id="129e0-130">First you must create the sample database, by executing the following script:</span></span>  
  
```sql
USE [master]  
GO  
  
CREATE DATABASE [MySchool]  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE procedure [dbo].[CourseExtInfo] @CourseId int  
as  
select c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  
from Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  
where c.CourseID=@CourseId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  
as  
select @CourseCount=Count(c.CourseID)  
from course as c  
where c.DepartmentID=@DepartmentId  
  
select d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  
from Department as d  
where d.DepartmentID=@DepartmentId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
Create PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   
@Year int,@BudgetSum money output  
AS  
BEGIN  
        SELECT @BudgetSum=SUM([Budget])  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year   
  
SELECT [DepartmentID]  
      ,[Name]  
      ,[Budget]  
      ,[StartDate]  
      ,[Administrator]  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year  
  
END  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  
[LastName] [nvarchar](50) NOT NULL,  
[FirstName] [nvarchar](50) NOT NULL,  
[HireDate] [datetime] NULL,  
[EnrollmentDate] [datetime] NULL,  
 CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
(  
[PersonID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  
[CourseID] [nvarchar](10) NOT NULL,  
[StudentID] [int] NOT NULL,  
[Grade] [decimal](3, 2) NOT NULL,  
 CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   
(  
[EnrollmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create view [dbo].[EnglishCourse]  
as  
select c.CourseID,c.Title,c.Credits,c.DepartmentID  
from Course as c join Department as d on c.DepartmentID=d.DepartmentID  
where d.Name=N'English'  
  
GO  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
SET IDENTITY_INSERT [dbo].[Person] ON   
  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  
SET IDENTITY_INSERT [dbo].[Person] OFF  
SET IDENTITY_INSERT [dbo].[StudentGrade] ON   
  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  
SET IDENTITY_INSERT [dbo].[StudentGrade] OFF  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  
REFERENCES [dbo].[Person] ([PersonID])  
GO  
ALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  
GO  
```  
  
 <span data-ttu-id="129e0-131">接下来，编译并执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="129e0-131">Next, compile and execute the following:</span></span>  
  
```csharp
using System;  
using System.Data;  
using System.Data.SqlClient;  
using System.Threading.Tasks;  
  
class Program {  
  
   static class SqlHelper {  
      // Set the connection, command, and then execute the command with non query.  
      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   
               // type is only for OLE DB.    
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteNonQuery();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command and only return one value.  
      public static Object ExecuteScalar(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteScalar();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command with query and return the reader.  
      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         SqlConnection conn = new SqlConnection(connectionString);  
  
         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
            cmd.CommandType = commandType;  
            cmd.Parameters.AddRange(parameters);  
  
            conn.Open();  
            // When using CommandBehavior.CloseConnection, the connection will be closed when the   
            // IDataReader is closed.  
            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  
  
            return reader;  
         }  
      }  
   }  
  
   static void Main(string[] args) {  
      String connectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;";  
  
      CountCourses(connectionString, 2012);  
      Console.WriteLine();  
  
      Console.WriteLine("Following result is the departments that started from 2007:");  
      GetDepartments(connectionString, 2007);  
      Console.WriteLine();  
  
      Console.WriteLine("Add the credits when the credits of course is lower than 4.");  
      AddCredits(connectionString, 4);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static void CountCourses(String connectionString, Int32 year) {  
      String commandText = "Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year";  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  
      Int32 count;  
      if (Int32.TryParse(oValue.ToString(), out count))  
         Console.WriteLine("There {0} {1} course{2} in {3}.", count > 1 ? "are" : "is", count, count > 1 ? "s" : null, year);  
   }  
  
   // Display the Departments that start from the specified year.  
   static void GetDepartments(String connectionString, Int32 year) {  
      String commandText = "dbo.GetDepartmentsOfSpecifiedYear";  
  
      // Specify the year of StartDate  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      // When the direction of parameter is set as Output, you can get the value after   
      // executing the command.  
      SqlParameter parameterBudget = new SqlParameter("@BudgetSum", SqlDbType.Money);  
      parameterBudget.Direction = ParameterDirection.Output;  
  
      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  
          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  
         Console.WriteLine("{0,-20}{1,-20}{2,-20}{3,-20}", "Name", "Budget", "StartDate",  
             "Administrator");  
         while (reader.Read()) {  
            Console.WriteLine("{0,-20}{1,-20:C}{2,-20:d}{3,-20}", reader["Name"],  
                reader["Budget"], reader["StartDate"], reader["Administrator"]);  
         }  
      }  
      Console.WriteLine("{0,-20}{1,-20:C}", "Sum:", parameterBudget.Value);  
   }  
  
   // If credits of course is lower than the certain value, the method will add the credits.  
   static void AddCredits(String connectionString, Int32 creditsLow) {  
      String commandText = "Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits";  
  
      SqlParameter parameterCredits = new SqlParameter("@Credits", creditsLow);  
  
      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  
  
      Console.WriteLine("{0} row{1} {2} updated.", rows, rows > 1 ? "s" : null, rows > 1 ? "are" : "is");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-132">在 ADO.NET 中检索和修改数据</span><span class="sxs-lookup"><span data-stu-id="129e0-132">Retrieving and Modifying Data in ADO.NET</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-133">SQL Server 和 ADO.NET</span><span class="sxs-lookup"><span data-stu-id="129e0-133">SQL Server and ADO.NET</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-134">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-134">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="129e0-135">初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-135">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-136">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-136">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-137">初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-137">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-138">基本构造函数将所有字段初始化为其默认值。</span><span class="sxs-lookup"><span data-stu-id="129e0-138">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="129e0-139">下表显示了 <xref:System.Data.SqlClient.SqlCommand>实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="129e0-139">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="129e0-140">属性</span><span class="sxs-lookup"><span data-stu-id="129e0-140">Properties</span></span>|<span data-ttu-id="129e0-141">初始值</span><span class="sxs-lookup"><span data-stu-id="129e0-141">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|<span data-ttu-id="129e0-142">空字符串（""）</span><span class="sxs-lookup"><span data-stu-id="129e0-142">empty string ("")</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="129e0-143">30</span><span class="sxs-lookup"><span data-stu-id="129e0-143">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="129e0-144">Null</span><span class="sxs-lookup"><span data-stu-id="129e0-144">Null</span></span>|  
  
 <span data-ttu-id="129e0-145">可以通过单独调用属性来更改任何这些属性的值。</span><span class="sxs-lookup"><span data-stu-id="129e0-145">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-146">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand> 并设置 `CommandTimeout` 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-146">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-147">在 ADO.NET 中检索和修改数据</span><span class="sxs-lookup"><span data-stu-id="129e0-147">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-148">SQL Server 和 ADO.NET</span><span class="sxs-lookup"><span data-stu-id="129e0-148">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-149">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-149">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="129e0-150">查询的文本。</span><span class="sxs-lookup"><span data-stu-id="129e0-150">The text of the query.</span></span></param>
        <summary><span data-ttu-id="129e0-151">使用查询的文本初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-151">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-152">创建 <xref:System.Data.SqlClient.SqlCommand> 实例时，以下读/写属性将设置为初始值。</span><span class="sxs-lookup"><span data-stu-id="129e0-152">When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="129e0-153">属性</span><span class="sxs-lookup"><span data-stu-id="129e0-153">Properties</span></span>|<span data-ttu-id="129e0-154">初始值</span><span class="sxs-lookup"><span data-stu-id="129e0-154">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="129e0-155">30</span><span class="sxs-lookup"><span data-stu-id="129e0-155">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="129e0-156">Null</span><span class="sxs-lookup"><span data-stu-id="129e0-156">null</span></span>|  
  
 <span data-ttu-id="129e0-157">可以通过单独调用属性来更改任何这些属性的值。</span><span class="sxs-lookup"><span data-stu-id="129e0-157">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-158">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand>，并传入连接字符串和命令文本。</span><span class="sxs-lookup"><span data-stu-id="129e0-158">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-159">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-159">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-160">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-160">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-161">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-161">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="129e0-162">查询的文本。</span><span class="sxs-lookup"><span data-stu-id="129e0-162">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="129e0-163">表示到 SQL Server 实例的连接的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-163">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span></span></param>
        <summary><span data-ttu-id="129e0-164">使用查询的文本和 <see cref="T:System.Data.SqlClient.SqlConnection" /> 初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-164">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query and a <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-165">下表显示了 <xref:System.Data.SqlClient.SqlCommand>实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="129e0-165">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="129e0-166">属性</span><span class="sxs-lookup"><span data-stu-id="129e0-166">Properties</span></span>|<span data-ttu-id="129e0-167">初始值</span><span class="sxs-lookup"><span data-stu-id="129e0-167">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="129e0-168">30</span><span class="sxs-lookup"><span data-stu-id="129e0-168">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="129e0-169">一个新的 <xref:System.Data.SqlClient.SqlConnection>，它是 `connection` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="129e0-169">A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="129e0-170">您可以通过设置相关属性来更改任何这些参数的值。</span><span class="sxs-lookup"><span data-stu-id="129e0-170">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-171">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand> 并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-171">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-172">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-172">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-173">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-173">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-174">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-174">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="129e0-175">查询的文本。</span><span class="sxs-lookup"><span data-stu-id="129e0-175">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="129e0-176">表示到 SQL Server 实例的连接的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-176">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span></span></param>
        <param name="transaction"><span data-ttu-id="129e0-177">其中执行 <see cref="T:System.Data.SqlClient.SqlCommand" /> 的 <see cref="T:System.Data.SqlClient.SqlTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-177">The <see cref="T:System.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span></span></param>
        <summary><span data-ttu-id="129e0-178">使用查询文本、<see cref="T:System.Data.SqlClient.SqlConnection" /> 以及 <see cref="T:System.Data.SqlClient.SqlTransaction" /> 初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-178">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query, a <see cref="T:System.Data.SqlClient.SqlConnection" />, and the <see cref="T:System.Data.SqlClient.SqlTransaction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-179">下表显示了 <xref:System.Data.SqlClient.SqlCommand>实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="129e0-179">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="129e0-180">属性</span><span class="sxs-lookup"><span data-stu-id="129e0-180">Properties</span></span>|<span data-ttu-id="129e0-181">初始值</span><span class="sxs-lookup"><span data-stu-id="129e0-181">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="129e0-182">30</span><span class="sxs-lookup"><span data-stu-id="129e0-182">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="129e0-183">一个新的 <xref:System.Data.SqlClient.SqlConnection>，它是 `connection` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="129e0-183">A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="129e0-184">您可以通过设置相关属性来更改任何这些参数的值。</span><span class="sxs-lookup"><span data-stu-id="129e0-184">You can change the value for any of these parameters by setting the related property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-185">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-185">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-186">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-186">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-187">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-187">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction, valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction, columnEncryptionSetting As SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction, System::Data::SqlClient::SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction * System.Data.SqlClient.SqlCommandColumnEncryptionSetting -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction, columnEncryptionSetting)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="1" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" Index="2" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="columnEncryptionSetting" Type="System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Index="3" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cmdText"><span data-ttu-id="129e0-188">查询的文本。</span><span class="sxs-lookup"><span data-stu-id="129e0-188">The text of the query.</span></span></param>
        <param name="connection"><span data-ttu-id="129e0-189">表示到 SQL Server 实例的连接的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-189">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span></span></param>
        <param name="transaction"><span data-ttu-id="129e0-190">其中执行 <see cref="T:System.Data.SqlClient.SqlCommand" /> 的 <see cref="T:System.Data.SqlClient.SqlTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-190">The <see cref="T:System.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span></span></param>
        <param name="columnEncryptionSetting"><span data-ttu-id="129e0-191">加密设置。</span><span class="sxs-lookup"><span data-stu-id="129e0-191">The encryption setting.</span></span> <span data-ttu-id="129e0-192">有关详细信息，请参阅 [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine)。</span><span class="sxs-lookup"><span data-stu-id="129e0-192">For more information, see [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span></span></param>
        <summary><span data-ttu-id="129e0-193">使用指定的命令文本、连接、事务和加密设置初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-193">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with specified command text, connection, transaction, and encryption setting.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteNonQuery">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="129e0-194">启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-194">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-195">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-195">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-196">启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-196">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <returns><span data-ttu-id="129e0-197">可用于轮询和/或等待结果的 <see cref="T:System.IAsyncResult" />；当调用可返回受影响的行数的 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> 时，也需要该值。</span><span class="sxs-lookup"><span data-stu-id="129e0-197">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, which returns the number of affected rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-198"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 方法会启动异步执行不返回行的 [!INCLUDE[tsql](~/includes/tsql-md.md)] 语句或存储过程的过程，以便在执行语句时可以同时运行其他任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-198">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="129e0-199">完成语句后，开发人员必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 方法才能完成该操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-199">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation.</span></span> <span data-ttu-id="129e0-200"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 方法会立即返回，但在代码执行相应的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 方法调用之前，不能执行任何其他调用来对同一 <xref:System.Data.SqlClient.SqlCommand> 对象启动同步或异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-200">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-201">在命令的执行完成之前调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 会导致 <xref:System.Data.SqlClient.SqlCommand> 对象被阻止，直到执行完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-201">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="129e0-202">请注意，命令文本和参数同步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="129e0-202">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="129e0-203">如果发送了大命令或多个参数，则此方法可能会在写入过程中被阻止。</span><span class="sxs-lookup"><span data-stu-id="129e0-203">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="129e0-204">发送命令后，该方法立即返回，而不会等待来自服务器的应答，也就是说，读取是异步的。</span><span class="sxs-lookup"><span data-stu-id="129e0-204">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="129e0-205">由于此重载不支持回调过程，因此开发人员必须轮询以确定命令是否已完成，使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 方法返回的 <xref:System.IAsyncResult> 的 <xref:System.IAsyncResult.IsCompleted%2A> 属性;或者使用返回的 <xref:System.IAsyncResult>的 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 属性等待一个或多个命令的完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-205">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  

 <span data-ttu-id="129e0-206">此方法将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-206">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-207">以下控制台应用程序在**AdventureWorks**示例数据库中创建更新数据，以异步方式执行其工作。</span><span class="sxs-lookup"><span data-stu-id="129e0-207">The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously.</span></span> <span data-ttu-id="129e0-208">为了模拟长时间运行的进程，此示例在命令文本中插入一个 WAITFOR 语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-208">In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text.</span></span> <span data-ttu-id="129e0-209">通常情况下，你不会尽力使命令运行得更慢，但在这种情况下，这样做可以更轻松地演示异步行为。</span><span class="sxs-lookup"><span data-stu-id="129e0-209">Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-210">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-210">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-211">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-211">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-212">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-212">-or-</span></span>

<span data-ttu-id="129e0-213">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-213">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-214">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-214">-or-</span></span>

<span data-ttu-id="129e0-215">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-215">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-216">执行命令文本时出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-216">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="129e0-217">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-217">-or-</span></span>

<span data-ttu-id="129e0-218">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-218">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-219">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-219">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-220">名称/值对“Asynchronous Processing=true”未包含在为此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 定义连接的连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="129e0-220">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="129e0-221">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-221">-or-</span></span>

<span data-ttu-id="129e0-222">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-222">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-223">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-223">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-224">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-224">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-225">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-225">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-226">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-226">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-227">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-227">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-228">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-228">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-229">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-229">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-230">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-230">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="129e0-231">命令执行完成时调用的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="129e0-231">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span></span> <span data-ttu-id="129e0-232">传递 <see langword="null" />（在 Microsoft Visual Basic 中为 <see langword="Nothing" />）以指示不需要回调。</span><span class="sxs-lookup"><span data-stu-id="129e0-232">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span></span></param>
        <param name="stateObject"><span data-ttu-id="129e0-233">传递到回调过程的用户定义的状态对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-233">A user-defined state object that is passed to the callback procedure.</span></span> <span data-ttu-id="129e0-234">使用 <see cref="P:System.IAsyncResult.AsyncState" /> 属性从回调过程内检索此对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-234">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span></span></param>
        <summary><span data-ttu-id="129e0-235">在给定回调过程和状态信息的情况下，启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-235">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, given a callback procedure and state information.</span></span></summary>
        <returns><span data-ttu-id="129e0-236">可用于轮询和/或等待结果的 <see cref="T:System.IAsyncResult" />；当调用可返回受影响的行数的 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> 时，也需要该值。</span><span class="sxs-lookup"><span data-stu-id="129e0-236">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, which returns the number of affected rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-237"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 方法会启动异步执行不返回行的 Transact-sql 语句或存储过程的过程，以便在执行语句时可以同时运行其他任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-237">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="129e0-238">完成语句后，开发人员必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 方法才能完成该操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-238">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation.</span></span> <span data-ttu-id="129e0-239"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 方法会立即返回，但在代码执行相应的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 方法调用之前，不能执行任何其他调用来对同一 <xref:System.Data.SqlClient.SqlCommand> 对象启动同步或异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-239">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-240">在命令的执行完成之前调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 会导致 <xref:System.Data.SqlClient.SqlCommand> 对象被阻止，直到执行完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-240">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="129e0-241">`callback` 参数使你可以指定在完成语句时调用的 <xref:System.AsyncCallback> 委托。</span><span class="sxs-lookup"><span data-stu-id="129e0-241">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="129e0-242">你可以从该委托过程中或应用程序中的任何其他位置调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-242">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="129e0-243">此外，可以在 `asyncStateObject` 参数中传递任何对象，而回调过程可以使用 <xref:System.IAsyncResult.AsyncState%2A> 属性检索此信息。</span><span class="sxs-lookup"><span data-stu-id="129e0-243">In addition, you can pass any object in the `asyncStateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="129e0-244">请注意，命令文本和参数同步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="129e0-244">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="129e0-245">如果发送了大命令或多个参数，则此方法可能会在写入过程中被阻止。</span><span class="sxs-lookup"><span data-stu-id="129e0-245">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="129e0-246">发送命令后，该方法立即返回，而不会等待来自服务器的应答，也就是说，读取是异步的。</span><span class="sxs-lookup"><span data-stu-id="129e0-246">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="129e0-247">由于回调过程是从 Microsoft .NET 公共语言运行时提供的后台线程中执行的，因此，必须采用一种严格的方法来处理应用程序内的跨线程交互。</span><span class="sxs-lookup"><span data-stu-id="129e0-247">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="129e0-248">例如，您不能在回调过程中与窗体内容交互;如果必须更新窗体，必须切换回窗体的线程才能完成工作。</span><span class="sxs-lookup"><span data-stu-id="129e0-248">For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="129e0-249">本主题中的示例演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="129e0-249">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="129e0-250">在执行操作过程中发生的所有错误都作为回调过程中的异常引发。</span><span class="sxs-lookup"><span data-stu-id="129e0-250">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="129e0-251">必须在回调过程中处理异常，而不是在主应用程序中处理。</span><span class="sxs-lookup"><span data-stu-id="129e0-251">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="129e0-252">请参阅本主题中的示例，了解有关在回调过程中处理异常的其他信息。</span><span class="sxs-lookup"><span data-stu-id="129e0-252">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  

 <span data-ttu-id="129e0-253">此方法将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-253">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-254">以下 Windows 应用程序演示如何使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 方法，并执行包含几秒钟延迟（模拟长时间运行的命令）的 Transact-sql 语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-254">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).</span></span>  
  
 <span data-ttu-id="129e0-255">此示例演示了许多重要的方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-255">This example demonstrates many important techniques.</span></span> <span data-ttu-id="129e0-256">这包括调用从单独的线程与窗体进行交互的方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-256">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="129e0-257">此外，此示例还演示了如何阻止用户同时执行命令，以及如何确保在调用回调过程之前窗体不会关闭。</span><span class="sxs-lookup"><span data-stu-id="129e0-257">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="129e0-258">若要设置此示例，请创建新的 Windows 应用程序。</span><span class="sxs-lookup"><span data-stu-id="129e0-258">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="129e0-259">将 <xref:System.Windows.Forms.Button> 控件和 <xref:System.Windows.Forms.Label> 控件放在窗体上（接受每个控件的默认名称）。</span><span class="sxs-lookup"><span data-stu-id="129e0-259">Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="129e0-260">将以下代码添加到窗体的类中，根据环境的需要修改连接字符串。</span><span class="sxs-lookup"><span data-stu-id="129e0-260">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-261">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-261">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-262">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-262">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-263">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-263">-or-</span></span>

<span data-ttu-id="129e0-264">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-264">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-265">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-265">-or-</span></span>

<span data-ttu-id="129e0-266">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-266">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-267">执行命令文本时出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-267">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="129e0-268">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-268">-or-</span></span>

<span data-ttu-id="129e0-269">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-269">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-270">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-270">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-271">名称/值对“Asynchronous Processing=true”未包含在为此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 定义连接的连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="129e0-271">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="129e0-272">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-272">-or-</span></span>

<span data-ttu-id="129e0-273">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-273">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-274">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-274">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-275">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-275">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-276">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-276">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-277">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-277">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-278">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-278">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-279">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-279">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-280">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-280">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-281">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-281">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="129e0-282">启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行，并从服务器中检索一个或多个结果集。</span><span class="sxs-lookup"><span data-stu-id="129e0-282">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, and retrieves one or more result sets from the server.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-283">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-283">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-284">启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行，并从服务器中检索一个或多个结果集。</span><span class="sxs-lookup"><span data-stu-id="129e0-284">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, and retrieves one or more result sets from the server.</span></span></summary>
        <returns><span data-ttu-id="129e0-285">可用于轮询和/或等待结果的 <see cref="T:System.IAsyncResult" />；在调用 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> 时，也需要该值。该调用会返回一个可用于检索返回行的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-285">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance that can be used to retrieve the returned rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-286"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法启动异步执行 Transact-sql 语句或返回行的存储过程的过程，以便在执行语句时可以同时运行其他任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-286">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="129e0-287">完成语句后，开发人员必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法才能完成操作并检索命令返回的 <xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="129e0-287">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="129e0-288"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法会立即返回，但在代码执行相应的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法调用之前，不能执行任何其他调用来对同一 <xref:System.Data.SqlClient.SqlCommand> 对象启动同步或异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-288">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-289">在命令的执行完成之前调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 会导致 <xref:System.Data.SqlClient.SqlCommand> 对象被阻止，直到执行完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-289">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="129e0-290">请注意，命令文本和参数同步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="129e0-290">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="129e0-291">如果发送了大命令或多个参数，则此方法可能会在写入过程中被阻止。</span><span class="sxs-lookup"><span data-stu-id="129e0-291">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="129e0-292">发送命令后，该方法立即返回，而不会等待来自服务器的应答，也就是说，读取是异步的。</span><span class="sxs-lookup"><span data-stu-id="129e0-292">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="129e0-293">尽管命令执行是异步的，但值提取仍同步。</span><span class="sxs-lookup"><span data-stu-id="129e0-293">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="129e0-294">这意味着，如果需要更多的数据和基础网络的读取操作，则调用 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 可能会阻塞。</span><span class="sxs-lookup"><span data-stu-id="129e0-294">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="129e0-295">由于此重载不支持回调过程，因此开发人员必须轮询以确定命令是否已完成，使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法返回的 <xref:System.IAsyncResult> 的 <xref:System.IAsyncResult.IsCompleted%2A> 属性;或者使用返回的 <xref:System.IAsyncResult>的 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 属性等待一个或多个命令的完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-295">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="129e0-296">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-296">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-297">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-297">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="129e0-298">此方法将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-298">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-299">下面的控制台应用程序启动以异步方式检索数据读取器的进程。</span><span class="sxs-lookup"><span data-stu-id="129e0-299">The following console application starts the process of retrieving a data reader asynchronously.</span></span> <span data-ttu-id="129e0-300">等待结果时，这个简单的应用程序处于循环中，调查 <xref:System.IAsyncResult.IsCompleted%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="129e0-300">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="129e0-301">完成该过程后，代码会立即检索 <xref:System.Data.SqlClient.SqlDataReader> 并显示其内容。</span><span class="sxs-lookup"><span data-stu-id="129e0-301">As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-302">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-302">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-303">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-303">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-304">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-304">-or-</span></span>

<span data-ttu-id="129e0-305">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-305">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-306">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-306">-or-</span></span>

<span data-ttu-id="129e0-307">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-307">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-308">执行命令文本时出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-308">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="129e0-309">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-309">-or-</span></span>

<span data-ttu-id="129e0-310">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-310">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-311">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-311">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-312">名称/值对“Asynchronous Processing=true”未包含在为此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 定义连接的连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="129e0-312">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="129e0-313">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-313">-or-</span></span>

<span data-ttu-id="129e0-314">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-314">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-315">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-315">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-316">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-316">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-317">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-317">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-318">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-318">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-319">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-319">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-320">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-320">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-321">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-321">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-322">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-322">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="129e0-323"><see cref="T:System.Data.CommandBehavior" /> 值之一，指示用于语句执行和数据检索的选项。</span><span class="sxs-lookup"><span data-stu-id="129e0-323">One of the <see cref="T:System.Data.CommandBehavior" /> values, indicating options for statement execution and data retrieval.</span></span></param>
        <summary><span data-ttu-id="129e0-324">通过使用 <see cref="T:System.Data.CommandBehavior" /> 值之一，启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-324">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="129e0-325">可用于轮询和/或等待结果的 <see cref="T:System.IAsyncResult" />；当调用会返回一个可用于检索返回行的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 实例的 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> 时，也需要该值。</span><span class="sxs-lookup"><span data-stu-id="129e0-325">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance that can be used to retrieve the returned rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-326"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法启动异步执行 Transact-sql 语句或返回行的存储过程的过程，以便在执行语句时可以同时运行其他任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-326">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="129e0-327">完成语句后，开发人员必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法才能完成操作并检索命令返回的 <xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="129e0-327">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="129e0-328"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法会立即返回，但在代码执行相应的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法调用之前，不能执行任何其他调用来对同一 <xref:System.Data.SqlClient.SqlCommand> 对象启动同步或异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-328">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-329">在命令的执行完成之前调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 会导致 <xref:System.Data.SqlClient.SqlCommand> 对象被阻止，直到执行完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-329">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="129e0-330">`behavior` 参数可指定控制命令的行为及其连接的选项。</span><span class="sxs-lookup"><span data-stu-id="129e0-330">The `behavior` parameter lets you specify options that control the behavior of the command and its connection.</span></span> <span data-ttu-id="129e0-331">这些值可以组合在一起（使用编程语言的 `OR` 运算符）;通常情况下，开发人员使用 `CommandBehavior.CloseConnection` 值来确保在 <xref:System.Data.SqlClient.SqlDataReader> 关闭时，运行时关闭连接。</span><span class="sxs-lookup"><span data-stu-id="129e0-331">These values can be combined together (using the programming language's `OR` operator); generally, developers use the `CommandBehavior.CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 <span data-ttu-id="129e0-332">请注意，命令文本和参数同步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="129e0-332">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="129e0-333">如果发送了大命令或多个参数，则此方法可能会在写入过程中被阻止。</span><span class="sxs-lookup"><span data-stu-id="129e0-333">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="129e0-334">发送命令后，该方法立即返回，而不会等待来自服务器的应答，也就是说，读取是异步的。</span><span class="sxs-lookup"><span data-stu-id="129e0-334">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="129e0-335">尽管命令执行是异步的，但值提取仍同步。</span><span class="sxs-lookup"><span data-stu-id="129e0-335">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="129e0-336">这意味着，如果需要更多的数据和基础网络的读取操作，则调用 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 可能会阻塞。</span><span class="sxs-lookup"><span data-stu-id="129e0-336">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="129e0-337">由于此重载不支持回调过程，因此开发人员必须轮询以确定命令是否已完成，使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 方法返回的 <xref:System.IAsyncResult> 的 <xref:System.IAsyncResult.IsCompleted%2A> 属性;或者使用返回的 <xref:System.IAsyncResult>的 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 属性等待一个或多个命令的完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-337">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="129e0-338">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-338">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-339">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-339">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="129e0-340">此方法将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-340">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
   
  
## Examples  
 <span data-ttu-id="129e0-341">下面的控制台应用程序启动以异步方式检索数据读取器的进程。</span><span class="sxs-lookup"><span data-stu-id="129e0-341">The following console application starts the process of retrieving a data reader asynchronously.</span></span> <span data-ttu-id="129e0-342">等待结果时，这个简单的应用程序处于循环中，调查 <xref:System.IAsyncResult.IsCompleted%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="129e0-342">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="129e0-343">完成此过程后，代码会检索 <xref:System.Data.SqlClient.SqlDataReader> 并显示其内容。</span><span class="sxs-lookup"><span data-stu-id="129e0-343">Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.</span></span>  
  
 <span data-ttu-id="129e0-344">此示例还在行为参数中传递 `CommandBehavior.CloseConnection` 和 `CommandBehavior.SingleRow` 值，导致在关闭返回的 <xref:System.Data.SqlClient.SqlDataReader> 时关闭连接，并针对单个行结果进行优化。</span><span class="sxs-lookup"><span data-stu-id="129e0-344">This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-345">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-345">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-346">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-346">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-347">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-347">-or-</span></span>

<span data-ttu-id="129e0-348">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-348">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-349">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-349">-or-</span></span>

<span data-ttu-id="129e0-350">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-350">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-351">执行命令文本时出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-351">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="129e0-352">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-352">-or-</span></span>

<span data-ttu-id="129e0-353">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-353">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-354">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-354">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-355">名称/值对“Asynchronous Processing=true”未包含在为此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 定义连接的连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="129e0-355">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="129e0-356">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-356">-or-</span></span>

<span data-ttu-id="129e0-357">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-357">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-358">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-358">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-359">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-359">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-360">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-360">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-361">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-361">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-362">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-362">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-363">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-363">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-364">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-364">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-365">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-365">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="129e0-366">命令执行完成时调用的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="129e0-366">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span></span> <span data-ttu-id="129e0-367">传递 <see langword="null" />（在 Microsoft Visual Basic 中为 <see langword="Nothing" />）以指示不需要回调。</span><span class="sxs-lookup"><span data-stu-id="129e0-367">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span></span></param>
        <param name="stateObject"><span data-ttu-id="129e0-368">传递到回调过程的用户定义的状态对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-368">A user-defined state object that is passed to the callback procedure.</span></span> <span data-ttu-id="129e0-369">使用 <see cref="P:System.IAsyncResult.AsyncState" /> 属性从回调过程内检索此对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-369">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span></span></param>
        <summary><span data-ttu-id="129e0-370">在给定回调过程和状态信息的情况下，启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行，并从服务器中检索一个或多个结果集。</span><span class="sxs-lookup"><span data-stu-id="129e0-370">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and retrieves one or more result sets from the server, given a callback procedure and state information.</span></span></summary>
        <returns><span data-ttu-id="129e0-371">可用于轮询和/或等待结果的 <see cref="T:System.IAsyncResult" />；当调用会返回可用于检索返回行的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 实例的 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> 时，也需要该值。</span><span class="sxs-lookup"><span data-stu-id="129e0-371">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance which can be used to retrieve the returned rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-372"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法启动异步执行 Transact-sql 语句或返回行的存储过程的过程，以便在执行语句时可以同时运行其他任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-372">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="129e0-373">完成语句后，开发人员必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法才能完成操作并检索命令返回的 <xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="129e0-373">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="129e0-374"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法会立即返回，但在代码执行相应的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法调用之前，不能执行任何其他调用来对同一 <xref:System.Data.SqlClient.SqlCommand> 对象启动同步或异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-374">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-375">在命令的执行完成之前调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 会导致 <xref:System.Data.SqlClient.SqlCommand> 对象在执行完成前一直处于阻止状态。</span><span class="sxs-lookup"><span data-stu-id="129e0-375">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="129e0-376">`callback` 参数使你可以指定在完成语句时调用的 <xref:System.AsyncCallback> 委托。</span><span class="sxs-lookup"><span data-stu-id="129e0-376">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="129e0-377">你可以从该委托过程中或应用程序中的任何其他位置调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-377">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="129e0-378">此外，可以在 `stateObject` 参数中传递任何对象，而回调过程可以使用 <xref:System.IAsyncResult.AsyncState%2A> 属性检索此信息。</span><span class="sxs-lookup"><span data-stu-id="129e0-378">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="129e0-379">请注意，命令文本和参数同步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="129e0-379">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="129e0-380">如果发送了大命令或多个参数，则此方法可能会在写入过程中被阻止。</span><span class="sxs-lookup"><span data-stu-id="129e0-380">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="129e0-381">发送命令后，该方法立即返回，而不会等待来自服务器的应答，也就是说，读取是异步的。</span><span class="sxs-lookup"><span data-stu-id="129e0-381">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="129e0-382">尽管命令执行是异步的，但值提取仍同步。</span><span class="sxs-lookup"><span data-stu-id="129e0-382">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="129e0-383">这意味着，如果需要更多的数据和基础网络的读取操作，则调用 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 可能会阻塞。</span><span class="sxs-lookup"><span data-stu-id="129e0-383">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="129e0-384">由于回调过程是从 Microsoft .NET 运行时提供的后台线程中执行的，因此，必须采用一种严格的方法来处理应用程序内的跨线程交互。</span><span class="sxs-lookup"><span data-stu-id="129e0-384">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="129e0-385">例如，您不能在回调过程中与窗体内容交互;如果必须更新窗体，必须切换回窗体的线程才能完成工作。</span><span class="sxs-lookup"><span data-stu-id="129e0-385">For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="129e0-386">本主题中的示例演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="129e0-386">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="129e0-387">在执行操作过程中发生的所有错误都作为回调过程中的异常引发。</span><span class="sxs-lookup"><span data-stu-id="129e0-387">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="129e0-388">必须在回调过程中处理异常，而不是在主应用程序中处理。</span><span class="sxs-lookup"><span data-stu-id="129e0-388">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="129e0-389">请参阅本主题中的示例，了解有关在回调过程中处理异常的其他信息。</span><span class="sxs-lookup"><span data-stu-id="129e0-389">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="129e0-390">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-390">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-391">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-391">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="129e0-392">此方法将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-392">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-393">以下 Windows 应用程序演示如何使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法，以执行包含几秒钟延迟（模拟长时间运行的命令）的 Transact-SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-393">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="129e0-394">由于示例异步执行命令，因此窗体在等待结果时保持响应。</span><span class="sxs-lookup"><span data-stu-id="129e0-394">Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</span></span> <span data-ttu-id="129e0-395">此示例将执行 <xref:System.Data.SqlClient.SqlCommand> 对象作为 `stateObject` 参数传递;这样做可以简化从回调过程内检索 <xref:System.Data.SqlClient.SqlCommand> 对象的过程，从而使代码可以调用对应于对 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>的初始调用的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-395">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="129e0-396">此示例演示了许多重要的方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-396">This example demonstrates many important techniques.</span></span> <span data-ttu-id="129e0-397">这包括调用从单独的线程与窗体进行交互的方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-397">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="129e0-398">此外，此示例还演示了如何阻止用户同时执行命令，以及如何确保在调用回调过程之前窗体不会关闭。</span><span class="sxs-lookup"><span data-stu-id="129e0-398">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="129e0-399">若要设置此示例，请创建新的 Windows 应用程序。</span><span class="sxs-lookup"><span data-stu-id="129e0-399">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="129e0-400">将 <xref:System.Windows.Forms.Button> 控件、<xref:System.Windows.Forms.DataGridView> 控件和 <xref:System.Windows.Forms.Label> 控件置于窗体上（接受每个控件的默认名称）。</span><span class="sxs-lookup"><span data-stu-id="129e0-400">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="129e0-401">将以下代码添加到窗体的类中，根据环境的需要修改连接字符串。</span><span class="sxs-lookup"><span data-stu-id="129e0-401">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-402">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-402">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-403">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-403">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-404">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-404">-or-</span></span>

<span data-ttu-id="129e0-405">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-405">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-406">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-406">-or-</span></span>

<span data-ttu-id="129e0-407">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-407">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-408">执行命令文本时出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-408">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="129e0-409">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-409">-or-</span></span>

<span data-ttu-id="129e0-410">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-410">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-411">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-411">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-412">名称/值对“Asynchronous Processing=true”未包含在为此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 定义连接的连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="129e0-412">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="129e0-413">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-413">-or-</span></span>

<span data-ttu-id="129e0-414">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-414">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-415">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-415">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-416">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-416">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-417">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-417">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-418">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-418">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-419">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-419">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-420">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-420">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-421">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-421">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-422">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-422">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object, behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj * System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="129e0-423">命令执行完成时调用的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="129e0-423">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span></span> <span data-ttu-id="129e0-424">传递 <see langword="null" />（在 Microsoft Visual Basic 中为 <see langword="Nothing" />）以指示不需要回调。</span><span class="sxs-lookup"><span data-stu-id="129e0-424">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span></span></param>
        <param name="stateObject"><span data-ttu-id="129e0-425">传递到回调过程的用户定义的状态对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-425">A user-defined state object that is passed to the callback procedure.</span></span> <span data-ttu-id="129e0-426">使用 <see cref="P:System.IAsyncResult.AsyncState" /> 属性从回调过程内检索此对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-426">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span></span></param>
        <param name="behavior"><span data-ttu-id="129e0-427"><see cref="T:System.Data.CommandBehavior" /> 值之一，指示用于语句执行和数据检索的选项。</span><span class="sxs-lookup"><span data-stu-id="129e0-427">One of the <see cref="T:System.Data.CommandBehavior" /> values, indicating options for statement execution and data retrieval.</span></span></param>
        <summary><span data-ttu-id="129e0-428">在给定回调过程和状态信息的情况下，通过使用 <see langword="CommandBehavior" /> 值之一并从服务器中检索一个或多个结果集，启动由此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-428">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, using one of the <see langword="CommandBehavior" /> values, and retrieving one or more result sets from the server, given a callback procedure and state information.</span></span></summary>
        <returns><span data-ttu-id="129e0-429">可用于轮询和/或等待结果的 <see cref="T:System.IAsyncResult" />；在调用 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> 时，也需要该值。该调用会返回一个可用于检索返回行的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-429">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance which can be used to retrieve the returned rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-430"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法启动异步执行 Transact-sql 语句或返回行的存储过程的过程，以便在执行语句时可以同时运行其他任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-430">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="129e0-431">完成语句后，开发人员必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法才能完成操作并检索命令返回的 <xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="129e0-431">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="129e0-432"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法会立即返回，但在代码执行相应的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法调用之前，不能执行任何其他调用来对同一 <xref:System.Data.SqlClient.SqlCommand> 对象启动同步或异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-432">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-433">在命令的执行完成之前调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 会导致 <xref:System.Data.SqlClient.SqlCommand> 对象被阻止，直到执行完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-433">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="129e0-434">`callback` 参数使你可以指定在完成语句时调用的 <xref:System.AsyncCallback> 委托。</span><span class="sxs-lookup"><span data-stu-id="129e0-434">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="129e0-435">你可以从该委托过程中或应用程序中的任何其他位置调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-435">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="129e0-436">此外，可以在 `stateObject` 参数中传递任何对象，而回调过程可以使用 <xref:System.IAsyncResult.AsyncState%2A> 属性检索此信息。</span><span class="sxs-lookup"><span data-stu-id="129e0-436">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="129e0-437">`behavior` 参数可指定控制命令的行为及其连接的选项。</span><span class="sxs-lookup"><span data-stu-id="129e0-437">The `behavior` parameter lets you specify options that control the behavior of the command and its connection.</span></span> <span data-ttu-id="129e0-438">这些值可以组合在一起（使用编程语言的 `Or` 运算符）;通常情况下，开发人员使用 `CloseConnection` 值来确保在 <xref:System.Data.SqlClient.SqlDataReader> 关闭时，运行时关闭连接。</span><span class="sxs-lookup"><span data-stu-id="129e0-438">These values can be combined together (using the programming language's `Or` operator); generally, developers use the `CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span> <span data-ttu-id="129e0-439">开发人员还可以通过在事先知道 Transact-sql 语句或存储过程只返回单个行时指定 `SingleRow` 值来优化 <xref:System.Data.SqlClient.SqlDataReader> 的行为。</span><span class="sxs-lookup"><span data-stu-id="129e0-439">Developers can also optimize the behavior of the <xref:System.Data.SqlClient.SqlDataReader> by specifying the `SingleRow` value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.</span></span>  
  
 <span data-ttu-id="129e0-440">请注意，命令文本和参数同步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="129e0-440">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="129e0-441">如果发送了大命令或多个参数，则此方法可能会在写入过程中被阻止。</span><span class="sxs-lookup"><span data-stu-id="129e0-441">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="129e0-442">发送命令后，该方法立即返回，而不会等待来自服务器的应答，也就是说，读取是异步的。</span><span class="sxs-lookup"><span data-stu-id="129e0-442">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="129e0-443">尽管命令执行是异步的，但值提取仍同步。</span><span class="sxs-lookup"><span data-stu-id="129e0-443">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="129e0-444">这意味着，如果需要更多的数据和基础网络的读取操作，则调用 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 可能会阻塞。</span><span class="sxs-lookup"><span data-stu-id="129e0-444">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="129e0-445">由于回调过程是从 Microsoft .NET 公共语言运行时提供的后台线程中执行的，因此，必须采用一种严格的方法来处理应用程序内的跨线程交互。</span><span class="sxs-lookup"><span data-stu-id="129e0-445">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="129e0-446">例如，你不能在回调过程中与窗体内容交互，如果必须更新窗体，则必须切换回窗体的线程才能执行你的工作。</span><span class="sxs-lookup"><span data-stu-id="129e0-446">For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="129e0-447">本主题中的示例演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="129e0-447">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="129e0-448">在执行操作过程中发生的所有错误都作为回调过程中的异常引发。</span><span class="sxs-lookup"><span data-stu-id="129e0-448">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="129e0-449">必须在回调过程中处理异常，而不是在主应用程序中处理。</span><span class="sxs-lookup"><span data-stu-id="129e0-449">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="129e0-450">请参阅本主题中的示例，了解有关在回调过程中处理异常的其他信息。</span><span class="sxs-lookup"><span data-stu-id="129e0-450">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="129e0-451">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-451">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-452">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-452">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="129e0-453">此方法将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-453">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-454">以下 Windows 应用程序演示如何使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法，以执行包含几秒钟延迟（模拟长时间运行的命令）的 Transact-SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-454">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="129e0-455">由于示例异步执行命令，因此窗体在等待结果时保持响应。</span><span class="sxs-lookup"><span data-stu-id="129e0-455">Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</span></span> <span data-ttu-id="129e0-456">此示例将执行 <xref:System.Data.SqlClient.SqlCommand> 对象作为 `stateObject` 参数传递;这样做可以简化从回调过程内检索 <xref:System.Data.SqlClient.SqlCommand> 对象的过程，从而使代码可以调用对应于对 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>的初始调用的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-456">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="129e0-457">此示例演示了许多重要的方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-457">This example demonstrates many important techniques.</span></span> <span data-ttu-id="129e0-458">这包括调用从单独的线程与窗体进行交互的方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-458">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="129e0-459">此外，此示例还演示了如何阻止用户同时执行命令，以及如何确保在调用回调过程之前窗体不会关闭。</span><span class="sxs-lookup"><span data-stu-id="129e0-459">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="129e0-460">若要设置此示例，请创建新的 Windows 应用程序。</span><span class="sxs-lookup"><span data-stu-id="129e0-460">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="129e0-461">将 <xref:System.Windows.Forms.Button> 控件、<xref:System.Windows.Forms.DataGridView> 控件和 <xref:System.Windows.Forms.Label> 控件置于窗体上（接受每个控件的默认名称）。</span><span class="sxs-lookup"><span data-stu-id="129e0-461">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="129e0-462">将以下代码添加到窗体的类中，根据环境的需要修改连接字符串。</span><span class="sxs-lookup"><span data-stu-id="129e0-462">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 <span data-ttu-id="129e0-463">此示例在 `behavior` 参数中传递 `CommandBehavior.CloseConnection` 值，导致返回的 <xref:System.Data.SqlClient.SqlDataReader> 在其关闭时自动关闭其连接。</span><span class="sxs-lookup"><span data-stu-id="129e0-463">This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-464">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-464">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-465">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-465">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-466">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-466">-or-</span></span>

<span data-ttu-id="129e0-467">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-467">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-468">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-468">-or-</span></span>

<span data-ttu-id="129e0-469">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-469">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-470">执行命令文本时出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-470">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="129e0-471">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-471">-or-</span></span>

<span data-ttu-id="129e0-472">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-472">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-473">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-473">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-474">名称/值对“Asynchronous Processing=true”未包含在为此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 定义连接的连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="129e0-474">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="129e0-475">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-475">-or-</span></span>

<span data-ttu-id="129e0-476">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-476">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-477">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-477">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-478">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-478">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-479">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-479">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-480">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-480">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-481">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-481">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-482">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-482">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-483">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-483">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-484">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-484">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteXmlReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="129e0-485">启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行，并将结果作为 <see cref="T:System.Xml.XmlReader" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="129e0-485">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-486">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-486">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-487">启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行，并将结果作为 <see cref="T:System.Xml.XmlReader" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="129e0-487">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="129e0-488">可用于轮询和/或等待结果的 <see cref="T:System.IAsyncResult" />；当调用会返回单个 XML 值的 <see langword="EndExecuteXmlReader" /> 时，也需要该值。</span><span class="sxs-lookup"><span data-stu-id="129e0-488">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see langword="EndExecuteXmlReader" />, which returns a single XML value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-489"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 方法开始以异步方式执行将行作为 XML 返回的 Transact-sql 语句的过程，以便在执行语句时，其他任务可以并发运行。</span><span class="sxs-lookup"><span data-stu-id="129e0-489">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="129e0-490">完成语句后，开发人员必须调用 `EndExecuteXmlReader` 方法才能完成操作并检索命令返回的 XML。</span><span class="sxs-lookup"><span data-stu-id="129e0-490">When the statement has completed, developers must call the `EndExecuteXmlReader` method to finish the operation and retrieve the XML returned by the command.</span></span> <span data-ttu-id="129e0-491"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 方法会立即返回，但在代码执行相应的 `EndExecuteXmlReader` 方法调用之前，不能执行任何其他调用来对同一 <xref:System.Data.SqlClient.SqlCommand> 对象启动同步或异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-491">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding `EndExecuteXmlReader` method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-492">在命令的执行完成之前调用 `EndExecuteXmlReader` 会导致 <xref:System.Data.SqlClient.SqlCommand> 对象被阻止，直到执行完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-492">Calling the `EndExecuteXmlReader` before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="129e0-493"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 属性通常使用有效的 FOR XML 子句指定 Transact-sql 语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-493">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</span></span> <span data-ttu-id="129e0-494">不过，`CommandText` 还可以指定返回包含有效 XML `ntext` 数据的语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-494">However, `CommandText` can also specify a statement that returns `ntext` data that contains valid XML.</span></span>  
  
 <span data-ttu-id="129e0-495">典型 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 查询的格式如下所C#示：</span><span class="sxs-lookup"><span data-stu-id="129e0-495">A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:</span></span>  
  
```csharp
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="129e0-496">此方法还可用于检索单行的单列结果集。</span><span class="sxs-lookup"><span data-stu-id="129e0-496">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="129e0-497">在这种情况下，如果返回了多行，则 `EndExecuteXmlReader` 方法会将 <xref:System.Xml.XmlReader> 附加到第一行的值，并放弃结果集的其余部分。</span><span class="sxs-lookup"><span data-stu-id="129e0-497">In this case, if more than one row is returned, the `EndExecuteXmlReader` method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="129e0-498">多个活动的结果集（MARS）功能允许多个操作使用相同的连接。</span><span class="sxs-lookup"><span data-stu-id="129e0-498">The multiple active result set (MARS) feature lets multiple actions use the same connection.</span></span>  
  
 <span data-ttu-id="129e0-499">请注意，命令文本和参数同步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="129e0-499">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="129e0-500">如果发送了大命令或多个参数，则此方法可能会在写入过程中被阻止。</span><span class="sxs-lookup"><span data-stu-id="129e0-500">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="129e0-501">发送命令后，该方法立即返回，而不会等待来自服务器的应答，也就是说，读取是异步的。</span><span class="sxs-lookup"><span data-stu-id="129e0-501">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="129e0-502">尽管命令执行是异步的，但值提取仍同步。</span><span class="sxs-lookup"><span data-stu-id="129e0-502">Although command execution is asynchronous, value fetching is still synchronous.</span></span>  
  
 <span data-ttu-id="129e0-503">由于此重载不支持回调过程，因此开发人员需要轮询以确定命令是否已完成，使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 方法返回的 <xref:System.IAsyncResult> 的 <xref:System.IAsyncResult.IsCompleted%2A> 属性;或者使用返回的 <xref:System.IAsyncResult>的 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 属性等待一个或多个命令的完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-503">Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="129e0-504">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-504">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-505">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-505">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="129e0-506">此方法将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-506">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-507">下面的控制台应用程序启动异步检索 XML 数据的过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-507">The following console application starts the process of retrieving XML data asynchronously.</span></span> <span data-ttu-id="129e0-508">等待结果时，这个简单的应用程序处于循环中，调查 <xref:System.IAsyncResult.IsCompleted%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="129e0-508">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="129e0-509">完成此过程后，代码会检索 XML 并显示其内容。</span><span class="sxs-lookup"><span data-stu-id="129e0-509">Once the process has completed, the code retrieves the XML and displays its contents.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-510">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-510">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-511">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-511">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-512">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-512">-or-</span></span>

<span data-ttu-id="129e0-513">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-513">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-514">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-514">-or-</span></span>

<span data-ttu-id="129e0-515">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-515">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-516">执行命令文本时出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-516">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="129e0-517">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-517">-or-</span></span>

<span data-ttu-id="129e0-518">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-518">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-519">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-519">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-520">名称/值对“Asynchronous Processing=true”未包含在为此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 定义连接的连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="129e0-520">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="129e0-521">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-521">-or-</span></span>

<span data-ttu-id="129e0-522">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-522">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-523">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-523">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-524">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-524">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-525">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-525">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-526">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-526">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-527">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-527">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-528">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-528">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-529">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-529">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-530">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-530">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="129e0-531">命令执行完成时调用的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="129e0-531">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span></span> <span data-ttu-id="129e0-532">传递 <see langword="null" />（在 Microsoft Visual Basic 中为 <see langword="Nothing" />）以指示不需要回调。</span><span class="sxs-lookup"><span data-stu-id="129e0-532">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span></span></param>
        <param name="stateObject"><span data-ttu-id="129e0-533">传递到回调过程的用户定义的状态对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-533">A user-defined state object that is passed to the callback procedure.</span></span> <span data-ttu-id="129e0-534">使用 <see cref="P:System.IAsyncResult.AsyncState" /> 属性从回调过程内检索此对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-534">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span></span></param>
        <summary><span data-ttu-id="129e0-535">通过使用回调过程，启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行，并将结果作为 <see cref="T:System.Xml.XmlReader" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="129e0-535">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object, using a callback procedure.</span></span></summary>
        <returns><span data-ttu-id="129e0-536">可用于轮询和/或等待结果的 <see cref="T:System.IAsyncResult" />；当调用 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> 时，也需要该值，用于将命令的结果作为 XML 返回。</span><span class="sxs-lookup"><span data-stu-id="129e0-536">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when the <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> is called, which returns the results of the command as XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-537"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 方法将启动以 XML 形式返回行的 Transact-sql 语句或存储过程的异步执行过程，以便在执行语句时可以同时运行其他任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-537">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="129e0-538">完成语句后，开发人员必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 方法才能完成操作并检索请求的 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="129e0-538">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data.</span></span> <span data-ttu-id="129e0-539"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 方法会立即返回，但在代码执行相应的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 方法调用之前，不能执行任何其他调用来对同一 <xref:System.Data.SqlClient.SqlCommand> 对象启动同步或异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-539">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="129e0-540">在命令的执行完成之前调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 会导致 <xref:System.Data.SqlClient.SqlCommand> 对象被阻止，直到执行完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-540">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="129e0-541"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 属性通常使用有效的 FOR XML 子句指定 Transact-sql 语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-541">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</span></span> <span data-ttu-id="129e0-542">不过，`CommandText` 还可以指定返回包含有效 XML 的数据的语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-542">However, `CommandText` can also specify a statement that returns data that contains valid XML.</span></span> <span data-ttu-id="129e0-543">此方法还可用于检索单行的单列结果集。</span><span class="sxs-lookup"><span data-stu-id="129e0-543">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="129e0-544">在这种情况下，如果返回了多行，则 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 方法会将 <xref:System.Xml.XmlReader> 附加到第一行的值，并放弃结果集的其余部分。</span><span class="sxs-lookup"><span data-stu-id="129e0-544">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="129e0-545">典型 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 查询的格式如下所C#示：</span><span class="sxs-lookup"><span data-stu-id="129e0-545">A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:</span></span>  
  
```csharp
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="129e0-546">此方法还可用于检索单行的单列结果集。</span><span class="sxs-lookup"><span data-stu-id="129e0-546">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="129e0-547">在这种情况下，如果返回了多行，则 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 方法会将 <xref:System.Xml.XmlReader> 附加到第一行的值，并放弃结果集的其余部分。</span><span class="sxs-lookup"><span data-stu-id="129e0-547">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="129e0-548">多个活动的结果集（MARS）功能允许多个操作使用相同的连接。</span><span class="sxs-lookup"><span data-stu-id="129e0-548">The multiple active result set (MARS) feature lets multiple actions use the same connection.</span></span>  
  
 <span data-ttu-id="129e0-549">`callback` 参数使你可以指定在完成语句时调用的 <xref:System.AsyncCallback> 委托。</span><span class="sxs-lookup"><span data-stu-id="129e0-549">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="129e0-550">你可以从该委托过程中或应用程序中的任何其他位置调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-550">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="129e0-551">此外，可以在 `stateObject` 参数中传递任何对象，而回调过程可以使用 <xref:System.IAsyncResult.AsyncState%2A> 属性检索此信息。</span><span class="sxs-lookup"><span data-stu-id="129e0-551">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="129e0-552">请注意，命令文本和参数同步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="129e0-552">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="129e0-553">如果发送了大命令或多个参数，则此方法可能会在写入过程中被阻止。</span><span class="sxs-lookup"><span data-stu-id="129e0-553">If a large command or many parameters is sent, this method may block during writes.</span></span> <span data-ttu-id="129e0-554">发送命令后，该方法立即返回，而不会等待来自服务器的应答，也就是说，读取是异步的。</span><span class="sxs-lookup"><span data-stu-id="129e0-554">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="129e0-555">在执行操作过程中发生的所有错误都作为回调过程中的异常引发。</span><span class="sxs-lookup"><span data-stu-id="129e0-555">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="129e0-556">必须在回调过程中处理异常，而不是在主应用程序中处理。</span><span class="sxs-lookup"><span data-stu-id="129e0-556">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="129e0-557">请参阅本主题中的示例，了解有关在回调过程中处理异常的其他信息。</span><span class="sxs-lookup"><span data-stu-id="129e0-557">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="129e0-558">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-558">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-559">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-559">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>

 <span data-ttu-id="129e0-560">此方法将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-560">This method ignores the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-561">以下 Windows 应用程序演示如何使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 方法，以执行包含几秒钟延迟（模拟长时间运行的命令）的 Transact-SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-561">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="129e0-562">此示例将执行 <xref:System.Data.SqlClient.SqlCommand> 对象作为 `stateObject` 参数传递--执行此操作使得从回调过程内检索 <xref:System.Data.SqlClient.SqlCommand> 对象变得简单，使代码可以调用对应于 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>的初始调用的 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-562">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.</span></span>  
  
 <span data-ttu-id="129e0-563">此示例演示了许多重要的方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-563">This example demonstrates many important techniques.</span></span> <span data-ttu-id="129e0-564">这包括调用从单独的线程与窗体进行交互的方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-564">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="129e0-565">此外，此示例还演示了如何阻止用户同时执行命令，以及如何确保在调用回调过程之前窗体不会关闭。</span><span class="sxs-lookup"><span data-stu-id="129e0-565">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="129e0-566">若要设置此示例，请创建新的 Windows 应用程序。</span><span class="sxs-lookup"><span data-stu-id="129e0-566">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="129e0-567">将 <xref:System.Windows.Forms.Button> 控件、<xref:System.Windows.Forms.ListBox> 控件和 <xref:System.Windows.Forms.Label> 控件置于窗体上（接受每个控件的默认名称）。</span><span class="sxs-lookup"><span data-stu-id="129e0-567">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="129e0-568">将以下代码添加到窗体的类中，根据环境的需要修改连接字符串。</span><span class="sxs-lookup"><span data-stu-id="129e0-568">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-569">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-569">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-570">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-570">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-571">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-571">-or-</span></span>

<span data-ttu-id="129e0-572">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-572">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-573">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-573">-or-</span></span>

<span data-ttu-id="129e0-574">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-574">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-575">执行命令文本时出现的任何错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-575">Any error that occurred while executing the command text.</span></span>  

<span data-ttu-id="129e0-576">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-576">-or-</span></span>

<span data-ttu-id="129e0-577">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-577">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-578">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-578">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-579">名称/值对“Asynchronous Processing=true”未包含在为此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 定义连接的连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="129e0-579">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span>  

<span data-ttu-id="129e0-580">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-580">-or-</span></span>

<span data-ttu-id="129e0-581">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-581">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-582">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-582">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-583">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-583">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-584">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-584">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-585">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-585">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-586">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-586">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <altmember cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
        <altmember cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-587">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-587">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void Cancel ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit&#xA;override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-588">尝试取消 <see cref="T:System.Data.SqlClient.SqlCommand" /> 的执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-588">Tries to cancel the execution of a <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-589">如果没有要取消的命令，则不会有任何反应。</span><span class="sxs-lookup"><span data-stu-id="129e0-589">If there is nothing to cancel, nothing occurs.</span></span> <span data-ttu-id="129e0-590">但是，如果有正在执行的命令，则即使取消尝试失败，也不会生成异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-590">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 <span data-ttu-id="129e0-591">在某些极少数情况下，如果调用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>，然后在调用 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>之前 <xref:System.Data.SqlClient.SqlDataReader.Close%2A> （隐式或显式）调用，然后调用 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>，则取消命令将不会发送到 SQL Server，因此，在调用 <xref:System.Data.SqlClient.SqlConnection.Close%2A>后，结果集可以继续流式传输。</span><span class="sxs-lookup"><span data-stu-id="129e0-591">In some rare cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>, then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitly or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</span></span> <span data-ttu-id="129e0-592">若要避免此情况，请确保在关闭读取器或连接之前调用 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="129e0-592">To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-593">下面的示例演示 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="129e0-593">The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-594">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-594">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-595">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-595">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-596">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-596">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommand.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-597">创建是当前实例的副本的新 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-597">Creates a new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="129e0-598">作为此实例的副本的新 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-598">A new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-599">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-599">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-600">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-600">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-601">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-601">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionSetting">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnEncryptionSetting As SqlCommandColumnEncryptionSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { System::Data::SqlClient::SqlCommandColumnEncryptionSetting get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionSetting : System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Usage="System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommandColumnEncryptionSetting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-602">获取或设置此命令的列加密设置。</span><span class="sxs-lookup"><span data-stu-id="129e0-602">Gets or sets the column encryption setting for this command.</span></span></summary>
        <value><span data-ttu-id="129e0-603">此命令的列加密设置。</span><span class="sxs-lookup"><span data-stu-id="129e0-603">The column encryption setting for this command.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandText")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-604">获取或设置要在数据源中执行的 Transact-SQL 语句、表名或存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-604">Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.</span></span></summary>
        <value><span data-ttu-id="129e0-605">要执行的 Transact-SQL 语句或存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-605">The Transact-SQL statement or stored procedure to execute.</span></span> <span data-ttu-id="129e0-606">默认值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="129e0-606">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-607"><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 属性设置为 `StoredProcedure`时，<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 属性应设置为存储过程的名称。</span><span class="sxs-lookup"><span data-stu-id="129e0-607">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="129e0-608">如果存储过程名称包含任何特殊字符，则可能需要用户使用转义符语法。</span><span class="sxs-lookup"><span data-stu-id="129e0-608">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="129e0-609">调用 `Execute` 方法之一时，该命令将执行此存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-609">The command executes this stored procedure when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="129e0-610">用于 SQL Server 的 Microsoft .NET Framework 数据提供程序不支持用问号（？）占位符将参数传递给 Transact-sql 语句或由 `CommandType.Text`的命令调用的存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-610">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of `CommandType.Text`.</span></span> <span data-ttu-id="129e0-611">在这种情况下，必须使用命名参数。</span><span class="sxs-lookup"><span data-stu-id="129e0-611">In this case, named parameters must be used.</span></span> <span data-ttu-id="129e0-612">例如：</span><span class="sxs-lookup"><span data-stu-id="129e0-612">For example:</span></span>  
  
```sql
SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  
```  
  
 <span data-ttu-id="129e0-613">有关详细信息，请参阅[配置参数和参数数据类型](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types)。</span><span class="sxs-lookup"><span data-stu-id="129e0-613">For more information, see [Configuring Parameters and Parameter Data Types](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-614">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand> 并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-614">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-615">在 ADO.NET 中检索和修改数据</span><span class="sxs-lookup"><span data-stu-id="129e0-615">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-616">SQL Server 和 ADO.NET</span><span class="sxs-lookup"><span data-stu-id="129e0-616">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-617">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-617">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-618">获取或设置在终止尝试执行命令并生成错误之前的等待时间（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="129e0-618">Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="129e0-619">等待命令执行所需的时间（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="129e0-619">The time in seconds to wait for the command to execute.</span></span> <span data-ttu-id="129e0-620">默认为 30 秒。</span><span class="sxs-lookup"><span data-stu-id="129e0-620">The default is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-621">值0表示无限制（执行命令的尝试将无限期等待）。</span><span class="sxs-lookup"><span data-stu-id="129e0-621">A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129e0-622">旧的 APM （异步编程模型）异步方法调用（如 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>）将忽略 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-622">The <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property will be ignored by older APM (Asynchronous Programming Model) asynchronous method calls such as <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span> <span data-ttu-id="129e0-623">它将被新的点击（任务异步编程）方法（如 <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>）接受。</span><span class="sxs-lookup"><span data-stu-id="129e0-623">It will be honored by newer TAP (Task Asynchronous Programming) methods such as <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>.</span></span>
  
 <span data-ttu-id="129e0-624">对上下文连接执行命令时，<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 无效（在连接字符串中使用 "context connection = true" 打开的 <xref:System.Data.SqlClient.SqlConnection>）。</span><span class="sxs-lookup"><span data-stu-id="129e0-624"><xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect when the command is executed against a context connection (a <xref:System.Data.SqlClient.SqlConnection> opened with "context connection=true" in the connection string).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129e0-625">此属性是在执行命令或处理结果过程中所有网络读取操作时，针对所有网络读取在调用方法期间读取的所有网络包的累计超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-625">This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results.</span></span> <span data-ttu-id="129e0-626">在返回第一行后仍可能会发生超时，并且不包括用户处理时间、仅网络读取时间。</span><span class="sxs-lookup"><span data-stu-id="129e0-626">A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.</span></span>  
>   
>  <span data-ttu-id="129e0-627">例如，在30秒超时的情况下，如果 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 需要两个网络数据包，则它有30秒的时间来读取网络数据包。</span><span class="sxs-lookup"><span data-stu-id="129e0-627">For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets.</span></span> <span data-ttu-id="129e0-628">如果再次调用 <xref:System.Data.SqlClient.SqlDataReader.Read%2A>，它将有30秒的时间读取所需的任何数据。</span><span class="sxs-lookup"><span data-stu-id="129e0-628">If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires.</span></span>  
  
```csharp
using System;  
using System.Data.SqlClient;  
///   
public class A {  
   ///   
   public static void Main() {  
      string connectionString = "";  
      // Wait for 5 second delay in the command  
      string queryString = "waitfor delay '00:00:05'";  
      using (SqlConnection connection = new SqlConnection(connectionString)) {  
         connection.Open();  
         SqlCommand command = new SqlCommand(queryString, connection);  
         // Setting command timeout to 1 second  
         command.CommandTimeout = 1;  
         try {  
            command.ExecuteNonQuery();  
         }  
         catch (SqlException e) {  
            Console.WriteLine("Got expected SqlException due to command timeout ");  
            Console.WriteLine(e);  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-629">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-629">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-630">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-630">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-631">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-631">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-632">获取或设置一个值，该值指示解释 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 属性的方式。</span><span class="sxs-lookup"><span data-stu-id="129e0-632">Gets or sets a value indicating how the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> property is to be interpreted.</span></span></summary>
        <value><span data-ttu-id="129e0-633"><see cref="T:System.Data.CommandType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="129e0-633">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="129e0-634">默认为 <see langword="Text" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-634">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-635">将 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 属性设置为 `StoredProcedure`时，应将 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 属性设置为存储过程的名称。</span><span class="sxs-lookup"><span data-stu-id="129e0-635">When you set the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="129e0-636">当您调用 Execute 方法之一时，该命令将执行此存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-636">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="129e0-637">用于 SQL Server 的 Microsoft .NET Framework 数据提供程序不支持使用问号（？）占位符将参数传递给 SQL 语句或使用 <xref:System.Data.CommandType.Text><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 调用的存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-637">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>.</span></span> <span data-ttu-id="129e0-638">在这种情况下，必须使用命名参数。</span><span class="sxs-lookup"><span data-stu-id="129e0-638">In this case, named parameters must be used.</span></span> <span data-ttu-id="129e0-639">例如：</span><span class="sxs-lookup"><span data-stu-id="129e0-639">For example:</span></span>  
  
 <span data-ttu-id="129e0-640">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span><span class="sxs-lookup"><span data-stu-id="129e0-640">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span></span>  
  
 <span data-ttu-id="129e0-641">有关详细信息，请参阅[配置参数和参数数据类型](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types)。</span><span class="sxs-lookup"><span data-stu-id="129e0-641">For more information, see [Configuring Parameters and Parameter Data Types](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-642">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand> 并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-642">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="129e0-643">该值不是有效的 <see cref="T:System.Data.CommandType" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-643">The value was not a valid <see cref="T:System.Data.CommandType" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-644">在 ADO.NET 中检索和修改数据</span><span class="sxs-lookup"><span data-stu-id="129e0-644">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-645">SQL Server 和 ADO.NET</span><span class="sxs-lookup"><span data-stu-id="129e0-645">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-646">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-646">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); void set(System::Data::SqlClient::SqlConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Connection")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-647">获取或设置 <see cref="T:System.Data.SqlClient.SqlCommand" /> 的此实例使用的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-647">Gets or sets the <see cref="T:System.Data.SqlClient.SqlConnection" /> used by this instance of the <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <value><span data-ttu-id="129e0-648">到数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="129e0-648">The connection to a data source.</span></span> <span data-ttu-id="129e0-649">默认值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-649">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-650">如果命令在现有事务中登记并且连接已更改，则尝试执行命令会引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="129e0-650">If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="129e0-651">如果 <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> 属性不为 null，而事务已提交或回滚，则会将 <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> 设置为 null。</span><span class="sxs-lookup"><span data-stu-id="129e0-651">If the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> is set to null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-652">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand> 并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-652">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-653">命令在事务中登记时 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> 属性被更改。</span><span class="sxs-lookup"><span data-stu-id="129e0-653">The <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> property was changed while the command was enlisted in a transaction.</span></span></exception>
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandText" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandType" />
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-654">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-654">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="sqlCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As SqlParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-655">创建 <see cref="T:System.Data.SqlClient.SqlParameter" /> 对象的新实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-655">Creates a new instance of a <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="129e0-656">一个 <see cref="T:System.Data.SqlClient.SqlParameter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-656">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-657"><xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> 方法是 <xref:System.Data.IDbCommand.CreateParameter%2A>的强类型版本。</span><span class="sxs-lookup"><span data-stu-id="129e0-657">The <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-658">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-658">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-659">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-659">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-660">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-660">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="C#" Value="public bool DesignTimeVisible { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignTimeVisible As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DesignTimeVisible { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-661">获取或设置一个值，该值指示命令对象是否应在 Windows 窗体设计器控件中可见。</span><span class="sxs-lookup"><span data-stu-id="129e0-661">Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.</span></span></summary>
        <value><span data-ttu-id="129e0-662">一个指示命令对象是否应在控件中可见的值。</span><span class="sxs-lookup"><span data-stu-id="129e0-662">A value indicating whether the command object should be visible in a control.</span></span> <span data-ttu-id="129e0-663">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-663">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-664">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-664">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int EndExecuteNonQuery (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndExecuteNonQuery(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteNonQuery (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndExecuteNonQuery(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteNonQuery : IAsyncResult -&gt; int" Usage="sqlCommand.EndExecuteNonQuery asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="129e0-665">通过调用 <see cref="T:System.IAsyncResult" /> 返回的 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-665">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</span></span></param>
        <summary><span data-ttu-id="129e0-666">完成 Transact-SQL 语句的异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-666">Finishes asynchronous execution of a Transact-SQL statement.</span></span></summary>
        <returns><span data-ttu-id="129e0-667">受影响的行数（与 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /> 相同的行为）。</span><span class="sxs-lookup"><span data-stu-id="129e0-667">The number of rows affected (the same behavior as <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-668">调用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 执行 [!INCLUDE[tsql](~/includes/tsql-md.md)] 语句时，必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 才能完成该操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-668">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> to execute a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> in order to complete the operation.</span></span> <span data-ttu-id="129e0-669">如果执行命令的过程尚未完成，则此方法将会阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-669">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="129e0-670">用户可以通过使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 方法返回的 <xref:System.IAsyncResult> 实例来验证该命令是否已完成其操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-670">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="129e0-671">如果调用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>中指定了回调过程，则必须调用此方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-671">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-672">有关演示如何使用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 方法的示例，请参阅 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>。</span><span class="sxs-lookup"><span data-stu-id="129e0-672">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="129e0-673"><paramref name="asyncResult" /> 参数为 null（在 Microsoft Visual Basic 中为 <see langword="Nothing" />）</span><span class="sxs-lookup"><span data-stu-id="129e0-673"><paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-674">不止一次为单个命令执行调用了 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />，或该方法不匹配其执行方法（例如，代码调用了 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> 以完成对 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /> 调用的执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-674"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-675"><see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> 中指定的时间已过，并且使用 <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> 指定的异步操作不完整。</span><span class="sxs-lookup"><span data-stu-id="129e0-675">The amount of time specified in <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> elapsed and the asynchronous operation specified with <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> is not complete.</span></span>  
 
<span data-ttu-id="129e0-676">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-676">-or-</span></span>

<span data-ttu-id="129e0-677">在某些情况下，<see cref="T:System.IAsyncResult" /> 可能不正确地设置为 <see langword="IsCompleted" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-677">In some situations, <see cref="T:System.IAsyncResult" /> can be set to <see langword="IsCompleted" /> incorrectly.</span></span> <span data-ttu-id="129e0-678">如果发生这种情况并且调用 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />，则 EndExecuteNonQuery 可能引发 SqlException 错误（如果 <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> 中指定的时间已过，并且使用 <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> 指定的异步操作不完整）。</span><span class="sxs-lookup"><span data-stu-id="129e0-678">If this occurs and <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> elapsed and the asynchronous operation specified with <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> is not complete.</span></span> <span data-ttu-id="129e0-679">若要更正这种情况，应增加 CommandTimeout 的值或减少正由异步操作完成的工作。</span><span class="sxs-lookup"><span data-stu-id="129e0-679">To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-680">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-680">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-681">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-681">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-682">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-682">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader EndExecuteReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteReader (asyncResult As IAsyncResult) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ EndExecuteReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteReader : IAsyncResult -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.EndExecuteReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="129e0-683">通过调用 <see cref="T:System.IAsyncResult" /> 返回的 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-683">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />.</span></span></param>
        <summary><span data-ttu-id="129e0-684">完成 Transact-SQL 语句的异步执行，从而返回请求的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-684">Finishes asynchronous execution of a Transact-SQL statement, returning the requested <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="129e0-685">可用于检索请求行的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-685">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object that can be used to retrieve the requested rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-686">调用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 执行 Transact-sql 语句时，必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 才能完成该操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-686">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation.</span></span> <span data-ttu-id="129e0-687">如果执行命令的过程尚未完成，则此方法将会阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-687">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="129e0-688">用户可以通过使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 方法返回的 <xref:System.IAsyncResult> 实例来验证该命令是否已完成其操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-688">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method.</span></span> <span data-ttu-id="129e0-689">如果调用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>中指定了回调过程，则必须调用此方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-689">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-690">有关演示如何使用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 方法的示例，请参阅 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="129e0-690">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="129e0-691"><paramref name="asyncResult" /> 参数为 null（在 Microsoft Visual Basic 中为 <see langword="Nothing" />）</span><span class="sxs-lookup"><span data-stu-id="129e0-691"><paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-692">不止一次为单个命令执行调用了 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />，或该方法不匹配其执行方法（例如，代码调用了 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> 以完成对 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /> 调用的执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-692"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-693">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-693">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-694">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-694">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-695">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-695">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader EndExecuteXmlReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteXmlReader (asyncResult As IAsyncResult) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ EndExecuteXmlReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteXmlReader : IAsyncResult -&gt; System.Xml.XmlReader" Usage="sqlCommand.EndExecuteXmlReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="129e0-696">通过调用 <see cref="T:System.IAsyncResult" /> 返回的 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-696">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span></span></param>
        <summary><span data-ttu-id="129e0-697">完成 Transact-SQL 语句的异步执行，从而将请求的数据以 XML 形式返回。</span><span class="sxs-lookup"><span data-stu-id="129e0-697">Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.</span></span></summary>
        <returns><span data-ttu-id="129e0-698">可用于提取生成的 XML 数据的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-698">An <see cref="T:System.Xml.XmlReader" /> object that can be used to fetch the resulting XML data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-699">调用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 执行 Transact-sql 语句时，必须调用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 才能完成该操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-699">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation.</span></span> <span data-ttu-id="129e0-700">如果执行命令的过程尚未完成，则此方法将会阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="129e0-700">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="129e0-701">用户可以通过使用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 方法返回的 <xref:System.IAsyncResult> 实例来验证该命令是否已完成其操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-701">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method.</span></span> <span data-ttu-id="129e0-702">如果调用 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>中指定了回调过程，则必须调用此方法。</span><span class="sxs-lookup"><span data-stu-id="129e0-702">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="129e0-703">有关演示如何使用 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 方法的示例，请参阅 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="129e0-703">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="129e0-704"><paramref name="asyncResult" /> 参数为 null（在 Microsoft Visual Basic 中为 <see langword="Nothing" />）</span><span class="sxs-lookup"><span data-stu-id="129e0-704"><paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-705">不止一次为单个命令执行调用了 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />，或该方法不匹配其执行方法（例如，代码调用了 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> 以完成对 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> 调用的执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-705"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-706">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-706">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-707">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-707">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-708">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-708">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="sqlCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReaderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReaderAsync (behavior As CommandBehavior, cancellationToken As CancellationToken) As Task(Of DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Data::Common::DbDataReader ^&gt; ^ ExecuteDbDataReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="sqlCommand.ExecuteDbDataReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ExecuteNonQuery();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQuery : unit -&gt; int&#xA;override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-709">对连接执行 Transact-SQL 语句并返回受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="129e0-709">Executes a Transact-SQL statement against the connection and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="129e0-710">受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="129e0-710">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-711">您可以使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> 来执行目录操作（例如，查询数据库的结构或创建数据库对象（如表）），或通过执行 UPDATE、INSERT 或 DELETE 语句来更改数据库中的数据而无需使用 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="129e0-711">You can use the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="129e0-712">尽管 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> 未返回任何行，但映射到参数的任何输出参数或返回值都将用数据填充。</span><span class="sxs-lookup"><span data-stu-id="129e0-712">Although the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="129e0-713">对于 UPDATE、INSERT 和 DELETE 语句，返回值为该命令所影响的行数。</span><span class="sxs-lookup"><span data-stu-id="129e0-713">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="129e0-714">对于所有其他类型的语句，返回值是 -1。</span><span class="sxs-lookup"><span data-stu-id="129e0-714">For all other types of statements, the return value is -1.</span></span>

<span data-ttu-id="129e0-715">如果在要插入或更新的表中存在触发器，则返回值将包含受 insert 或 update 操作影响的行数以及触发器或触发器所影响的行数。</span><span class="sxs-lookup"><span data-stu-id="129e0-715">When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</span></span>

<span data-ttu-id="129e0-716">如果在连接上设置了 SET NOCOUNT ON （在执行命令之前或作为执行命令的一部分，或作为执行命令时触发的触发器的一部分），则各个语句影响的行将停止对此方法返回的受影响行数的影响。</span><span class="sxs-lookup"><span data-stu-id="129e0-716">When SET NOCOUNT ON is set on the connection (before or as part of executing the command, or as part of a trigger initiated by the execution of the command) the rows affected by individual statements stop contributing to the count of rows affected that is returned by this method.</span></span>

<span data-ttu-id="129e0-717">如果未检测到涉及计数的语句，则返回值为-1。</span><span class="sxs-lookup"><span data-stu-id="129e0-717">If no statements are detected that contribute to the count, the return value is -1.</span></span> <span data-ttu-id="129e0-718">如果发生回滚，则返回值也为-1。</span><span class="sxs-lookup"><span data-stu-id="129e0-718">If a rollback occurs, the return value is also -1.</span></span>



## Examples  
 <span data-ttu-id="129e0-719">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand>，然后使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>执行它。</span><span class="sxs-lookup"><span data-stu-id="129e0-719">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="129e0-720">该示例向传递了一个字符串，该字符串是 Transact-sql 语句（如 UPDATE、INSERT 或 DELETE）以及用来连接到数据源的字符串。</span><span class="sxs-lookup"><span data-stu-id="129e0-720">The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-721">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-721">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-722">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-722">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-723">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-723">-or-</span></span>

<span data-ttu-id="129e0-724">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-724">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-725">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-725">-or-</span></span>

<span data-ttu-id="129e0-726">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-726">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-727">对锁定的行执行命令时出现异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-727">An exception occurred while executing the command against a locked row.</span></span> <span data-ttu-id="129e0-728">当使用 Microsoft .NET Framework 1.0 版时不生成此异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-728">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span></span>  

<span data-ttu-id="129e0-729">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-729">-or-</span></span>

<span data-ttu-id="129e0-730">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-730">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-731">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-731">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-732">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-732">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-733">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-733">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-734">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-734">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-735">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-735">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-736">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-736">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-737">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-737">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-738">在 ADO.NET 中检索和修改数据</span><span class="sxs-lookup"><span data-stu-id="129e0-738">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-739">SQL Server 和 ADO.NET</span><span class="sxs-lookup"><span data-stu-id="129e0-739">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-740">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-740">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQueryAsync (cancellationToken As CancellationToken) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ExecuteNonQueryAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQueryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sqlCommand.ExecuteNonQueryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="129e0-741">取消指令。</span><span class="sxs-lookup"><span data-stu-id="129e0-741">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="129e0-742"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /> 的异步版本，它对连接执行 [!INCLUDE[tsql](~/includes/tsql-md.md)] 语句并返回受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="129e0-742">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />, which executes a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement against the connection and returns the number of rows affected.</span></span> <span data-ttu-id="129e0-743">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-743">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="129e0-744">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-744">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="129e0-745">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-745">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-746">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-746">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-747">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-747">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-748">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-748">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-749">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-749">-or-</span></span>

<span data-ttu-id="129e0-750">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-750">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-751">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-751">-or-</span></span>

<span data-ttu-id="129e0-752">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-752">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-753">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-753">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="129e0-754">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-754">-or-</span></span>

<span data-ttu-id="129e0-755">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-755">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-756">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-756">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-757">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-757">-or-</span></span> 
 <span data-ttu-id="129e0-758">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-758"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-759">执行命令文本时，SQL Server 返回了一个错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-759">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="129e0-760">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-760">-or-</span></span> 
<span data-ttu-id="129e0-761">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-761">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-762">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-762">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-763">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-763">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-764">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-764">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-765">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-765">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-766">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-766">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-767">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-767">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="129e0-768">将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-768">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-769">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-769">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-770">将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-770">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="129e0-771">一个 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-771">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-772"><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 属性设置为 `StoredProcedure`时，<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 属性应设置为存储过程的名称。</span><span class="sxs-lookup"><span data-stu-id="129e0-772">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="129e0-773">调用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>时，该命令将执行此存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-773">The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129e0-774">如果事务发生死锁，则在调用 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-774">If a transaction is deadlocked, an exception may not be thrown until <xref:System.Data.SqlClient.SqlDataReader.Read%2A> is called.</span></span>  
  
 <span data-ttu-id="129e0-775">多个活动的结果集（MARS）功能允许使用同一连接执行多个操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-775">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="129e0-776">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-776">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-777">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-777">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-778">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand>，然后通过传递一个字符串（一个 Transact-sql SELECT 语句）和一个用于连接到数据源的字符串来执行它。</span><span class="sxs-lookup"><span data-stu-id="129e0-778">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-779">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-779">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-780">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-780">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-781">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-781">-or-</span></span>

<span data-ttu-id="129e0-782">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-782">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-783">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-783">-or-</span></span>

<span data-ttu-id="129e0-784">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-784">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-785">对锁定的行执行命令时出现异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-785">An exception occurred while executing the command against a locked row.</span></span> <span data-ttu-id="129e0-786">当使用 Microsoft .NET Framework 1.0 版时不生成此异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-786">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span></span>  

<span data-ttu-id="129e0-787">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-787">-or-</span></span>

<span data-ttu-id="129e0-788">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-788">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-789">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-789">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-790">连接的当前状态已关闭。</span><span class="sxs-lookup"><span data-stu-id="129e0-790">The current state of the connection is closed.</span></span> <span data-ttu-id="129e0-791"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> 需要打开 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-791"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> requires an open <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span>  

<span data-ttu-id="129e0-792">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-792">-or-</span></span>

<span data-ttu-id="129e0-793">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-793">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-794">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-794">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-795">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-795">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-796">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-796">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-797">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-797">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-798">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-798">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-799">在 ADO.NET 中检索和修改数据</span><span class="sxs-lookup"><span data-stu-id="129e0-799">Retrieving and Modifying Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-800">SQL Server 和 ADO.NET</span><span class="sxs-lookup"><span data-stu-id="129e0-800">SQL Server and ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-801">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-801">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="129e0-802"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="129e0-802">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="129e0-803">将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并使用 <see cref="T:System.Data.CommandBehavior" /> 值之一生成 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-803">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="129e0-804">一个 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-804">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-805"><xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 属性设置为 `StoredProcedure`时，<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 属性应设置为存储过程的名称。</span><span class="sxs-lookup"><span data-stu-id="129e0-805">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="129e0-806">调用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>时，该命令将执行此存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-806">The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129e0-807">使用 <xref:System.Data.CommandBehavior.SequentialAccess> 检索大值和二进制数据。</span><span class="sxs-lookup"><span data-stu-id="129e0-807">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="129e0-808">否则，可能会发生 <xref:System.OutOfMemoryException> 并且连接将关闭。</span><span class="sxs-lookup"><span data-stu-id="129e0-808">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="129e0-809">多个活动的结果集（MARS）功能允许使用同一连接执行多个操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-809">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="129e0-810">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-810">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-811">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-811">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="129e0-812">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand>，然后通过传递一个字符串（一个 Transact-sql SELECT 语句）和一个用于连接到数据源的字符串来执行它。</span><span class="sxs-lookup"><span data-stu-id="129e0-812">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span> <span data-ttu-id="129e0-813"><xref:System.Data.CommandBehavior> 设置为 <xref:System.Data.CommandBehavior.CloseConnection>。</span><span class="sxs-lookup"><span data-stu-id="129e0-813"><xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-814">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-814">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-815">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-815">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-816">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-816">-or-</span></span>

<span data-ttu-id="129e0-817">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-817">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-818">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-818">-or-</span></span>

<span data-ttu-id="129e0-819">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-819">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-820">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-820">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-821">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-821">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-822">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-822">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-823">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-823">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-824">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-824">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-825">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-825">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-826">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-826">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-827">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-827">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-828">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-828">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-829">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-829">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-830">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-830">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="129e0-831">启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 [!INCLUDE[tsql](~/includes/tsql-md.md)] 语句或存储过程的异步执行。</span><span class="sxs-lookup"><span data-stu-id="129e0-831">Initiates the asynchronous execution of the [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-832">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-832">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-833">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-833">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync () As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-834"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> 的异步版本，它可以将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-834">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span> <span data-ttu-id="129e0-835">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-835">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="129e0-836">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-836">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-837">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-837">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-838">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-838">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-839">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-839">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-840">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-840">-or-</span></span>

<span data-ttu-id="129e0-841">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-841">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-842">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-842">-or-</span></span>

<span data-ttu-id="129e0-843">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-843">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="129e0-844">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="129e0-844">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-845">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-845">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="129e0-846">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-846">-or-</span></span>

<span data-ttu-id="129e0-847">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-847">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-848">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-848">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-849">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-849">-or-</span></span>

 <span data-ttu-id="129e0-850">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-850"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-851">执行命令文本时，SQL Server 返回了一个错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-851">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="129e0-852">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-852">-or-</span></span>

<span data-ttu-id="129e0-853">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-853">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-854">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-854">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-855">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-855">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-856">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-856">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-857">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-857">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-858">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-858">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-859">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-859">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="129e0-860">语句执行和数据检索的选项。</span><span class="sxs-lookup"><span data-stu-id="129e0-860">Options for statement execution and data retrieval.</span></span>  <span data-ttu-id="129e0-861">当设置为 <see langword="Default" /> 时，<see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> 将在返回完整任务前读取整行。</span><span class="sxs-lookup"><span data-stu-id="129e0-861">When is set to <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> reads the entire row before returning a complete Task.</span></span></param>
        <summary><span data-ttu-id="129e0-862"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /> 的异步版本，用于将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成一个 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-862">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span> <span data-ttu-id="129e0-863">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-863">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="129e0-864">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-864">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-865">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-865">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-866">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-866">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-867">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-867">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-868">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-868">-or-</span></span>

<span data-ttu-id="129e0-869">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-869">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-870">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-870">-or-</span></span>

<span data-ttu-id="129e0-871">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-871">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="129e0-872">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="129e0-872">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-873">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-873">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="129e0-874">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-874">-or-</span></span>

<span data-ttu-id="129e0-875">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-875">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-876">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-876">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-877">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-877">-or-</span></span>

 <span data-ttu-id="129e0-878">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-878"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-879">执行命令文本时，SQL Server 返回了一个错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-879">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="129e0-880">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-880">-or-</span></span>

<span data-ttu-id="129e0-881">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-881">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-882">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-882">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-883">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-883">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-884">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-884">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-885">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-885">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-886">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-886">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-887">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-887">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (cancellationToken As CancellationToken) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="129e0-888">取消指令。</span><span class="sxs-lookup"><span data-stu-id="129e0-888">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="129e0-889"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> 的异步版本，它可以将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-889">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span>  
  
<span data-ttu-id="129e0-890">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-890">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="129e0-891">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-891">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="129e0-892">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-892">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-893">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-893">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-894">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-894">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-895">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-895">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-896">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-896">-or-</span></span>

<span data-ttu-id="129e0-897">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-897">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-898">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-898">-or-</span></span> 
<span data-ttu-id="129e0-899">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-899">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="129e0-900">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="129e0-900">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-901">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-901">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="129e0-902">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-902">-or-</span></span>

<span data-ttu-id="129e0-903">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-903">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-904">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-904">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-905">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-905">-or-</span></span>

 <span data-ttu-id="129e0-906">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-906"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-907">执行命令文本时，SQL Server 返回了一个错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-907">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="129e0-908">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-908">-or-</span></span>

<span data-ttu-id="129e0-909">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-909">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-910">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-910">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-911">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-911">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-912">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-912">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-913">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-913">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-914">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-914">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-915">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-915">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior, cancellationToken As CancellationToken) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="129e0-916">语句执行和数据检索的选项。</span><span class="sxs-lookup"><span data-stu-id="129e0-916">Options for statement execution and data retrieval.</span></span>  <span data-ttu-id="129e0-917">当设置为 <see langword="Default" /> 时，<see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> 将在返回完整任务前读取整行。</span><span class="sxs-lookup"><span data-stu-id="129e0-917">When is set to <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> reads the entire row before returning a complete Task.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="129e0-918">取消指令。</span><span class="sxs-lookup"><span data-stu-id="129e0-918">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="129e0-919"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /> 的异步版本，它可以将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-919">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /></span></span>  
  
<span data-ttu-id="129e0-920">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-920">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="129e0-921">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-921">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="129e0-922">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-922">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-923">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-923">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-924">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-924">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-925">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-925">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-926">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-926">-or-</span></span>

<span data-ttu-id="129e0-927">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-927">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-928">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-928">-or-</span></span>

<span data-ttu-id="129e0-929">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-929">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="129e0-930">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="129e0-930">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-931">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-931">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="129e0-932">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-932">-or-</span></span>

<span data-ttu-id="129e0-933">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-933">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-934">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-934">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-935">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-935">-or-</span></span>

<span data-ttu-id="129e0-936">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-936"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-937">执行命令文本时，SQL Server 返回了一个错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-937">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="129e0-938">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-938">-or-</span></span>

<span data-ttu-id="129e0-939">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-939">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-940">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-940">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-941">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-941">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-942">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-942">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-943">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-943">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-944">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-944">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-945">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-945">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ExecuteScalar();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalar : unit -&gt; obj&#xA;override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-946">执行查询，并返回查询所返回的结果集中第一行的第一列。</span><span class="sxs-lookup"><span data-stu-id="129e0-946">Executes the query, and returns the first column of the first row in the result set returned by the query.</span></span> <span data-ttu-id="129e0-947">忽略其他列或行。</span><span class="sxs-lookup"><span data-stu-id="129e0-947">Additional columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="129e0-948">为结果集中的第一行的第一列，或者，如果结果集为空，则为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="129e0-948">The first column of the first row in the result set, or a null reference (<see langword="Nothing" /> in Visual Basic) if the result set is empty.</span></span> <span data-ttu-id="129e0-949">最多返回 2033 个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-949">Returns a maximum of 2033 characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-950">使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> 方法可以从数据库中检索单个值（例如聚合值）。</span><span class="sxs-lookup"><span data-stu-id="129e0-950">Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="129e0-951">这需要比使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 方法更少的代码，然后执行所需的操作，以使用 <xref:System.Data.SqlClient.SqlDataReader>返回的数据生成单个值。</span><span class="sxs-lookup"><span data-stu-id="129e0-951">This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>.</span></span>  
  
 <span data-ttu-id="129e0-952">典型 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> 查询的格式如下所C#示：</span><span class="sxs-lookup"><span data-stu-id="129e0-952">A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```csharp
cmd.CommandText = "SELECT COUNT(*) FROM dbo.region";  
Int32 count = (Int32) cmd.ExecuteScalar();  
```  
  
## Examples  
 <span data-ttu-id="129e0-953">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand>，然后使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>执行它。</span><span class="sxs-lookup"><span data-stu-id="129e0-953">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="129e0-954">该示例向传递了一个字符串，该字符串表示要插入到表中的新值，以及用于连接到数据源的字符串。</span><span class="sxs-lookup"><span data-stu-id="129e0-954">The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source.</span></span> <span data-ttu-id="129e0-955">如果插入新行，函数将返回新的**标识**列值，失败时返回0。</span><span class="sxs-lookup"><span data-stu-id="129e0-955">The function returns the new **Identity** column value if a new row was inserted, 0 on failure.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-956">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-956">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-957">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-957">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-958">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-958">-or-</span></span>

<span data-ttu-id="129e0-959">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-959">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-960">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-960">-or-</span></span>

<span data-ttu-id="129e0-961">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-961">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-962">对锁定的行执行命令时出现异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-962">An exception occurred while executing the command against a locked row.</span></span> <span data-ttu-id="129e0-963">当使用 Microsoft .NET Framework 1.0 版时不生成此异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-963">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span></span>  

<span data-ttu-id="129e0-964">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-964">-or-</span></span>

<span data-ttu-id="129e0-965">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-965">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-966">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-966">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-967">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-967">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-968">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-968">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-969">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-969">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-970">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-970">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-971">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-971">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-972">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-972">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-973">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-973">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-974">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-974">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-975">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-975">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalarAsync (cancellationToken As CancellationToken) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ExecuteScalarAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalarAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="sqlCommand.ExecuteScalarAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="129e0-976">取消指令。</span><span class="sxs-lookup"><span data-stu-id="129e0-976">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="129e0-977"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /> 的异步版本，该版本异步执行查询，并返回由查询返回的结果集中的第一行的第一列。</span><span class="sxs-lookup"><span data-stu-id="129e0-977">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query.</span></span> <span data-ttu-id="129e0-978">忽略其他列或行。</span><span class="sxs-lookup"><span data-stu-id="129e0-978">Additional columns or rows are ignored.</span></span>  
  
<span data-ttu-id="129e0-979">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-979">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span> <span data-ttu-id="129e0-980">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-980">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="129e0-981">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-981">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-982">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-982">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-983">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-983">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-984">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-984">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-985">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-985">-or-</span></span>

<span data-ttu-id="129e0-986">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-986">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-987">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-987">-or-</span></span>

<span data-ttu-id="129e0-988">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-988">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-989">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-989">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="129e0-990">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-990">-or-</span></span>

<span data-ttu-id="129e0-991">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-991">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-992">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-992">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-993">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-993">-or-</span></span>

<span data-ttu-id="129e0-994">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-994"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-995">执行命令文本时，SQL Server 返回了一个错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-995">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="129e0-996">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-996">-or-</span></span>

<span data-ttu-id="129e0-997">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-997">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-998">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-998">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-999">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-999">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-1000">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1000">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-1001">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1001">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-1002">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1002">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1003">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1003">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader ExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader ExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReader () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ ExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReader : unit -&gt; System.Xml.XmlReader" Usage="sqlCommand.ExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-1004">将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成一个 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1004">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="129e0-1005">一个 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1005">An <see cref="T:System.Xml.XmlReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-1006">此方法返回的**XmlReader**不支持异步操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-1006">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

 <span data-ttu-id="129e0-1007"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 属性通常指定带有有效 FOR XML 子句的 [!INCLUDE[tsql](~/includes/tsql-md.md)] 语句。</span><span class="sxs-lookup"><span data-stu-id="129e0-1007">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement with a valid FOR XML clause.</span></span> <span data-ttu-id="129e0-1008">不过，<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 还可以指定返回 `ntext` 或 `nvarchar` 数据的语句，该语句包含有效 XML 或使用 `xml` 数据类型定义的列的内容。</span><span class="sxs-lookup"><span data-stu-id="129e0-1008">However, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> can also specify a statement that returns `ntext` or `nvarchar` data that contains valid XML, or the contents of a column defined with the `xml` data type.</span></span>  
  
 <span data-ttu-id="129e0-1009">典型 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 查询的格式如下所C#示：</span><span class="sxs-lookup"><span data-stu-id="129e0-1009">A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> query can be formatted as in the following Microsoft Visual C# example:</span></span>  
  
```csharp
SqlCommand command = new SqlCommand("SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="129e0-1010">此方法还可用于检索包含 XML 数据的单行单列结果集。</span><span class="sxs-lookup"><span data-stu-id="129e0-1010">This method can also be used to retrieve a single-row, single-column result set that contains XML data.</span></span> <span data-ttu-id="129e0-1011">在这种情况下，如果返回了多行，则 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 方法会将 <xref:System.Xml.XmlReader> 附加到第一行的值，并放弃结果集的其余部分。</span><span class="sxs-lookup"><span data-stu-id="129e0-1011">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="129e0-1012">多个活动的结果集（MARS）功能允许使用同一连接执行多个操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-1012">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="129e0-1013">如果使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 来访问 XML 数据，SQL Server 将返回长度超过2033个字符的所有 XML 结果，每个行2033个字符。</span><span class="sxs-lookup"><span data-stu-id="129e0-1013">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="129e0-1014">若要避免此行为，请使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 或 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 来读取 FOR XML 查询。</span><span class="sxs-lookup"><span data-stu-id="129e0-1014">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span>


## Examples  
 <span data-ttu-id="129e0-1015">下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand>，然后使用 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>执行它。</span><span class="sxs-lookup"><span data-stu-id="129e0-1015">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>.</span></span> <span data-ttu-id="129e0-1016">该示例向传递了一个字符串，该字符串是一个 Transact-sql FOR XML SELECT 语句，后者是用于连接到数据源的字符串。</span><span class="sxs-lookup"><span data-stu-id="129e0-1016">The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-1017">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-1017">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-1018">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1018">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-1019">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1019">-or-</span></span>

<span data-ttu-id="129e0-1020">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-1020">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-1021">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1021">-or-</span></span>

<span data-ttu-id="129e0-1022">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-1022">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-1023">对锁定的行执行命令时出现异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-1023">An exception occurred while executing the command against a locked row.</span></span> <span data-ttu-id="129e0-1024">当使用 Microsoft .NET Framework 1.0 版时不生成此异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-1024">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span></span>  

<span data-ttu-id="129e0-1025">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1025">-or-</span></span>

<span data-ttu-id="129e0-1026">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-1026">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-1027">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1027">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-1028">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1028">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-1029">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1029">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-1030">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-1030">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-1031">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1031">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-1032">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1032">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-1033">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1033">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-1034">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-1034">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-1035">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-1035">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1036">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1036">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteXmlReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="129e0-1037">启动此 <see cref="T:System.Data.SqlClient.SqlCommand" /> 描述的 Transact-SQL 语句或存储过程的异步执行，并将结果作为 <see cref="T:System.Xml.XmlReader" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="129e0-1037">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1038">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1038">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync () As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-1039"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /> 的异步版本，可以将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1039">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span></span>  
  
<span data-ttu-id="129e0-1040">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-1040">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="129e0-1041">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-1041">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="129e0-1042">此方法返回的**XmlReader**不支持异步操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-1042">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

<span data-ttu-id="129e0-1043">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1043">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-1044">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-1044">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-1045">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1045">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-1046">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1046">-or-</span></span>

<span data-ttu-id="129e0-1047">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-1047">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-1048">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1048">-or-</span></span>

<span data-ttu-id="129e0-1049">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-1049">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-1050">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1050">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="129e0-1051">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1051">-or-</span></span>

<span data-ttu-id="129e0-1052">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1052">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-1053">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1053">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-1054">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1054">-or-</span></span>

<span data-ttu-id="129e0-1055">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1055"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-1056">执行命令文本时，SQL Server 返回了一个错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-1056">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="129e0-1057">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1057">-or-</span></span>

<span data-ttu-id="129e0-1058">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-1058">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-1059">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1059">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-1060">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-1060">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-1061">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1061">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-1062">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1062">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-1063">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1063">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1064">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1064">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync (cancellationToken As CancellationToken) As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="129e0-1065">取消指令。</span><span class="sxs-lookup"><span data-stu-id="129e0-1065">The cancellation instruction.</span></span></param>
        <summary><span data-ttu-id="129e0-1066"><see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /> 的异步版本，可以将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1066">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span></span>  
  
<span data-ttu-id="129e0-1067">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-1067">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="129e0-1068">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-1068">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="129e0-1069">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="129e0-1069">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="129e0-1070">此方法返回的**XmlReader**不支持异步操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-1070">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

<span data-ttu-id="129e0-1071">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1071">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](/dotnet/framework/data/adonet/asynchronous-programming).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="129e0-1072">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.Stream" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Binary 或 VarBinary。</span><span class="sxs-lookup"><span data-stu-id="129e0-1072">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="129e0-1073">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1073">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-1074">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1074">-or-</span></span>

<span data-ttu-id="129e0-1075">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.IO.TextReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-1075">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span></span>  

<span data-ttu-id="129e0-1076">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1076">-or-</span></span>

<span data-ttu-id="129e0-1077">将 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 设置为 <see cref="T:System.Xml.XmlReader" /> 时，使用的是 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> 而不是 Xml。</span><span class="sxs-lookup"><span data-stu-id="129e0-1077">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="129e0-1078">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1078">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span></span>  

<span data-ttu-id="129e0-1079">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1079">-or-</span></span>

<span data-ttu-id="129e0-1080">流式处理操作期间关闭或删除了 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1080">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span></span> <span data-ttu-id="129e0-1081">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1081">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span>  

<span data-ttu-id="129e0-1082">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1082">-or-</span></span>

<span data-ttu-id="129e0-1083">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1083"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="129e0-1084">执行命令文本时，SQL Server 返回了一个错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-1084">SQL Server returned an error while executing the command text.</span></span>  

<span data-ttu-id="129e0-1085">- 或 -</span><span class="sxs-lookup"><span data-stu-id="129e0-1085">-or-</span></span>

<span data-ttu-id="129e0-1086">流式处理操作期间发生了超时。</span><span class="sxs-lookup"><span data-stu-id="129e0-1086">A timeout occurred during a streaming operation.</span></span> <span data-ttu-id="129e0-1087">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1087">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="129e0-1088">流式处理操作期间在 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象中出现了错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-1088">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span></span>  <span data-ttu-id="129e0-1089">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1089">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="129e0-1090">流式处理操作期间关闭了 <see cref="T:System.IO.Stream" />、<see cref="T:System.Xml.XmlReader" /> 或 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1090">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span></span>  <span data-ttu-id="129e0-1091">有关流式处理的详细信息，请参阅 [SqlClient 流支持](/dotnet/framework/data/adonet/sqlclient-streaming-support)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1091">For more information about streaming, see [SqlClient Streaming Support](/dotnet/framework/data/adonet/sqlclient-streaming-support).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1092">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1092">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Notification">
      <MemberSignature Language="C#" Value="public System.Data.Sql.SqlNotificationRequest Notification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Sql.SqlNotificationRequest Notification" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Notification" />
      <MemberSignature Language="VB.NET" Value="Public Property Notification As SqlNotificationRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Sql::SqlNotificationRequest ^ Notification { System::Data::Sql::SqlNotificationRequest ^ get(); void set(System::Data::Sql::SqlNotificationRequest ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Notification : System.Data.Sql.SqlNotificationRequest with get, set" Usage="System.Data.SqlClient.SqlCommand.Notification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlNotificationRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-1093">获取或设置一个指定绑定到此命令的 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="129e0-1093">Gets or sets a value that specifies the <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object bound to this command.</span></span></summary>
        <value><span data-ttu-id="129e0-1094">如果设置为 null（默认值），则不应请求任何通知。</span><span class="sxs-lookup"><span data-stu-id="129e0-1094">When set to null (default), no notification should be requested.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-1095">必须先设置此属性的值才能使其生效。</span><span class="sxs-lookup"><span data-stu-id="129e0-1095">You must set the value for this property before the command is executed for it to take effect.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server"><span data-ttu-id="129e0-1096">使用查询通知</span><span class="sxs-lookup"><span data-stu-id="129e0-1096">Using Query Notifications</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-1097">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-1097">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-1098">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-1098">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1099">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1099">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotificationAutoEnlist">
      <MemberSignature Language="C#" Value="public bool NotificationAutoEnlist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotificationAutoEnlist" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberSignature Language="VB.NET" Value="Public Property NotificationAutoEnlist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotificationAutoEnlist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotificationAutoEnlist : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-1100">获取或设置一个值，该值指示应用程序是否应自动接收来自通用 <see cref="T:System.Data.SqlClient.SqlDependency" /> 对象的查询通知。</span><span class="sxs-lookup"><span data-stu-id="129e0-1100">Gets or sets a value indicating whether the application should automatically receive query notifications from a common <see cref="T:System.Data.SqlClient.SqlDependency" /> object.</span></span></summary>
        <value><span data-ttu-id="129e0-1101">如果应用程序应自动接收查询通知，则为 <see langword="true" />;否则 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1101"><see langword="true" /> if the application should automatically receive query notifications; otherwise <see langword="false" />.</span></span> <span data-ttu-id="129e0-1102">默认值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1102">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-1103">此功能在 ASP.NET 应用程序中用于接收在 ASP 页中针对 SQL Server 执行的所有命令的通知。</span><span class="sxs-lookup"><span data-stu-id="129e0-1103">This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server.</span></span> <span data-ttu-id="129e0-1104">这使 ASP.NET 可以缓存页面，直到用于呈现页面的查询产生不同的结果。</span><span class="sxs-lookup"><span data-stu-id="129e0-1104">This enables ASP.NET to cache the page until the queries used to render the page would produce a different result.</span></span> <span data-ttu-id="129e0-1105">自动登记。</span><span class="sxs-lookup"><span data-stu-id="129e0-1105">Automatic enlistment.</span></span>  
  
 <span data-ttu-id="129e0-1106">此属性仅适用于支持查询通知的 SQL Server 版本。</span><span class="sxs-lookup"><span data-stu-id="129e0-1106">This property applies only to versions of SQL Server that support query notifications.</span></span> <span data-ttu-id="129e0-1107">对于早期版本，将此属性设置为 `true` 对应用程序没有影响。</span><span class="sxs-lookup"><span data-stu-id="129e0-1107">For earlier versions, setting this property to `true` has no effect on the application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/query-notifications-in-sql-server"><span data-ttu-id="129e0-1108">使用查询通知</span><span class="sxs-lookup"><span data-stu-id="129e0-1108">Using Query Notifications</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-1109">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-1109">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-1110">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-1110">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1111">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1111">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As SqlParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlParameterCollection ^ Parameters { System::Data::SqlClient::SqlParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.SqlClient.SqlParameterCollection" Usage="System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-1112">获取 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1112">Gets the <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="129e0-1113">Transact-SQL 语句或存储过程的参数。</span><span class="sxs-lookup"><span data-stu-id="129e0-1113">The parameters of the Transact-SQL statement or stored procedure.</span></span> <span data-ttu-id="129e0-1114">默认值为空集合。</span><span class="sxs-lookup"><span data-stu-id="129e0-1114">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-1115">用于 SQL Server 的 Microsoft .NET Framework 数据提供程序不支持用于将参数传递给 SQL 语句的问号（？）占位符，或由 `CommandType.Text`的命令调用的存储过程。</span><span class="sxs-lookup"><span data-stu-id="129e0-1115">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of `CommandType.Text`.</span></span> <span data-ttu-id="129e0-1116">在这种情况下，必须使用命名参数。</span><span class="sxs-lookup"><span data-stu-id="129e0-1116">In this case, named parameters must be used.</span></span> <span data-ttu-id="129e0-1117">例如：</span><span class="sxs-lookup"><span data-stu-id="129e0-1117">For example:</span></span>  
  
 <span data-ttu-id="129e0-1118">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span><span class="sxs-lookup"><span data-stu-id="129e0-1118">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129e0-1119">如果集合中的参数与要执行的查询的要求不匹配，则可能会导致错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-1119">If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</span></span>  
  
 <span data-ttu-id="129e0-1120">有关详细信息，请参阅[配置参数和参数数据类型](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1120">For more information, see [Configuring Parameters and Parameter Data Types](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types).</span></span>  
  
## Examples  
 <span data-ttu-id="129e0-1121">下面的示例演示如何创建 <xref:System.Data.SqlClient.SqlCommand> 并将参数添加到 <xref:System.Data.SqlClient.SqlParameterCollection>。</span><span class="sxs-lookup"><span data-stu-id="129e0-1121">The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.</span></span>  
  
 [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]
 [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-1122">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-1122">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-1123">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-1123">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1124">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1124">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void Prepare ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Prepare();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit&#xA;override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-1125">在 SQL Server 的实例上创建命令的一个准备版本。</span><span class="sxs-lookup"><span data-stu-id="129e0-1125">Creates a prepared version of the command on an instance of SQL Server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-1126">如果 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 设置为 `StoredProcedure`，则对 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 的调用应会成功，但这可能会导致无操作。</span><span class="sxs-lookup"><span data-stu-id="129e0-1126">If <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> should succeed, although it may cause a no-op.</span></span>  
  
 <span data-ttu-id="129e0-1127">在调用 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>之前，请在要准备的语句中指定每个参数的数据类型。</span><span class="sxs-lookup"><span data-stu-id="129e0-1127">Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span> <span data-ttu-id="129e0-1128">对于具有可变长度数据类型的每个参数，必须将 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 属性设置为所需的最大大小。</span><span class="sxs-lookup"><span data-stu-id="129e0-1128">For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed.</span></span> <span data-ttu-id="129e0-1129">如果未满足这些条件，<xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 将返回错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-1129"><xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="129e0-1130">如果通过执行 Transact-sql `USE <database>` 语句或通过调用 <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> 方法更改了数据库上下文，则必须第二次调用 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>。</span><span class="sxs-lookup"><span data-stu-id="129e0-1130">If the database context is changed by executing the Transact-SQL `USE <database>` statement, or by calling the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, then <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> must be called a second time.</span></span>  
  
 <span data-ttu-id="129e0-1131">如果在调用 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>后调用 `Execute` 方法，则任何大于 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 属性指定的值的参数值都将自动截断为该参数的原始指定大小，并且不返回截断错误。</span><span class="sxs-lookup"><span data-stu-id="129e0-1131">If you call an `Execute` method after calling <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</span></span>  
  
 <span data-ttu-id="129e0-1132">输出参数（是否准备好）必须具有用户指定的数据类型。</span><span class="sxs-lookup"><span data-stu-id="129e0-1132">Output parameters (whether prepared or not) must have a user-specified data type.</span></span> <span data-ttu-id="129e0-1133">如果指定可变长度数据类型，则还必须指定最大 <xref:System.Data.SqlClient.SqlParameter.Size%2A>。</span><span class="sxs-lookup"><span data-stu-id="129e0-1133">If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</span></span>  
  
 <span data-ttu-id="129e0-1134">在 Visual Studio 2010 之前，<xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 引发了异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-1134">Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception.</span></span>  <span data-ttu-id="129e0-1135">从 Visual Studio 2010 开始，此方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-1135">Beginning in Visual Studio 2010, this method does not throw an exception.</span></span>  
  
## Examples  
 <span data-ttu-id="129e0-1136">下面的示例演示 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="129e0-1136">The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-1137">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-1137">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-1138">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-1138">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1139">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1139">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="sqlCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-1140">将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> 属性重置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="129e0-1140">Resets the <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-1141"><xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 的默认值为30秒。</span><span class="sxs-lookup"><span data-stu-id="129e0-1141">The default value of the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-1142">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-1142">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-1143">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-1143">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1144">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1144">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StatementCompleted">
      <MemberSignature Language="C#" Value="public event System.Data.StatementCompletedEventHandler StatementCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StatementCompletedEventHandler StatementCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatementCompleted As StatementCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StatementCompletedEventHandler ^ StatementCompleted;" />
      <MemberSignature Language="F#" Value="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " Usage="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StatementCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-1145">当 Transact-SQL 语句执行完成时发生。</span><span class="sxs-lookup"><span data-stu-id="129e0-1145">Occurs when the execution of a Transact-SQL statement completes.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1146">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1146">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbCommand.CreateParameter : unit -&gt; System.Data.IDbDataParameter&#xA;override this.System.Data.IDbCommand.CreateParameter : unit -&gt; System.Data.IDbDataParameter" Usage="sqlCommand.System.Data.IDbCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-1147">创建 <see cref="T:System.Data.SqlClient.SqlParameter" /> 对象的新实例。</span><span class="sxs-lookup"><span data-stu-id="129e0-1147">Creates a new instance of a <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="129e0-1148">一个 <see cref="T:System.Data.SqlClient.SqlParameter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1148">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbCommand.ExecuteReader : unit -&gt; System.Data.IDataReader&#xA;override this.System.Data.IDbCommand.ExecuteReader : unit -&gt; System.Data.IDataReader" Usage="sqlCommand.System.Data.IDbCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-1149">将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并生成一个 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1149">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="129e0-1150">一个 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1150">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbCommand.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.IDataReader&#xA;override this.System.Data.IDbCommand.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.IDataReader" Usage="sqlCommand.System.Data.IDbCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="129e0-1151"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="129e0-1151">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="129e0-1152">将 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 发送到 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，并使用 <see cref="T:System.Data.CommandBehavior" /> 值之一生成 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1152">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="129e0-1153">一个 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1153">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="sqlCommand.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="129e0-1154">创建是当前实例的副本的新 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1154">Creates a new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="129e0-1155">作为此实例的副本的新 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="129e0-1155">A new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1156">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1156">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlTransaction ^ Transaction { System::Data::SqlClient::SqlTransaction ^ get(); void set(System::Data::SqlClient::SqlTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.SqlClient.SqlTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Transaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-1157">获取或设置要在其中执行 <see cref="T:System.Data.SqlClient.SqlTransaction" /> 的 <see cref="T:System.Data.SqlClient.SqlCommand" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1157">Gets or sets the <see cref="T:System.Data.SqlClient.SqlTransaction" /> within which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span></span></summary>
        <value><span data-ttu-id="129e0-1158"><see cref="T:System.Data.SqlClient.SqlTransaction" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1158">The <see cref="T:System.Data.SqlClient.SqlTransaction" />.</span></span> <span data-ttu-id="129e0-1159">默认值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="129e0-1159">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-1160">如果 <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> 属性已设置为特定值，并且命令正在执行过程中，则不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="129e0-1160">You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="129e0-1161">如果将 transaction 属性设置为不与 <xref:System.Data.SqlClient.SqlCommand> 对象连接到相同 <xref:System.Data.SqlClient.SqlConnection> 的 <xref:System.Data.SqlClient.SqlTransaction> 对象，则在下一次尝试执行语句时，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="129e0-1161">If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/local-transactions"><span data-ttu-id="129e0-1162">执行事务</span><span class="sxs-lookup"><span data-stu-id="129e0-1162">Performing a Transaction</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-1163">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-1163">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-1164">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-1164">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1165">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1165">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_UpdatedRowSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="129e0-1166">获取或设置命令结果在由 <see cref="T:System.Data.Common.DbDataAdapter" /> 的 Update 方法使用时应用于 <see cref="T:System.Data.DataRow" /> 的方式。</span><span class="sxs-lookup"><span data-stu-id="129e0-1166">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the **Update** method of the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="129e0-1167"><see cref="T:System.Data.UpdateRowSource" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="129e0-1167">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="129e0-1168">除非自动生成命令（如 <xref:System.Data.SqlClient.SqlCommandBuilder>），否则默认 <xref:System.Data.UpdateRowSource> 值为 None，在这种情况下，默认**值为** **None**。</span><span class="sxs-lookup"><span data-stu-id="129e0-1168">The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated (as in the case of the <xref:System.Data.SqlClient.SqlCommandBuilder>), in which case the default is **None**.</span></span>  
  
 <span data-ttu-id="129e0-1169">有关使用**UpdatedRowSource**属性的详细信息，请参阅[DataAdapter Parameters](/dotnet/framework/data/adonet/dataadapter-parameters)。</span><span class="sxs-lookup"><span data-stu-id="129e0-1169">For more information about using the **UpdatedRowSource** property, see [DataAdapter Parameters](/dotnet/framework/data/adonet/dataadapter-parameters).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="129e0-1170">在 ADO.NET 中连接和检索数据</span><span class="sxs-lookup"><span data-stu-id="129e0-1170">Connecting and Retrieving Data in ADO.NET</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/"><span data-ttu-id="129e0-1171">使用 SQL Server 的 .NET Framework 数据提供程序</span><span class="sxs-lookup"><span data-stu-id="129e0-1171">Using the .NET Framework Data Provider for SQL Server</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="129e0-1172">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="129e0-1172">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
