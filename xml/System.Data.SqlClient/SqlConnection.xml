<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3498261904ff3ac231248579d648f6f9d575610" /><Meta Name="ms.sourcegitcommit" Value="80274aaa1f2e220209486886b5cd74a54203d795" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/03/2020" /><Meta Name="ms.locfileid" Value="89416705" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public sealed class SqlConnection : System.ComponentModel.Component, ICloneable, IDisposable, System.Data.IDbConnection" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.ComponentModel.Component implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits Component&#xA;Implements ICloneable, IDbConnection, IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::ComponentModel::Component, ICloneable, IDisposable, System::Data::IDbConnection" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit Component&#xA;    interface IDbConnection&#xA;    interface IDisposable&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlConnection extends System.Data.Common.DbConnection implements class System.ICloneable" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface IDbConnection&#xA;    interface ICloneable&#xA;    interface IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.1</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("InfoMessage")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("InfoMessage")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示到 SQL Server 数据库的连接。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 A <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object represents a unique session to a SQL Server data source. 对于客户端/服务器数据库系统，它等效于到服务器的网络连接。 <xref:System.Data.SqlClient.SqlConnection> 与和结合使用 <xref:System.Data.SqlClient.SqlDataAdapter> ， <xref:System.Data.SqlClient.SqlCommand> 以提高连接到 Microsoft SQL Server 数据库时的性能。 对于所有第三方 SQL Server 产品和其他 OLE DB 支持的数据源，请使用 <xref:System.Data.OleDb.OleDbConnection> 。

 创建的实例时 <xref:System.Data.SqlClient.SqlConnection> ，所有属性都将设置为其初始值。 有关这些值的列表，请参见 <xref:System.Data.SqlClient.SqlConnection> 构造函数。

 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>有关连接字符串中关键字的列表，请参阅。

 如果 <xref:System.Data.SqlClient.SqlConnection> 超出范围，则不会将其关闭。 因此，必须通过调用或显式关闭连接 `Close` `Dispose` 。 `Close` 和 `Dispose` 在功能上是等效的。 如果连接池值 `Pooling` 设置为 `true` 或 `yes` ，则基础连接将返回到连接池。 另一方面，如果将 `Pooling` 设置为 `false` 或 `no` ，则与服务器的基础连接实际上是关闭的。

> [!NOTE]
>  从连接池中提取连接或将连接返回到连接池时，服务器上不会引发登录和注销事件，这是因为在将连接返回到连接池时实际上并没有将其关闭。 有关详细信息，请参阅 [SQL Server 连接池 (ADO.NET)](/dotnet/framework/data/adonet/sql-server-connection-pooling)。

 若要确保始终关闭连接，请在块中打开连接 `using` ，如下面的代码段所示。 这样做可确保在代码退出块时自动关闭连接。

```vb
Using connection As New SqlConnection(connectionString)
    connection.Open()
    ' Do work here; connection closed on following line.
End Using

```

```csharp
using (SqlConnection connection = new SqlConnection(connectionString))
    {
        connection.Open();
        // Do work here; connection closed on following line.
    }
```

> [!NOTE]
>  若要部署高性能应用程序，必须使用连接池。 使用 SQL Server 的 .NET Framework 数据提供程序时，无需启用连接池，因为提供程序会自动管理此操作，但你可以修改某些设置。 有关详细信息，请参阅 [SQL Server 连接池 (ADO.NET)](/dotnet/framework/data/adonet/sql-server-connection-pooling)。

 如果 <xref:System.Data.SqlClient.SqlException> 由执行的方法生成 <xref:System.Data.SqlClient.SqlCommand> ，则 <xref:System.Data.SqlClient.SqlConnection> 当严重性级别为19或更低时，将保持打开状态。 当严重性级别为20或更大时，服务器通常会关闭 <xref:System.Data.SqlClient.SqlConnection> 。 但是，用户可以重新打开连接并继续操作。

 创建对象实例的应用程序 <xref:System.Data.SqlClient.SqlConnection> 可以通过设置声明性或命令性安全要求，要求所有直接和间接调用方具有对代码的足够权限。 <xref:System.Data.SqlClient.SqlConnection> 使用对象进行安全要求 <xref:System.Data.SqlClient.SqlClientPermission> 。 用户可以使用对象验证其代码是否具有足够的权限 <xref:System.Data.SqlClient.SqlClientPermissionAttribute> 。 用户和管理员还可以使用 [Caspol.exe (代码访问安全策略工具，) ](/dotnet/framework/tools/caspol-exe-code-access-security-policy-tool) 在计算机、用户和企业级别修改安全策略。 有关详细信息，请参阅 [ .NET 中的安全性](/dotnet/standard/security/)。 有关演示如何使用安全要求的示例，请参阅 [代码访问安全性和 ADO.NET](/dotnet/framework/data/adonet/code-access-security)。

 有关处理来自服务器的警告和信息性消息的详细信息，请参阅 [连接事件](/dotnet/framework/data/adonet/connection-events)。 有关 SQL Server 引擎错误和错误消息的详细信息，请参阅 [数据库引擎事件和错误](/sql/relational-databases/errors-events/database-engine-events-and-errors)。

> [!CAUTION]
>  可以强制 TCP 而不是共享内存。 为此，可以在连接字符串中对服务器名称使用 tcp：前缀，也可以使用 localhost。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlCommand> 和一个 <xref:System.Data.SqlClient.SqlConnection> 。 <xref:System.Data.SqlClient.SqlConnection>打开并将设置为的 <xref:System.Data.SqlClient.SqlCommand.Connection%2A> <xref:System.Data.SqlClient.SqlCommand> 。 然后，该示例调用 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> 。 为实现此目的， <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> 传递了一个连接字符串和一个作为 INSERT 语句的查询字符串 [!INCLUDE[tsql](~/includes/tsql-md.md)] 。 当代码退出 using 块时，连接会自动关闭。

 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
    <related type="Article" href="/dotnet/framework/data/adonet/sql/">SQL Server 和 ADO.NET</related>
    <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例。</summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 When a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.

|属性|初始值|
|----------------|-------------------|
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|空字符串 ( "" ) |
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|空字符串 ( "" ) |
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|空字符串 ( "" ) |

 只能使用属性更改这些属性的值 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 。 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>类提供用于创建和管理连接字符串内容的功能。



## Examples
 下面的示例创建并打开一个 <xref:System.Data.SqlClient.SqlConnection> 。

 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">SQL Server 和 ADO.NET</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">用于打开 SQL Server 数据库的连接。</param>
        <summary>如果给定包含连接字符串的字符串，则初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 When a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.

|属性|初始值|
|----------------|-------------------|
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|空字符串 ( "" ) |
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|空字符串 ( "" ) |

 只能使用属性更改这些属性的值 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 。 <xref:System.Data.SqlClient.SqlConnection>类提供用于创建和管理连接字符串内容的功能。



## Examples
 下面的示例创建并打开一个 <xref:System.Data.SqlClient.SqlConnection> 。

 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到数据源 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">使用 SQL Server 的 .NET Framework 数据提供程序</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, credential)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, cred)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">不使用 <see langword="ContextConnection = true" /> 或以下任何连接字符串关键字的连接字符串：<see langword="Integrated Security = true" />、<see langword="UserId" /> 或 <see langword="Password" />。</param>
        <param name="credential"><see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。 如果 <paramref name="credential" /> 为 null，则 <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> 在功能上等效于 <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />。</param>
        <param name="cred">To be added.</param>
        <summary>在给定连接字符串的情况下，初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例，该连接字符串不使用 <see langword="Integrated Security = true" /> 和包含用户 ID 和密码的 <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于连接的访问令牌。</summary>
        <value>用于连接的访问令牌。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BeginDbTransaction (isolationLevel As IsolationLevel) As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="sqlConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>开始数据库事务。</summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始数据库事务。</summary>
        <returns>表示新事务的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This command maps to the SQL Server implementation of BEGIN TRANSACTION.

 必须使用或方法显式提交或回滚事务 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 。 为了确保 SQL Server 事务管理模型的 .NET Framework 数据提供程序正确执行，请避免使用其他事务管理模型，如 SQL Server 提供的模型。

> [!NOTE]
>  如果未指定隔离级别，则使用默认的隔离级别。 若要使用方法指定隔离级别 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> ，请使用 `iso`)  (采用参数的重载 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 。 在事务完成后，为事务设置的隔离级别将保留，直到关闭或释放连接。 在未启用快照隔离级别的数据库中，将隔离级别设置为 **snapshot** 不会引发异常。 该事务将使用默认隔离级别完成。

> [!CAUTION]
>  如果事务已启动并且服务器上发生级别16或更高的错误，则在调用方法之前，不会回滚事务 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 。 **ExecuteReader**上不引发异常。

> [!CAUTION]
>  如果查询返回大量的数据和调用 `BeginTransaction` ， <xref:System.Data.SqlClient.SqlException> 则会引发，因为 SQL Server 在使用 MARS 时不允许并行事务。 若要避免此问题，请始终在打开任何读取器之前将事务与命令和/或连接关联。

 有关 SQL Server 事务的详细信息，请参阅 [事务 (transact-sql) ](/sql/t-sql/language-elements/transactions-transact-sql)。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> 和一个 <xref:System.Data.SqlClient.SqlTransaction> 。 它还演示了如何使用 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 、、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 和 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 方法。

 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">使用多个活动结果集 (MARS) 时，不允许并行事务。</exception>
        <exception cref="T:System.InvalidOperationException">不支持并行事务。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/transactions-and-concurrency">事务和并发性</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">SQL Server 和 ADO.NET</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">事务应在其下运行的隔离级别。</param>
        <summary>以指定的隔离级别启动数据库事务。</summary>
        <returns>表示新事务的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This command maps to the SQL Server implementation of BEGIN TRANSACTION.

 必须使用或方法显式提交或回滚事务 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 。 为了确保 SQL Server 事务管理模型的 .NET Framework 数据提供程序正确执行，请避免使用其他事务管理模型，如 SQL Server 提供的模型。

> [!NOTE]
> 提交或回滚事务后，事务的隔离级别将对处于自动提交模式下的所有后续命令保持 (SQL Server 默认) 。 这可能会产生意外的结果，例如，可重复读持久的隔离级别和锁定其他用户行。 若要将隔离级别重置为默认 (读取已提交的) ，请执行 [!INCLUDE[tsql](~/includes/tsql-md.md)] SET TRANSACTION 隔离级别 read 已提交语句，或 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> 立即调用后跟 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType> 。 有关 SQL Server 隔离级别的详细信息，请参阅 [事务隔离级别](/sql/t-sql/language-elements/transaction-isolation-levels)。

 有关 SQL Server 事务的详细信息，请参阅 [事务 (transact-sql) ](/sql/t-sql/language-elements/transactions-transact-sql)。

> [!CAUTION]
>  如果查询返回大量的数据和调用 `BeginTransaction` ， <xref:System.Data.SqlClient.SqlException> 则会引发，因为 SQL Server 在使用 MARS 时不允许并行事务。 若要避免此问题，请始终在打开任何读取器之前将事务与命令和/或连接关联。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> 和一个 <xref:System.Data.SqlClient.SqlTransaction> 。 它还演示了如何使用 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 、、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 和 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 方法。

 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">使用多个活动结果集 (MARS) 时，不允许并行事务。</exception>
        <exception cref="T:System.InvalidOperationException">不支持并行事务。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/transactions-and-concurrency">事务 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到数据源 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">Using the .NET Framework Data Provider for SQL Server</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">事务的名称。</param>
        <summary>以指定的事务名称启动数据库事务。</summary>
        <returns>表示新事务的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This command maps to the SQL Server implementation of BEGIN TRANSACTION.

 参数的长度 `transactionName` 不能超过32个字符; 否则将引发异常。

 参数中的值 `transactionName` 可用于稍后在方法的参数中调用 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 和 `savePoint` <xref:System.Data.SqlClient.SqlTransaction.Save%2A> 。

 必须使用或方法显式提交或回滚事务 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 。 若要确保 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] SQL Server 事务管理模型的数据提供程序正确执行，请避免使用其他事务管理模型，如 SQL Server 提供的模型。

 有关 SQL Server 事务的详细信息，请参阅 [事务 (transact-sql) ](/sql/t-sql/language-elements/transactions-transact-sql)。

> [!CAUTION]
>  如果查询返回大量的数据和调用 `BeginTransaction` ， <xref:System.Data.SqlClient.SqlException> 则会引发，因为 SQL Server 在使用 MARS 时不允许并行事务。 若要避免此问题，请始终在打开任何读取器之前将事务与命令和/或连接关联。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> 和一个 <xref:System.Data.SqlClient.SqlTransaction> 。 它还演示了如何使用 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 、、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 和 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 方法。

 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">使用多个活动结果集 (MARS) 时，不允许并行事务。</exception>
        <exception cref="T:System.InvalidOperationException">不支持并行事务。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/transactions-and-concurrency">事务 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到数据源 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">Using the .NET Framework Data Provider for SQL Server</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">事务应在其下运行的隔离级别。</param>
        <param name="transactionName">事务的名称。</param>
        <summary>以指定的隔离级别和事务名称启动数据库事务。</summary>
        <returns>表示新事务的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 This command maps to the SQL Server implementation of BEGIN TRANSACTION.

 参数中的值 `transactionName` 可用于稍后在方法的参数中调用 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 和 `savePoint` <xref:System.Data.SqlClient.SqlTransaction.Save%2A> 。

 必须使用或方法显式提交或回滚事务 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 。 若要确保 SQL Server 事务管理模型正确执行，请避免使用其他事务管理模型，如 SQL Server 提供的模型。

> [!NOTE]
>  提交或回滚事务后，事务的隔离级别将对处于自动提交模式下的所有后续命令保持 (SQL Server 默认) 。 这可能会产生意外的结果，例如，可重复读持久的隔离级别和锁定其他用户行。 若要将隔离级别重置为默认 (读取已提交的) ，请执行 [!INCLUDE[tsql](~/includes/tsql-md.md)] SET TRANSACTION 隔离级别 read 已提交语句，或 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> 立即调用后跟 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType> 。 有关 SQL Server 隔离级别的详细信息，请参阅 [事务隔离级别](/sql/t-sql/language-elements/transaction-isolation-levels)。

 有关 SQL Server 事务的详细信息，请参阅 [事务 (transact-sql) ](/sql/t-sql/language-elements/transactions-transact-sql)。

> [!CAUTION]
>  如果查询返回大量的数据和调用 `BeginTransaction` ， <xref:System.Data.SqlClient.SqlException> 则会引发，因为 SQL Server 在使用 MARS 时不允许并行事务。 若要避免此问题，请始终在打开任何读取器之前将事务与命令和/或连接关联。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> 和一个 <xref:System.Data.SqlClient.SqlTransaction> 。 它还演示了如何使用 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 、、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 和 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 方法。

 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">使用多个活动结果集 (MARS) 时，不允许并行事务。</exception>
        <exception cref="T:System.InvalidOperationException">不支持并行事务。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/transactions-and-concurrency">事务 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到数据源 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">Using the .NET Framework Data Provider for SQL Server</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void ChangeDatabase (string database);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeDatabase(string database) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeDatabase (database As String)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ChangeDatabase(System::String ^ database);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member ChangeDatabase : string -&gt; unit&#xA;override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">要代替当前数据库加以使用的数据库的名称。</param>
        <summary>更改已打开的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的当前数据库。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The value supplied in the <ph id="ph1">`database`</ph> parameter must be a valid database name. `database`参数不能包含 null 值、空字符串或只包含空白字符的字符串。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> ，并显示其一些只读属性。

 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">数据库名称无效。</exception>
        <exception cref="T:System.InvalidOperationException">连接未打开。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">不能更改数据库。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">SQL Server 和 ADO.NET</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>更改 SQL Server 密码。</summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * string -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="newPassword" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">包含连接至所需服务器的足够信息的连接字符串。 连接字符串必须包含用户 ID 和当前密码。</param>
        <param name="newPassword">要设置的新密码。 此密码必须符合服务器上设置的任何密码安全策略，包括最小长度、特定字符要求等等。</param>
        <summary>将连接字符串中指示的用户的 SQL Server 密码更改为提供的新密码。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 When you are using SQL Server on Windows Server, developers can take advantage of functionality that lets the client application supply both the current and a new password in order to change the existing password. 应用程序可以实现一些功能，例如，如果旧密码已过期，则在初始登录时提示用户输入新密码，而无需管理员干预即可完成此操作。

 <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A>方法将提供的参数中指示的用户的 SQL Server 密码更改 `connectionString` 为在参数中提供的值 `newPassword` 。 如果连接字符串包含集成安全性 (的选项，即 "集成安全性 = True" 或等效) ，则会引发异常。

 若要确定密码是否已过期，调用 <xref:System.Data.SqlClient.SqlConnection.Open%2A> 方法将引发 <xref:System.Data.SqlClient.SqlException> 。 为了指示必须重置连接字符串中包含的密码，该 <xref:System.Data.SqlClient.SqlException.Number%2A> 异常的属性包含状态值18487或18488。 第一个值 (18487) 指示密码已过期，第二个 (18488) 指示密码必须在登录之前重置。

 此方法将打开自身与服务器的连接，请求密码更改，并在完成后立即关闭连接。 不从 SQL Server 连接池检索此连接，也不会返回此连接。



## Examples
 下面是更改密码的简单示例：

```csharp
class Program {
   static void Main(string[] args) {
      System.Data.SqlClient.SqlConnection.ChangePassword(
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",
       "new_password");
   }
}

```

```vb
Module Module1
    Sub Main()
System.Data.SqlClient.SqlConnection.ChangePassword(
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",
       "new_password")
    End Sub
End Module

```

 下面的控制台应用程序演示更改用户密码所涉及的问题，因为当前密码已过期。

 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">连接字符串包括将使用集成安全性的选项。

Or

<paramref name="newPassword" /> 超过了 128 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> 或 <paramref name="newPassword" /> 参数为 null。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到数据源 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">Using the .NET Framework Data Provider for SQL Server</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newPassword) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newPassword As SecureString)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newPassword)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newSecurePassword)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newPassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionString">包含连接至服务器的足够信息的连接字符串。 连接字符串不应使用以下任何一个连接字符串关键字：<see langword="Integrated Security = true" />、<see langword="UserId" /> 或 <see langword="Password" />；或 <see langword="ContextConnection = true" />。</param>
        <param name="credential"><see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。</param>
        <param name="newPassword">新密码 <paramref name="newPassword" /> 必须为只读。 该密码也必须符合服务器上设置的任何密码安全策略（例如：最小长度、特定字符要求）。</param>
        <param name="newSecurePassword">新密码。 <paramref name="newSecurePassword" /> 必须为只读。 该密码也必须符合服务器上设置的任何密码安全策略（例如：最小长度、特定字符要求）。</param>
        <summary>更改 <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象中指示的用户的 SQL Server 密码。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">连接字符串包含 <see langword="UserId" />、 <see langword="Password" /> 或 <see langword="Integrated Security=true" /> 的任意组合。

- 或 -

连接字符串包含 <see langword="Context Connection=true" />。

- 或 -

<paramref name="newSecurePassword" />（或 <paramref name="newPassword" />）的长度超过 128 个字符。

- 或 -

<paramref name="newSecurePassword" />（或 <paramref name="newPassword" />）不是只读的。

- 或 -

<paramref name="newSecurePassword" />（或 <paramref name="newPassword" />）是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException">其中一个参数（<paramref name="connectionString" />、<paramref name="credential" /> 或 <paramref name="newSecurePassword" />）为 null。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清空连接池。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A&gt;</ph> resets (or empties) the connection pool. 如果在调用时正在使用连接，则会将其标记为正确，并将其丢弃 (而不是在调用时返回到池) <xref:System.Data.SqlClient.SqlConnection.Close%2A> 。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql-server-connection-pooling">SQL Server 连接池 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.SqlClient.SqlConnection -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connection">要从池中清除的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</param>
        <summary>清空与指定连接关联的连接池。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearPool%2A&gt;</ph> clears the connection pool that is associated with the <ph id="ph2">`connection`</ph>. 如果在调用时，与关联的其他连接 `connection` 正在使用中，则它们将被适当标记并被丢弃 (而不是在调用时返回到池) <xref:System.Data.SqlClient.SqlConnection.Close%2A> 。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql-server-connection-pooling">SQL Server 连接池 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最近连接尝试连接的 ID，无论该尝试是成功还是失败。</summary>
        <value>最近连接尝试的连接 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A&gt;</ph> works regardless of which version of the server you connect to, but extended events logs and entry on connectivity ring buffer errors will not be present in <ph id="ph2">[!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)]</ph> and earlier.

 如果启用记录连接 ID 的扩展事件，您可以在扩展事件日志中查找连接 ID，以查看失败是否源自服务器。 还可以针对某些连接错误在连接环形缓冲区（[在 SQL Server 2008 中使用连接环形缓冲区解决连接问题](https://go.microsoft.com/fwlink/?LinkId=207752)）中查找连接 ID。 如果在连接环形缓冲区中找不到连接 ID，可以认为是网络错误。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void Close ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭与数据库之间的连接。 此方法是关闭任何打开连接的首选方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> method rolls back any pending transactions. 然后，它会释放到连接池的连接，或者在禁用连接池的情况下关闭连接。

> [!NOTE]
>  [!INCLUDE[tsql](~/includes/tsql-md.md)]如果启用了连接池，则在重置连接时，使用或启动的挂起事务 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 会自动回滚。 如果连接池处于关闭状态，则在调用之后回滚事务 `SqlConnection.Close` 。 通过 <xref:System.Transactions> 基础结构控制启动的事务 `System.Transactions` ，这些事务不受影响 `SqlConnection.Close` 。

 应用程序可以调用多次 <xref:System.Data.SqlClient.SqlConnection.Close%2A> 。 不生成异常。

 如果 <xref:System.Data.SqlClient.SqlConnection> 超出范围，则不会将其关闭。 因此，必须通过调用或显式关闭连接 `Close` `Dispose` 。 `Close` 和 `Dispose` 在功能上是等效的。 如果连接池值 `Pooling` 设置为 `true` 或 `yes` ，则基础连接将返回到连接池。 另一方面，如果将 `Pooling` 设置为 `false` 或，则将 `no` 关闭与服务器的基础连接。

> [!NOTE]
>  从连接池中提取连接或将连接返回到连接池时，服务器上不会引发登录和注销事件，这是因为在将连接返回到连接池时实际上并没有将其关闭。 有关详细信息，请参阅 [SQL Server 连接池 (ADO.NET)](/dotnet/framework/data/adonet/sql-server-connection-pooling)。

> [!CAUTION]
>  不要在 `Close` 类的 `Dispose` 方法中对连接、DataReader 或任何其他托管对象调用或 `Finalize` 。 在终结器中，只应释放类直接拥有的非托管资源。 如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。 有关详细信息，请参阅 [垃圾回收](/dotnet/standard/garbage-collection/)。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> ，将其打开，并显示其部分属性。 在块的末尾自动关闭连接 `using` 。

 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">打开连接时出现的连接级别的错误。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/sql-server-connection-pooling">SQL Server 连接池 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">SQL Server 和 ADO.NET</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionKeyCacheTtl : TimeSpan with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在用于 <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> 功能的列加密密钥缓存中，获取或设置列加密密钥项的生存时间。 默认值为 2 小时。 0 表示无缓存。</summary>
        <value>时间间隔。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionQueryMetadataCacheEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示对参数化查询（针对已启用 <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> 的数据库运行）已启用 (True) 还是未启用 (False) 查询元数据缓存。 默认值为 true。</summary>
        <value>如果启用查询元数据缓存，则返回 True；否则返回 False。 默认为 True。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 For parameterized queries, SqlClient makes a roundtrip to SQL Server for parameter metadata, to see which parameter it needs to encrypt and how (which keys and algorithms should be used). 如果应用程序多次调用相同的查询，则每次对服务器进行一次额外的往返，这会降低应用程序性能。

 如果将 **sqlconnection.columnencryptionquerymetadatacacheenabled** 设置为 true，则如果多次调用相同的查询，则只会进行一次服务器往返。 缓存的最大可配置的最大大小参数设置为2000查询。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionTrustedMasterKeyPaths : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>允许你设置数据库服务器的受信任密钥路径列表。 如果在处理应用程序查询时驱动程序接收到不位于列表中的密钥路径，则查询会失败。 此属性针对安全攻击提供附加保护，这些安全攻击涉及提供伪造密钥路径的受威胁的 SQL Server，可能导致密钥存储凭据泄露。</summary>
        <value>适用于列加密的受信任主密钥路径的列表。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.RecommendedAsConfigurable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RecommendedAsConfigurable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("SqlConnection_ConnectionString")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("SqlConnection_ConnectionString")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.SettingsBindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.SettingsBindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于打开 SQL Server 数据库的字符串。</summary>
        <value>连接字符串，其中包含源数据库名称和建立初始连接所需的其他参数。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> is similar to an OLE DB connection string, but is not identical. 与 OLE DB 或 ADO 不同，返回的连接字符串与用户设置的连接字符串相同 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> ，如果 "持久安全信息" 值设置为 (默认) ，则不安全信息 `false` 。 SQL Server 的 .NET Framework 数据提供程序不会保留或返回连接字符串中的密码，除非你将持久性安全信息设置为 `true` 。

 您可以使用 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 属性连接到数据库。 下面的示例演示了一个典型的连接字符串。

```
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"
```

 使用 new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> 在运行时构造有效的连接字符串。 有关详细信息，请参阅[连接字符串生成器](/dotnet/framework/data/adonet/connection-string-builders)。

 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>仅当关闭连接时，才能设置属性。 很多连接字符串值都具有对应的只读属性。 如果设置了连接字符串，则在检测到错误时，将更新这些属性。 在这种情况下，不会更新任何属性。 <xref:System.Data.SqlClient.SqlConnection> 属性仅返回中包含的那些设置 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 。

 若要连接到本地计算机，请为服务器指定 " (本地) "。 如果未指定服务器名称，则将尝试连接到本地计算机上的默认实例。

 重置 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 关闭的连接上的将重置所有连接字符串值 (和相关属性) 包括密码）。 例如，如果您设置了包含 "Database = AdventureWorks" 的连接字符串，然后将连接字符串重置为 "Data Source = myserver; 集成 Security = true"，则该 <xref:System.Data.SqlClient.SqlConnection.Database%2A> 属性将不再设置为 "AdventureWorks"。

 设置后，将立即分析连接字符串。 如果在分析时发现语法错误，则会生成运行时异常（如 <xref:System.ArgumentException> ）。 只有在尝试打开连接时，才能找到其他错误。

 连接字符串的基本格式包括一系列由分号分隔的关键字/值对。 每个关键字和它的值之间用等号 (=) 连接。 若要包含包含分号、单引号或双引号字符的值，必须将该值用双引号引起来。 如果该值同时包含分号和双引号字符，则该值可以用单引号引起来。 如果值以双引号字符开头，则单引号也很有用。 相反，如果值以单引号开头，则可以使用双引号。 如果该值同时包含单引号和双引号字符，则每次在值中出现时，用来将值括起来的引号字符必须成对出现。

 若要在字符串值中包含前导空格或尾随空格，则必须用单引号或双引号将该值引起来。 即使用引号引起来，也会忽略整数、布尔值或枚举值前后的任何前导空格或尾随空格。 但是，字符串文字关键字或值中的空格将被保留。 在不使用分隔符的情况下，可以在连接字符串中使用单引号或双引号 (例如，Data Source = my'Server 或 Data Source = my "Server) ，除非引号字符是值中的第一个字符或最后一个字符。

 关键字不区分大小写。

 下表列出了中的关键字值的有效名称 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 。

|关键字|默认|描述|
|-------------|-------------|-----------------|
|Addr|不可用|**数据源**的同义词。|
|Address|不可用|**数据源**的同义词。|
|应用|不可用|**应用程序名称**的同义词。|
|Application Name|不可用|应用程序的名称，如果未提供应用程序名称，则为 ".NET SQLClient Data Provider"。<br /><br /> 应用程序名称的长度不能超过128个字符。|
|`ApplicationIntent`|`ReadWrite`|连接到服务器时声明应用程序工作负荷类型。 可能的值为 `ReadOnly` 和 `ReadWrite`。 例如：<br /><br /> `ApplicationIntent=ReadOnly`<br /><br /> 有关对 Always On 可用性组的 SqlClient 支持的详细信息，请参阅[对高可用性、灾难恢复的 SqlClient 支持](/dotnet/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery)。|
|Asynchronous Processing<br /><br /> - 或 -<br /><br /> Async|false|如果为 `true` ，则启用异步操作支持。 已识别的值为 `true`、`false`、`yes` 和 `no`。<br /><br /> 在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 开始时，忽略此属性。 有关异步编程的 SqlClient 支持的详细信息，请参阅 [异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。|
|AttachDBFilename<br /><br /> - 或 -<br /><br /> 扩展属性<br /><br /> - 或 -<br /><br /> 初始文件名|不可用|主数据库文件的名称，包括可附加数据库的完整路径名。 只有扩展名为 .mdf 的主数据文件才支持 AttachDBFilename。<br /><br /> 如果在连接字符串中指定了 AttachDBFileName 键的值，则附加数据库并成为连接的默认数据库。<br /><br /> 如果未指定此键，并且以前附加了数据库，则将不会重新附加该数据库。 以前附加的数据库将用作连接的默认数据库。<br /><br /> 如果将此密钥与 AttachDBFileName 键一起指定，则此项的值将用作别名。 但是，如果该名称已在另一附加数据库中使用，则连接将失败。<br /><br /> 路径可以是绝对路径或相对路径，方法是使用 DataDirectory 替换字符串。 如果使用了 DataDirectory，则数据库文件必须存在于替换字符串指向的目录的子目录中。 **注意：**  远程服务器、HTTP 和 UNC 路径名称不受支持。 <br /><br /> 必须为数据库名称指定关键字 "database" (或其一个别名) ，如下所示：<br /><br /> <code>"AttachDbFileName=&#124;DataDirectory&#124;\data\YourDB.mdf;integrated security=true;database=YourDatabase"</code><br /><br /> 如果日志文件和数据文件存在于同一个目录中，并且在附加主数据文件时使用“database”关键字，则将生成错误。 在这种情况下，请移除日志文件。 附加数据库后，将基于物理路径自动生成一个新日志文件。|
|身份验证|不可用|用于 [通过使用 Azure Active Directory 身份验证连接到 SQL 数据库](https://azure.microsoft.com/documentation/articles/sql-database-aad-authentication/#7-connect-to-your-database-by-using-azure-active-directory-identities)的身份验证方法。<br /><br /> 有效值为：<br /><br /> Active Directory 集成，Active Directory 密码，Sql 密码。|
|列加密设置|不可用|启用或禁用连接的 [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine?view=sql-server-2017) 功能。|
|连接超时值<br /><br /> - 或 -<br /><br /> Connection Timeout<br /><br /> - 或 -<br /><br /> 超时|15| (在终止尝试并生成错误之前等待连接到服务器的时间长度（以秒为单位）) 。<br /><br /> 有效值大于或等于0且小于或等于2147483647。<br /><br /> 打开到 Azure SQL 数据库的连接时，将连接超时值设置为30秒。|
|连接生存期<br /><br /> - 或 -<br /><br /> Load Balance Timeout|0|连接返回到池中后，创建时间将与当前时间进行比较，如果时间跨度（秒）超过 `Connection Lifetime` 指定的值，该连接将被破坏。 在聚集配置中可以使用它来强制在运行服务器和刚联机的服务器之间达到负载平衡。<br /><br /> 值为零 (0) 导致池连接的最大连接超时。|
|ConnectRetryCount|1|控制客户端标识空闲连接失败后的重新连接尝试次数。 有效值为0至255。 默认值为 1。 0表示不尝试重新连接 (禁用连接复原) 。<br /><br /> 若要详细了解空闲连接复原，请参阅[技术文章 - 空闲连接复原](https://download.microsoft.com/download/D/2/0/D20E1C5F-72EA-4505-9F26-FEF9550EFD44/Idle%20Connection%20Resiliency.docx)。|
|ConnectRetryInterval|10|指定每次连接重试尝试 (ConnectRetryCount) 之间的时间。 有效值为1到60秒 (默认值 = 10) ，在首次重新连接尝试之后应用。 检测到断开连接时，客户端会立即尝试重新连接;这是第一次重新连接尝试，并且仅当 ConnectRetryCount 大于0时才会发生。 如果第一次重新连接尝试失败并且 ConnectRetryCount 大于1，则客户端将等待 ConnectRetryInterval 尝试再次重新连接尝试。<br /><br /> 若要详细了解空闲连接复原，请参阅[技术文章 - 空闲连接复原](https://download.microsoft.com/download/D/2/0/D20E1C5F-72EA-4505-9F26-FEF9550EFD44/Idle%20Connection%20Resiliency.docx)。|
|Context Connection|false|`true` 如果应建立与 SQL Server 的进程内连接。|
|Current Language<br /><br /> - 或 -<br /><br /> 语言|不可用|设置用于数据库服务器警告或错误消息的语言。<br /><br /> 语言名称长度不能超过128个字符。|
|“数据源”<br /><br /> - 或 -<br /><br /> 服务器<br /><br /> - 或 -<br /><br /> Address<br /><br /> - 或 -<br /><br /> Addr<br /><br /> - 或 -<br /><br /> 网络地址|不可用|要连接到的 SQL Server 实例的名称或网络地址。 端口号可以在服务器名称之后指定：<br /><br /> `server=tcp:servername, portnumber`<br /><br /> 指定本地实例时，始终使用 (本地) 。 若要强制使用协议，请添加以下前缀之一：<br /><br /> `np:(local),  tcp:(local), lpc:(local)`<br /><br /> 从开始 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] ，你还可以连接到 LocalDB 数据库，如下所示：<br /><br /> `server=(localdb)\\myInstance`<br /><br /> 有关 LocalDB 的详细信息，请参阅 [SqlClient 对 localdb 的支持](/dotnet/framework/data/adonet/sql/sqlclient-support-for-localdb)。<br /><br /> **数据源** 必须使用 TCP 格式或命名管道格式。<br /><br /> TCP 格式如下所示：<br /><br /> -tcp： \<host name> \\<实例名称\><br />-tcp： \<host name> ，\<TCP/IP port number><br /><br /> TCP 格式必须以前缀 "TCP：" 开头，后面是由主机名和实例名指定的数据库实例。 连接到 Azure SQL 数据库时，此格式不适用。 如果未指定协议，则会自动选择 TCP 连接到 Azure SQL 数据库。<br /><br /> 必须通过以下方式之一指定主机名：<br /><br /> -NetBIOSName<br />-IPv4Address<br />-IPv6Address<br /><br /> 实例名称用于解析数据库实例所托管的特定 TCP/IP 端口号。 另外，也允许直接指定 TCP/IP 端口号。 如果实例名称和端口号不存在，则使用默认数据库实例。<br /><br /> 命名管道格式如下所示：<br /><br /> -np： \\ \\<的主机名 \> \pipe \\<管道名称\><br /><br /> 命名管道格式必须以前缀 "np：" 开头并且后跟命名管道名称。<br /><br /> 必须通过以下方式之一指定主机名：<br /><br /> -NetBIOSName<br />-IPv4Address<br />-IPv6Address<br /><br /> 管道名称用于标识将 .NET Framework 应用程序连接到的数据库实例。<br /><br /> 如果指定 **网络** 密钥的值，则不应指定前缀 "tcp：" 和 "np："。 **注意：**  你可以通过在连接字符串中将 **tcp：** 作为服务器名的前缀，或使用 **localhost**来强制使用 tcp 而不是共享内存。|
|Encrypt|false|`true`如果为，则 SQL Server 在服务器安装了证书的情况下，对客户端和服务器之间发送的所有数据使用 SSL 加密。 已识别的值为 `true`、`false`、`yes` 和 `no`。 有关详细信息，请参阅 [连接字符串语法](/dotnet/framework/data/adonet/connection-string-syntax)。<br /><br /> 从开始 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] ，当 `TrustServerCertificate` 为 false 且 `Encrypt` 为 true 时，SQL Server SSL 证书中的服务器名称 (或 ip 地址) 必须与连接字符串中指定的服务器名称 (或 ip) 地址完全匹配。 否则，连接尝试将失败。|
|Enlist|'true'|`true` 指示 SQL Server 连接池程序将在创建线程的当前事务上下文中自动登记连接。|
|Failover Partner|不可用|配置了数据库镜像的故障转移伙伴服务器的名称。<br /><br /> 如果此项的值为 ""，则必须存在 **初始目录** ，并且其值不能为 ""。<br /><br /> 服务器名称的长度不能超过128个字符。<br /><br /> 如果指定故障转移伙伴，但没有为数据库镜像配置故障转移伙伴服务器，并且 (使用 Server 关键字指定的主服务器) 不可用，则连接将失败。<br /><br /> 如果你指定故障转移伙伴，但没有为数据库镜像配置主服务器，则在主服务器可用时，与 (使用 Server 关键字) 指定的主服务器的连接将会成功。|
|Initial Catalog<br /><br /> - 或 -<br /><br /> 数据库|不可用|数据库的名称。<br /><br /> 数据库名称的长度不能超过128个字符。|
|Integrated Security<br /><br /> - 或 -<br /><br /> Trusted_Connection|false|如果为 `false` ，则在连接中指定用户 ID 和密码。 如果 `true` 为，则使用当前的 Windows 帐户凭据进行身份验证。<br /><br /> 识别的值为、、、 `true` `false` `yes` `no` 和 `sspi` (强烈建议) ，它等效于 `true` 。<br /><br /> 如果指定了用户 ID 和密码，并将 "集成安全性" 设置为 "true"，则将忽略用户 ID 和密码，并使用集成安全性。<br /><br /> <xref:System.Data.SqlClient.SqlCredential> 为使用 SQL Server Authentication () 的连接指定凭据的更安全方法 `Integrated Security=false` 。|
|Max Pool Size|100|池中允许的最大连接数。<br /><br /> 有效值大于或等于1。 小于 **最小池大小** 的值会生成错误。|
|Min Pool Size|0|池中允许的最小连接数。<br /><br /> 有效值大于或等于0。 在此字段中为零 (0) 表示最初没有打开最小连接。<br /><br /> 大于 **最大池大小** 的值会生成错误。|
|MultipleActiveResultSets|false|如果 `true` 为，则应用程序可以 (MARS) 中维护多个活动的结果集。 如果 `false` 为，则应用程序必须处理或取消一个批处理中的所有结果集，然后才能对该连接执行任何其他批处理。<br /><br /> 已识别的值为 `true` 和 `false`。<br /><br /> 有关详细信息，请参阅[多个活动结果集 (MARS)](/dotnet/framework/data/adonet/sql/multiple-active-result-sets-mars)。|
|`MultiSubnetFailover`|false|`multiSubnetFailover=True`连接到 SQL Server 2012 (或更高版本的可用性组侦听器时，应始终指定) 可用性组或 SQL Server 2012 (或更高版本) 故障转移群集实例。 `multiSubnetFailover=True` 配置 SqlClient，以便更快地检测和连接当前) 活动服务器 (。 可能的值为、 `Yes` `No` 、、和 `True` `False` `1` `0` 。 例如：<br /><br /> `MultiSubnetFailover=True`<br /><br /> 默认值为 `False`。 有关 SqlClient 对 Always On Ag 的支持的详细信息，请参阅 [SqlClient 对高可用性、灾难恢复的支持](/dotnet/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery)。|
|Network Library<br /><br /> - 或 -<br /><br /> 网络<br /><br /> - 或 -<br /><br /> Net|不可用|用于建立与 SQL Server 实例的连接的网络库。 支持的值包括：<br /><br /> dbnmpntw (Named Pipes) <br /><br /> dbmsrpcn (多协议，Windows RPC) <br /><br /> dbmsadsn (Apple 对话) <br /><br /> 通过) dbmsgnet (<br /><br /> dbmslpcn (共享内存) <br /><br /> dbmsspxn (IPX/SPX) <br /><br /> dbmssocn (TCP/IP) <br /><br /> Dbmsvinn (Banyan Vines) <br /><br /> 必须在系统上安装您要连接到的相应网络 DLL。 如果未指定网络，并且使用本地服务器 (例如，"." 或 " (本地) " ) ，则使用共享内存。 在此示例中，网络库是 Win32 Winsock TCP/IP (dbmssocn)，1433 是使用的端口。<br /><br /> `Network Library=dbmssocn;Data Source=000.000.000.000,1433;`|
|Packet Size|8000|用于与 SQL Server 的实例进行通信的网络数据包的大小（以字节为单位）。<br /><br /> 数据包大小可以大于或等于512且小于或等于32768。|
|Password<br /><br /> - 或 -<br /><br /> PWD|不可用|登录 SQL Server 帐户的密码。 建议不要使用。 为了保持较高的安全级别，强烈建议您 `Integrated Security` `Trusted_Connection` 改用或关键字。 <xref:System.Data.SqlClient.SqlCredential> 为使用 SQL Server 身份验证的连接指定凭据的更安全方法。<br /><br /> 密码长度不能超过128个字符。|
|Persist Security Info<br /><br /> - 或 -<br /><br /> PersistSecurityInfo|false|如果设置为 `false` 或 `no` (强烈建议) ，则在连接处于打开状态或一直处于打开状态时，不会将安全敏感信息（例如密码）作为连接的一部分返回。 重置连接字符串将重置所有连接字符串值（包括密码）。 已识别的值为 `true`、`false`、`yes` 和 `no`。|
|PoolBlockingPeriod|自动|设置连接池的阻塞期行为。 有关详细信息，请参阅 <xref:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod> 属性。|
|Pooling|'true'|如果此项的值设置为 true，则在应用程序关闭时，将向池中添加任何新创建的连接。 在下一次尝试打开相同的连接时，该连接将从池中提取。<br /><br /> 如果连接具有相同的连接字符串，则将其视为相同。 不同连接具有不同的连接字符串。<br /><br /> 此键的值可以为 "true"、"false"、"yes" 或 "no"。|
|Replication|false|`true` 如果使用连接支持复制。|
|Transaction Binding|Implicit Unbind|控制与登记的事务的连接关联 `System.Transactions` 。<br /><br /> 可能的值有：<br /><br /> `Transaction Binding=Implicit Unbind;`<br /><br /> `Transaction Binding=Explicit Unbind;`<br /><br /> 隐式取消连接将导致连接在结束时与事务分离。 分离后，在自动模式下对连接执行其他请求。 在事务处于活动状态的情况下，执行请求时不会检查 `System.Transactions.Transaction.Current` 属性。 事务结束后，会在自动模式下执行其他请求。<br /><br /> 如果系统在使用块) 的作用域中结束事务 (在最后一个命令完成之前，将引发 <xref:System.InvalidOperationException> 。<br /><br /> 显式取消绑定会导致连接保持附加到事务，直到连接关闭或 `SqlConnection.TransactionEnlist(null)` 调用显式。 从开始 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ，隐式取消更改会使显式解除绑定过时。 如果 `InvalidOperationException` 不是登记事务或者登记事务未处于活动状态，则将引发 `Transaction.Current`。|
|TransparentNetworkIPResolution|请参阅说明。|将该键的值设置为 `true` 时，需要应用程序检索特定 DNS 条目的所有 IP 地址并尝试连接到列表中的第一个地址。 如果未在 0.5 秒内建立连接，应用程序将尝试并行连接到所有其他地址。 第一个地址响应后，应用程序将与响应的 IP 地址建立连接。<br /><br /> 如果 `MultiSubnetFailover` 该键设置为 `true` ， `TransparentNetworkIPResolution` 则将被忽略。<br /><br /> 如果 `Failover Partner` 设置了密钥， `TransparentNetworkIPResolution` 则将忽略。<br /><br /> 此项的值必须是 `true` 、、 `false` `yes` 或 `no` 。<br /><br /> 的值与的 `yes` 值相同 `true` 。<br /><br /> 的值与的 `no` 值相同 `false` 。<br /><br /> 默认值如下所示：<br /><br /> <ul><li>`false` 即使<br /><br /> <ul><li>连接到 Azure SQL 数据库，其中的数据源结尾为：<br /><br /> <ul><li>.database.chinacloudapi.cn</li><li>.database.usgovcloudapi.net</li><li>.database.cloudapi.de</li><li>.database.windows.net</li></ul></li><li>`Authentication` 为 "Active Directory Password" 或 "Active Directory 集成"</li></ul></li><li>在所有其他情况下，它表示 `true`。</li></ul>|
|TrustServerCertificate|false|如果设置为 `true` ，则在跳过证书链以验证信任时，使用 SSL 来加密通道。 如果将 "TrustServerCertificate" 设置为， `true` 并将 `false` "加密" 设置为，则不会加密该通道。 已识别的值为 `true`、`false`、`yes` 和 `no`。 有关详细信息，请参阅 [连接字符串语法](/dotnet/framework/data/adonet/connection-string-syntax)。|
|类型系统版本|不可用|一个字符串值，该值指示应用程序所需的类型系统。 可用于客户端应用程序的功能取决于 SQL Server 版本和数据库的兼容性级别。 如果使用的是 SQL Server 的其他版本，则显式设置编写的客户端应用程序所针对的类型系统版本可避免导致应用程序中断的潜在问题。 **注意：**  无法为公共语言运行时设置类型系统版本 (CLR) 在 SQL Server 中执行进程内执行的代码。 有关详细信息，请参阅 [SQL Server 公共语言运行时集成](/dotnet/framework/data/adonet/sql/sql-server-common-language-runtime-integration)。 <br /><br /> 可能的值有：<br /><br /> `Type System Version=SQL Server 2012;`<br /><br /> `Type System Version=SQL Server 2008;`<br /><br /> `Type System Version=SQL Server 2005;`<br /><br /> `Type System Version=Latest;`<br /><br /> `Type System Version=SQL Server 2012;` 指定应用程序需要 Microsoft.SqlServer.Types.dll 版本11.0.0.0。 其他 `Type System Version` 设置将要求 Microsoft.SqlServer.Types.dll 10.0.0.0 版。<br /><br /> `Latest` 已过时，不应使用。 `Latest` 与 `Type System Version=SQL Server 2008;` 相等。|
|User ID<br /><br /> - 或 -<br /><br /> UID<br /><br /> - 或 -|不可用|SQL Server 的登录帐户。 建议不要使用。 为了保持较高的安全级别，强烈建议您 `Integrated Security` `Trusted_Connection` 改用或关键字。 <xref:System.Data.SqlClient.SqlCredential> 为使用 SQL Server 身份验证的连接指定凭据的更安全方法。<br /><br /> 用户 ID 不得超过128个字符。|
|User Instance|false|一个值，该值指示是否将连接从默认 SQL Server Express 实例重定向到在调用方帐户下运行的运行时启动的实例。|
|Workstation ID<br /><br /> - 或 -<br /><br /> WSID|本地计算机名称|连接到 SQL Server 的工作站的名称。<br /><br /> ID 不得超过128个字符。|

 下面的列表包含中的连接池值的有效名称 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 。 有关详细信息，请参阅 [SQL Server 连接池 (ADO.NET)](/dotnet/framework/data/adonet/sql-server-connection-pooling)。

-   连接生存期 (或负载平衡超时) 

-   Enlist

-   Max Pool Size

-   Min Pool Size

-   Pooling

 在设置需要布尔值的关键字或连接池值时，可以使用 "是" 而不是 "true" 和 "no" 而不是 "false"。 整数值表示为字符串。

> [!NOTE]
>  SQL Server 的 .NET Framework 数据提供程序使用自己的协议与 SQL Server 进行通信。 因此，在连接到 SQL Server 时，它不支持使用 ODBC 数据源名称 (DSN) ，因为它不会添加 ODBC 层。

> [!NOTE]
>  SQL Server 的 .NET Framework 数据提供程序不支持通用数据链接 (UDL) 文件。

> [!CAUTION]
>  在此版本中，应用程序在构造基于用户输入的连接字符串时应谨慎 (例如，当从对话框检索用户 ID 和密码信息，并将其追加到) 的连接字符串时。 应用程序应确保用户无法在这些值中嵌入其他连接字符串参数 (例如，在尝试附加到不同的数据库) 时，将密码输入为 "validpassword; database = somedb"。 如果需要基于用户输入构造连接字符串，请使用新的 <xref:System.Data.SqlClient.SqlConnectionStringBuilder> ，它将验证连接字符串并帮助消除此问题。 有关详细信息，请参阅 [连接字符串生成器](/dotnet/framework/data/adonet/connection-string-builders) 。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> ，并在 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 打开连接之前设置属性。

 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">提供了一个无效的连接字符串参数，或者未提供所需的连接字符串参数。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 托管提供程序和 DataSet 开发人员中心</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql-server-connection-pooling">SQL Server 连接池 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="C#" Value="public int ConnectionTimeout { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionTimeout As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionTimeout { int get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在尝试建立连接时终止尝试并生成错误之前所等待的时间（以秒为单位）。</summary>
        <value>等待连接打开所需的时间（以秒为单位）。 默认值为 15 秒。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 You can set the amount of time a connection waits to time out by using the <ph id="ph1">`Connect Timeout`</ph> or <ph id="ph2">`Connection Timeout`</ph> keywords in the connection string. 如果值为0，则表示没有限制，应避免在中， <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 因为尝试无限期地等待连接。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> ，并 `Connection Timeout` 在连接字符串中将设置为30秒。 该代码会打开连接，并 <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> 在控制台窗口中显示属性。

 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置的值小于 0。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql-server-connection-pooling">SQL Server 连接池 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回与 <see cref="T:System.Data.SqlClient.SqlConnection" /> 关联的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="sqlConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此连接的 <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。</summary>
        <value>此连接的 <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <ph id="ph1">`Persist Security Info = true`</ph> is required to get the value of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential&gt;</ph> object with <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>.

 的默认值 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 为 null。

 <xref:System.InvalidOperationException>将引发异常：

-   如果 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 为打开的连接设置，则为。

-   如果 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 在时设置了 `Context Connection=true` 。

-   如果 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 在时设置了 `Integrated Security = true` 。

-   如果在 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 连接字符串使用时设置，则为 `Password` 。

-   如果在 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 连接字符串使用时设置，则为 `UserID` 。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="C#" Value="public string Database { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Database As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Database { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("SqlConnection_Database")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("SqlConnection_Database")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前数据库的名称或打开连接后要使用的数据库的名称。</summary>
        <value>当前数据库的名称或打开连接后要使用的数据库的名称。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph> property updates dynamically. 如果使用语句或方法更改当前数据库 [!INCLUDE[tsql](~/includes/tsql-md.md)] <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> ，将发送一条信息性消息，并自动更新属性。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> ，并显示其一些只读属性。

 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/commands-and-parameters">命令和参数</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="C#" Value="public string DataSource { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSource As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataSource { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("SqlConnection_DataSource")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("SqlConnection_DataSource")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要连接的 SQL Server 的实例的名称。</summary>
        <value>The name of the instance of SQL Server to which to connect. 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> `null` 如果的连接字符串 <xref:System.Data.SqlClient.SqlConnection> 为 "context connection = true"，则属性返回。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> ，并显示其一些只读属性。

 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="sqlConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transaction">对用于登记的现有 <see cref="T:System.EnterpriseServices.ITransaction" /> 的引用。</param>
        <summary>在指定的事务中登记为分布式事务。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction. 由于它在实例中登记连接 <xref:System.Transactions.Transaction> ， **EnlistTransaction**利用命名空间中的可用功能 <xref:System.Transactions> 来管理分布式事务，使其更适合用于此**EnlistDistributedTransaction**目的。 有关详细信息，请参阅 [分布式事务](/dotnet/framework/data/adonet/distributed-transactions)。

 如果禁用了自动登记，则可以使用 **EnlistDistributedTransaction** 方法继续在现有分布式事务中登记。 在现有分布式事务中登记可确保在提交或回滚事务后，还会提交或回滚数据源中的代码所做的修改。

 `EnlistDistributedTransaction` 如果已使用启动了事务，则返回异常 <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 。 但是，如果事务是从数据源启动的本地事务 (例如，通过使用对象) 显式执行 BEGIN TRANSACTION 语句 <xref:System.Data.SqlClient.SqlCommand> ， **EnlistDistributedTransaction** 将回滚本地事务，并根据请求在现有分布式事务中登记。 你不会收到本地事务已回滚的通知，并且负责管理所有未使用启动的本地事务 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/transactions-and-concurrency">事务 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EnlistTransaction (transaction As Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="sqlConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="transaction">对用于登记的现有 <see cref="T:System.Transactions.Transaction" /> 的引用。</param>
        <summary>在指定的事务中登记为分布式事务。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction. 由于它在实例中登记连接 <xref:System.Transactions.Transaction> ， **EnlistTransaction**利用命名空间中的可用功能 <xref:System.Transactions> 来管理分布式事务，使其更适合使用**system.enterpriseservices.servicedcomponent ITransaction**对象的**EnlistDistributedTransaction**。 它还具有略微不同的语义：在事务中显式登记某个连接后，在第一个事务完成之前，不能取消登记该连接或在另一个事务中登记。 有关分布式事务的详细信息，请参阅 [分布式事务](/dotnet/framework/data/adonet/distributed-transactions)。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/transactions-and-concurrency">事务 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInfoMessageEventOnUserErrors : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 属性。</summary>
        <value>如果已设置了 <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 属性，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 When you set <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph> to <ph id="ph2">`true`</ph>, errors that were previously treated as exceptions are now handled as <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> events. 所有事件都立即触发，并由事件处理程序进行处理。 如果将 <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> 设置为 `false` ，则 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> 在过程结束时将处理事件。

> [!NOTE]
>  严重级别为17或更高的错误会导致服务器停止处理此命令，需要将该错误作为异常进行处理。 在这种情况下，无论如何在 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> 事件中处理该错误，都会引发异常。

 有关使用事件的详细信息，请参阅 [连接事件](/dotnet/framework/data/adonet/connection-events)。 有关 SQL Server 引擎生成的错误的详细信息，请参阅 [数据库引擎错误](/sql/relational-databases/errors-events/database-engine-events-and-errors)。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-events">连接事件</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到数据源 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回此 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的数据源的架构信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 If you attempt to retrieve schema information for more than one versioned stored procedure, the schema for the latest one only is returned.

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-database-schema-information">从数据库获取架构信息</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的数据源的架构信息。 有关架构的详细信息，请参阅 [SQL Server 架构集合](/dotnet/framework/data/adonet/sql-server-schema-collections)。</summary>
        <returns>一个包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-database-schema-information">Obtaining Schema Information from a Database</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">指定要返回的架构的名称。</param>
        <summary>通过使用架构名称的指定字符串，返回此 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的数据源的架构信息。</summary>
        <returns>一个包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 You may need the schema information of the database, tables or columns. 此示例：

-   使用 GetSchema 获取架构信息。

-   使用架构限制获取指定的信息。

-   获取数据库、表和某些列的架构信息。

 在运行该示例之前，需要使用以下内容创建示例数据库 [!INCLUDE[tsql](~/includes/tsql-md.md)] ：

```
USE [master]
GO

CREATE DATABASE [MySchool]

GO

USE [MySchool]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,
[Year] [smallint] NOT NULL,
[Title] [nvarchar](100) NOT NULL,
[Credits] [int] NOT NULL,
[DepartmentID] [int] NOT NULL,
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED
(
[CourseID] ASC,
[Year] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]

GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,
[Name] [nvarchar](50) NOT NULL,
[Budget] [money] NOT NULL,
[StartDate] [datetime] NOT NULL,
[Administrator] [int] NULL,
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED
(
[DepartmentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]

GO

INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)

SET IDENTITY_INSERT [dbo].[Department] ON

INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)
SET IDENTITY_INSERT [dbo].[Department] OFF

ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])
REFERENCES [dbo].[Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]
GO
```

 在 Visual Studio 项目中[，如何从数据库获取架构信息](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2)具有此代码示例的 c # 和 Visual Basic 版本。

```csharp
using System;
using System.Data;
using System.Data.SqlClient;

class Program {
   static void Main(string[] args) {

      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {
         conn.Open();

         // Get the Meta Data for Supported Schema Collections
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");

         Console.WriteLine("Meta Data for Supported Schema Collections:");
         ShowDataTable(metaDataTable, 25);
         Console.WriteLine();

         // Get the schema information of Databases in your instance
         DataTable databasesSchemaTable = conn.GetSchema("Databases");

         Console.WriteLine("Schema Information of Databases:");
         ShowDataTable(databasesSchemaTable, 25);
         Console.WriteLine();

         // First, get schema information of all the tables in current database;
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");

         Console.WriteLine("Schema Information of All Tables:");
         ShowDataTable(allTablesSchemaTable, 20);
         Console.WriteLine();

         // You can specify the Catalog, Schema, Table Name, Table Type to get
         // the specified table(s).
         // You can use four restrictions for Table, so you should create a 4 members array.
         String[] tableRestrictions = new String[4];

         // For the array, 0-member represents Catalog; 1-member represents Schema;
         // 2-member represents Table Name; 3-member represents Table Type.
         // Now we specify the Table Name of the table what we want to get schema information.
         tableRestrictions[2] = "Course";

         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);

         Console.WriteLine("Schema Information of Course Tables:");
         ShowDataTable(courseTableSchemaTable, 20);
         Console.WriteLine();

         // First, get schema information of all the columns in current database.
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");

         Console.WriteLine("Schema Information of All Columns:");
         ShowColumns(allColumnsSchemaTable);
         Console.WriteLine();

         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).
         // You can use four restrictions for Column, so you should create a 4 members array.
         String[] columnRestrictions = new String[4];

         // For the array, 0-member represents Catalog; 1-member represents Schema;
         // 2-member represents Table Name; 3-member represents Column Name.
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.
         columnRestrictions[2] = "Course";
         columnRestrictions[3] = "DepartmentID";

         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);

         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");
         ShowColumns(departmentIDSchemaTable);
         Console.WriteLine();

         // First, get schema information of all the IndexColumns in current database
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");

         Console.WriteLine("Schema Information of All IndexColumns:");
         ShowIndexColumns(allIndexColumnsSchemaTable);
         Console.WriteLine();

         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to
         // get the specified column(s).
         // You can use five restrictions for Column, so you should create a 5 members array.
         String[] indexColumnsRestrictions = new String[5];

         // For the array, 0-member represents Catalog; 1-member represents Schema;
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.
         indexColumnsRestrictions[2] = "Course";
         indexColumnsRestrictions[4] = "CourseID";

         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);

         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");
         ShowIndexColumns(courseIdIndexSchemaTable);
         Console.WriteLine();
      }

      Console.WriteLine("Please press any key to exit...");
      Console.ReadKey();
   }

   private static void ShowDataTable(DataTable table, Int32 length) {
      foreach (DataColumn col in table.Columns) {
         Console.Write("{0,-" + length + "}", col.ColumnName);
      }
      Console.WriteLine();

      foreach (DataRow row in table.Rows) {
         foreach (DataColumn col in table.Columns) {
            if (col.DataType.Equals(typeof(DateTime)))
               Console.Write("{0,-" + length + ":d}", row[col]);
            else if (col.DataType.Equals(typeof(Decimal)))
               Console.Write("{0,-" + length + ":C}", row[col]);
            else
               Console.Write("{0,-" + length + "}", row[col]);
         }
         Console.WriteLine();
      }
   }

   private static void ShowDataTable(DataTable table) {
      ShowDataTable(table, 14);
   }

   private static void ShowColumns(DataTable columnsTable) {
      var selectedRows = from info in columnsTable.AsEnumerable()
                         select new {
                            TableCatalog = info["TABLE_CATALOG"],
                            TableSchema = info["TABLE_SCHEMA"],
                            TableName = info["TABLE_NAME"],
                            ColumnName = info["COLUMN_NAME"],
                            DataType = info["DATA_TYPE"]
                         };

      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");
      foreach (var row in selectedRows) {
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);
      }
   }

   private static void ShowIndexColumns(DataTable indexColumnsTable) {
      var selectedRows = from info in indexColumnsTable.AsEnumerable()
                         select new {
                            TableSchema = info["table_schema"],
                            TableName = info["table_name"],
                            ColumnName = info["column_name"],
                            ConstraintSchema = info["constraint_schema"],
                            ConstraintName = info["constraint_name"],
                            KeyType = info["KeyType"]
                         };

      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");
      foreach (var row in selectedRows) {
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);
      }
   }
}
```

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">将 <paramref name="collectionName" /> 指定为 null。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-database-schema-information">Obtaining Schema Information from a Database</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="restrictionValues" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">指定要返回的架构的名称。</param>
        <param name="restrictionValues">请求的架构的一组限制值。</param>
        <summary>通过使用指定字符串作为架构名称，指定字符串数组作为限制值，返回此 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的数据源的架构信息。</summary>
        <returns>一个包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The <ph id="ph1">`restrictionValues`</ph> parameter can supply <bpt id="p1">*</bpt>n<ept id="p1">*</ept> depth of values, which are specified by the restrictions collection for a specific collection. 为了设置给定限制的值，而不设置其他限制的值，你需要将前面的限制设置为， `null` 然后将相应的值放在中，以便为你要指定的值指定限制。

 "Tables" 集合就是这样的一个示例。 如果 "表" 集合具有三个限制（数据库、所有者和表名称），并且您只想返回与 "Carl" 所有者关联的表，则需要传入以下值： null、"Carl"。 如果未传入限制值，则将默认值用于该限制。 这与传入的映射相同 `null` ，这不同于传入参数值的空字符串。 在这种情况下，空字符串 ( "" ) 被视为指定参数的值。

 有关演示的代码示例 <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A> ，请参阅 <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A> 。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">将 <paramref name="collectionName" /> 指定为 null。</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-database-schema-information">Obtaining Schema Information from a Database</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DbConnection_InfoMessage")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DbConnection_InfoMessage")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 SQL Server 返回一个警告或信息性消息时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Clients that want to process warnings or informational messages sent by the server should create an <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlInfoMessageEventHandler&gt;</ph> delegate to listen to this event.

 <xref:System.Data.SqlClient.SqlConnection.InfoMessage>SQL Server 返回严重级别为10或更小的消息时，将发生此事件。 严重性介于11和20之间的消息引发错误，并且严重性超过20的消息会导致连接关闭。 有关 SQL Server 错误级别的详细信息，请参阅 [数据库引擎错误严重性](/sql/relational-databases/errors-events/database-engine-error-severities)。

 有关详细信息和示例，请参阅 [连接事件](/dotnet/framework/data/adonet/connection-events)。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-events">使用连接事件</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void Open ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Open();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit&#xA;override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用由 <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> 指定的属性设置打开一个数据库连接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> draws an open connection from the connection pool if one is available. 否则，它将建立与 SQL Server 实例的新连接。

> [!NOTE]
>  如果 <xref:System.Data.SqlClient.SqlConnection> 超出范围，则它不会关闭。 因此，必须通过调用显式关闭连接 <xref:System.Data.SqlClient.SqlConnection.Close%2A> 。

> [!NOTE]
>  如果你在尝试连接到 SQL Server 的实例而不是 TCP/IP 以外的协议时指定了1433以外的端口号，则该 <xref:System.Data.SqlClient.SqlConnection.Open%2A> 方法将失败。 若要指定1433以外的端口号，请在连接字符串中包含 "server = machinename，端口号"，并使用 TCP/IP 协议。

> [!NOTE]
>  SQL Server 的 .NET Framework 数据提供程序要求具有 "允许调用非托管程序集的安全" 权限 (， <xref:System.Security.Permissions.SecurityPermission> 并 <xref:System.Security.Permissions.SecurityPermissionFlag> 将设置为 `UnmanagedCode`) 以打开 <xref:System.Data.SqlClient.SqlConnection> 启用了 SQL 调试的。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> ，将其打开，并显示其部分属性。 在块的末尾自动关闭连接 `using` 。

 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">如果不指定数据源或服务器，则无法打开连接。

 or

 连接已打开。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">打开连接时出现的连接级别错误。 如果 <see cref="P:System.Data.SqlClient.SqlException.Number" /> 属性包含值 18487 或 18488，这表明指定的密码已过期或必须重置。 有关更多信息，请参阅 <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> 方法。

App.config 文件中的 <see langword="&lt;system.data.localdb&gt;" /> 标记具有无效或未知元素。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><see langword="&lt;localdbinstances&gt;" /> 部分中有两个具有相同名称的条目。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
        <related type="Article" href="/dotnet/framework/data/adonet/sql-server-connection-pooling">SQL Server 连接池 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OpenAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">取消指令。</param>
        <summary><see cref="M:System.Data.SqlClient.SqlConnection.Open" /> 的异步版本，打开 <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> 指定的属性设置的数据库连接。 取消标记可用于请求在连接超时超过前放弃操作。  异常将通过返回的任务传播。 如果在未成功连接的情况下连接超时时间已过，则返回的任务将被标记为“附带异常出错”。 实现返回一个不带有用于共用和非共用连接的锁定调用线程的“任务”。</summary>
        <returns>表示异步操作的任务。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 After calling <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> must return <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> until the returned <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> is completed. 然后，如果连接成功，则 <xref:System.Data.SqlClient.SqlConnection.State%2A> 必须返回 <xref:System.Data.ConnectionState.Open> 。 如果连接失败，则 <xref:System.Data.SqlClient.SqlConnection.State%2A> 必须返回 <xref:System.Data.ConnectionState.Closed> 。

 对的调用 <xref:System.Data.SqlClient.SqlConnection.Close%2A> 将尝试取消或关闭相应的 <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> 调用。

 有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅 [异步编程](/dotnet/framework/data/adonet/asynchronous-programming)。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />。

 在连接字符串中指定 <see langword="Context Connection=true" />。

在经过连接超时时间之前从连接池中的连接不可用。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">打开连接时出现的任何由 SQL Server 返回的错误。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PacketSize : int" Usage="System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("SqlConnection_PacketSize")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("SqlConnection_PacketSize")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于与 SQL Server 的实例进行通信的网络数据包的大小（以字节为单位）。</summary>
        <value>网络数据包的大小（以字节为单位）。 默认值为 8000。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 If an application performs bulk copy operations, or sends or receives lots of text or image data, a packet size larger than the default may improve efficiency because it causes fewer network read and write operations. 如果某个应用程序发送并接收了少量的信息，则可以使用) 中的 "数据包大小" 值将数据包大小设置为512个 (字节 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> ，这对于大多数数据传输操作来说已经足够了。 对于大多数应用程序而言，默认数据包大小为最佳数值。

 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> 可能为512到32767字节范围内的值。 如果值超出此范围，则会生成异常。

 如果将默认值设置为大于8000的数字，则数据包将使用实例上的多页分配器 SQL Server 而不是更有效的 SinglePage 分配器，从而降低 SQL Server 的整体可伸缩性。 有关 SQL Server 如何使用内存的详细信息，请参阅 [内存管理体系结构指南](/sql/relational-databases/memory-management-architecture-guide)。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> ，包括 `Packet Size` 在连接字符串中将设置为512。 它 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> 在控制台窗口中显示和属性。

 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到 ADO.NET 中的数据源</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberSignature Language="F#" Value="static member RegisterColumnEncryptionKeyStoreProviders : System.Collections.Generic.IDictionary&lt;string, System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders customProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="customProviders">自定义提供程序</param>
        <summary>注册列加密密钥存储提供程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples

```csharp
Dictionary<string, SqlColumnEncryptionKeyStoreProvider> customKeyStoreProviders = new Dictionary<string, SqlColumnEncryptionKeyStoreProvider>();
MySqlClientHSMProvider myProvider = new MySqlClientHSMProvider();
customKeyStoreProviders.Add(@"HSM Provider", myProvider);
SqlConnection.RegisterColumnEncryptionKeyStoreProviders(customKeyStoreProviders)
```
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberSignature Language="F#" Value="member this.ResetStatistics : unit -&gt; unit" Usage="sqlConnection.ResetStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果启用了统计信息收集，所有值都将重置为零。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 If statistics gathering is not enabled and this method is called, no error is thrown.

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/provider-statistics-for-sql-server">用于 SQL Server 的提供程序统计信息 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberSignature Language="F#" Value="member this.RetrieveStatistics : unit -&gt; System.Collections.IDictionary" Usage="sqlConnection.RetrieveStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>调用此方法时，将返回统计信息的名称值对集合。</summary>
        <returns>返回 <see cref="T:System.Collections.DictionaryEntry" /> 项的 <see cref="T:System.Collections.IDictionary" /> 类型的引用。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 When this method is called, the values retrieved are those at the current point in time. 如果继续使用连接，则值不正确。 需要重新执行方法才能获得最新的值。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/provider-statistics-for-sql-server">用于 SQL Server 的提供程序统计信息 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="C#" Value="public string ServerVersion { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVersion As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServerVersion { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("SqlConnection_ServerVersion")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("SqlConnection_ServerVersion")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字符串，其中包含客户端所连接到的 SQL Server 的实例的版本。</summary>
        <value>The version of the instance of SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 版本的格式为 *# #. # #. # #*# #，其中前两位数字是主版本，接下来的两位数字是次版本号，最后四位数字是发布版本。 此字符串的格式为 " *主要版本. 次要版本. 内部版本. 内部*版本号"，其中主要版本号和次要版本号都是两位数，并且内部版本号正好为四位数。

 当返回的任务未完成，且在调用 <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> 后未打开连接时，调用了 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A>。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> 并显示 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> 属性。

 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">连接已关闭。

 当返回的任务未完成，且在调用 <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> 后未打开连接时，调用了 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" />。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">SQL Server 和 ADO.NET</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="C#" Value="public System.Data.ConnectionState State { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ConnectionState" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DbConnection_State")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DbConnection_State")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最近在连接上执行网络操作时表示 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的状态。</summary>
        <value>一个 <see cref="T:System.Data.ConnectionState" /> 枚举。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Returns an <ph id="ph1">&lt;xref:System.Data.ConnectionState&gt;</ph> enumeration indicating the state of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>. 关闭并重新打开连接将刷新的值 <xref:System.Data.SqlClient.SqlConnection.State%2A> 。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connecting-to-a-data-source">连接到数据源 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DbConnection_StateChange")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DbConnection_StateChange")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当连接状态改变时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StatisticsEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果设置为 <see langword="true" />，则对当前连接启用统计信息收集。</summary>
        <value>如果启用了统计信息收集，则返回 <see langword="true" />；否则返回 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Enabling statistics gathering has a minor, but measurable effect on performance and therefore should be enabled only when it is required.

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/provider-statistics-for-sql-server">用于 SQL Server 的提供程序统计信息 (ADO.NET)</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbConnection.BeginTransaction : unit -&gt; System.Data.IDbTransaction&#xA;override this.System.Data.IDbConnection.BeginTransaction : unit -&gt; System.Data.IDbTransaction" Usage="sqlConnection.System.Data.IDbConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始一项数据库事务。</summary>
        <returns>一个表示新事务的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <ph id="ph1">&lt;xref:System.Data.IDbTransaction.Commit&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.IDbTransaction.Rollback&gt;</ph> method.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (iso As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel iso) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbConnection.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.IDbTransaction&#xA;override this.System.Data.IDbConnection.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.IDbTransaction" Usage="sqlConnection.System.Data.IDbConnection.BeginTransaction iso" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="iso"><see cref="T:System.Data.IsolationLevel" /> 值之一。</param>
        <summary>以指定的 <see cref="T:System.Data.IsolationLevel" /> 值开始数据库事务。</summary>
        <returns>一个表示新事务的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
Once the transaction has completed, you must explicitly commit or roll back the transaction by using the <ph id="ph1">&lt;xref:System.Data.IDbTransaction.Commit&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.IDbTransaction.Rollback&gt;</ph> method.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbConnection.CreateCommand : unit -&gt; System.Data.IDbCommand&#xA;override this.System.Data.IDbConnection.CreateCommand : unit -&gt; System.Data.IDbCommand" Usage="sqlConnection.System.Data.IDbConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回一个与连接关联的命令对象。</summary>
        <returns>与连接关联的命令对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="sqlConnection.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建作为当前实例副本的新对象。</summary>
        <returns>作为此实例副本的新对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此成员是显式接口成员的实现。 它只能在 <xref:System.Data.SqlClient.SqlConnection> 实例被强制转换为 <xref:System.ICloneable> 接口时使用。

 This member is only supported by the .NET Compact Framework.

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkstationId : string" Usage="System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.1</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("SqlConnection_WorkstationId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("SqlConnection_WorkstationId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个标识数据库客户端的字符串。</summary>
        <value>一个标识数据库客户端的字符串。 如果未指定，则为客户端计算机的名称。 如果两个都没有指定，则值为空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 The string typically contains the network name of the client. <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A>属性对应于 `Workstation ID` 连接字符串属性。



## Examples
 下面的示例创建一个 <xref:System.Data.SqlClient.SqlConnection> 并显示 <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> 属性。

 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/">SQL Server 和 ADO.NET</related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview">ADO.NET 概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
