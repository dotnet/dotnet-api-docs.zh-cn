<Type Name="SqlColumnEncryptionKeyStoreProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83c4eca973fdab656e15aa9fe0533fca9235d1f5" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89728963" /></Metadata><TypeSignature Language="C#" Value="public abstract class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlColumnEncryptionKeyStoreProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionKeyStoreProvider abstract" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionKeyStoreProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="561d9-101">所有密钥存储提供程序的基类。</span><span class="sxs-lookup"><span data-stu-id="561d9-101">Base class for all key store providers.</span></span> <span data-ttu-id="561d9-102">自定义提供程序必须从此类中派生而来并重写其成员函数，然后使用 SqlConnection.RegisterColumnEncryptionKeyStoreProviders() 对其进行注册。</span><span class="sxs-lookup"><span data-stu-id="561d9-102">A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span></span> <span data-ttu-id="561d9-103">有关详细信息，请参阅 <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>。</span><span class="sxs-lookup"><span data-stu-id="561d9-103">For details see, <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="ExternalDocumentation" href="https://techcommunity.microsoft.com/t5/sql-server/getting-started-with-always-encrypted/ba-p/384397"><span data-ttu-id="561d9-104">Always Encrypted (博客文章入门) </span><span class="sxs-lookup"><span data-stu-id="561d9-104">Get started with Always Encrypted (blog post)</span></span></related>
    <related type="ExternalDocumentation" href="/sql/relational-databases/security/encryption/always-encrypted-client-development"><span data-ttu-id="561d9-105">使用 Always Encrypted 开发应用</span><span class="sxs-lookup"><span data-stu-id="561d9-105">Develop apps using Always Encrypted</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlColumnEncryptionKeyStoreProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlColumnEncryptionKeyStoreProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="561d9-106">初始化 SqlColumnEncryptionKeyStoreProviderClass 的新实例。</span><span class="sxs-lookup"><span data-stu-id="561d9-106">Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="561d9-107">主密钥路径。</span><span class="sxs-lookup"><span data-stu-id="561d9-107">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="561d9-108">加密算法。</span><span class="sxs-lookup"><span data-stu-id="561d9-108">The encryption algorithm.</span></span></param>
        <param name="encryptedColumnEncryptionKey"><span data-ttu-id="561d9-109">加密的列加密密钥。</span><span class="sxs-lookup"><span data-stu-id="561d9-109">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="561d9-110">对列加密密钥的指定加密值进行解密。</span><span class="sxs-lookup"><span data-stu-id="561d9-110">Decrypts the specified encrypted value of a column encryption key.</span></span> <span data-ttu-id="561d9-111">加密值应使用具有指定密钥路径的列主密钥和使用指定的算法进行加密。</span><span class="sxs-lookup"><span data-stu-id="561d9-111">The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="561d9-112">返回 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="561d9-112">Returns <see cref="T:System.Byte" />.</span></span>   
<span data-ttu-id="561d9-113">已解密的列加密密钥。</span><span class="sxs-lookup"><span data-stu-id="561d9-113">The decrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="561d9-114">主密钥路径。</span><span class="sxs-lookup"><span data-stu-id="561d9-114">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="561d9-115">加密算法。</span><span class="sxs-lookup"><span data-stu-id="561d9-115">The encryption algorithm.</span></span></param>
        <param name="columnEncryptionKey"><span data-ttu-id="561d9-116">加密的列加密密钥。</span><span class="sxs-lookup"><span data-stu-id="561d9-116">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="561d9-117">使用具有指定密钥路径的列主密钥和使用指定的算法对列加密密钥进行加密。</span><span class="sxs-lookup"><span data-stu-id="561d9-117">Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="561d9-118">返回 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="561d9-118">Returns <see cref="T:System.Byte" />.</span></span>   
<span data-ttu-id="561d9-119">加密的列加密密钥。</span><span class="sxs-lookup"><span data-stu-id="561d9-119">The encrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="abstract member SignColumnMasterKeyMetadata : string * bool -&gt; byte[]&#xA;override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="561d9-120">列主密钥路径。</span><span class="sxs-lookup"><span data-stu-id="561d9-120">The column master key path.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="561d9-121">若要指示列主密钥支持 enclave 计算，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="561d9-121"><see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="561d9-122">在派生类中实现时，使用 <paramref name="masterKeyPath" /> 参数引用的列主密钥对列主密钥元数据进行数字签名。</span><span class="sxs-lookup"><span data-stu-id="561d9-122">When implemented in a derived class, digitally signs the column master key metadata with the column master key referenced by the <paramref name="masterKeyPath" /> parameter.</span></span> <span data-ttu-id="561d9-123">用于生成签名的输入值应为 <paramref name="masterKeyPath" /> 和 <paramref name="allowEnclaveComputations" /> 参数的指定值。</span><span class="sxs-lookup"><span data-stu-id="561d9-123">The input values used to generate the signature should be the specified values of the <paramref name="masterKeyPath" /> and <paramref name="allowEnclaveComputations" /> parameters.</span></span></summary>
        <returns><span data-ttu-id="561d9-124">列主密钥元数据的签名。</span><span class="sxs-lookup"><span data-stu-id="561d9-124">The signature of the column master key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="561d9-125">为了确保该 <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> 方法不会中断依赖于旧 API 的应用程序， <xref:System.NotImplementedException> 默认情况下会引发异常。</span><span class="sxs-lookup"><span data-stu-id="561d9-125">To ensure that the <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method doesn't break applications that rely on an old API, it throws a <xref:System.NotImplementedException> exception by default.</span></span>  
  
 <span data-ttu-id="561d9-126">此 <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> 方法将用于生成列主密钥 (CMK 为客户) 的客户端工具。</span><span class="sxs-lookup"><span data-stu-id="561d9-126">The <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method will be used by client tools that generate Column Master Keys (CMK) for customers.</span></span> <span data-ttu-id="561d9-127"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> 必须由想要将 enclaves 与 [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine)一起使用的相应密钥存储提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="561d9-127"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> must be implemented by the corresponding key store providers that wish to use enclaves with [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="561d9-128">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="561d9-128">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="abstract member VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool&#xA;override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="561d9-129">列主密钥路径。</span><span class="sxs-lookup"><span data-stu-id="561d9-129">The column master key path.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="561d9-130">指示列主密钥是否支持 enclave 计算。</span><span class="sxs-lookup"><span data-stu-id="561d9-130">Indicates whether the column master key supports enclave computations.</span></span></param>
        <param name="signature"><span data-ttu-id="561d9-131">列主密钥元数据的签名。</span><span class="sxs-lookup"><span data-stu-id="561d9-131">The signature of the column master key metadata.</span></span></param>
        <summary><span data-ttu-id="561d9-132">在派生类中实现时，此方法应验证指定签名对于具有指定密钥路径和指定 enclave 行为的列主密钥是否有效。</span><span class="sxs-lookup"><span data-stu-id="561d9-132">When implemented in a derived class, this method is expected to verify the specified signature is valid for the column master key with the specified key path and the specified enclave behavior.</span></span> <span data-ttu-id="561d9-133">默认实现会引发 NotImplementedException。</span><span class="sxs-lookup"><span data-stu-id="561d9-133">The default implementation throws NotImplementedException.</span></span></summary>
        <returns><span data-ttu-id="561d9-134">在派生类中实现时，如果指定签名有效，此方法应返回 true；如果指定签名无效，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="561d9-134">When implemented in a derived class, the method is expected to return true if the specified signature is valid, or false if the specified signature is not valid.</span></span> <span data-ttu-id="561d9-135">默认实现会引发 NotImplementedException。</span><span class="sxs-lookup"><span data-stu-id="561d9-135">The default implementation throws NotImplementedException.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
