<Type Name="SqlColumnEncryptionCngProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionCngProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2522004b375134979412fed7e93f325fd6bac9c5" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="83461712" /></Metadata><TypeSignature Language="C#" Value="public class SqlColumnEncryptionCngProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlColumnEncryptionCngProvider extends System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlColumnEncryptionCngProvider&#xA;Inherits SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionCngProvider : System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionCngProvider = class&#xA;    inherit SqlColumnEncryptionKeyStoreProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5cf55-101">用于将 Microsoft API 下一代加密技术 (CNG) 与 <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> 结合使用的 CMK 存储提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="5cf55-101">The CMK Store provider implementation for using the Microsoft Cryptography API: Next Generation (CNG) with <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf55-102">允许将 Always Encrypted 列主密钥密钥存储在支持 Microsoft 加密 API：下一代（CNG）的存储中，如硬件安全模块（HSM）。</span><span class="sxs-lookup"><span data-stu-id="5cf55-102">Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft Cryptography API: Next Generation (CNG).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://techcommunity.microsoft.com/t5/sql-server/getting-started-with-always-encrypted/ba-p/384397"><span data-ttu-id="5cf55-103">Always Encrypted 入门（博客文章）</span><span class="sxs-lookup"><span data-stu-id="5cf55-103">Get started with Always Encrypted (blog post)</span></span></related>
    <related type="ExternalDocumentation" href="/sql/relational-databases/security/encryption/always-encrypted-client-development"><span data-ttu-id="5cf55-104">使用 Always Encrypted 开发应用</span><span class="sxs-lookup"><span data-stu-id="5cf55-104">Develop apps using Always Encrypted</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlColumnEncryptionCngProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlColumnEncryptionCngProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5cf55-105">初始化 <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5cf55-105">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="5cf55-106">主密钥路径。</span><span class="sxs-lookup"><span data-stu-id="5cf55-106">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="5cf55-107">加密算法。</span><span class="sxs-lookup"><span data-stu-id="5cf55-107">The encryption algorithm.</span></span></param>
        <param name="encryptedColumnEncryptionKey"><span data-ttu-id="5cf55-108">加密的列加密密钥。</span><span class="sxs-lookup"><span data-stu-id="5cf55-108">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="5cf55-109">使用由密钥路径和指定算法指定的非对称密钥对给定的加密值进行解密。</span><span class="sxs-lookup"><span data-stu-id="5cf55-109">Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm.</span></span> <span data-ttu-id="5cf55-110">密钥路径将采用格式 [ProviderName]/KeyIdentifier，并且应当为存储在指定 CNG 密钥存储提供程序中的非对称密钥。</span><span class="sxs-lookup"><span data-stu-id="5cf55-110">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.</span></span> <span data-ttu-id="5cf55-111">用于加密/解密 CEK 的有效算法是“RSA_OAEP”。</span><span class="sxs-lookup"><span data-stu-id="5cf55-111">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span></span></summary>
        <returns><span data-ttu-id="5cf55-112">已解密的列加密密钥。</span><span class="sxs-lookup"><span data-stu-id="5cf55-112">The decrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="5cf55-113">主密钥路径。</span><span class="sxs-lookup"><span data-stu-id="5cf55-113">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="5cf55-114">加密算法。</span><span class="sxs-lookup"><span data-stu-id="5cf55-114">The encryption algorithm.</span></span></param>
        <param name="columnEncryptionKey"><span data-ttu-id="5cf55-115">加密的列加密密钥。</span><span class="sxs-lookup"><span data-stu-id="5cf55-115">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="5cf55-116">通过使用由密钥路径和指定算法所指定的非对称密钥，对给定的纯文本列加密密钥进行加密。</span><span class="sxs-lookup"><span data-stu-id="5cf55-116">Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.</span></span> <span data-ttu-id="5cf55-117">密钥路径将采用格式 [ProviderName]/KeyIdentifier，并且应当为存储在指定 CNG 密钥存储提供程序中的非对称密钥。</span><span class="sxs-lookup"><span data-stu-id="5cf55-117">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.</span></span> <span data-ttu-id="5cf55-118">用于加密/解密 CEK 的有效算法是“RSA_OAEP”。</span><span class="sxs-lookup"><span data-stu-id="5cf55-118">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span></span></summary>
        <returns><span data-ttu-id="5cf55-119">加密的列加密密钥。</span><span class="sxs-lookup"><span data-stu-id="5cf55-119">The encrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public const string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Const ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5cf55-120">提供程序名称“MSSQL_CNG_STORE”的常量字符串。</span><span class="sxs-lookup"><span data-stu-id="5cf55-120">A constant string for the provider name 'MSSQL_CNG_STORE'.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="5cf55-121">列主密钥路径。</span><span class="sxs-lookup"><span data-stu-id="5cf55-121">The column master key path.</span></span> <span data-ttu-id="5cf55-122">路径格式专门用于密钥存储提供程序。</span><span class="sxs-lookup"><span data-stu-id="5cf55-122">The path format is specific to a key store provider.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="5cf55-123">若要指示列主密钥支持 enclave 计算，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5cf55-123"><see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5cf55-124">在所有情况下都会引发 <see cref="T:System.NotSupportedException" /> 异常。</span><span class="sxs-lookup"><span data-stu-id="5cf55-124">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></summary>
        <returns><span data-ttu-id="5cf55-125">列主密钥元数据的签名。</span><span class="sxs-lookup"><span data-stu-id="5cf55-125">The signature of the column master key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cf55-126"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A>方法必须由相应的密钥存储提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="5cf55-126">The <xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> method must be implemented by the corresponding key store providers.</span></span> <span data-ttu-id="5cf55-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A>应使用由密钥路径标识的非对称密钥，并对由 `masterKeyPath` 、和 providerName 组成的 masterkey 元数据进行签名 `allowEnclaveComputations` 。</span><span class="sxs-lookup"><span data-stu-id="5cf55-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of `masterKeyPath`, `allowEnclaveComputations`, and providerName.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5cf55-128">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="5cf55-128">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="5cf55-129">非对称密钥的完整路径。</span><span class="sxs-lookup"><span data-stu-id="5cf55-129">The complete path of an asymmetric key.</span></span> <span data-ttu-id="5cf55-130">路径格式专门用于密钥存储提供程序。</span><span class="sxs-lookup"><span data-stu-id="5cf55-130">The path format is specific to a key store provider.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="5cf55-131">一个布尔值，它指示是否可将此密钥发送至受信任的 enclave。</span><span class="sxs-lookup"><span data-stu-id="5cf55-131">A Boolean that indicates if this key can be sent to the trusted enclave.</span></span></param>
        <param name="signature"><span data-ttu-id="5cf55-132">主密钥元数据签名。</span><span class="sxs-lookup"><span data-stu-id="5cf55-132">The master key metadata signature.</span></span></param>
        <summary><span data-ttu-id="5cf55-133">此函数必须由相应的密钥存储提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="5cf55-133">This function must be implemented by the corresponding Key Store providers.</span></span> <span data-ttu-id="5cf55-134">此函数应使用由密钥路径标识的非对称密钥，并对由 (masterKeyPath, allowEnclaveComputations, providerName) 组成的主密钥元数据进行验证。</span><span class="sxs-lookup"><span data-stu-id="5cf55-134">This function should use an asymmetric key identified by a key path and verify the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).</span></span></summary>
        <returns><span data-ttu-id="5cf55-135">一个布尔值，它指示是否能基于提供的签名验证主密钥元数据。</span><span class="sxs-lookup"><span data-stu-id="5cf55-135">A Boolean that indicates if the master key metadata can be verified based on the provided signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
