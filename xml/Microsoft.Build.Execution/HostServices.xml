<Type Name="HostServices" FullName="Microsoft.Build.Execution.HostServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b444928aadad52b63bf5bcfbc2e0368835204ee9" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89852134" /></Metadata><TypeSignature Language="C#" Value="public class HostServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.HostServices" />
  <TypeSignature Language="VB.NET" Value="Public Class HostServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostServices" />
  <TypeSignature Language="F#" Value="type HostServices = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("#Entries={_hostObjectMap.Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("#Entries={_hostObjectMap.Count}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("#Entries={hostObjectMap.Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("#Entries={hostObjectMap.Count}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="57b87-101">可以传达从生成到宿主的访问的 HostServices 实现。</span><span class="sxs-lookup"><span data-stu-id="57b87-101">Implementation of HostServices that mediates access from the build to the host.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b87-102">另请参阅 <xref:Microsoft.Build.Utilities.Task.HostObject%2A>。</span><span class="sxs-lookup"><span data-stu-id="57b87-102">See also <xref:Microsoft.Build.Utilities.Task.HostObject%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57b87-103">创建一个宿主服务。</span><span class="sxs-lookup"><span data-stu-id="57b87-103">Creates a host service.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostObject">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskHost GetHostObject (string projectFile, string targetName, string taskName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskHost GetHostObject(string projectFile, string targetName, string taskName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.GetHostObject(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHostObject (projectFile As String, targetName As String, taskName As String) As ITaskHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITaskHost ^ GetHostObject(System::String ^ projectFile, System::String ^ targetName, System::String ^ taskName);" />
      <MemberSignature Language="F#" Value="member this.GetHostObject : string * string * string -&gt; Microsoft.Build.Framework.ITaskHost" Usage="hostServices.GetHostObject (projectFile, targetName, taskName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="57b87-104">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="57b87-104">The name of the project file.</span></span></param>
        <param name="targetName"><span data-ttu-id="57b87-105">目标的名称。</span><span class="sxs-lookup"><span data-stu-id="57b87-105">The name of the target.</span></span></param>
        <param name="taskName"><span data-ttu-id="57b87-106">与宿主服务关联的任务名称。</span><span class="sxs-lookup"><span data-stu-id="57b87-106">The task name associated with the host service.</span></span></param>
        <summary><span data-ttu-id="57b87-107">获取适用于此任务名称的任何宿主对象，其中，任务以指定名称出现在目标和项目中。</span><span class="sxs-lookup"><span data-stu-id="57b87-107">Gets any host object applicable to this task name where the task appears within a target and project with the specified names.</span></span>
<span data-ttu-id="57b87-108">如果不存在宿主对象，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="57b87-108">If no host object exists, returns null.</span></span></summary>
        <returns><span data-ttu-id="57b87-109">给定任务的宿主服务，该任务出现在宿主服务中的具有给定名称的目标和项目内。</span><span class="sxs-lookup"><span data-stu-id="57b87-109">The host service for the given task where the task appears within a target and project with the given names.</span></span> <span data-ttu-id="57b87-110">如果不存在宿主服务，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="57b87-110">If no host service exists, returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodeAffinity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.NodeAffinity GetNodeAffinity (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Build.Execution.NodeAffinity GetNodeAffinity(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.GetNodeAffinity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAffinity (projectFile As String) As NodeAffinity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::NodeAffinity GetNodeAffinity(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="member this.GetNodeAffinity : string -&gt; Microsoft.Build.Execution.NodeAffinity" Usage="hostServices.GetNodeAffinity projectFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="57b87-111">与节点关联的项目文件。</span><span class="sxs-lookup"><span data-stu-id="57b87-111">The project file associated with the node.</span></span></param>
        <summary><span data-ttu-id="57b87-112">检索特定项目文件的节点关联。</span><span class="sxs-lookup"><span data-stu-id="57b87-112">Retrieves the node affinity for a particular project file.</span></span></summary>
        <returns><span data-ttu-id="57b87-113">给定项目文件的节点关联。</span><span class="sxs-lookup"><span data-stu-id="57b87-113">The node affinity for the given project file.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRenameProject">
      <MemberSignature Language="C#" Value="public void OnRenameProject (string oldFullPath, string newFullPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRenameProject(string oldFullPath, string newFullPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.OnRenameProject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRenameProject (oldFullPath As String, newFullPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRenameProject(System::String ^ oldFullPath, System::String ^ newFullPath);" />
      <MemberSignature Language="F#" Value="member this.OnRenameProject : string * string -&gt; unit" Usage="hostServices.OnRenameProject (oldFullPath, newFullPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldFullPath" Type="System.String" />
        <Parameter Name="newFullPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldFullPath"><span data-ttu-id="57b87-114">项目文件的当前路径。</span><span class="sxs-lookup"><span data-stu-id="57b87-114">The current path to the project file.</span></span></param>
        <param name="newFullPath"><span data-ttu-id="57b87-115">项目文件的新路径。</span><span class="sxs-lookup"><span data-stu-id="57b87-115">The new path to the project file.</span></span></param>
        <summary><span data-ttu-id="57b87-116">在重命名项目时更新宿主对象表。</span><span class="sxs-lookup"><span data-stu-id="57b87-116">Updates the host object table when a project is renamed.</span></span>
<span data-ttu-id="57b87-117">旧的完整路径可能为 null。</span><span class="sxs-lookup"><span data-stu-id="57b87-117">Old full path may be null.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b87-118">当为项目提供新的完整路径并且旧路径为空时，该项目将命名为。</span><span class="sxs-lookup"><span data-stu-id="57b87-118">A project is named when it is given a new full path and the old path is null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterHostObject">
      <MemberSignature Language="C#" Value="public void RegisterHostObject (string projectFile, string targetName, string taskName, Microsoft.Build.Framework.ITaskHost hostObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHostObject(string projectFile, string targetName, string taskName, class Microsoft.Build.Framework.ITaskHost hostObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.RegisterHostObject(System.String,System.String,System.String,Microsoft.Build.Framework.ITaskHost)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHostObject (projectFile As String, targetName As String, taskName As String, hostObject As ITaskHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHostObject(System::String ^ projectFile, System::String ^ targetName, System::String ^ taskName, Microsoft::Build::Framework::ITaskHost ^ hostObject);" />
      <MemberSignature Language="F#" Value="member this.RegisterHostObject : string * string * string * Microsoft.Build.Framework.ITaskHost -&gt; unit" Usage="hostServices.RegisterHostObject (projectFile, targetName, taskName, hostObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="hostObject" Type="Microsoft.Build.Framework.ITaskHost" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="57b87-119">包含任务/目标对的项目文件。</span><span class="sxs-lookup"><span data-stu-id="57b87-119">The project file containing the task/target pair.</span></span></param>
        <param name="targetName"><span data-ttu-id="57b87-120">目标的名称。</span><span class="sxs-lookup"><span data-stu-id="57b87-120">The name of the target.</span></span></param>
        <param name="taskName"><span data-ttu-id="57b87-121">任务的名称。</span><span class="sxs-lookup"><span data-stu-id="57b87-121">The name of the task.</span></span></param>
        <param name="hostObject"><span data-ttu-id="57b87-122">宿主服务。</span><span class="sxs-lookup"><span data-stu-id="57b87-122">The host service.</span></span></param>
        <summary><span data-ttu-id="57b87-123">注册特定任务/目标对的宿主对象。</span><span class="sxs-lookup"><span data-stu-id="57b87-123">Register a host object for a particular task/target pair.</span></span>
<span data-ttu-id="57b87-124">覆盖任何现有的宿主对象。</span><span class="sxs-lookup"><span data-stu-id="57b87-124">Overwrites any existing host object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b87-125">覆盖任何现有宿主服务。</span><span class="sxs-lookup"><span data-stu-id="57b87-125">Overwrites any existing host service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterHostObject">
      <MemberSignature Language="C#" Value="public void RegisterHostObject (string projectFile, string targetName, string taskName, string monikerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHostObject(string projectFile, string targetName, string taskName, string monikerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.RegisterHostObject(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHostObject (projectFile As String, targetName As String, taskName As String, monikerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHostObject(System::String ^ projectFile, System::String ^ targetName, System::String ^ taskName, System::String ^ monikerName);" />
      <MemberSignature Language="F#" Value="member this.RegisterHostObject : string * string * string * string -&gt; unit" Usage="hostServices.RegisterHostObject (projectFile, targetName, taskName, monikerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="msbuild-16" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="msbuild-16" />
        <Parameter Name="taskName" Type="System.String" Index="2" FrameworkAlternate="msbuild-16" />
        <Parameter Name="monikerName" Type="System.String" Index="3" FrameworkAlternate="msbuild-16" />
      </Parameters>
      <Docs>
        <param name="projectFile">To be added.</param>
        <param name="targetName">To be added.</param>
        <param name="taskName">To be added.</param>
        <param name="monikerName"><span data-ttu-id="57b87-126">用于在 ROT 中注册宿主对象的名字对象</span><span class="sxs-lookup"><span data-stu-id="57b87-126">the Moniker used to register host object in ROT</span></span></param>
        <summary><span data-ttu-id="57b87-127">为特定任务/目标对注册远程宿主对象。</span><span class="sxs-lookup"><span data-stu-id="57b87-127">Register a remote host object for a particular task/target pair.</span></span>
<span data-ttu-id="57b87-128">远程宿主对象要求已经在运行对象表 (ROT) 中注册。</span><span class="sxs-lookup"><span data-stu-id="57b87-128">The remote host object require registered in Running Object Table(ROT) already.</span></span>
<span data-ttu-id="57b87-129">覆盖任何现有的宿主对象。</span><span class="sxs-lookup"><span data-stu-id="57b87-129">Overwrites any existing host object.</span></span>
            
<span data-ttu-id="57b87-130">这是调用方的职责：维护宿主对象的实时周期。</span><span class="sxs-lookup"><span data-stu-id="57b87-130">It's caller's responsibly: To maintain the live cycle of the host object.</span></span>
<span data-ttu-id="57b87-131">从 ROT 注册和注销。</span><span class="sxs-lookup"><span data-stu-id="57b87-131">Register and unregister from ROT.</span></span>
<span data-ttu-id="57b87-132">确保宿主对象具有可在任务中使用的适当 COM 接口。</span><span class="sxs-lookup"><span data-stu-id="57b87-132">Ensure the host object has appropriate COM interface that can be used in task.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNodeAffinity">
      <MemberSignature Language="C#" Value="public void SetNodeAffinity (string projectFile, Microsoft.Build.Execution.NodeAffinity nodeAffinity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNodeAffinity(string projectFile, valuetype Microsoft.Build.Execution.NodeAffinity nodeAffinity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.SetNodeAffinity(System.String,Microsoft.Build.Execution.NodeAffinity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNodeAffinity (projectFile As String, nodeAffinity As NodeAffinity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNodeAffinity(System::String ^ projectFile, Microsoft::Build::Execution::NodeAffinity nodeAffinity);" />
      <MemberSignature Language="F#" Value="member this.SetNodeAffinity : string * Microsoft.Build.Execution.NodeAffinity -&gt; unit" Usage="hostServices.SetNodeAffinity (projectFile, nodeAffinity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="nodeAffinity" Type="Microsoft.Build.Execution.NodeAffinity" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="57b87-133">项目文件。</span><span class="sxs-lookup"><span data-stu-id="57b87-133">The project file.</span></span>  <span data-ttu-id="57b87-134">如果设置为 String.Empty，则所有项目都将使用指定的关联。</span><span class="sxs-lookup"><span data-stu-id="57b87-134">If set to String.Empty, all projects will use the specified affinity.</span></span>  <span data-ttu-id="57b87-135">如果设置为 null，则将清除所有关联。</span><span class="sxs-lookup"><span data-stu-id="57b87-135">If set to null, all affinities will be cleared.</span></span></param>
        <param name="nodeAffinity"><span data-ttu-id="57b87-136">要设置的 <see cref="T:Microsoft.Build.Execution.NodeAffinity" />。</span><span class="sxs-lookup"><span data-stu-id="57b87-136">The <see cref="T:Microsoft.Build.Execution.NodeAffinity" /> to set.</span></span></param>
        <summary><span data-ttu-id="57b87-137">设置特定项目文件的节点关联。</span><span class="sxs-lookup"><span data-stu-id="57b87-137">Sets the node affinity for a particular project file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterProject">
      <MemberSignature Language="C#" Value="public void UnregisterProject (string projectFullPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterProject(string projectFullPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.HostServices.UnregisterProject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterProject (projectFullPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterProject(System::String ^ projectFullPath);" />
      <MemberSignature Language="F#" Value="member this.UnregisterProject : string -&gt; unit" Usage="hostServices.UnregisterProject projectFullPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFullPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFullPath"><span data-ttu-id="57b87-138">要注销的项目的路径。</span><span class="sxs-lookup"><span data-stu-id="57b87-138">The path to the project to unregister.</span></span></param>
        <summary><span data-ttu-id="57b87-139">注销项目的宿主对象（如果有的话），并移除与其相关的任何节点关联。</span><span class="sxs-lookup"><span data-stu-id="57b87-139">Unregister the project's host objects, if any and remove any node affinities associated with it.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
