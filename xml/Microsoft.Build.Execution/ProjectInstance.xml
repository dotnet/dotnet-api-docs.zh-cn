<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2939add39af1b6d8af08deef4a71ebe2b57a9d2" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89827227" /></Metadata><TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={GlobalProperties.Count} #Properties={Properties.Count} #ItemTypes={ItemTypes.Count} #Items={Items.Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={GlobalProperties.Count} #Properties={Properties.Count} #ItemTypes={ItemTypes.Count} #Items={Items.Count}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f2e76-101">用户在克隆 ProjectInstance 时获得的内容。</span><span class="sxs-lookup"><span data-stu-id="f2e76-101">What the user gets when they clone off a ProjectInstance.</span></span>
<span data-ttu-id="f2e76-102">它们可以保存目前的操作，更改/查询项和属性，并多次调用以生成项目。</span><span class="sxs-lookup"><span data-stu-id="f2e76-102">They can hold onto this, change/query items and properties, and call it several times to build it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-103">当克隆一个项目时，此类的实例。</span><span class="sxs-lookup"><span data-stu-id="f2e76-103">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="f2e76-104">构造函数是内部的，目的是要求用户从现有项目创建项目实例。</span><span class="sxs-lookup"><span data-stu-id="f2e76-104">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="f2e76-105">新项目实例是不可变的，但实例项可添加到这些实例，并在其上设置实例属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-105">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="f2e76-106">项目实例非常有用，因为它们可以在不影响原始项目的情况下进行修改和生成。</span><span class="sxs-lookup"><span data-stu-id="f2e76-106">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="f2e76-107">此类及其任何组成部分均不允许引用 <xref:Microsoft.Build.Construction> 或 <xref:Microsoft.Build.Evaluation> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-107">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="f2e76-108">不公开项目实例目标、主机服务和任务注册表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-108">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
    <comments><span data-ttu-id="f2e76-109">此类及其任何组成部分均不允许引用任何构造或计算对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-109">Neither this class nor none of its constituents are allowed to have references to any of the Construction or Evaluation objects.</span></span>
<span data-ttu-id="f2e76-110">此类是不可变的，除非添加实例项和设置实例属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-110">This class is immutable except for adding instance items and setting instance properties.</span></span>
<span data-ttu-id="f2e76-111">它只公开项和属性：目标、主机服务和任务注册表，因为它们只是生成所涉及的内容。</span><span class="sxs-lookup"><span data-stu-id="f2e76-111">It only exposes items and properties: targets, host services, and the task registry are not exposed as they are only the concern of build.</span></span>
<span data-ttu-id="f2e76-112">构造函数是内部的，目的是为了将用户定向到项目类;这些只是通过项目对象 createable 的。</span><span class="sxs-lookup"><span data-stu-id="f2e76-112">Constructors are internal in order to direct users to Project class instead; these are only createable via Project objects.</span></span></comments>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2e76-113">创建一个新项目实例。</span><span class="sxs-lookup"><span data-stu-id="f2e76-113">Creates a new project instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f2e76-114">项目根元素</span><span class="sxs-lookup"><span data-stu-id="f2e76-114">The project root element</span></span></param>
        <summary><span data-ttu-id="f2e76-115">直接创建一个 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-115">Creates a ProjectInstance directly.</span></span>
<span data-ttu-id="f2e76-116">不创建中间 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-116">No intermediate Project object is created.</span></span>
<span data-ttu-id="f2e76-117">如果只是要生成项目，而不显示或编辑项目，则这是理想做法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-117">This is ideal if the project is simply going to be built, and not displayed or edited.</span></span>
<span data-ttu-id="f2e76-118">使用默认项目集合。</span><span class="sxs-lookup"><span data-stu-id="f2e76-118">Uses the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-119">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-119">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f2e76-120">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-120">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f2e76-121">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-121">The name of the project file.</span></span></param>
        <summary><span data-ttu-id="f2e76-122">直接创建一个 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-122">Creates a ProjectInstance directly.</span></span>
<span data-ttu-id="f2e76-123">不创建中间 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-123">No intermediate Project object is created.</span></span>
<span data-ttu-id="f2e76-124">如果只是要生成项目，而不显示或编辑项目，则这是理想做法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-124">This is ideal if the project is simply going to be built, and not displayed or edited.</span></span>
<span data-ttu-id="f2e76-125">使用默认项目集合。</span><span class="sxs-lookup"><span data-stu-id="f2e76-125">Uses the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-126">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-126">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f2e76-127">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-127">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f2e76-128">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-128">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f2e76-129">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-129">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f2e76-130">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f2e76-130">The tools version.</span></span></param>
        <summary><span data-ttu-id="f2e76-131">直接创建一个 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-131">Creates a ProjectInstance directly.</span></span>
<span data-ttu-id="f2e76-132">不创建中间 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-132">No intermediate Project object is created.</span></span>
<span data-ttu-id="f2e76-133">如果只是要生成项目，而不显示或编辑项目，则这是理想做法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-133">This is ideal if the project is simply going to be built, and not displayed or edited.</span></span>
<span data-ttu-id="f2e76-134">使用默认项目集合。</span><span class="sxs-lookup"><span data-stu-id="f2e76-134">Uses the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-135">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-135">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f2e76-136">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-136">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f2e76-137">项目根元素</span><span class="sxs-lookup"><span data-stu-id="f2e76-137">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f2e76-138">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-138">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f2e76-139">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f2e76-139">The tools version.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f2e76-140">项目集合</span><span class="sxs-lookup"><span data-stu-id="f2e76-140">Project collection</span></span></param>
        <summary><span data-ttu-id="f2e76-141">直接创建一个 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-141">Creates a ProjectInstance directly.</span></span>
<span data-ttu-id="f2e76-142">不创建中间 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-142">No intermediate Project object is created.</span></span>
<span data-ttu-id="f2e76-143">如果只是要生成项目，而不显示或编辑项目，则这是理想做法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-143">This is ideal if the project is simply going to be built, and not displayed or edited.</span></span>
<span data-ttu-id="f2e76-144">全局属性可以为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-144">Global properties may be null.</span></span>
<span data-ttu-id="f2e76-145">工具版本可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-145">Tools version may be null.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-146">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-146">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f2e76-147">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-147">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f2e76-148">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-148">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f2e76-149">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-149">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f2e76-150">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f2e76-150">The tools version.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f2e76-151">项目集合</span><span class="sxs-lookup"><span data-stu-id="f2e76-151">Project collection</span></span></param>
        <summary><span data-ttu-id="f2e76-152">直接创建一个 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-152">Creates a ProjectInstance directly.</span></span>
<span data-ttu-id="f2e76-153">不创建中间 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-153">No intermediate Project object is created.</span></span>
<span data-ttu-id="f2e76-154">如果只是要生成项目，而不显示或编辑项目，则这是理想做法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-154">This is ideal if the project is simply going to be built, and not displayed or edited.</span></span>
<span data-ttu-id="f2e76-155">全局属性可以为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-155">Global properties may be null.</span></span>
<span data-ttu-id="f2e76-156">工具版本可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-156">Tools version may be null.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-157">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-157">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f2e76-158">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-158">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String, subToolsetVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f2e76-159">项目根元素</span><span class="sxs-lookup"><span data-stu-id="f2e76-159">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f2e76-160">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-160">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f2e76-161">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f2e76-161">The tools version.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="f2e76-162">与 ToolsVersion 一起使用的子工具集版本，用于确定工具集属性集。</span><span class="sxs-lookup"><span data-stu-id="f2e76-162">The sub-toolset version, used in tandem with the ToolsVersion to determine the set of toolset properties.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f2e76-163">项目集合</span><span class="sxs-lookup"><span data-stu-id="f2e76-163">Project collection</span></span></param>
        <summary><span data-ttu-id="f2e76-164">直接创建一个 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-164">Creates a ProjectInstance directly.</span></span>
<span data-ttu-id="f2e76-165">不创建中间 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-165">No intermediate Project object is created.</span></span>
<span data-ttu-id="f2e76-166">如果只是要生成项目，而不显示或编辑项目，则这是理想做法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-166">This is ideal if the project is simply going to be built, and not displayed or edited.</span></span>
<span data-ttu-id="f2e76-167">全局属性可以为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-167">Global properties may be null.</span></span>
<span data-ttu-id="f2e76-168">工具版本可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-168">Tools version may be null.</span></span>
<span data-ttu-id="f2e76-169">子工具集版本可能为 null，但如果指定，则将重写所有其他确定子工具集的方法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-169">Sub-toolset version may be null, but if specified will override all other methods of determining the sub-toolset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-170">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-170">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f2e76-171">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-171">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String, subToolsetVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f2e76-172">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-172">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f2e76-173">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-173">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f2e76-174">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f2e76-174">The tools version.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="f2e76-175">与 ToolsVersion 一起使用的子工具集版本，用于确定工具集属性集。</span><span class="sxs-lookup"><span data-stu-id="f2e76-175">The sub-toolset version, used in tandem with the ToolsVersion to determine the set of toolset properties.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f2e76-176">项目集合</span><span class="sxs-lookup"><span data-stu-id="f2e76-176">Project collection</span></span></param>
        <summary><span data-ttu-id="f2e76-177">直接创建一个 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-177">Creates a ProjectInstance directly.</span></span>
<span data-ttu-id="f2e76-178">不创建中间 Project 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-178">No intermediate Project object is created.</span></span>
<span data-ttu-id="f2e76-179">如果只是要生成项目，而不显示或编辑项目，则这是理想做法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-179">This is ideal if the project is simply going to be built, and not displayed or edited.</span></span>
<span data-ttu-id="f2e76-180">全局属性可以为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-180">Global properties may be null.</span></span>
<span data-ttu-id="f2e76-181">工具版本可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-181">Tools version may be null.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-182">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-182">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f2e76-183">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-183">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2e76-184">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-184">Adds an item with no metadata to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f2e76-185">要添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="f2e76-185">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="f2e76-186">该项的计算的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-186">The evaluated Include attribute of the item.</span></span></param>
        <summary><span data-ttu-id="f2e76-187">将不含元数据的项添加到项目中</span><span class="sxs-lookup"><span data-stu-id="f2e76-187">Adds an item with no metadata to the project</span></span></summary>
        <returns><span data-ttu-id="f2e76-188">新项目。</span><span class="sxs-lookup"><span data-stu-id="f2e76-188">The new item.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-189">我们不会使用 ProjectItemInstance 来确保没有其他 ProjectInstance 正在使用的帐户。</span><span class="sxs-lookup"><span data-stu-id="f2e76-189">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span></remarks>
        <comments><span data-ttu-id="f2e76-190">为了声明定义此项的项目 (以便与 DeclaringProject \* metadata) 一起使用，入口点项目用于合成项，如此 API 添加的项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-190">For purposes of declaring the project that defined this item (for use with e.g. the DeclaringProject\* metadata), the entrypoint project is used for synthesized items like those added by this API.</span></span></comments>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f2e76-191">要添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="f2e76-191">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="f2e76-192">该项的计算的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-192">The evaluated Include attribute of the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="f2e76-193">该项的元数据。</span><span class="sxs-lookup"><span data-stu-id="f2e76-193">The metadata of the item.</span></span></param>
        <summary><span data-ttu-id="f2e76-194">向此项目中添加包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-194">Adds an item with metadata to the project.</span></span>
<span data-ttu-id="f2e76-195">元数据可以为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-195">Metadata may be null.</span></span></summary>
        <returns><span data-ttu-id="f2e76-196">返回新项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-196">Return the new item.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-197">我们不会使用 ProjectItemInstance 来确保没有其他 ProjectInstance 正在使用的帐户。</span><span class="sxs-lookup"><span data-stu-id="f2e76-197">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span></remarks>
        <comments><span data-ttu-id="f2e76-198">为了声明定义此项的项目 (以便与 DeclaringProject \* metadata) 一起使用，入口点项目用于合成项，如此 API 添加的项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-198">For purposes of declaring the project that defined this item (for use with e.g. the DeclaringProject\* metadata), the entrypoint project is used for synthesized items like those added by this API.</span></span></comments>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2e76-199">使用项目集合的记录器生成项目的默认目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-199">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2e76-200">使用项目集合的记录器生成默认目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-200">Build default target/s with loggers of the project collection.</span></span>
<span data-ttu-id="f2e76-201">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-201">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-202">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-202">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-203">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-203"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="f2e76-204">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-204">The loggers to use for the build.</span></span> <span data-ttu-id="f2e76-205">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-205">May be null.</span></span></param>
        <summary><span data-ttu-id="f2e76-206">使用指定记录器生成默认目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-206">Build default target/s with specified loggers.</span></span>
<span data-ttu-id="f2e76-207">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-207">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-208">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-208">Loggers may be null.</span></span>
<span data-ttu-id="f2e76-209">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-209">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-210">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-210"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-211">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f2e76-211">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="f2e76-212">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-212">The loggers to use for the build.</span></span> <span data-ttu-id="f2e76-213">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-213">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f2e76-214">要用于生成的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-214">The remote loggers to use for the build.</span></span> <span data-ttu-id="f2e76-215">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-215">May be null.</span></span></param>
        <summary><span data-ttu-id="f2e76-216">使用指定记录器生成默认目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-216">Build default target/s with specified loggers.</span></span>
<span data-ttu-id="f2e76-217">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-217">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-218">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-218">Loggers may be null.</span></span>
<span data-ttu-id="f2e76-219">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-219">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-220">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-220"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-221">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f2e76-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f2e76-222">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-222">The target to build.</span></span> <span data-ttu-id="f2e76-223">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-223">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f2e76-224">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-224">The loggers to use for the build.</span></span> <span data-ttu-id="f2e76-225">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-225">May be null.</span></span></param>
        <summary><span data-ttu-id="f2e76-226">使用指定记录器生成目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-226">Build a target with specified loggers.</span></span>
<span data-ttu-id="f2e76-227">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-227">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-228">目标可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-228">Target may be null.</span></span>
<span data-ttu-id="f2e76-229">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-229">Loggers may be null.</span></span>
<span data-ttu-id="f2e76-230">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-230">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-231">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-231"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-232">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f2e76-232">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f2e76-233">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-233">The targets to build.</span></span> <span data-ttu-id="f2e76-234">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-234">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f2e76-235">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-235">The loggers to use for the build.</span></span> <span data-ttu-id="f2e76-236">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-236">May be null.</span></span></param>
        <summary><span data-ttu-id="f2e76-237">使用指定的记录器生成一个目标列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-237">Build a list of targets with specified loggers.</span></span>
<span data-ttu-id="f2e76-238">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-238">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-239">目标和</span><span class="sxs-lookup"><span data-stu-id="f2e76-239">Targets may be null.</span></span>
<span data-ttu-id="f2e76-240">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-240">Loggers may be null.</span></span>
<span data-ttu-id="f2e76-241">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-241">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-242">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-242"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-243">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f2e76-243">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f2e76-244">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-244">The target to build.</span></span> <span data-ttu-id="f2e76-245">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-245">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f2e76-246">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-246">The loggers to use for the build.</span></span> <span data-ttu-id="f2e76-247">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-247">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f2e76-248">要用于生成的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-248">The remote loggers to use for the build.</span></span> <span data-ttu-id="f2e76-249">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-249">May be null.</span></span></param>
        <summary><span data-ttu-id="f2e76-250">使用指定记录器生成目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-250">Build a target with specified loggers.</span></span>
<span data-ttu-id="f2e76-251">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-251">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-252">目标可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-252">Target may be null.</span></span>
<span data-ttu-id="f2e76-253">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-253">Loggers may be null.</span></span>
<span data-ttu-id="f2e76-254">远程记录器可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-254">Remote loggers may be null.</span></span>
<span data-ttu-id="f2e76-255">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-255">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-256">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-256"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-257">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f2e76-257">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * IDictionary -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f2e76-258">要生成的目标的列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-258">List of targets to build.</span></span> <span data-ttu-id="f2e76-259">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-259">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f2e76-260">要用于生成目标的记录器的枚举列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-260">Enumerated list of loggers to use for building targets.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="f2e76-261">目标生成的输出。</span><span class="sxs-lookup"><span data-stu-id="f2e76-261">Outputs of target builds.</span></span></param>
        <summary><span data-ttu-id="f2e76-262">使用指定的记录器生成一个目标列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-262">Build a list of targets with specified loggers.</span></span>
<span data-ttu-id="f2e76-263">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-263">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-264">目标和</span><span class="sxs-lookup"><span data-stu-id="f2e76-264">Targets may be null.</span></span>
<span data-ttu-id="f2e76-265">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-265">Loggers may be null.</span></span>
<span data-ttu-id="f2e76-266">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-266">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-267">如果成功，则为 <see langword="true" />；如果失败，则为 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-267"><see langword="true" /> on success, false on failure.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-268">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f2e76-268">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f2e76-269">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-269">The targets to build.</span></span> <span data-ttu-id="f2e76-270">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-270">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f2e76-271">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-271">The loggers to use for the build.</span></span> <span data-ttu-id="f2e76-272">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-272">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f2e76-273">要用于生成的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-273">The remote loggers to use for the build.</span></span> <span data-ttu-id="f2e76-274">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-274">May be null.</span></span></param>
        <summary><span data-ttu-id="f2e76-275">使用指定的记录器生成一个目标列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-275">Build a list of targets with specified loggers.</span></span>
<span data-ttu-id="f2e76-276">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-276">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-277">目标和</span><span class="sxs-lookup"><span data-stu-id="f2e76-277">Targets may be null.</span></span>
<span data-ttu-id="f2e76-278">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-278">Loggers may be null.</span></span>
<span data-ttu-id="f2e76-279">远程记录器可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-279">Remote loggers may be null.</span></span>
<span data-ttu-id="f2e76-280">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-280">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-281">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-281"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-282">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f2e76-282">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; * IDictionary -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f2e76-283">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-283">The targets to build.</span></span> <span data-ttu-id="f2e76-284">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-284">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f2e76-285">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-285">The loggers to use for the build.</span></span> <span data-ttu-id="f2e76-286">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-286">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f2e76-287">要用于生成的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-287">The remote loggers to use for the build.</span></span> <span data-ttu-id="f2e76-288">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-288">May be null.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="f2e76-289">目标输出。</span><span class="sxs-lookup"><span data-stu-id="f2e76-289">The target outputs.</span></span></param>
        <summary><span data-ttu-id="f2e76-290">使用指定的记录器生成一个目标列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-290">Build a list of targets with specified loggers.</span></span>
<span data-ttu-id="f2e76-291">如果成功，则返回 true；如果失败，则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-291">Returns true on success, false on failure.</span></span>
<span data-ttu-id="f2e76-292">目标和</span><span class="sxs-lookup"><span data-stu-id="f2e76-292">Targets may be null.</span></span>
<span data-ttu-id="f2e76-293">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-293">Loggers may be null.</span></span>
<span data-ttu-id="f2e76-294">远程记录器可能为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-294">Remote loggers may be null.</span></span>
<span data-ttu-id="f2e76-295">仅当可变时才有效。</span><span class="sxs-lookup"><span data-stu-id="f2e76-295">Only valid if mutable.</span></span></summary>
        <returns><span data-ttu-id="f2e76-296">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-296"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-297">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f2e76-297">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2e76-298">创建此项目的独立的深层克隆以及其中的所有内容。</span><span class="sxs-lookup"><span data-stu-id="f2e76-298">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="f2e76-299">这对于编译单个文件或在各生成之间保留生成结果很有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-299">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2e76-300">创建此对象的独立的深层克隆以及其中的所有内容。</span><span class="sxs-lookup"><span data-stu-id="f2e76-300">Create an independent, deep clone of this object and everything in it.</span></span>
<span data-ttu-id="f2e76-301">这对于编译单个文件或在各生成之间保留生成结果很有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-301">Useful for compiling a single file; or for keeping build results between builds.</span></span>
<span data-ttu-id="f2e76-302">复本与原始的可变性相同。</span><span class="sxs-lookup"><span data-stu-id="f2e76-302">Clone has the same mutability as the original.</span></span></summary>
        <returns><span data-ttu-id="f2e76-303">创建此项目的独立的深层克隆。</span><span class="sxs-lookup"><span data-stu-id="f2e76-303">Creates an independent, deep clone of this project.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="isImmutable"><span data-ttu-id="f2e76-304">标志指示克隆可变性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-304">Flag indicating clone mutability.</span></span></param>
        <summary><span data-ttu-id="f2e76-305">创建此对象的独立的深层克隆以及其中的所有内容，带有指定可变性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-305">Create an independent, deep clone of this object and everything in it, with specified mutability.</span></span>
<span data-ttu-id="f2e76-306">这对于编译单个文件或在各生成之间保留生成结果很有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-306">Useful for compiling a single file; or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="f2e76-307">此项目的独立的深层克隆，带有指定可变性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-307">An independent, deep clone of this project, with specified mutability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-308">项目中指定的 DefaultTargets，如果项目中未指定 DefaultTargets，则为逻辑上的第一个目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-308">DefaultTargets specified in the project, or the logically first target if no DefaultTargets is specified in the project.</span></span>
<span data-ttu-id="f2e76-309">如果未显式指定要生成的目标，则生成将生成这些目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-309">The build builds these if no targets are explicitly specified to build.</span></span></summary>
        <value><span data-ttu-id="f2e76-310">此项目的默认目标的列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-310">The list of default targets for this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-311">如果未显式指定任何目标，则生成默认目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-311">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-312">项目的根目录，用于计算相对路径以及在生成期间设置当前目录。</span><span class="sxs-lookup"><span data-stu-id="f2e76-312">The project's root directory, for evaluation of relative paths and setting the current directory during build.</span></span>
<span data-ttu-id="f2e76-313">决不会为 null：如果未从磁盘加载项目，则使用开始生成时的当前目录。</span><span class="sxs-lookup"><span data-stu-id="f2e76-313">Is never null: projects not loaded from disk use the current directory from the time the build started.</span></span></summary>
        <value><span data-ttu-id="f2e76-314">项目根目录，它绝不会为 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-314">The project root directory, which is never null.</span></span> <span data-ttu-id="f2e76-315">如果未从磁盘加载项目，则返回开始生成时的当前目录。</span><span class="sxs-lookup"><span data-stu-id="f2e76-315">Projects not loaded from disk return the current directory at the time the build was started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="f2e76-316">要扩展的字符串。</span><span class="sxs-lookup"><span data-stu-id="f2e76-316">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="f2e76-317">通过以下方法将提供的字符串作为条件进行计算：扩展项和属性，使用可用的当前项和属性，然后执行逻辑计算。</span><span class="sxs-lookup"><span data-stu-id="f2e76-317">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span></span>
<span data-ttu-id="f2e76-318">这适用于即时窗口。</span><span class="sxs-lookup"><span data-stu-id="f2e76-318">This is useful for the immediate window.</span></span>
<span data-ttu-id="f2e76-319">不扩展空的元数据表达式。</span><span class="sxs-lookup"><span data-stu-id="f2e76-319">Does not expand bare metadata expressions.</span></span></summary>
        <returns><span data-ttu-id="f2e76-320">如果字符串的计算结果为 true，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-320"><see langword="true" /> if the string evaluates to true; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-321">这适用于即时窗口。</span><span class="sxs-lookup"><span data-stu-id="f2e76-321">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="f2e76-322">不扩展空的元数据表达式。</span><span class="sxs-lookup"><span data-stu-id="f2e76-322">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
        <comment><span data-ttu-id="f2e76-323">不供内部使用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-323">Not for internal use.</span></span></comment>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedItemElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Microsoft.Build.Construction.ProjectItemElement&gt; EvaluatedItemElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Microsoft.Build.Construction.ProjectItemElement&gt; EvaluatedItemElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.EvaluatedItemElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedItemElements As List(Of ProjectItemElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;Microsoft::Build::Construction::ProjectItemElement ^&gt; ^ EvaluatedItemElements { System::Collections::Generic::List&lt;Microsoft::Build::Construction::ProjectItemElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedItemElements : System.Collections.Generic.List&lt;Microsoft.Build.Construction.ProjectItemElement&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.EvaluatedItemElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.Build.Construction.ProjectItemElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-324">获取包含计算项的 <see cref="T:System.Collections.Generic.List`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f2e76-324">Gets a <see cref="T:System.Collections.Generic.List`1" /> object containing evaluated items.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationId">
      <MemberSignature Language="C#" Value="public int EvaluationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.EvaluationId" />
      <MemberSignature Language="VB.NET" Value="Public Property EvaluationId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationId : int with get, set" Usage="Microsoft.Build.Execution.ProjectInstance.EvaluationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-325">生成此 ProjectInstance 的计算 ID。</span><span class="sxs-lookup"><span data-stu-id="f2e76-325">The ID of the evaluation that produced this ProjectInstance.</span></span>
            
<span data-ttu-id="f2e76-326">请参阅 <see cref="P:Microsoft.Build.Evaluation.Project.LastEvaluationId" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-326">See <see cref="P:Microsoft.Build.Evaluation.Project.LastEvaluationId" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="f2e76-327">要扩展的字符串。</span><span class="sxs-lookup"><span data-stu-id="f2e76-327">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="f2e76-328">通过以下方法计算提供的字符串：扩展项和属性，使用可用的当前项和属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-328">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span></span>
<span data-ttu-id="f2e76-329">这对于某些主机或调试器即时窗口很有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-329">This is useful for some hosts, or for the debugger immediate window.</span></span>
<span data-ttu-id="f2e76-330">不扩展空的元数据表达式。</span><span class="sxs-lookup"><span data-stu-id="f2e76-330">Does not expand bare metadata expressions.</span></span></summary>
        <returns><span data-ttu-id="f2e76-331">扩展的字符串值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-331">The expanded string value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-332">这对于某些主机或调试器即时窗口很有用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-332">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="f2e76-333">不扩展空的元数据表达式。</span><span class="sxs-lookup"><span data-stu-id="f2e76-333">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
        <comment><span data-ttu-id="f2e76-334">不供内部使用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-334">Not for internal use.</span></span></comment>
      </Docs>
    </Member>
    <Member MemberName="FilteredCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance FilteredCopy (Microsoft.Build.Execution.RequestedProjectState filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance FilteredCopy(class Microsoft.Build.Execution.RequestedProjectState filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.FilteredCopy(Microsoft.Build.Execution.RequestedProjectState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilteredCopy (filter As RequestedProjectState) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ FilteredCopy(Microsoft::Build::Execution::RequestedProjectState ^ filter);" />
      <MemberSignature Language="F#" Value="member this.FilteredCopy : Microsoft.Build.Execution.RequestedProjectState -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.FilteredCopy filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Microsoft.Build.Execution.RequestedProjectState" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="f2e76-335">应返回的项目状态。</span><span class="sxs-lookup"><span data-stu-id="f2e76-335">Project state that should be returned.</span></span></param>
        <summary><span data-ttu-id="f2e76-336">创建此对象的独立克隆，只保留显式请求的项目状态。</span><span class="sxs-lookup"><span data-stu-id="f2e76-336">Create an independent clone of this object, keeping ONLY the explicitly requested project state.</span></span></summary>
        <returns />
        <remarks><span data-ttu-id="f2e76-337">适用于降低用于设计时生成的 IPC 的线路开销，只需填充一组已知的数据即可。</span><span class="sxs-lookup"><span data-stu-id="f2e76-337">Useful for reducing the wire cost of IPC for out-of-proc nodes used during design-time builds that only need to populate a known set of data.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Execution.ProjectInstance FromFile (string file, Microsoft.Build.Definition.ProjectOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Execution.ProjectInstance FromFile(string file, class Microsoft.Build.Definition.ProjectOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.FromFile(System.String,Microsoft.Build.Definition.ProjectOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFile (file As String, options As ProjectOptions) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Execution::ProjectInstance ^ FromFile(System::String ^ file, Microsoft::Build::Definition::ProjectOptions ^ options);" />
      <MemberSignature Language="F#" Value="static member FromFile : string * Microsoft.Build.Definition.ProjectOptions -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="Microsoft.Build.Execution.ProjectInstance.FromFile (file, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" Index="0" FrameworkAlternate="msbuild-16;msbuild-16-netcore" />
        <Parameter Name="options" Type="Microsoft.Build.Definition.ProjectOptions" Index="1" FrameworkAlternate="msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="f2e76-338">要从中计算 ProjectInstance 的文件。</span><span class="sxs-lookup"><span data-stu-id="f2e76-338">The file to evaluate the ProjectInstance from.</span></span></param>
        <param name="options"><span data-ttu-id="f2e76-339">要使用的 <see cref="T:Microsoft.Build.Definition.ProjectOptions" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-339">The <see cref="T:Microsoft.Build.Definition.ProjectOptions" /> to use.</span></span></param>
        <summary><span data-ttu-id="f2e76-340">创建基于文件的 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-340">Create a file based ProjectInstance.</span></span></summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromProjectRootElement">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Execution.ProjectInstance FromProjectRootElement (Microsoft.Build.Construction.ProjectRootElement rootElement, Microsoft.Build.Definition.ProjectOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Build.Execution.ProjectInstance FromProjectRootElement(class Microsoft.Build.Construction.ProjectRootElement rootElement, class Microsoft.Build.Definition.ProjectOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.FromProjectRootElement(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Definition.ProjectOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromProjectRootElement (rootElement As ProjectRootElement, options As ProjectOptions) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Build::Execution::ProjectInstance ^ FromProjectRootElement(Microsoft::Build::Construction::ProjectRootElement ^ rootElement, Microsoft::Build::Definition::ProjectOptions ^ options);" />
      <MemberSignature Language="F#" Value="static member FromProjectRootElement : Microsoft.Build.Construction.ProjectRootElement * Microsoft.Build.Definition.ProjectOptions -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="Microsoft.Build.Execution.ProjectInstance.FromProjectRootElement (rootElement, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootElement" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="msbuild-16;msbuild-16-netcore" />
        <Parameter Name="options" Type="Microsoft.Build.Definition.ProjectOptions" Index="1" FrameworkAlternate="msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="rootElement"><span data-ttu-id="f2e76-341">要从中计算 ProjectInstance 的 <see cref="T:Microsoft.Build.Construction.ProjectRootElement" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-341">The <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> to evaluate the ProjectInstance from.</span></span></param>
        <param name="options"><span data-ttu-id="f2e76-342">要使用的 <see cref="T:Microsoft.Build.Definition.ProjectOptions" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-342">The <see cref="T:Microsoft.Build.Definition.ProjectOptions" /> to use.</span></span></param>
        <summary><span data-ttu-id="f2e76-343">创建基于 <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> 的 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="f2e76-343">Create a <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> based ProjectInstance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-344">项目的完整路径，用于记录。</span><span class="sxs-lookup"><span data-stu-id="f2e76-344">The full path to the project, for logging.</span></span>
<span data-ttu-id="f2e76-345">如果该项目从未指定路径，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="f2e76-345">If the project was never given a path, returns empty string.</span></span></summary>
        <value><span data-ttu-id="f2e76-346">项目文件的完整路径， <see langword="null" /> 如果该项目从不命名，则为。</span><span class="sxs-lookup"><span data-stu-id="f2e76-346">The full path to the project file, or <see langword="null" /> if the project was never named.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2e76-347">获取所提供的项定义的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="f2e76-347">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f2e76-348">要计算和转义的项定义。</span><span class="sxs-lookup"><span data-stu-id="f2e76-348">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="f2e76-349">返回所提供的项定义的 include 的经计算的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-349">Returns the evaluated, escaped value of the provided item definition's include.</span></span></summary>
        <returns><span data-ttu-id="f2e76-350">所提供的项定义的 Include 属性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="f2e76-350">The evaluated, escaped value of the Include attribute of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f2e76-351">要计算和转义的项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-351">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="f2e76-352">返回所提供的项的 include 的经计算的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-352">Returns the evaluated, escaped value of the provided item's include.</span></span></summary>
        <returns><span data-ttu-id="f2e76-353">所提供的项的 Include 属性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="f2e76-353">The evaluated, escaped value of the Include attribute of the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f2e76-354">要检索的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="f2e76-354">The item type of the items to be retrieved.</span></span></param>
        <summary><span data-ttu-id="f2e76-355">获取指定类型的项目中所有项的列表，如果没有任何项，则为空列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-355">Get a list of all the items in the project of the specified type, or an empty list if there are none.</span></span>
<span data-ttu-id="f2e76-356">这是一个只读列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-356">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="f2e76-357">此项目中的指定类型的所有项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-357">All the items in this project of the specified type.</span></span> <span data-ttu-id="f2e76-358">如果不存在任何指定类型的项，则返回一个空列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-358">Returns an empty list if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-15;msbuild-15-netcore">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Execution.ProjectInstance/&lt;GetItemsByItemTypeAndEvaluatedInclude&gt;d__175))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Execution.ProjectInstance/&lt;GetItemsByItemTypeAndEvaluatedInclude&gt;d__175))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="msbuild-16;msbuild-16-netcore">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Execution.ProjectInstance/&lt;GetItemsByItemTypeAndEvaluatedInclude&gt;d__190))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Build.Execution.ProjectInstance/&lt;GetItemsByItemTypeAndEvaluatedInclude&gt;d__190))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="evaluatedInclude" Type="System.String" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f2e76-359">要检索的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="f2e76-359">The item type of the items to be retrieved.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="f2e76-360">包含要检索的项的值的估计。</span><span class="sxs-lookup"><span data-stu-id="f2e76-360">The evaluated include value of the items to be retrieved</span></span></param>
        <summary><span data-ttu-id="f2e76-361">按项类型和计算的 include 值获取项</span><span class="sxs-lookup"><span data-stu-id="f2e76-361">get items by item type and evaluated include value</span></span></summary>
        <returns><span data-ttu-id="f2e76-362">此项目中的指定类型的所有项和已计算的 include 值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-362">All the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="f2e76-363">如果不存在任何指定类型的项，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="f2e76-363">Returns an empty collection if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2e76-364">获取所提供的项定义中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-364">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="f2e76-365">要转义的元数据。</span><span class="sxs-lookup"><span data-stu-id="f2e76-365">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="f2e76-366">获取所提供的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-366">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="f2e76-367">所提供的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-367">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f2e76-368">要提供元数据值的项定义。</span><span class="sxs-lookup"><span data-stu-id="f2e76-368">The item definition to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="f2e76-369">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-369">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="f2e76-370">获取所提供的项定义上具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-370">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="f2e76-371">所提供的项定义中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-371">The escaped value of the metadatum with the provided name of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f2e76-372">要提供元数据值的项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-372">The item to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="f2e76-373">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-373">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="f2e76-374">获取所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-374">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="f2e76-375">所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-375">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f2e76-376">要检索的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-376">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="f2e76-377">获取具有指定名称的项中的任何属性；否则返回 null</span><span class="sxs-lookup"><span data-stu-id="f2e76-377">Get any property in the item that has the specified name, otherwise returns null</span></span></summary>
        <returns><span data-ttu-id="f2e76-378">具有给定名称的属性，或如果不存在具有该名称的属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-378">The property with the given name, or <see langword="null" /> if no property exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f2e76-379">要检索其值的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-379">The name of the property whose value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="f2e76-380">获取此项目中属性的值，如果属性不存在，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="f2e76-380">Get the value of a property in this project, or an empty string if it does not exist.</span></span></summary>
        <returns><span data-ttu-id="f2e76-381">具有给定名称的属性的值，或如果不存在具有该名称的属性，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="f2e76-381">The value of the property with the given name, or an empty string if no property exists with that name.</span></span> <span data-ttu-id="f2e76-382">返回的值没有转义的字符序列。</span><span class="sxs-lookup"><span data-stu-id="f2e76-382">The value returned has no escaped character sequences.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-383">如果属性的值为空字符串，并且根本没有属性，则不能在此方法之间区分。</span><span class="sxs-lookup"><span data-stu-id="f2e76-383">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span>
<span data-ttu-id="f2e76-384">这是因为生成不区分这两者。</span><span class="sxs-lookup"><span data-stu-id="f2e76-384">This is because the build does not distinguish between the two.</span></span>
<span data-ttu-id="f2e76-385">当用户可以简单地执行 GetProperty ( 时，此方法存在的原因。) 。EvaluatedValue，每次调用方都必须检查 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-385">The reason this method exists when users can simply do GetProperty(..).EvaluatedValue, is that the caller would have to check for null every time.</span></span> <span data-ttu-id="f2e76-386">对于属性，空和未定义不区分大小写，因此，在任何一种情况下，也可以使用返回空字符串的方法。</span><span class="sxs-lookup"><span data-stu-id="f2e76-386">For properties, empty and undefined are not distinguished, so it much more useful to also have a method that returns empty string in either case.</span></span>
<span data-ttu-id="f2e76-387">此函数返回非转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-387">This function returns the unescaped value.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="f2e76-388">要转义的属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-388">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="f2e76-389">获取所提供的属性的转义值</span><span class="sxs-lookup"><span data-stu-id="f2e76-389">Get the escaped value of the provided property</span></span></summary>
        <returns><span data-ttu-id="f2e76-390">所提供的属性的转义值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-390">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-391">计算此项目所用的全局属性（如果有）。</span><span class="sxs-lookup"><span data-stu-id="f2e76-391">Global properties this project was evaluated with, if any.</span></span>
<span data-ttu-id="f2e76-392">只读集合。</span><span class="sxs-lookup"><span data-stu-id="f2e76-392">Read only collection.</span></span>
<span data-ttu-id="f2e76-393">遍历项目引用。</span><span class="sxs-lookup"><span data-stu-id="f2e76-393">Traverses project references.</span></span></summary>
        <value><span data-ttu-id="f2e76-394">计算此项目所用的全局属性的字典。</span><span class="sxs-lookup"><span data-stu-id="f2e76-394">The dictionary of global properties this project was evaluated with.</span></span></value>
        <remarks><span data-ttu-id="f2e76-395">这是公开的 getter，转换为只读停滞 IDictionary &lt; 字符串字符串 &gt; 。</span><span class="sxs-lookup"><span data-stu-id="f2e76-395">This is the publicly exposed getter, that translates into a read-only dead IDictionary&lt;string, string&gt;.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; ImportPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; ImportPaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ImportPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportPaths As IReadOnlyList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ ImportPaths { System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportPaths : System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ImportPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-396">计算过程中为此项目实例提供的所有文件的完整文件路径。</span><span class="sxs-lookup"><span data-stu-id="f2e76-396">The full file paths of all the files that during evaluation contributed to this project instance.</span></span>
<span data-ttu-id="f2e76-397">这不包括从未导入的项目，因为 Import 元素上的条件为 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-397">This does not include projects that were never imported because a condition on an Import element was false.</span></span>
<span data-ttu-id="f2e76-398">不包含映射到此项目实例本身的外部 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="f2e76-398">The outer ProjectRootElement that maps to this project instance itself is not included.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportPathsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; ImportPathsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; ImportPathsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ImportPathsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportPathsIncludingDuplicates As IReadOnlyList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ ImportPathsIncludingDuplicates { System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportPathsIncludingDuplicates : System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ImportPathsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-399">如果多次导入某个导入文件，则此列表将包含重复导入。</span><span class="sxs-lookup"><span data-stu-id="f2e76-399">This list will contain duplicate imports if an import is imported multiple times.</span></span> <span data-ttu-id="f2e76-400">但是，在计算中仅使用第一个导入。</span><span class="sxs-lookup"><span data-stu-id="f2e76-400">However, only the first import was used in evaluation.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-401">项目中指定的 InitialTargets，以及所有导入中的 InitialTargets，已深度优先收集。</span><span class="sxs-lookup"><span data-stu-id="f2e76-401">InitialTargets specified in the project, plus those in all imports, gathered depth-first.</span></span>
<span data-ttu-id="f2e76-402">生成将优先运行这些内容。</span><span class="sxs-lookup"><span data-stu-id="f2e76-402">The build runs these before anything else.</span></span></summary>
        <value><span data-ttu-id="f2e76-403">项目的初始目标及其所有导入（深度优先）的列表。</span><span class="sxs-lookup"><span data-stu-id="f2e76-403">The list of initial targets for the project and all its imports, depth-first.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-404">实例是否为不可变。</span><span class="sxs-lookup"><span data-stu-id="f2e76-404">Whether the instance is immutable.</span></span>
<span data-ttu-id="f2e76-405">创建实例时，此设置是永久性的。</span><span class="sxs-lookup"><span data-stu-id="f2e76-405">This is set permanently when the instance is created.</span></span></summary>
        <value><span data-ttu-id="f2e76-406"><see langword="true" /> 如果项目实例是不可变的，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="f2e76-406"><see langword="true" /> if the project instance is immutable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-407">此项目中项定义的只读字典。</span><span class="sxs-lookup"><span data-stu-id="f2e76-407">Read-only dictionary of item definitions in this project.</span></span>
<span data-ttu-id="f2e76-408">按项目类型键控</span><span class="sxs-lookup"><span data-stu-id="f2e76-408">Keyed by item type</span></span></summary>
        <value><span data-ttu-id="f2e76-409">项目中项定义的只读字典，按项类型进行键控。</span><span class="sxs-lookup"><span data-stu-id="f2e76-409">A read-only dictionary of the item definitions in the project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-410">此项目中项的枚举器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-410">Enumerator over items in this project.</span></span></summary>
        <value><span data-ttu-id="f2e76-411">此项目中的所有项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-411">All items in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-412">此项目中项的项目类型的枚举器</span><span class="sxs-lookup"><span data-stu-id="f2e76-412">Enumerator over item types of the items in this project</span></span></summary>
        <value><span data-ttu-id="f2e76-413">此项目中的所有项类型。</span><span class="sxs-lookup"><span data-stu-id="f2e76-413">All item types in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-414">原始文件本身的位置，其中没有任何特定内容。</span><span class="sxs-lookup"><span data-stu-id="f2e76-414">Location of the originating file itself, not any specific content within it.</span></span>
<span data-ttu-id="f2e76-415">即使文件尚未获得路径，也绝不会返回 null。</span><span class="sxs-lookup"><span data-stu-id="f2e76-415">Never returns null, even if the file has not got a path yet.</span></span></summary>
        <value><span data-ttu-id="f2e76-416">原始文件的位置。</span><span class="sxs-lookup"><span data-stu-id="f2e76-416">The location of the originating file.</span></span> <span data-ttu-id="f2e76-417">从不返回 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="f2e76-417">Never returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-418">此项目中属性的枚举器</span><span class="sxs-lookup"><span data-stu-id="f2e76-418">Enumerator over properties in this project</span></span></summary>
        <value><span data-ttu-id="f2e76-419">此项目中的所有属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-419">All properties in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f2e76-420">要移除的项。</span><span class="sxs-lookup"><span data-stu-id="f2e76-420">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="f2e76-421">从项目中移除一个项（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="f2e76-421">Removes an item from the project, if present.</span></span>
<span data-ttu-id="f2e76-422">如果存在该项，则返回 true；否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-422">Returns true if it was present, false otherwise.</span></span></summary>
        <returns><span data-ttu-id="f2e76-423">如果在移除之前存在该项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-423"><see langword="true" /> if the item was present before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f2e76-424">要删除的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-424">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="f2e76-425">删除具有指定名称的任何属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-425">Removes any property with the specified name.</span></span>
<span data-ttu-id="f2e76-426">如果该属性具有值（可能为空字符串），则返回 true；否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="f2e76-426">Returns true if the property had a value (possibly empty string), otherwise false.</span></span></summary>
        <returns><span data-ttu-id="f2e76-427">如果该属性在移除之前具有值（可能为空字符串），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2e76-427"><see langword="true" /> if the property had a value (possibly an empty string) before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f2e76-428">要添加的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="f2e76-428">The name of the property to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="f2e76-429">要添加的属性的计算值。</span><span class="sxs-lookup"><span data-stu-id="f2e76-429">The evaluated value of the property to add.</span></span></param>
        <summary><span data-ttu-id="f2e76-430">添加具有指定名称和值的属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-430">Add a property with the specified name and value.</span></span>
<span data-ttu-id="f2e76-431">覆盖集合中已有的任何同名属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-431">Overwrites any property with the same name already in the collection.</span></span></summary>
        <returns><span data-ttu-id="f2e76-432">新的属性。</span><span class="sxs-lookup"><span data-stu-id="f2e76-432">The new property.</span></span></returns>
        <remarks><span data-ttu-id="f2e76-433">我们不会使用 ProjectPropertyInstance 来确保没有其他 ProjectPropertyInstance 正在使用的帐户。</span><span class="sxs-lookup"><span data-stu-id="f2e76-433">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-434">项目中的目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-434">Targets in the project.</span></span> <span data-ttu-id="f2e76-435">生成过程可以通过在字典中查找名称来查找目标。</span><span class="sxs-lookup"><span data-stu-id="f2e76-435">The build process can find one by looking for its name in the dictionary.</span></span>
<span data-ttu-id="f2e76-436">此集合为只读。</span><span class="sxs-lookup"><span data-stu-id="f2e76-436">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="f2e76-437">此项目中的所有目标的枚举器。</span><span class="sxs-lookup"><span data-stu-id="f2e76-437">An enumerator over all targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-438">计算此项目所使用的工具版本（如果有）。</span><span class="sxs-lookup"><span data-stu-id="f2e76-438">The tools version this project was evaluated with, if any.</span></span>
<span data-ttu-id="f2e76-439">不一定与 Project 标记上的工具版本相同（如果有）；它可能已在外部指定，例如使用 /tv 开关。</span><span class="sxs-lookup"><span data-stu-id="f2e76-439">Not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span></summary>
        <value><span data-ttu-id="f2e76-440">计算此项目所使用的工具版本（如果有）。</span><span class="sxs-lookup"><span data-stu-id="f2e76-440">The tools version this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e76-441">结果不一定与项目标记上的工具版本相同（如果有）;它可能已在外部指定，例如使用/tv 开关。</span><span class="sxs-lookup"><span data-stu-id="f2e76-441">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2e76-442">根据此 ProjectInstance 的内容创建一个 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="f2e76-442">Creates a ProjectRootElement from the contents of this ProjectInstance.</span></span></summary>
        <returns><span data-ttu-id="f2e76-443">表示此实例的一个 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="f2e76-443">A ProjectRootElement which represents this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateEntireState">
      <MemberSignature Language="C#" Value="public bool TranslateEntireState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TranslateEntireState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.TranslateEntireState" />
      <MemberSignature Language="VB.NET" Value="Public Property TranslateEntireState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TranslateEntireState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TranslateEntireState : bool with get, set" Usage="Microsoft.Build.Execution.ProjectInstance.TranslateEntireState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e76-444">序列化整个项目实例状态。</span><span class="sxs-lookup"><span data-stu-id="f2e76-444">Serialize the entire project instance state.</span></span>
            
<span data-ttu-id="f2e76-445">如果为 false，则只序列化项目实例状态的一部分（属性和项）。</span><span class="sxs-lookup"><span data-stu-id="f2e76-445">When false, only a part of the project instance state is serialized (properties and items).</span></span>
<span data-ttu-id="f2e76-446">在这种情况下，进程外节点从磁盘重新计算项目实例以获取未序列化状态。</span><span class="sxs-lookup"><span data-stu-id="f2e76-446">In this case out of proc nodes re-evaluate the project instance from disk to obtain the un-serialized state.</span></span>
<span data-ttu-id="f2e76-447">当项目实例状态不同于磁盘上的状态时，此部分状态重组可能会导致生成问题。</span><span class="sxs-lookup"><span data-stu-id="f2e76-447">This partial state recombination may lead to build issues when the project instance state differs from what is on disk.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectState"><span data-ttu-id="f2e76-448"><see cref="T:Microsoft.Build.Execution.ProjectInstance" /> 包含要使用的状态。</span><span class="sxs-lookup"><span data-stu-id="f2e76-448"><see cref="T:Microsoft.Build.Execution.ProjectInstance" /> with the state to use.</span></span></param>
        <summary><span data-ttu-id="f2e76-449">用所提供的 <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> 的状态来替换项目状态（<see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />、<see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> 和 <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" />）。</span><span class="sxs-lookup"><span data-stu-id="f2e76-449">Replaces the project state (<see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" />) with that from the <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> provided.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
