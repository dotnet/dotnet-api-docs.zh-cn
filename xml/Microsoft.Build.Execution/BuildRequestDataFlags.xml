<Type Name="BuildRequestDataFlags" FullName="Microsoft.Build.Execution.BuildRequestDataFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07d660d9d347f6d88d66447c5dad20784203a17a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89837875" /></Metadata><TypeSignature Language="C#" Value="public enum BuildRequestDataFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BuildRequestDataFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.BuildRequestDataFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum BuildRequestDataFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class BuildRequestDataFlags" />
  <TypeSignature Language="F#" Value="type BuildRequestDataFlags = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Flags]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Flags&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8d10f-101">用于提供对生成请求的附加控制的标志</span><span class="sxs-lookup"><span data-stu-id="8d10f-101">Flags providing additional control over the build request</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks 

<span data-ttu-id="8d10f-102">`IgnoreExistingProjectState`仅当客户端知道新的生成请求不依赖于先前请求生成的项目状态时，才提供标志。</span><span class="sxs-lookup"><span data-stu-id="8d10f-102">The `IgnoreExistingProjectState` flag is provided only for those cases where the client knows that the new build request does not depend on the project state generated by a previous request.</span></span> <span data-ttu-id="8d10f-103">在不兼容节点关联的情况下，设置此标志可以提高性能，因为 MSBuild 需要将项目状态从一个节点序列化到另一个节点。</span><span class="sxs-lookup"><span data-stu-id="8d10f-103">Setting this flag can provide a performance boost in the case of incompatible node affinities, because MSBuild would otherwise have to serialize the project state from one node to another.</span></span> <span data-ttu-id="8d10f-104">序列化项目状态可能会消耗大量资源，具体取决于项目以前生成的数据量。</span><span class="sxs-lookup"><span data-stu-id="8d10f-104">Serializing the project state can be expensive, depending on the amount of data the project has previously generated.</span></span>  
  
<span data-ttu-id="8d10f-105">`IgnoreExistingProjectState`标志对目标结果不起作用，因此，如果上一个请求已生成目标，则新请求将不会重新生成目标。</span><span class="sxs-lookup"><span data-stu-id="8d10f-105">The `IgnoreExistingProjectState` flag has no effect on target results, so if a previous request has built a target, the new request will not rebuild the target.</span></span> <span data-ttu-id="8d10f-106">此外，由于先前生成目标而发生的任何项目状态突变都将重新应用。</span><span class="sxs-lookup"><span data-stu-id="8d10f-106">Additionally, none of the project state mutations which occurred as a consequence of previously building that target will be reapplied.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ClearCachesAfterBuild">
      <MemberSignature Language="C#" Value="ClearCachesAfterBuild" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags ClearCachesAfterBuild = int32(8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.ClearCachesAfterBuild" />
      <MemberSignature Language="VB.NET" Value="ClearCachesAfterBuild" />
      <MemberSignature Language="C++ CLI" Value="ClearCachesAfterBuild" />
      <MemberSignature Language="F#" Value="ClearCachesAfterBuild = 8" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.ClearCachesAfterBuild" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d10f-107">当存在此标志时，将在生成请求完成后清除包括 <see cref="T:Microsoft.Build.Evaluation.ProjectRootElementCacheBase" /> 的缓存。</span><span class="sxs-lookup"><span data-stu-id="8d10f-107">When this flag is present, caches including the <see cref="T:Microsoft.Build.Evaluation.ProjectRootElementCacheBase" /> will be cleared after the build request completes.</span></span>  <span data-ttu-id="8d10f-108">当已知生成请求修改了许多状态（例如，还原包或生成导入关系图的一部分）时将使用此标志。</span><span class="sxs-lookup"><span data-stu-id="8d10f-108">This is used when the build request is known to modify a lot of state such as restoring packages or generating parts of the import graph.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExistingProjectState">
      <MemberSignature Language="C#" Value="IgnoreExistingProjectState" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags IgnoreExistingProjectState = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState" />
      <MemberSignature Language="VB.NET" Value="IgnoreExistingProjectState" />
      <MemberSignature Language="C++ CLI" Value="IgnoreExistingProjectState" />
      <MemberSignature Language="F#" Value="IgnoreExistingProjectState = 4" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d10f-109">当存在此标志，并且先前已在其关联与此请求要求的关联不兼容的节点上生成项目时，我们将忽略以前生成的项目状态（但不是目标结果）。</span><span class="sxs-lookup"><span data-stu-id="8d10f-109">When this flag is present and the project has previously been built on a node whose affinity is incompatible with the affinity this request requires, we will ignore the project state (but not target results) that were previously generated.</span></span></summary>
        <remarks><span data-ttu-id="8d10f-110">这通常不是所需的行为。</span><span class="sxs-lookup"><span data-stu-id="8d10f-110">This usually is not desired behavior.</span></span>  <span data-ttu-id="8d10f-111">仅当客户端知道新的生成请求不依赖于先前请求生成的项目状态时，才会提供此功能。</span><span class="sxs-lookup"><span data-stu-id="8d10f-111">It is only provided for those cases where the client knows that the new build request does not depend on project state generated by a previous request.</span></span>  <span data-ttu-id="8d10f-112">在不兼容节点相关性的情况下，设置此标志可以提高性能，因为 MSBuild 需要将项目状态从一个节点序列化到另一个节点，这可能会占用大量资源，具体取决于项目之前生成的数据量。</span><span class="sxs-lookup"><span data-stu-id="8d10f-112">Setting this flag can provide a performance boost in the case of incompatible node affinities, as MSBuild would otherwise have to serialize the project state from one node to another, which may be expensive depending on how much data the project previously generated.</span></span>
            
<span data-ttu-id="8d10f-113">此标志对目标结果不起作用，因此，如果以前的请求已生成了目标，则新请求将不会重新生成该目标 (，也不会重新生成该目标，因为该目标是在生成该目标的情况下重新应用的突变。 ) </span><span class="sxs-lookup"><span data-stu-id="8d10f-113">This flag has no effect on target results, so if a previous request already built a target, the new request will not re-build that target (nor will any of the project state mutations which previously occurred as a consequence of building that target be re-applied.)</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMissingEmptyAndInvalidImports">
      <MemberSignature Language="C#" Value="IgnoreMissingEmptyAndInvalidImports" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags IgnoreMissingEmptyAndInvalidImports = int32(64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreMissingEmptyAndInvalidImports" />
      <MemberSignature Language="VB.NET" Value="IgnoreMissingEmptyAndInvalidImports" />
      <MemberSignature Language="C++ CLI" Value="IgnoreMissingEmptyAndInvalidImports" />
      <MemberSignature Language="F#" Value="IgnoreMissingEmptyAndInvalidImports = 64" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreMissingEmptyAndInvalidImports" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d10f-114">当存在此标志时，在生成过程中加载的项目将忽略缺少的导入（<see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreMissingImports" /> 和 <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreInvalidImports" />）。</span><span class="sxs-lookup"><span data-stu-id="8d10f-114">When this flag is present, projects loaded during build will ignore missing imports (<see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreMissingImports" /> and <see cref="F:Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreInvalidImports" />).</span></span>
<span data-ttu-id="8d10f-115">这在还原期间特别有用，因为某些导入可能来自尚未还原的包。</span><span class="sxs-lookup"><span data-stu-id="8d10f-115">This is especially useful during a restore since some imports might come from packages that haven't been restored yet.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d10f-116">无标志。</span><span class="sxs-lookup"><span data-stu-id="8d10f-116">No flags.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ProvideProjectStateAfterBuild">
      <MemberSignature Language="C#" Value="ProvideProjectStateAfterBuild" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags ProvideProjectStateAfterBuild = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild" />
      <MemberSignature Language="VB.NET" Value="ProvideProjectStateAfterBuild" />
      <MemberSignature Language="C++ CLI" Value="ProvideProjectStateAfterBuild" />
      <MemberSignature Language="F#" Value="ProvideProjectStateAfterBuild = 2" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d10f-117">当存在此标志时，为响应此请求发布的 <see cref="T:Microsoft.Build.Execution.BuildResult" /> 将包括 <see cref="P:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild" />。</span><span class="sxs-lookup"><span data-stu-id="8d10f-117">When this flag is present, the <see cref="T:Microsoft.Build.Execution.BuildResult" /> issued in response to this request will include <see cref="P:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ProvideSubsetOfStateAfterBuild">
      <MemberSignature Language="C#" Value="ProvideSubsetOfStateAfterBuild" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags ProvideSubsetOfStateAfterBuild = int32(32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.ProvideSubsetOfStateAfterBuild" />
      <MemberSignature Language="VB.NET" Value="ProvideSubsetOfStateAfterBuild" />
      <MemberSignature Language="C++ CLI" Value="ProvideSubsetOfStateAfterBuild" />
      <MemberSignature Language="F#" Value="ProvideSubsetOfStateAfterBuild = 32" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.ProvideSubsetOfStateAfterBuild" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d10f-118">当存在此标志时，为响应此请求发布的 <see cref="T:Microsoft.Build.Execution.BuildResult" /> 将包括 <see cref="P:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild" />，其中仅包含显式请求的属性、项和元数据。</span><span class="sxs-lookup"><span data-stu-id="8d10f-118">When this flag is present, the <see cref="T:Microsoft.Build.Execution.BuildResult" /> issued in response to this request will include a <see cref="P:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild" /> that includes ONLY the explicitly-requested properties, items, and metadata.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReplaceExistingProjectInstance">
      <MemberSignature Language="C#" Value="ReplaceExistingProjectInstance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags ReplaceExistingProjectInstance = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance" />
      <MemberSignature Language="VB.NET" Value="ReplaceExistingProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="ReplaceExistingProjectInstance" />
      <MemberSignature Language="F#" Value="ReplaceExistingProjectInstance = 1" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d10f-119">当存在此标志时，此标志将替换生成中的现有 ProjectInstance。</span><span class="sxs-lookup"><span data-stu-id="8d10f-119">When this flag is present, the existing ProjectInstance in the build will be replaced by this one.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SkipNonexistentTargets">
      <MemberSignature Language="C#" Value="SkipNonexistentTargets" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.BuildRequestDataFlags SkipNonexistentTargets = int32(16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.BuildRequestDataFlags.SkipNonexistentTargets" />
      <MemberSignature Language="VB.NET" Value="SkipNonexistentTargets" />
      <MemberSignature Language="C++ CLI" Value="SkipNonexistentTargets" />
      <MemberSignature Language="F#" Value="SkipNonexistentTargets = 16" Usage="Microsoft.Build.Execution.BuildRequestDataFlags.SkipNonexistentTargets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.BuildRequestDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8d10f-120">当存在此标志时，如果未在要生成的项目中定义生成请求中的顶级目标，则将跳过这些目标。</span><span class="sxs-lookup"><span data-stu-id="8d10f-120">When this flag is present, the top level target(s) in the build request will be skipped if those targets are not defined in the Project to build.</span></span> <span data-ttu-id="8d10f-121">这仅适用于此生成请求（如果其他目标在任何其他点调用“缺少目标”，则仍将导致错误）。</span><span class="sxs-lookup"><span data-stu-id="8d10f-121">This only applies to this build request (if another target calls the "missing target" at any other point this will still result in an error).</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
