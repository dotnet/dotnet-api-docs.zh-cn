<Type Name="MetadataExporter" FullName="System.ServiceModel.Description.MetadataExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="958d6148cd499b0270c940f491da2a02bed9c535" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89980378" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetadataExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataExporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataExporter abstract" />
  <TypeSignature Language="F#" Value="type MetadataExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>将服务说明信息导出到元数据中。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 元数据导出是一个过程，用于描述服务终结点并将服务终结点映射到并行的标准化表示形式（通常但不一定为 XML），应用程序可使用该表示形式来实现使用此服务的客户端。 若要从 <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> 对象导出元数据，请使用 <xref:System.ServiceModel.Description.MetadataExporter> 抽象类的实现。  <xref:System.ServiceModel.Description.MetadataExporter> 实现生成包装在 <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> 实例中的元数据。  
  
 <xref:System.ServiceModel.Description.MetadataExporter> 类提供一个框架，该框架用于生成描述终结点绑定的功能和要求及其关联的操作、消息和错误的策略表达式。 在 <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> 实例中可捕获这些策略表达式。 然后 <xref:System.ServiceModel.Description.MetadataExporter> 实现可以将这些策略表达式附加到它生成的元数据。  
  
 当生成供 <xref:System.ServiceModel.Description.MetadataExporter> 实现使用的 <xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType> 对象时，<xref:System.ServiceModel.Description.IPolicyExportExtension?displayProperty=nameWithType> 调入在 <xref:System.ServiceModel.Description.ServiceEndpoint> 的绑定中实现 <xref:System.ServiceModel.Description.PolicyConversionContext> 接口的每个 <xref:System.ServiceModel.Description.MetadataExporter>。 通过在 <xref:System.ServiceModel.Description.IPolicyExportExtension> 类型的自定义实现上实现 <xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType> 接口，可以导出新策略断言。  
  
 <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType>类型是 <xref:System.ServiceModel.Description.MetadataExporter> WINDOWS COMMUNICATION FOUNDATION (WCF) 中包含的类的实现。 <xref:System.ServiceModel.Description.WsdlExporter> 类型使用附加的策略表达式生成 WSDL 元数据。  
  
 若要为服务终结点中的终结点行为、协定行为或绑定元素导出自定义 WSDL 元数据或 WSDL 扩展，您可以实现 <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> 接口。 当从服务终结点生成 WSDL 文档时，<xref:System.ServiceModel.Description.WsdlExporter> 类型调入实现此接口的部分服务终结点。  
  
   
  
## Examples  
 下面的代码示例为一个 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> 方法，该方法演示如何使用 <xref:System.ServiceModel.Description.MetadataExporter.State%2A> 类的 <xref:System.ServiceModel.Description.WsdlExporter> 属性来附加用于修改终结点中数据协定的导出的自定义 <xref:System.Runtime.Serialization.XsdDataContractExporter?displayProperty=nameWithType>。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataExporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;" Usage="System.ServiceModel.Description.MetadataExporter.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取元数据导出过程中发生的错误的集合。</summary>
        <value>发生的导出错误。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性由在元数据导出过程中发生的错误填充。 派生类的用户在使用导出的元数据之前应检查 <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public abstract void ExportContract (System.ServiceModel.Description.ContractDescription contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.ContractDescription contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataExporter.ExportContract(System.ServiceModel.Description.ContractDescription)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ExportContract (contract As ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ExportContract(System::ServiceModel::Description::ContractDescription ^ contract);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.ContractDescription -&gt; unit" Usage="metadataExporter.ExportContract contract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.ServiceModel.Description.ContractDescription" />
      </Parameters>
      <Docs>
        <param name="contract">要导出的协定。</param>
        <summary>当在派生类中重写时，将协定描述导出到元数据中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写并实现 <xref:System.ServiceModel.Description.MetadataExporter.ExportContract%2A>，以将协定描述转换为元数据。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public abstract void ExportEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ExportEndpoint (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ExportEndpoint(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="metadataExporter.ExportEndpoint endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">要转换的终结点。</param>
        <summary>当在派生类中重写时，将终结点转换为元数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写并实现 <xref:System.ServiceModel.Description.MetadataExporter.ExportEndpoint%2A>，以将协定描述转换为元数据。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="protected internal System.ServiceModel.Description.PolicyConversionContext ExportPolicy (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.ServiceModel.Description.PolicyConversionContext ExportPolicy(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataExporter.ExportPolicy(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function ExportPolicy (endpoint As ServiceEndpoint) As PolicyConversionContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::ServiceModel::Description::PolicyConversionContext ^ ExportPolicy(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="member this.ExportPolicy : System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Description.PolicyConversionContext" Usage="metadataExporter.ExportPolicy endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PolicyConversionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">从中提取策略断言的终结点。</param>
        <summary>将策略断言转换为 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> 对象。</summary>
        <returns>包含终结点的策略断言信息的一个对象。 然后策略断言可嵌入到元数据文档中。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedMetadata">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.MetadataSet GetGeneratedMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.MetadataSet GetGeneratedMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataExporter.GetGeneratedMetadata" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGeneratedMetadata () As MetadataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::MetadataSet ^ GetGeneratedMetadata();" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedMetadata : unit -&gt; System.ServiceModel.Description.MetadataSet" Usage="metadataExporter.GetGeneratedMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中重写时，返回由对 <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportContract(System.ServiceModel.Description.ContractDescription)" />, <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)" /> 或 <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportPolicy(System.ServiceModel.Description.ServiceEndpoint)" /> 的调用生成的元数据。</summary>
        <returns><see cref="T:System.ServiceModel.Description.MetadataSection" /> 对象的可枚举集合，这些对象包含导出的元数据。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.ServiceModel.Description.MetadataExporter.GetGeneratedMetadata%2A> 方法可以检索从以前的调用中生成的元数据。 在检索元数据之前，请检查 <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> 属性，以确保您拥有所需的元数据。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.PolicyVersion PolicyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.PolicyVersion PolicyVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataExporter.PolicyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property PolicyVersion As PolicyVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::PolicyVersion ^ PolicyVersion { System::ServiceModel::Description::PolicyVersion ^ get(); void set(System::ServiceModel::Description::PolicyVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PolicyVersion : System.ServiceModel.Description.PolicyVersion with get, set" Usage="System.ServiceModel.Description.MetadataExporter.PolicyVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PolicyVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定正在使用的 WS-Policy 规范的版本。</summary>
        <value>一个 <see cref="T:System.ServiceModel.Description.PolicyVersion" /> 实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.PolicyVersion> 类包含元数据导出程序使用的 WS-Policy 版本的命名空间。 当前支持 WS-Policy 1.2 和 1.5。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataExporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Collections.Generic.Dictionary&lt;obj, obj&gt;" Usage="System.ServiceModel.Description.MetadataExporter.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在元数据的导出中使用的对象的词典。</summary>
        <value>导入程序用于导出协定和终结点的对象的词典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 `State` 属性可以传递所需的 <xref:System.ServiceModel.Description.MetadataExporter> 状态数据，以成功导出终结点或协定。  
  
   
  
## Examples  
 下面的代码示例为一个 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> 方法，该方法演示如何使用 <xref:System.ServiceModel.Description.MetadataExporter.State%2A> 派生类的 <xref:System.ServiceModel.Description.WsdlImporter> 属性来附加用于修改终结点中数据协定的导出的自定义 <xref:System.Runtime.Serialization.XsdDataContractExporter?displayProperty=nameWithType>。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
