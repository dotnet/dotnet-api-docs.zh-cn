<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="826155e39960582186cf550051437aa2353b63cf" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70711082" /></Metadata><TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type IWsdlExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义可导出自定义元数据的终结点或协定行为。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要修改和扩展 <xref:System.ServiceModel.Description.WsdlExporter> 对象导出的 Web 服务描述语言 (WSDL)，请在终结点、协定或操作行为（一个实现 <xref:System.ServiceModel.Description.IWsdlExportExtension>、<xref:System.ServiceModel.Description.IContractBehavior> 或 <xref:System.ServiceModel.Description.IEndpointBehavior> 的对象）上实现 <xref:System.ServiceModel.Description.IOperationBehavior> 接口，并将该行为添加到 <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>、<xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> 或 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> 属性。 此外，还可以在 <xref:System.ServiceModel.Description.IWsdlExportExtension> 上实现 <xref:System.ServiceModel.Channels.BindingElement>。  
  
> [!NOTE]
>  <xref:System.ServiceModel.Description.IWsdlExportExtension> 如果实现为，则永远不会调用实现 <xref:System.ServiceModel.Description.IServiceBehavior> 。  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> 即使 Windows Communication Foundation (WCF) 将自定义绑定策略断言导出到 WSDL 中的相应元素，也不会导出自定义策略断言。 如果要导出自定义策略断言，请实现 <xref:System.ServiceModel.Description.IPolicyExportExtension> 接口。  
  
 元数据发布过程首先调用 <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType>，后者继而为每个终结点调用 <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType>。  
  
 导出终结点时将首先导出其协定。在导出协定时，<xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> 将在协定的所有 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> 实现以及该协定的操作行为上调用 <xref:System.ServiceModel.Description.IWsdlExportExtension> 方法。 在元数据中不会导出使用通配符操作的操作，因此将不会导出这些操作的操作行为上的 <xref:System.ServiceModel.Description.IWsdlExportExtension> 实现。  
  
 导出协定后，将导出端口和绑定，并附加导出的策略表达式。  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 和 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> 方法都提供了对 <xref:System.ServiceModel.Description.WsdlExporter> 的访问，因此 <xref:System.ServiceModel.Description.IWsdlExportExtension> 实现可通过 <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> 属性报告可恢复的错误和警告。 通过传入这两个方法的上下文对象，可以方便地从导出的 WSDL 元素映射到 <xref:System.ServiceModel.Description.ContractDescription> 和 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象的属性。  
  
 如果 <xref:System.ServiceModel.Description.IWsdlExportExtension> 实现在导出时引发异常，生成的元数据将处于不一致状态，并且应丢弃 <xref:System.ServiceModel.Description.WsdlExporter> 对象。  
  
> [!NOTE]
>  内置序列化程序填充服务说明之后，必须运行自定义导出扩展。  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.ServiceModel.Description.IWsdlExportExtension>，它将自定义文档属性以 WSDL 批注的形式添加到 WSDL 文件中。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter">可导出协定信息的 <see cref="T:System.ServiceModel.Description.WsdlExporter" />。</param>
        <param name="context">提供从导出的 WSDL 元素到协定说明的映射。</param>
        <summary>为协定将自定义 Web 服务描述语言 (WSDL) 元素写入到生成的 WSDL 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在元数据导出系统导出协定时调用 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 方法。 只有实现 <xref:System.ServiceModel.Description.IWsdlExportExtension> 的协定和操作行为才能获得 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 调用。 实现 <xref:System.ServiceModel.Description.IWsdlExportExtension> 的所有行为都可获得 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> 调用。  
  
 使用 `context` 参数来修改要导出的 WSDL。 有关示例，请参见“示例”一节。  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.ServiceModel.Description.IWsdlExportExtension>，它将自定义文档属性以 WSDL 批注的形式添加到 WSDL 文件中。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter">导出终结点信息的 <see cref="T:System.ServiceModel.Description.WsdlExporter" />。</param>
        <param name="context">提供从导出的 WSDL 元素到终结点说明的映射。</param>
        <summary>为终结点将自定义 Web 服务描述语言 (WSDL) 元素写入到生成的 WSDL 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> 方法，以便修改为终结点导出的 WSDL。 将在 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 已导出协定后调用此方法。  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.ServiceModel.Description.IWsdlExportExtension>，它将自定义文档属性以 WSDL 批注的形式添加到 WSDL 文件中。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
