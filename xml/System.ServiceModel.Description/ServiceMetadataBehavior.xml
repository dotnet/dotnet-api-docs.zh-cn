<Type Name="ServiceMetadataBehavior" FullName="System.ServiceModel.Description.ServiceMetadataBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c1f07467de63c71f665f5ea5f972b54769464b8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86572492" /></Metadata><TypeSignature Language="C#" Value="public class ServiceMetadataBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceMetadataBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceMetadataBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceMetadataBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceMetadataBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceMetadataBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="70696-101">控制服务元数据和相关信息的发布。</span><span class="sxs-lookup"><span data-stu-id="70696-101">Controls the publication of service metadata and associated information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-102">将 <xref:System.ServiceModel.Description.ServiceMetadataBehavior> 对象添加到 <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A?displayProperty=nameWithType> 集合 (或应用程序配置文件中的[ &lt; serviceMetadata &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/servicemetadata)元素) ，以启用或禁用服务元数据的发布。</span><span class="sxs-lookup"><span data-stu-id="70696-102">Add a <xref:System.ServiceModel.Description.ServiceMetadataBehavior> object to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A?displayProperty=nameWithType> collection (or the [&lt;serviceMetadata&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicemetadata) element in an application configuration file) to enable or disable the publication of service metadata.</span></span> <span data-ttu-id="70696-103">但是，向服务添加行为并不足以启用元数据发布：</span><span class="sxs-lookup"><span data-stu-id="70696-103">However, adding the behavior to a service is not sufficient to enable metadata publication:</span></span>  
  
-   <span data-ttu-id="70696-104">要启用 WS-Transfer GET 元数据检索，还必须向您的服务添加终结点，其中协定为 `IMetadataExchange`。</span><span class="sxs-lookup"><span data-stu-id="70696-104">To enable WS-Transfer GET metadata retrieval, you must also add an endpoint to your service in which the contract is `IMetadataExchange`.</span></span> <span data-ttu-id="70696-105">有关示例，请参阅 [如何：使用代码发布服务的元数据](/dotnet/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-code)。</span><span class="sxs-lookup"><span data-stu-id="70696-105">For an example, see [How to: Publish Metadata for a Service Using Code](/dotnet/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-code).</span></span> <span data-ttu-id="70696-106">`IMetadataExchange` 终结点可以按配置任何其他终结点的方式进行配置。</span><span class="sxs-lookup"><span data-stu-id="70696-106">The `IMetadataExchange` endpoint can be configured as can any other endpoint.</span></span>  
  
-   <span data-ttu-id="70696-107">要启用 HTTP GET 元数据检索，请将 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="70696-107">To enable HTTP GET metadata retrieval, set the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> property to `true`.</span></span> <span data-ttu-id="70696-108">有关 HTTP GET 元数据的地址的详细信息，请参阅 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> 。</span><span class="sxs-lookup"><span data-stu-id="70696-108">For more information about the address of HTTP GET metadata, see <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A>.</span></span>  
  
 <span data-ttu-id="70696-109">`IMetadataExchange` 终结点的地址遵循关于基址和终结点地址相结合的常规规则。</span><span class="sxs-lookup"><span data-stu-id="70696-109">The address of the `IMetadataExchange` endpoint follows the normal rules regarding the combination of base addresses and endpoint addresses.</span></span> <span data-ttu-id="70696-110">有关详细信息，请参阅 [发布元数据](/dotnet/framework/wcf/feature-details/publishing-metadata)。</span><span class="sxs-lookup"><span data-stu-id="70696-110">For more information, see [Publishing Metadata](/dotnet/framework/wcf/feature-details/publishing-metadata).</span></span>  
  
 <span data-ttu-id="70696-111">若要使用配置文件启用元数据的发布，请将[ &lt; serviceMetadata &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/servicemetadata)元素添加到[ &lt; serviceBehaviors &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors)元素，并将元素与要发布元数据的[ &lt; 服务 &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/service)元素关联。</span><span class="sxs-lookup"><span data-stu-id="70696-111">To enable the publication of metadata using a configuration file, add the [&lt;serviceMetadata&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicemetadata) element to the [&lt;serviceBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors) element and associate the element with the [&lt;service&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service) element for which you want to publish metadata.</span></span> <span data-ttu-id="70696-112">有关示例，请参阅 [如何：使用配置文件发布服务的元数据](/dotnet/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file)。</span><span class="sxs-lookup"><span data-stu-id="70696-112">For an example, see [How to: Publish Metadata for a Service Using a Configuration File](/dotnet/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file).</span></span> <span data-ttu-id="70696-113">该类包含以下成员：</span><span class="sxs-lookup"><span data-stu-id="70696-113">The class has the following members:</span></span>  
  
-   <span data-ttu-id="70696-114"><xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> 属性指定是否为 HTTP/GET 请求返回元数据。</span><span class="sxs-lookup"><span data-stu-id="70696-114">The <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> property specifies whether metadata is returned for HTTP/GET requests.</span></span>  
  
-   <span data-ttu-id="70696-115"><xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 属性（与基址结合使用）可指定 HTTP/GET 地址。</span><span class="sxs-lookup"><span data-stu-id="70696-115">The <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> property (in conjunction with the base addresses) specifies the HTTP/GET address.</span></span>  
  
-   <span data-ttu-id="70696-116"><xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> 属性指定是否为 HTTPS/GET 请求返回元数据。</span><span class="sxs-lookup"><span data-stu-id="70696-116">The <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> property specifies whether metadata is returned for an HTTPS/GET request.</span></span>  
  
-   <span data-ttu-id="70696-117"><xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 属性（与基址结合使用）可指定 HTTPS/GET 地址。</span><span class="sxs-lookup"><span data-stu-id="70696-117">The <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> property (in conjunction with the base addresses) specifies the HTTPS/GET address.</span></span>  
  
-   <span data-ttu-id="70696-118"><xref:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter%2A> 属性返回基础导出程序。</span><span class="sxs-lookup"><span data-stu-id="70696-118">The <xref:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter%2A> property returns the underlying exporter.</span></span>  
  
 <span data-ttu-id="70696-119">通常，从应用程序配置文件使用 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>。</span><span class="sxs-lookup"><span data-stu-id="70696-119">Typically the <xref:System.ServiceModel.Description.ServiceMetadataBehavior> is used from an application configuration file.</span></span> <span data-ttu-id="70696-120">有关代码示例，请参见“示例”部分。</span><span class="sxs-lookup"><span data-stu-id="70696-120">See the Example section for a code example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70696-121">下面的代码示例演示如何在配置文件中使用 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>，以便启用进行 HTTP GET 和 WS-Transfer GET 请求的元数据支持。</span><span class="sxs-lookup"><span data-stu-id="70696-121">The following code example demonstrates the use of <xref:System.ServiceModel.Description.ServiceMetadataBehavior> in a configuration file to enable metadata support for HTTP GET and WS-Transfer GET requests.</span></span>  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceMetadataBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceMetadataBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70696-122">初始化 <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="70696-122">Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-123">使用以下值创建 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>：</span><span class="sxs-lookup"><span data-stu-id="70696-123">Creates a <xref:System.ServiceModel.Description.ServiceMetadataBehavior> with the following values:</span></span>  
  
-   <span data-ttu-id="70696-124"><xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> 属性为 `false`。</span><span class="sxs-lookup"><span data-stu-id="70696-124">The <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="70696-125"><xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> 属性为 `false`。</span><span class="sxs-lookup"><span data-stu-id="70696-125">The <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> property is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalMetadataLocation">
      <MemberSignature Language="C#" Value="public Uri ExternalMetadataLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ExternalMetadataLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalMetadataLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ExternalMetadataLocation { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExternalMetadataLocation : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-126">获取或设置作为服务元数据的位置的值。</span><span class="sxs-lookup"><span data-stu-id="70696-126">Gets or sets a value that is the location of service metadata.</span></span></summary>
        <value><span data-ttu-id="70696-127">服务元数据的位置。</span><span class="sxs-lookup"><span data-stu-id="70696-127">The location of the service metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-128">将对外部元数据位置的引用返回到客户端。</span><span class="sxs-lookup"><span data-stu-id="70696-128">Returns a reference to an external metadata location to clients.</span></span> <span data-ttu-id="70696-129"><xref:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation%2A> 属性可以是相对的，也可以是绝对的。</span><span class="sxs-lookup"><span data-stu-id="70696-129">The <xref:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation%2A> property can be relative or absolute.</span></span> <span data-ttu-id="70696-130">如果是相对的，则由与 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 或 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 相对的客户端来解析地址，具体取决于该客户端检索元数据的方式。</span><span class="sxs-lookup"><span data-stu-id="70696-130">If relative, the address is resolved by the client relative to the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> or <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A>, depending on how the client retrieved the metadata.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="70696-131">该值为绝对值，且架构既不是 http，也不是 https。</span><span class="sxs-lookup"><span data-stu-id="70696-131">The value is absolute and the schema is neither http nor https.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-132">获取或设置当传输为 HTTP 时用于配置元数据检索的绑定。</span><span class="sxs-lookup"><span data-stu-id="70696-132">Gets or sets a binding used to configure metadata retrieval when the transport is HTTP.</span></span></summary>
        <value><span data-ttu-id="70696-133">一个 <see cref="T:System.ServiceModel.Channels.Binding" />，可用于通过 HTTP 协议检索元数据。</span><span class="sxs-lookup"><span data-stu-id="70696-133">A <see cref="T:System.ServiceModel.Channels.Binding" /> that can be used to retrieve metadata over the HTTP protocol.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-134">在以前版本的 WCF 中，使用 HTTP GET 完成元数据检索，以通过 Web 浏览器访问服务帮助页。</span><span class="sxs-lookup"><span data-stu-id="70696-134">In previous versions of WCF, metadata retrieval was accomplished using HTTP GET to access the service help page through a web browser.</span></span> <span data-ttu-id="70696-135">仅支持 <xref:System.ServiceModel.Channels.HttpTransportBindingElement>。</span><span class="sxs-lookup"><span data-stu-id="70696-135">Only the <xref:System.ServiceModel.Channels.HttpTransportBindingElement> was  supported.</span></span>  <span data-ttu-id="70696-136">对于使用 HTTPS GET 的元数据检索，仅支持 <xref:System.ServiceModel.Channels.HttpsTransportBindingElement>。</span><span class="sxs-lookup"><span data-stu-id="70696-136">For metadata retrieval using HTTPS GET, only the <xref:System.ServiceModel.Channels.HttpsTransportBindingElement> was supported.</span></span>   <span data-ttu-id="70696-137">HttpGetBinding 和 HttpsGetBinding 属性支持以编程方式或通过配置文件，使用绑定进行元数据检索（使用 HTTP GET 或 HTTPS GET），以及使用绑定访问可配置的服务网页。</span><span class="sxs-lookup"><span data-stu-id="70696-137">The HttpGetBinding and HttpsGetBinding properties enable the usage of bindings for metadata retrieval using HTTP GET (or HTTPS GET) and the bindings used to access service web pages to be configurable, either programmatically or through configuration files.</span></span>  
  
 <span data-ttu-id="70696-138">有关检索帮助页的详细信息，请使用 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> 和 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="70696-138">For more information about retrieving help pages, use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> and <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-139">获取或设置一个值，该值指示是否发布服务元数据以便使用 HTTP/GET 请求进行检索。</span><span class="sxs-lookup"><span data-stu-id="70696-139">Gets or sets a value that indicates whether to publish service metadata for retrieval using an HTTP/GET request.</span></span></summary>
        <value><span data-ttu-id="70696-140">如果发布 WSDL，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70696-140"><see langword="true" /> if the WSDL is published; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="70696-141">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70696-141">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-142">如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值是相对值，则发布元数据的地址为基址和服务地址加上 `?wsdl` querystring。</span><span class="sxs-lookup"><span data-stu-id="70696-142">If the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> is relative, the address at which the metadata is published is the base address and the service address plus a `?wsdl` querystring.</span></span>  
  
 <span data-ttu-id="70696-143">如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值是绝对值，则发布元数据的地址为 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 值的值加上 `?wsdl` querystring。</span><span class="sxs-lookup"><span data-stu-id="70696-143">If the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> is absolute the address at which the metadata is published is the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> value plus a `?wsdl` querystring.</span></span>  
  
 <span data-ttu-id="70696-144">例如，如果服务地址为 `http://localhost:8080/CalculatorService` 且 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 为空字符串，则 HTTP/GET 元数据地址为 `http://localhost:8080/CalculatorService?wsdl`。</span><span class="sxs-lookup"><span data-stu-id="70696-144">For example, if the service address is `http://localhost:8080/CalculatorService` and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> is an empty string, the HTTP/GET metadata address is `http://localhost:8080/CalculatorService?wsdl`.</span></span>  
  
 <span data-ttu-id="70696-145">如果不启用此属性且不更改 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 或将其设置为相对地址，则在不使用 HTTP 基址打开服务主机的情况下会在运行时引发异常。</span><span class="sxs-lookup"><span data-stu-id="70696-145">If you do not enable this property and do not change <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> or set it to a relative address, an exception is thrown at runtime when the service host is opened without a base address for HTTP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70696-146">以下代码示例演示如何在配置文件中使用 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>，以便启用进行 HTTP/GET 和 WS-Transfer/GET 请求的元数据支持。</span><span class="sxs-lookup"><span data-stu-id="70696-146">The following code example demonstrates the use of <xref:System.ServiceModel.Description.ServiceMetadataBehavior> in a configuration file to enable metadata support for HTTP/GET and WS-Transfer/GET requests.</span></span>  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-147">获取或设置进行 HTTP/GET 请求的元数据发布的位置。</span><span class="sxs-lookup"><span data-stu-id="70696-147">Gets or sets the location of metadata publication for HTTP/GET requests.</span></span></summary>
        <value><span data-ttu-id="70696-148">元数据的绝对位置或相对位置。</span><span class="sxs-lookup"><span data-stu-id="70696-148">The absolute or relative location of the metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-149">如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值是相对值，则发布元数据的地址为基址和服务地址加上 `?wsdl` querystring。</span><span class="sxs-lookup"><span data-stu-id="70696-149">If the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> is relative, the address at which the metadata is published is the base address and the service address plus a `?wsdl` querystring.</span></span>  
  
 <span data-ttu-id="70696-150">如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值是绝对值，则发布元数据的地址为此值加上 `?wsdl` querystring。</span><span class="sxs-lookup"><span data-stu-id="70696-150">If the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> is absolute the address at which the metadata is published is this value plus a `?wsdl` querystring.</span></span>  
  
 <span data-ttu-id="70696-151">例如，如果服务地址为 `http://localhost:8080/CalculatorService` 且 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 为空字符串，则 HTTP/GET 元数据地址为 `http://localhost:8080/CalculatorService?wsdl`。</span><span class="sxs-lookup"><span data-stu-id="70696-151">For example, if the service address is `http://localhost:8080/CalculatorService` and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> is an empty string, the HTTP/GET metadata address is `http://localhost:8080/CalculatorService?wsdl`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70696-152">以下代码示例演示如何在配置文件中使用 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>，以便启用进行 HTTP/GET 和 WS-Transfer/GET 请求的元数据支持。</span><span class="sxs-lookup"><span data-stu-id="70696-152">The following code example demonstrates the use of <xref:System.ServiceModel.Description.ServiceMetadataBehavior> in a configuration file to enable metadata support for HTTP/GET and WS-Transfer/GET requests.</span></span>  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-153">获取或设置当传输为 HTTPS 时用于配置元数据检索的绑定。</span><span class="sxs-lookup"><span data-stu-id="70696-153">Gets or sets a binding used to configure metadata retrieval when the transport is HTTPS.</span></span></summary>
        <value><span data-ttu-id="70696-154">一个 <see cref="T:System.ServiceModel.Channels.Binding" />，可用于通过 HTTPS 协议检索元数据。</span><span class="sxs-lookup"><span data-stu-id="70696-154">A <see cref="T:System.ServiceModel.Channels.Binding" /> that can be used to retrieve metadata over the HTTPS protocol.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-155">在以前版本的 WCF 中，使用 HTTP GET 完成元数据检索，以通过 Web 浏览器访问服务帮助页。</span><span class="sxs-lookup"><span data-stu-id="70696-155">In previous versions of WCF, metadata retrieval was accomplished using HTTP GET to access the service help page through a web browser.</span></span> <span data-ttu-id="70696-156">仅支持 <xref:System.ServiceModel.Channels.HttpTransportBindingElement>。</span><span class="sxs-lookup"><span data-stu-id="70696-156">Only the <xref:System.ServiceModel.Channels.HttpTransportBindingElement> was  supported.</span></span>  <span data-ttu-id="70696-157">对于使用 HTTPS GET 的元数据检索，仅支持 <xref:System.ServiceModel.Channels.HttpsTransportBindingElement>。</span><span class="sxs-lookup"><span data-stu-id="70696-157">For metadata retrieval using HTTPS GET, only the <xref:System.ServiceModel.Channels.HttpsTransportBindingElement> was supported.</span></span>   <span data-ttu-id="70696-158">HttpGetBinding 和 HttpsGetBinding 属性支持以编程方式或通过配置文件，使用绑定进行元数据检索（使用 HTTP GET 或 HTTPS GET），以及使用绑定访问可配置的服务网页。</span><span class="sxs-lookup"><span data-stu-id="70696-158">The HttpGetBinding and HttpsGetBinding properties enable the usage of bindings for metadata retrieval using HTTP GET (or HTTPS GET) and the bindings used to access service web pages to be configurable, either programmatically or through configuration files.</span></span>  
  
 <span data-ttu-id="70696-159">有关检索帮助页的详细信息，请使用 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> 和 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="70696-159">For more information about retrieving help pages, use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> and <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-160">获取或设置一个值，该值指示是否发布服务元数据以便使用 HTTPS/GET 请求进行检索。</span><span class="sxs-lookup"><span data-stu-id="70696-160">Gets or sets a value that indicates whether to publish service metadata for retrieval using an HTTPS/GET request.</span></span></summary>
        <value><span data-ttu-id="70696-161">如果发布 WSDL，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70696-161"><see langword="true" /> if the WSDL is published; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="70696-162">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70696-162">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-163">如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值是相对值，则发布元数据的地址为基址和服务地址加上 `?wsdl` querystring。</span><span class="sxs-lookup"><span data-stu-id="70696-163">If the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> is relative, the address at which the metadata is published is the base address and the service address plus a `?wsdl` querystring.</span></span>  
  
 <span data-ttu-id="70696-164">如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值是绝对值，则发布元数据的地址为 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 值的值加上 `?wsdl` querystring。</span><span class="sxs-lookup"><span data-stu-id="70696-164">If the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> is absolute the address at which the metadata is published is the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> value plus a `?wsdl` querystring.</span></span>  
  
 <span data-ttu-id="70696-165">例如，如果服务地址为 `https://localhost:8080/CalculatorService` 且 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 为空字符串，则 HTTPS/GET 元数据地址为 `https://localhost:8080/CalculatorService?wsdl`。</span><span class="sxs-lookup"><span data-stu-id="70696-165">For example, if the service address is `https://localhost:8080/CalculatorService` and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> is an empty string, the HTTPS/GET metadata address is `https://localhost:8080/CalculatorService?wsdl`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-166">获取或设置进行 HTTPS/GET 请求的元数据发布的位置。</span><span class="sxs-lookup"><span data-stu-id="70696-166">Gets or sets the location of metadata publication for HTTPS/GET requests.</span></span></summary>
        <value><span data-ttu-id="70696-167">HTTPS 元数据的地址。</span><span class="sxs-lookup"><span data-stu-id="70696-167">The address of HTTPS metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-168">如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值是相对值，则发布元数据的地址为基址和服务地址加上 `?wsdl` querystring。</span><span class="sxs-lookup"><span data-stu-id="70696-168">If the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> is relative, the address at which the metadata is published is the base address and the service address plus a `?wsdl` querystring.</span></span>  
  
 <span data-ttu-id="70696-169">如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值是绝对值，则发布元数据的地址为 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 值的值加上 `?wsdl` querystring。</span><span class="sxs-lookup"><span data-stu-id="70696-169">If the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> is absolute the address at which the metadata is published is the value of <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> value plus a `?wsdl` querystring.</span></span>  
  
 <span data-ttu-id="70696-170">例如，如果服务地址为 `https://localhost:8080/CalculatorService` 且 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 为空字符串，则 HTTPS/GET 元数据地址为 `https://localhost:8080/CalculatorService?wsdl`。</span><span class="sxs-lookup"><span data-stu-id="70696-170">For example, if the service address is `https://localhost:8080/CalculatorService` and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> is an empty string, the HTTPS/GET metadata address is `https://localhost:8080/CalculatorService?wsdl`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataExporter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.MetadataExporter MetadataExporter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.MetadataExporter MetadataExporter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberSignature Language="VB.NET" Value="Public Property MetadataExporter As MetadataExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::MetadataExporter ^ MetadataExporter { System::ServiceModel::Description::MetadataExporter ^ get(); void set(System::ServiceModel::Description::MetadataExporter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MetadataExporter : System.ServiceModel.Description.MetadataExporter with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-171">获取或设置用于发布服务元数据的内部 <see cref="T:System.ServiceModel.Description.MetadataExporter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="70696-171">Gets or sets the internal <see cref="T:System.ServiceModel.Description.MetadataExporter" /> object used to publish the service metadata.</span></span></summary>
        <value><span data-ttu-id="70696-172">内部 <see cref="T:System.ServiceModel.Description.MetadataExporter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="70696-172">The internal <see cref="T:System.ServiceModel.Description.MetadataExporter" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70696-173">使用 <xref:System.ServiceModel.Description.MetadataExporter> 对象可以修改服务元数据的发布。</span><span class="sxs-lookup"><span data-stu-id="70696-173">Use the <xref:System.ServiceModel.Description.MetadataExporter> object to modify the publication of the service metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MexContractName">
      <MemberSignature Language="C#" Value="public const string MexContractName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MexContractName" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberSignature Language="VB.NET" Value="Public Const MexContractName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MexContractName;" />
      <MemberSignature Language="F#" Value="val mutable MexContractName : string" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70696-174">返回字符串 <c>IMetadataContract</c>。</span><span class="sxs-lookup"><span data-stu-id="70696-174">Returns the string <c>IMetadataContract</c>.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As ServiceDescription, serviceHostBase As ServiceHostBase, endpoints As Collection(Of ServiceEndpoint), parameters As BindingParameterCollection) Implements IServiceBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="serviceMetadataBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters (description, serviceHostBase, endpoints, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="70696-175">要配置的服务说明。</span><span class="sxs-lookup"><span data-stu-id="70696-175">The service description to be configured.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="70696-176">服务的宿主。</span><span class="sxs-lookup"><span data-stu-id="70696-176">The host of the service.</span></span></param>
        <param name="endpoints"><span data-ttu-id="70696-177">要配置的终结点。</span><span class="sxs-lookup"><span data-stu-id="70696-177">The endpoints to be configured.</span></span></param>
        <param name="parameters"><span data-ttu-id="70696-178">要配置的绑定参数。</span><span class="sxs-lookup"><span data-stu-id="70696-178">The binding parameters to be configured.</span></span></param>
        <summary><span data-ttu-id="70696-179">配置基础绑定以支持该行为的 <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> 的实现。</span><span class="sxs-lookup"><span data-stu-id="70696-179">Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that configures the underlying bindings to support the behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As ServiceDescription, serviceHostBase As ServiceHostBase) Implements IServiceBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="serviceMetadataBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior (description, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="70696-180">要修改的服务说明。</span><span class="sxs-lookup"><span data-stu-id="70696-180">The service description to be modified.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="70696-181">服务的宿主。</span><span class="sxs-lookup"><span data-stu-id="70696-181">The host of the service.</span></span></param>
        <summary><span data-ttu-id="70696-182">配置基础绑定以支持服务行为的 <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> 的实现。</span><span class="sxs-lookup"><span data-stu-id="70696-182">Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that configures the underlying bindings to support the behavior on the service.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="70696-183"><paramref name="description" /> 或 <paramref name="serviceHostBase" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="70696-183">Either the <paramref name="description" /> or the <paramref name="serviceHostBase" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="70696-184"><paramref name="serviceHostBase" /> 的目标地址为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="70696-184">The destination address of the <paramref name="serviceHostBase" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As ServiceDescription, serviceHostBase As ServiceHostBase) Implements IServiceBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="serviceMetadataBehavior.System.ServiceModel.Description.IServiceBehavior.Validate (description, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="70696-185">要验证的服务说明。</span><span class="sxs-lookup"><span data-stu-id="70696-185">The service description to be validated.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="70696-186">服务的宿主。</span><span class="sxs-lookup"><span data-stu-id="70696-186">The host of the service.</span></span></param>
        <summary><span data-ttu-id="70696-187">验证服务说明是否可以支持该行为的 <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> 的实现。</span><span class="sxs-lookup"><span data-stu-id="70696-187">Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that validates that the service description can support the behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
