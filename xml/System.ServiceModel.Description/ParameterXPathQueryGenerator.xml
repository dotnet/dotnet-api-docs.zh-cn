<Type Name="ParameterXPathQueryGenerator" FullName="System.ServiceModel.Description.ParameterXPathQueryGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c44be87d7d194fa1aca5a4aaff0a163630f1ba17" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78748415" /></Metadata><TypeSignature Language="C#" Value="public static class ParameterXPathQueryGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ParameterXPathQueryGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ParameterXPathQueryGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterXPathQueryGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterXPathQueryGenerator abstract sealed" />
  <TypeSignature Language="F#" Value="type ParameterXPathQueryGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>允许从数据协定创建 XPath。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFromDataContractSerializer">
      <MemberSignature Language="C#" Value="public static string CreateFromDataContractSerializer (System.Xml.Linq.XName serviceContractName, string operationName, string parameterName, bool isReply, Type type, System.Reflection.MemberInfo[] pathToMember, out System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateFromDataContractSerializer(class System.Xml.Linq.XName serviceContractName, string operationName, string parameterName, bool isReply, class System.Type type, class System.Reflection.MemberInfo[] pathToMember, [out] class System.Xml.XmlNamespaceManager&amp; namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer(System.Xml.Linq.XName,System.String,System.String,System.Boolean,System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromDataContractSerializer (serviceContractName As XName, operationName As String, parameterName As String, isReply As Boolean, type As Type, pathToMember As MemberInfo(), ByRef namespaces As XmlNamespaceManager) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateFromDataContractSerializer(System::Xml::Linq::XName ^ serviceContractName, System::String ^ operationName, System::String ^ parameterName, bool isReply, Type ^ type, cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ pathToMember, [Runtime::InteropServices::Out] System::Xml::XmlNamespaceManager ^ % namespaces);" />
      <MemberSignature Language="F#" Value="static member CreateFromDataContractSerializer : System.Xml.Linq.XName * string * string * bool * Type * System.Reflection.MemberInfo[] * XmlNamespaceManager -&gt; string" Usage="System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer (serviceContractName, operationName, parameterName, isReply, type, pathToMember, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceContractName" Type="System.Xml.Linq.XName" />
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="isReply" Type="System.Boolean" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="pathToMember" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceContractName">包含服务协定命名空间的服务协定 XML 元素的名称。</param>
        <param name="operationName">服务操作的名称。</param>
        <param name="parameterName">服务操作参数的名称。</param>
        <param name="isReply">如果服务操作为响应；则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="type">数据协定。</param>
        <param name="pathToMember">使用 <see cref="M:System.Type.GetMember(System.String)" /> 类的 <see cref="T:System.Type" /> 方法生成的元数据，指向用于生成查询的特定数据成员。</param>
        <param name="namespaces">返回此方法时，包含在数据协定中找到的 XML 命名空间及其前缀。 在此方法中传递此参数之前，对其进行实例化。</param>
        <summary>使用指定的操作名称、参数名称和数据协定信息创建 XPath。</summary>
        <returns>使用指定的操作名称、参数名称和数据协定信息生成的 XPath。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
