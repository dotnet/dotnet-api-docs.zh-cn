<Type Name="IOperationBehavior" FullName="System.ServiceModel.Description.IOperationBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f24b885f61beed1608831319e3ca21160fcc41ee" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89980398" /></Metadata><TypeSignature Language="C#" Value="public interface IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationBehavior" />
  <TypeSignature Language="F#" Value="type IOperationBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b9f81-101">实现可用于扩展服务或客户端应用程序中的操作的运行时行为的方法。</span><span class="sxs-lookup"><span data-stu-id="b9f81-101">Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9f81-102">实现 <xref:System.ServiceModel.Description.IOperationBehavior> 接口可以在应用程序级别，修改、检查或扩展客户端或服务应用程序的整个操作的某个执行方面。</span><span class="sxs-lookup"><span data-stu-id="b9f81-102">Implement the <xref:System.ServiceModel.Description.IOperationBehavior> interface to modify, examine, or extend some aspect of operation-wide execution at the application level for either client or service applications.</span></span>  
  
-   <span data-ttu-id="b9f81-103">使用 <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> 方法可以在运行时传递自定义数据，从而使绑定支持自定义行为。</span><span class="sxs-lookup"><span data-stu-id="b9f81-103">Use the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to pass custom data at runtime to enable bindings to support custom behavior.</span></span>  
  
-   <span data-ttu-id="b9f81-104">使用 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> 方法可以修改、检查客户端应用程序中的客户端调度程序中的扩展，或向该客户端调度程序中插入扩展。</span><span class="sxs-lookup"><span data-stu-id="b9f81-104">Use the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a client dispatcher in a client application.</span></span>  
  
-   <span data-ttu-id="b9f81-105">使用 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> 方法可以修改、检查服务应用程序中的对整个操作执行的扩展，或者在该服务应用程序中插入对整个操作执行的扩展。</span><span class="sxs-lookup"><span data-stu-id="b9f81-105">Use the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to operation-wide execution in a service application.</span></span>  
  
-   <span data-ttu-id="b9f81-106">使用 <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> 方法可以确认 <xref:System.ServiceModel.Description.OperationDescription> 是否满足特定需求。</span><span class="sxs-lookup"><span data-stu-id="b9f81-106">Use the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method to confirm that a <xref:System.ServiceModel.Description.OperationDescription> meets specific requirements.</span></span> <span data-ttu-id="b9f81-107">这可用于确保操作启用某一配置设置、支持特定功能以及其他要求。</span><span class="sxs-lookup"><span data-stu-id="b9f81-107">This can be used to ensure that an operation has a certain configuration setting enabled, supports a particular feature and other requirements.</span></span>  
  
 <span data-ttu-id="b9f81-108"><xref:System.ServiceModel.Description.IOperationBehavior> 对象可以使用其中的任何一种方法，但通常只有一种方法是重要的;在这种情况下，未使用的方法可以返回，而不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="b9f81-108"><xref:System.ServiceModel.Description.IOperationBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9f81-109">所有 <xref:System.ServiceModel.Description.IOperationBehavior> 方法都会将 <xref:System.ServiceModel.Description.OperationDescription> 对象作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="b9f81-109">All of the <xref:System.ServiceModel.Description.IOperationBehavior> methods pass an <xref:System.ServiceModel.Description.OperationDescription> object as a parameter.</span></span> <span data-ttu-id="b9f81-110">此参数只用于检查；如果您修改了 <xref:System.ServiceModel.Description.OperationDescription> 对象，则执行行为将是不确定的。</span><span class="sxs-lookup"><span data-stu-id="b9f81-110">This parameter is for examination only; if you modify the <xref:System.ServiceModel.Description.OperationDescription> object the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="b9f81-111">通常，<xref:System.ServiceModel.Description.IOperationBehavior> 可用于访问服务应用程序中的 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 对象的各个属性，以及客户端应用程序中的 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> 对象的各个属性。</span><span class="sxs-lookup"><span data-stu-id="b9f81-111"><xref:System.ServiceModel.Description.IOperationBehavior> objects are typically used to access the various properties of the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> object in a service application and the <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> object in a client application.</span></span>  
  
 <span data-ttu-id="b9f81-112">通常，开发人员会先检查扩展点，确定适合应用程序方案的自定义选项，然后才会在相应范围内实现自定义。</span><span class="sxs-lookup"><span data-stu-id="b9f81-112">Typically, the developer first reviews the extensibility points to determine which customization option suits the application scenario and then implements the customization at the appropriate scope.</span></span> <span data-ttu-id="b9f81-113">例如，<xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 对象可以在整个服务内为所有消息插入自定义，而 <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> 对象则可以在特定协定内为所有消息插入自定义。</span><span class="sxs-lookup"><span data-stu-id="b9f81-113">For example, <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> objects can insert customizations for all messages in an entire service and <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> objects can insert customizations for all messages across a specific contract, and so on.</span></span> <span data-ttu-id="b9f81-114">有关可用的各种属性和自定义的说明，请参阅 [扩展 ServiceHost 和服务模型层](/dotnet/framework/wcf/extending/extending-servicehost-and-the-service-model-layer)。</span><span class="sxs-lookup"><span data-stu-id="b9f81-114">For a description of the various properties and customizations available, see [Extending ServiceHost and the Service Model Layer](/dotnet/framework/wcf/extending/extending-servicehost-and-the-service-model-layer).</span></span>  
  
 <span data-ttu-id="b9f81-115">确定自定义 (并在必要的情况下实现自定义接口) 并且 <xref:System.ServiceModel.Description.IOperationBehavior> 是适当的自定义范围后，必须通过实现 <xref:System.ServiceModel.Description.IOperationBehavior> 并将操作行为添加到运行时，将自定义插入到 WINDOWS COMMUNICATION FOUNDATION (WCF) 运行时。</span><span class="sxs-lookup"><span data-stu-id="b9f81-115">Once a customization has been decided upon (and the customization interface implemented if necessary) and the <xref:System.ServiceModel.Description.IOperationBehavior> is the appropriate scope of customization, the customization must be inserted into the Windows Communication Foundation (WCF) runtime by implementing <xref:System.ServiceModel.Description.IOperationBehavior> and adding the operation behavior to the runtime.</span></span>  
  
 <span data-ttu-id="b9f81-116">有两种方法可将 <xref:System.ServiceModel.Description.IOperationBehavior> 添加到运行时：</span><span class="sxs-lookup"><span data-stu-id="b9f81-116">There are two ways to add the <xref:System.ServiceModel.Description.IOperationBehavior> to the runtime:</span></span>  
  
-   <span data-ttu-id="b9f81-117">通过编程方式，先将自定义操作行为添加到 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> 属性，然后打开服务主机（位于服务应用程序中）或通道工厂（位于客户端应用程序中）。</span><span class="sxs-lookup"><span data-stu-id="b9f81-117">Programmatically add the custom operation behavior to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</span></span>  
  
-   <span data-ttu-id="b9f81-118">通过使用自定义属性添加行为。</span><span class="sxs-lookup"><span data-stu-id="b9f81-118">Add the behavior using a custom attribute.</span></span>  
  
 <span data-ttu-id="b9f81-119">若要执行服务自定义计划任务，则必须先将 <xref:System.ServiceModel.Description.IOperationBehavior> 对象添加到 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> 属性，然后构造服务运行时，该构造操作是在对 <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> 调用 <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> 方法时执行的。</span><span class="sxs-lookup"><span data-stu-id="b9f81-119">To perform the service customization task for which it is intended, the <xref:System.ServiceModel.Description.IOperationBehavior> object must be added to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property prior to the construction of the service runtime, which occurs when <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b9f81-120">若要执行客户端自定义任务，则必须对 <xref:System.ServiceModel.Description.IOperationBehavior> 调用 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> 方法或 <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> 方法之前，先将 <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> 对象添加到 <xref:System.ServiceModel.ChannelFactory%601> 属性。</span><span class="sxs-lookup"><span data-stu-id="b9f81-120">To perform a client customization task, the <xref:System.ServiceModel.Description.IOperationBehavior> object must be added to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property before calling the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> method or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on <xref:System.ServiceModel.ChannelFactory%601>.</span></span>  
  
 <span data-ttu-id="b9f81-121">虽然该操作行为设计为在单个操作范围内的访问运行时，但您也可以通过访问父级运行时对象，来在更大范围内访问该运行时。</span><span class="sxs-lookup"><span data-stu-id="b9f81-121">Although the operation behavior is designed for easy access to the runtime at the scope of an individual operation, you can access the runtime at a larger scope by accessing the parent runtime object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9f81-122">下面的代码示例演示了 <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> 的实现，对操作调用该检查器时，该检查器对控制台进行了写入。</span><span class="sxs-lookup"><span data-stu-id="b9f81-122">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="b9f81-123">此自定义只能附加到 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 或 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>，因此，此自定义通常由操作行为插入。</span><span class="sxs-lookup"><span data-stu-id="b9f81-123">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="b9f81-124">下面的代码示例演示了操作行为是如何将参数检查器附加到运行时的。</span><span class="sxs-lookup"><span data-stu-id="b9f81-124">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBindingParameters (operationDescription As OperationDescription, bindingParameters As BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iOperationBehavior.AddBindingParameters (operationDescription, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="b9f81-125">正在检查的操作。</span><span class="sxs-lookup"><span data-stu-id="b9f81-125">The operation being examined.</span></span> <span data-ttu-id="b9f81-126">仅用于检查。</span><span class="sxs-lookup"><span data-stu-id="b9f81-126">Use for examination only.</span></span> <span data-ttu-id="b9f81-127">如果修改了操作说明，则结果将不确定。</span><span class="sxs-lookup"><span data-stu-id="b9f81-127">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="b9f81-128">绑定元素支持该行为所需的对象的集合。</span><span class="sxs-lookup"><span data-stu-id="b9f81-128">The collection of objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="b9f81-129">实现此方法可以在运行时将数据传递给绑定，从而支持自定义行为。</span><span class="sxs-lookup"><span data-stu-id="b9f81-129">Implement to pass data at runtime to bindings to support custom behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9f81-130">实现 <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> 方法可以向绑定元素提供其支持操作行为所需的其他对象。</span><span class="sxs-lookup"><span data-stu-id="b9f81-130">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the operation behavior.</span></span> <span data-ttu-id="b9f81-131">如果向此处添加了绑定参数，则在创建通道侦听器或通道工厂时，绑定操作将会查找并处理这些对象。</span><span class="sxs-lookup"><span data-stu-id="b9f81-131">When binding parameters are added here, the binding can locate and process these objects when the channel listener or channel factory is created.</span></span> <span data-ttu-id="b9f81-132">通常，你可通过实现 <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> 方法，来将有关该操作的信息传递给自定义绑定元素，以使该自定义绑定元素能够正确生成支持通道。</span><span class="sxs-lookup"><span data-stu-id="b9f81-132">Typically, you implement the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to pass information about the operation to a custom binding element so that it can build a supporting channel correctly.</span></span> <span data-ttu-id="b9f81-133">如果无需任何修改，则不返回值。</span><span class="sxs-lookup"><span data-stu-id="b9f81-133">Return no value if no modifications are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.ClientOperation clientOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.ClientOperation clientOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyClientBehavior (operationDescription As OperationDescription, clientOperation As ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Dispatcher::ClientOperation ^ clientOperation);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit" Usage="iOperationBehavior.ApplyClientBehavior (operationDescription, clientOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="clientOperation" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="b9f81-134">正在检查的操作。</span><span class="sxs-lookup"><span data-stu-id="b9f81-134">The operation being examined.</span></span> <span data-ttu-id="b9f81-135">仅用于检查。</span><span class="sxs-lookup"><span data-stu-id="b9f81-135">Use for examination only.</span></span> <span data-ttu-id="b9f81-136">如果修改了操作说明，则结果将不确定。</span><span class="sxs-lookup"><span data-stu-id="b9f81-136">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="clientOperation"><span data-ttu-id="b9f81-137">公开 <paramref name="operationDescription" /> 所描述的操作的自定义属性的运行时对象。</span><span class="sxs-lookup"><span data-stu-id="b9f81-137">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</span></span></param>
        <summary><span data-ttu-id="b9f81-138">在操作范围内执行客户端的修改或扩展。</span><span class="sxs-lookup"><span data-stu-id="b9f81-138">Implements a modification or extension of the client across an operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9f81-139">实现 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> 方法可以在通过特定操作使用的所有消息范围内，查看、修改或添加对客户端运行时中的自定义扩展。</span><span class="sxs-lookup"><span data-stu-id="b9f81-139">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method to view, modify, or add a custom extension to the client runtime across all messages used with a specific operation.</span></span> <span data-ttu-id="b9f81-140">有关利用客户端运行时对象可进行的自定义的详细信息，请参见 <xref:System.ServiceModel.Dispatcher.ClientRuntime> 和 <xref:System.ServiceModel.Dispatcher.ClientOperation>。</span><span class="sxs-lookup"><span data-stu-id="b9f81-140">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="b9f81-141">如果该行为仅用于服务应用程序中，则建议 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> 方法引发 <xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="b9f81-141">It is recommended that the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method throw a <xref:System.NotImplementedException> if the behavior is only intended for use in a service application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9f81-142">下面的代码示例演示了 <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> 的实现，对操作调用该检查器时，该检查器对控制台进行了写入。</span><span class="sxs-lookup"><span data-stu-id="b9f81-142">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="b9f81-143">此自定义只能附加到 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 或 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>，因此，此自定义通常由操作行为插入。</span><span class="sxs-lookup"><span data-stu-id="b9f81-143">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="b9f81-144">下面的代码示例演示了操作行为是如何将参数检查器附加到运行时的。</span><span class="sxs-lookup"><span data-stu-id="b9f81-144">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyDispatchBehavior (operationDescription As OperationDescription, dispatchOperation As DispatchOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatchOperation);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit" Usage="iOperationBehavior.ApplyDispatchBehavior (operationDescription, dispatchOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatchOperation" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="b9f81-145">正在检查的操作。</span><span class="sxs-lookup"><span data-stu-id="b9f81-145">The operation being examined.</span></span> <span data-ttu-id="b9f81-146">仅用于检查。</span><span class="sxs-lookup"><span data-stu-id="b9f81-146">Use for examination only.</span></span> <span data-ttu-id="b9f81-147">如果修改了操作说明，则结果将不确定。</span><span class="sxs-lookup"><span data-stu-id="b9f81-147">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="dispatchOperation"><span data-ttu-id="b9f81-148">公开 <paramref name="operationDescription" /> 所描述的操作的自定义属性的运行时对象。</span><span class="sxs-lookup"><span data-stu-id="b9f81-148">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</span></span></param>
        <summary><span data-ttu-id="b9f81-149">在操作范围内执行服务的修改或扩展。</span><span class="sxs-lookup"><span data-stu-id="b9f81-149">Implements a modification or extension of the service across an operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9f81-150">实现 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> 方法可以在所有消息范围内或针对某个特定操作，查看、修改或扩展服务运行时。</span><span class="sxs-lookup"><span data-stu-id="b9f81-150">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method to view, modify, or extend the service runtime across all messages or for a specific operation.</span></span> <span data-ttu-id="b9f81-151">有关可在服务应用程序中进行的自定义的详细信息，请参见 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b9f81-151">For details about what customizations you can do in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b9f81-152">如果该行为仅用于客户端应用程序中，则建议 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> 方法引发 <xref:System.NotImplementedException> 异常。</span><span class="sxs-lookup"><span data-stu-id="b9f81-152">It is recommended that the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9f81-153">下面的代码示例演示了 <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> 的实现，对操作调用该检查器时，该检查器对控制台进行了写入。</span><span class="sxs-lookup"><span data-stu-id="b9f81-153">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="b9f81-154">此自定义只能附加到 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 或 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>，因此，此自定义通常由操作行为插入。</span><span class="sxs-lookup"><span data-stu-id="b9f81-154">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="b9f81-155">下面的代码示例演示了操作行为是如何将参数检查器附加到运行时的。</span><span class="sxs-lookup"><span data-stu-id="b9f81-155">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.OperationDescription operationDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.OperationDescription operationDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (operationDescription As OperationDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::OperationDescription ^ operationDescription);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.OperationDescription -&gt; unit" Usage="iOperationBehavior.Validate operationDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="b9f81-156">正在检查的操作。</span><span class="sxs-lookup"><span data-stu-id="b9f81-156">The operation being examined.</span></span> <span data-ttu-id="b9f81-157">仅用于检查。</span><span class="sxs-lookup"><span data-stu-id="b9f81-157">Use for examination only.</span></span> <span data-ttu-id="b9f81-158">如果修改了操作说明，则结果将不确定。</span><span class="sxs-lookup"><span data-stu-id="b9f81-158">If the operation description is modified, the results are undefined.</span></span></param>
        <summary><span data-ttu-id="b9f81-159">实现此方法可以确定操作是否满足某些设定条件。</span><span class="sxs-lookup"><span data-stu-id="b9f81-159">Implement to confirm that the operation meets some intended criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9f81-160">实现 <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> 方法可以检查结构，从而可以确认所有条件集。</span><span class="sxs-lookup"><span data-stu-id="b9f81-160">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method to examine the structure to confirm any set of criteria.</span></span> <span data-ttu-id="b9f81-161">要使用此方法，并不一定要在 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> 或 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> 中执行自定义。</span><span class="sxs-lookup"><span data-stu-id="b9f81-161">It is not necessary to perform any customizations in <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> or <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> to make use of this method.</span></span> <span data-ttu-id="b9f81-162">如果操作传递验证，则返回；否则，抛出异常。</span><span class="sxs-lookup"><span data-stu-id="b9f81-162">If the operation passes validation, return; otherwise, throw an exception.</span></span>  
  
 <span data-ttu-id="b9f81-163">例如，可以使用 <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> 方法来确保对操作进行授权。</span><span class="sxs-lookup"><span data-stu-id="b9f81-163">For example, the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method can be use to ensure that an operation is authorized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
