<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e73d59ea52f83adccf032114fdb8598f2c160d6" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70560458" /></Metadata><TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5c645-101">将元数据作为 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象进行检索和导入。</span><span class="sxs-lookup"><span data-stu-id="5c645-101">Retrieves and imports metadata as <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-102">使用 <xref:System.ServiceModel.Description.MetadataResolver> 类可快速从元数据中导入服务的终结点。</span><span class="sxs-lookup"><span data-stu-id="5c645-102">Use the <xref:System.ServiceModel.Description.MetadataResolver> class to quickly import endpoints for a service from metadata.</span></span> <span data-ttu-id="5c645-103">此类可下载元数据并将其转换为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="5c645-103">This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects.</span></span> <span data-ttu-id="5c645-104">若要下载元数据并将该信息作为 <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> 进行处理，请参见 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-104">To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c645-105">下面的代码示例演示如何使用 <xref:System.ServiceModel.Description.MetadataResolver> 类返回作为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象的集合的元数据，稍后这些对象将用于连接服务实例。</span><span class="sxs-lookup"><span data-stu-id="5c645-105">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.</span></span>  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 <span data-ttu-id="5c645-106">下面的代码示例演示如何使用 <xref:System.ServiceModel.Description.MetadataResolver> 下载和返回作为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象的集合的元数据，这些对象使用 HTTP GET 请求而不是 WS-Transfer。</span><span class="sxs-lookup"><span data-stu-id="5c645-106">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.</span></span>  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c645-107">开始一个异步调用，该调用可将元数据地址解析为该服务的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-107">Begins an asynchronous call that resolves a metadata address into a collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for that service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-108">这些方法可开始 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 方法的异步版本。</span><span class="sxs-lookup"><span data-stu-id="5c645-108">These methods begin asynchronous versions of the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="5c645-109">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-109">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-110">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-110">The metadata address.</span></span></param>
        <param name="callback"><span data-ttu-id="5c645-111">在调用完成时调用的异步回调委托。</span><span class="sxs-lookup"><span data-stu-id="5c645-111">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="5c645-112">与异步调用关联的状态。</span><span class="sxs-lookup"><span data-stu-id="5c645-112">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="5c645-113">使用指定地址和异步语句和委托，开始一个可将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的异步调用。</span><span class="sxs-lookup"><span data-stu-id="5c645-113">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address and asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="5c645-114">引用异步解析操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-114">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-115"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> 上的默认设置用于检索元数据，并且默认 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> 为 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-115">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5c645-116">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-116">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-117">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-117">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-118">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-118">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-119">地址、协定或回调为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-119">The address, contract, or callback is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c645-120"><paramref name="contracts" /> 为空，<paramref name="contracts" /> 至少有一个成员为 <see langword="null" />，或者 <paramref name="contracts" /> 包含多个具有相同名称和命名空间的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-120"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is <see langword="null" />, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="5c645-121">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-121">The contract for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-122">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-122">The metadata address.</span></span></param>
        <param name="callback"><span data-ttu-id="5c645-123">在调用完成时调用的异步回调委托。</span><span class="sxs-lookup"><span data-stu-id="5c645-123">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="5c645-124">与异步调用关联的状态。</span><span class="sxs-lookup"><span data-stu-id="5c645-124">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="5c645-125">使用指定地址和异步语句和委托，开始一个可将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的异步调用。</span><span class="sxs-lookup"><span data-stu-id="5c645-125">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract using the specified address and asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="5c645-126">引用异步解析操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-126">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-127"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> 上的默认设置用于检索元数据，并且默认 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> 为 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-127">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5c645-128">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-128">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-129">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-129">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-130">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-130">If an empty collection is returned, a warning trace is written.</span></span>  
  
 <span data-ttu-id="5c645-131">此方法要求您指定协定类型。</span><span class="sxs-lookup"><span data-stu-id="5c645-131">This method requires that you specify a contract type.</span></span> <span data-ttu-id="5c645-132">可以通过在客户端代码中声明服务接口或使用由 Svcutil.exe 生成的 WCF 客户端来指定协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-132">You can specify the contract by declaring the service interface in the client code or by using a WCF client generated by Svcutil.exe.</span></span> <span data-ttu-id="5c645-133">如果接口更改 (添加新操作，例如) 必须在客户端代码中更新该接口或生成新的 WCF 客户端。</span><span class="sxs-lookup"><span data-stu-id="5c645-133">If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new WCF client.</span></span> <span data-ttu-id="5c645-134">否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="5c645-134">If you do not, an exception is thrown.</span></span> <span data-ttu-id="5c645-135">例如，您有一个可实现称为 ICalculator 的服务协定的服务，该协定可定义 Add()、Sub()、Mult() 和 Div()。</span><span class="sxs-lookup"><span data-stu-id="5c645-135">For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().</span></span> <span data-ttu-id="5c645-136">您将创建一个客户端应用程序并生成 WCF 客户端。</span><span class="sxs-lookup"><span data-stu-id="5c645-136">You create a client application and generate WCF client.</span></span> <span data-ttu-id="5c645-137">然后您向 ICalculator 添加了一个方法，称为 Echo()。</span><span class="sxs-lookup"><span data-stu-id="5c645-137">You then add a method to ICalculator called Echo().</span></span> <span data-ttu-id="5c645-138">如果随后编写一个调用 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> 而不生成新 WCF 客户端的应用程序，则会出现以下异常。</span><span class="sxs-lookup"><span data-stu-id="5c645-138">If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new WCF client you get the following exception.</span></span>  
  
 <span data-ttu-id="5c645-139">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`。</span><span class="sxs-lookup"><span data-stu-id="5c645-139">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-140">地址、协定或回调为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-140">The address, contract, or callback is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="5c645-141">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-141">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-142">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-142">The metadata address.</span></span></param>
        <param name="client"><span data-ttu-id="5c645-143">用于解析元数据的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-143">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span></span></param>
        <param name="callback"><span data-ttu-id="5c645-144">在调用完成时调用的异步回调委托。</span><span class="sxs-lookup"><span data-stu-id="5c645-144">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="5c645-145">与异步调用关联的状态。</span><span class="sxs-lookup"><span data-stu-id="5c645-145">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="5c645-146">使用指定的地址、<see cref="T:System.ServiceModel.Description.ServiceEndpoint" />、异步状态和委托，开始一个可将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> 对象的异步调用。</span><span class="sxs-lookup"><span data-stu-id="5c645-146">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="5c645-147">引用异步解析操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-148">默认 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> 为 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-148">The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5c645-149">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-149">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-150">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-150">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-151">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-151">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-152">地址、协定、客户端或回调为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-152">The address, contract, client, or callback is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c645-153"><paramref name="contracts" /> 为空，<paramref name="contracts" /> 的至少一个成员为 Null，或者 <paramref name="contracts" /> 包含多个具有相同名称和命名空间的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-153"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="5c645-154">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-154">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-155">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-155">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="5c645-156">检索的模式。</span><span class="sxs-lookup"><span data-stu-id="5c645-156">The mode of retrieval.</span></span></param>
        <param name="callback"><span data-ttu-id="5c645-157">在调用完成时调用的异步回调委托。</span><span class="sxs-lookup"><span data-stu-id="5c645-157">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="5c645-158">与异步调用关联的状态。</span><span class="sxs-lookup"><span data-stu-id="5c645-158">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="5c645-159">使用指定地址、<see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 值和异步语句和委托，开始一个可将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 对象的异步调用。</span><span class="sxs-lookup"><span data-stu-id="5c645-159">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> value, asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="5c645-160">引用异步解析操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-160">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-161"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> 上的默认设置用于检索元数据。</span><span class="sxs-lookup"><span data-stu-id="5c645-161">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="5c645-162">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-162">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-163">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-163">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-164">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-164">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-165">地址、协定或回调为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-165">The address, contract, or callback is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c645-166"><paramref name="contracts" /> 为空，<paramref name="contracts" /> 的至少一个成员为 Null，或者 <paramref name="contracts" /> 包含多个具有相同名称和命名空间的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-166"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="5c645-167">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-167">The contract for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-168">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-168">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="5c645-169">检索的模式。</span><span class="sxs-lookup"><span data-stu-id="5c645-169">The mode of retrieval.</span></span></param>
        <param name="callback"><span data-ttu-id="5c645-170">在调用完成时调用的异步回调委托。</span><span class="sxs-lookup"><span data-stu-id="5c645-170">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="5c645-171">与异步调用关联的状态。</span><span class="sxs-lookup"><span data-stu-id="5c645-171">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="5c645-172">使用指定地址、<see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 和异步语句和委托，开始一个可将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 对象的异步调用。</span><span class="sxs-lookup"><span data-stu-id="5c645-172">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, asynchronous state and delegate.</span></span></summary>
        <returns><span data-ttu-id="5c645-173">引用异步解析操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-173">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-174"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> 上的默认设置用于检索元数据。</span><span class="sxs-lookup"><span data-stu-id="5c645-174">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="5c645-175">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-175">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-176">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-176">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-177">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-177">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-178">地址、协定或回调为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-178">The address, contract, or callback is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="5c645-179">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-179">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-180">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-180">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="5c645-181">检索的模式。</span><span class="sxs-lookup"><span data-stu-id="5c645-181">The mode of retrieval.</span></span></param>
        <param name="client"><span data-ttu-id="5c645-182">用于解析元数据的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-182">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span></span></param>
        <param name="callback"><span data-ttu-id="5c645-183">在调用完成时调用的异步回调委托。</span><span class="sxs-lookup"><span data-stu-id="5c645-183">The asynchronous callback delegate invoked when the call is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="5c645-184">与异步调用关联的状态。</span><span class="sxs-lookup"><span data-stu-id="5c645-184">The state associated with the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="5c645-185">使用指定地址、<see cref="T:System.ServiceModel.Description.ServiceEndpoint" />、<see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />、异步语句和委托，开始一个可将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 对象的异步调用。</span><span class="sxs-lookup"><span data-stu-id="5c645-185">Begins an asynchronous call that resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts, using the specified address, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, asynchronous state, and delegate.</span></span></summary>
        <returns><span data-ttu-id="5c645-186">引用异步解析操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-186">The <see cref="T:System.IAsyncResult" /> that references the asynchronous resolve operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-187">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-187">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-188">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-188">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-189">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-189">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-190">地址、协定或回调为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-190">The address, contract, or callback is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c645-191"><paramref name="contracts" /> 为空，<paramref name="contracts" /> 的至少一个成员为 Null，或者 <paramref name="contracts" /> 包含多个具有相同名称和命名空间的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-191"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.EndResolve result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="5c645-192">从对 <see cref="T:System.IAsyncResult" /> 方法的调用中接收的 <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5c645-192">The <see cref="T:System.IAsyncResult" /> object that was received from a call to the <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> method.</span></span></param>
        <summary><span data-ttu-id="5c645-193">完成异步调用可将元数据解析为终结点的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-193">Completes an asynchronous call to resolve metadata into a collection of endpoints.</span></span></summary>
        <returns><span data-ttu-id="5c645-194">元数据中包含的终结点的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-194">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the endpoints contained in the metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-195">结束对任一 <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> 方法的异步调用。</span><span class="sxs-lookup"><span data-stu-id="5c645-195">Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c645-196">下载元数据地址并将其解析为该服务的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5c645-196">Downloads and resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for that service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-197">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-197">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
 <span data-ttu-id="5c645-198">对于所有同步和异步 `Resolve` 方法，如果未导入终结点或没有与约定相匹配的终结点，则返回空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-198">For all synchronous and asynchronous `Resolve` methods, an empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-199">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-199">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="5c645-200">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-200">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-201">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-201">The metadata address.</span></span></param>
        <summary><span data-ttu-id="5c645-202">使用指定元数据地址，将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5c645-202">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified metadata address.</span></span></summary>
        <returns><span data-ttu-id="5c645-203">指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-203">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-204"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> 上的默认设置用于检索元数据，并且默认 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> 为 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-204">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5c645-205">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-205">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-206">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-206">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-207">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-207">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-208">地址或协定集合为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-208">The address or contracts collection is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c645-209"><paramref name="contracts" /> 为空，<paramref name="contracts" /> 的至少一个成员为 Null，或者 <paramref name="contracts" /> 包含多个具有相同名称和命名空间的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-209"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="5c645-210">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-210">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-211">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-211">The metadata address.</span></span></param>
        <summary><span data-ttu-id="5c645-212">下载元数据地址并将其解析为指定地址处的指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-212">Downloads and resolves a metadata address into a collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for a specified contract at a specified address.</span></span></summary>
        <returns><span data-ttu-id="5c645-213">指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-213">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-214">使用 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 方法可指定下载和解析元数据时要使用的协定和元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-214">Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify the contract and the metadata address to use when downloading and resolving metadata.</span></span>  
  
 <span data-ttu-id="5c645-215"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> 上的默认设置用于检索元数据，并且默认 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> 为 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-215">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5c645-216">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-216">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-217">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-217">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-218">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-218">If an empty collection is returned, a warning trace is written.</span></span>  
  
 <span data-ttu-id="5c645-219">此方法要求您指定协定类型。</span><span class="sxs-lookup"><span data-stu-id="5c645-219">This method requires that you specify a contract type.</span></span> <span data-ttu-id="5c645-220">可以通过在客户端代码中声明服务接口或使用由 Svcutil.exe 生成的 WCF 客户端来指定协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-220">You can specify the contract by declaring the service interface in the client code or by using a WCF client generated by Svcutil.exe.</span></span> <span data-ttu-id="5c645-221">如果接口更改 (添加新操作，例如) 必须在客户端代码中更新该接口或生成新的 WCF 客户端。</span><span class="sxs-lookup"><span data-stu-id="5c645-221">If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new WCF client.</span></span> <span data-ttu-id="5c645-222">否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="5c645-222">If you do not, an exception is thrown.</span></span> <span data-ttu-id="5c645-223">例如，您有一个可实现称为 ICalculator 的服务协定的服务，该协定可定义 Add()、Sub()、Mult() 和 Div()。</span><span class="sxs-lookup"><span data-stu-id="5c645-223">For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().</span></span> <span data-ttu-id="5c645-224">您将创建一个客户端应用程序并生成 WCF 客户端。</span><span class="sxs-lookup"><span data-stu-id="5c645-224">You create a client application and generate WCF client.</span></span> <span data-ttu-id="5c645-225">然后您向 ICalculator 添加了一个方法，称为 Echo()。</span><span class="sxs-lookup"><span data-stu-id="5c645-225">You then add a method to ICalculator called Echo().</span></span> <span data-ttu-id="5c645-226">如果随后编写一个调用 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> 而不生成新 WCF 客户端的应用程序，则会出现以下异常。</span><span class="sxs-lookup"><span data-stu-id="5c645-226">If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new WCF client you get the following exception.</span></span>  
  
 <span data-ttu-id="5c645-227">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`。</span><span class="sxs-lookup"><span data-stu-id="5c645-227">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c645-228">下面的代码示例演示如何使用 <xref:System.ServiceModel.Description.MetadataResolver> 类返回作为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象的集合的元数据，稍后这些对象将用于连接服务实例。</span><span class="sxs-lookup"><span data-stu-id="5c645-228">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.</span></span>  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-229">地址或协定为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-229">The address or the contract is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="5c645-230">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-230">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-231">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-231">The metadata address.</span></span></param>
        <param name="client"><span data-ttu-id="5c645-232">用于解析元数据的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-232">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span></span></param>
        <summary><span data-ttu-id="5c645-233">使用指定元数据地址和 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />，将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5c645-233">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified metadata address and <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.</span></span></summary>
        <returns><span data-ttu-id="5c645-234">指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-234">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-235">默认 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> 为 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-235">The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5c645-236">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-236">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-237">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-237">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-238">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-238">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-239">地址、协定集合或客户端为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-239">The address, contracts collection, or client is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c645-240"><paramref name="contracts" /> 为空，<paramref name="contracts" /> 的至少一个成员为 Null，或者 <paramref name="contracts" /> 包含多个具有相同名称和命名空间的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-240"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="5c645-241">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-241">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-242">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-242">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="5c645-243">检索的模式。</span><span class="sxs-lookup"><span data-stu-id="5c645-243">The mode of retrieval.</span></span></param>
        <summary><span data-ttu-id="5c645-244">使用指定地址和传输模式，将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5c645-244">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified address and transfer mode.</span></span></summary>
        <returns><span data-ttu-id="5c645-245">指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-245">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-246"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> 上的默认设置用于检索元数据。</span><span class="sxs-lookup"><span data-stu-id="5c645-246">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="5c645-247">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-247">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-248">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-248">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-249">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-249">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-250">地址或协定集合为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-250">The address or contracts collection is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c645-251"><paramref name="contracts" /> 为空，<paramref name="contracts" /> 的至少一个成员为 Null，或者 <paramref name="contracts" /> 包含多个具有相同名称和命名空间的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-251"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="5c645-252">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-252">The contract for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-253">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-253">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="5c645-254">检索的模式。</span><span class="sxs-lookup"><span data-stu-id="5c645-254">The mode of retrieval.</span></span></param>
        <summary><span data-ttu-id="5c645-255">使用指定地址和传输模式，将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5c645-255">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract using the specified address and transfer mode.</span></span></summary>
        <returns><span data-ttu-id="5c645-256">指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-256">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-257">使用 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 方法可指定协定、地址和要使用的下载机制。</span><span class="sxs-lookup"><span data-stu-id="5c645-257">Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify a contract, and address, and the download mechanism to use.</span></span>  
  
 <span data-ttu-id="5c645-258"><xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> 上的默认设置用于检索元数据。</span><span class="sxs-lookup"><span data-stu-id="5c645-258">The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> are used to retrieve the metadata.</span></span>  
  
 <span data-ttu-id="5c645-259">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-259">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-260">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-260">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-261">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-261">If an empty collection is returned, a warning trace is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c645-262">下面的代码示例演示如何使用 <xref:System.ServiceModel.Description.MetadataResolver> 下载和返回作为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象的集合的元数据，这些对象使用 HTTP GET 请求而不是 WS-Transfer。</span><span class="sxs-lookup"><span data-stu-id="5c645-262">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.</span></span>  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-263">地址或协定为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-263">The address or contract is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts"><span data-ttu-id="5c645-264">要为其下载和解析元数据的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-264">The contracts for which to download and resolve metadata.</span></span></param>
        <param name="address"><span data-ttu-id="5c645-265">元数据地址。</span><span class="sxs-lookup"><span data-stu-id="5c645-265">The metadata address.</span></span></param>
        <param name="mode"><span data-ttu-id="5c645-266">检索的模式。</span><span class="sxs-lookup"><span data-stu-id="5c645-266">The mode of retrieval.</span></span></param>
        <param name="client"><span data-ttu-id="5c645-267">用于解析元数据的 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-267">The <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> used to retrieve the metadata.</span></span></param>
        <summary><span data-ttu-id="5c645-268">使用指定地址、传输模式和传输客户端，将元数据地址解析为指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5c645-268">Resolves a metadata address into the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contracts using the specified address, transfer mode, and transfer client.</span></span></summary>
        <returns><span data-ttu-id="5c645-269">指定协定的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-269">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects for the specified contract.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c645-270">若要下载元数据，而不是将信息解析为 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，请直接使用 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c645-270">To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> directly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c645-271">如果没有导入终结点或者没有与协定匹配的终结点，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="5c645-271">An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.</span></span> <span data-ttu-id="5c645-272">如果返回了空集合，则写入一个警告跟踪。</span><span class="sxs-lookup"><span data-stu-id="5c645-272">If an empty collection is returned, a warning trace is written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c645-273">地址、协定集合或客户端为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c645-273">The address, contracts collection, or client is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5c645-274"><paramref name="contracts" /> 为空，<paramref name="contracts" /> 的至少一个成员为 Null，或者 <paramref name="contracts" /> 包含多个具有相同名称和命名空间的协定。</span><span class="sxs-lookup"><span data-stu-id="5c645-274"><paramref name="contracts" /> is empty, at least one member of <paramref name="contracts" /> is null, or <paramref name="contracts" /> contains more than one contract with the same name and namespace.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
