<Type Name="TransactedBatchingBehavior" FullName="System.ServiceModel.Description.TransactedBatchingBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ff64033f004e05f7ea3ec0280f5c6e5254fcb66" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89932039" /></Metadata><TypeSignature Language="C#" Value="public class TransactedBatchingBehavior : System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransactedBatchingBehavior extends System.Object implements class System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.TransactedBatchingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class TransactedBatchingBehavior&#xA;Implements IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactedBatchingBehavior : System::ServiceModel::Description::IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type TransactedBatchingBehavior = class&#xA;    interface IEndpointBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IEndpointBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示一个行为，它可优化支持事务性接收的传输的接收操作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 采用此行为配置的传输尝试将若干接收操作成批归入到一个事务中。 这样做可以避免因创建事务以及在每个接收操作中提交事务所产生的相对较高的成本。  
  
   
  
## Examples  
 下面的示例演示如何将事务处理批处理行为添加到配置文件中的服务。  
  
 [!code-xml[UETransactedBatchingConfig#0](~/samples/snippets/csharp/VS_Snippets_CFX/uetransactedbatchingcode/common/serviceapp.config#0)] 
  
 下面的示例演示如何将事务处理批处理行为添加到代码中的服务。  
  
 [!code-csharp[UETransactedBatchingCode#0](~/samples/snippets/csharp/VS_Snippets_CFX/uetransactedbatchingcode/cs/service.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactedBatchingBehavior (int maxBatchSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxBatchSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxBatchSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactedBatchingBehavior(int maxBatchSize);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.TransactedBatchingBehavior : int -&gt; System.ServiceModel.Description.TransactedBatchingBehavior" Usage="new System.ServiceModel.Description.TransactedBatchingBehavior maxBatchSize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxBatchSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxBatchSize">可成批归入的最大接收操作数。</param>
        <summary>使用指定的批次大小初始化 <see cref="T:System.ServiceModel.Description.TransactedBatchingBehavior" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 传递给构造函数的 `maxBatchSize` 仅仅是一个提示。 在到达 `maxBatchSize` 之前，有可能接收所有消息。 这时，不需要无限制等待以接收其他消息。 为了防止发生这种情况，WCF 将提前提交批处理，并打开一个新的批次以接收其他消息。 这样，如果没有要接收的消息，并且事务超时值已经过 20%，则不会提交该批次。  
  
   
  
## Examples  
 下面的代码演示如何创建 <xref:System.ServiceModel.Description.TransactedBatchingBehavior>（指定要在一个批次中处理的最大消息数）的新实例：  
  
 [!code-csharp[UETransactedBatchingCode#1](~/samples/snippets/csharp/VS_Snippets_CFX/uetransactedbatchingcode/cs/service.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="MaxBatchSize" /> 小于 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxBatchSize">
      <MemberSignature Language="C#" Value="public int MaxBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBatchSize : int with get, set" Usage="System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置可成批归入一个事务中的最大接收操作数。</summary>
        <value>可成批归入一个事务中的最大接收操作数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `maxBatchSize` 值仅仅是一个提示。 在到达 `maxBatchSize` 之前，有可能接收所有消息。 这时，不需要无限制等待以接收其他消息。 为了防止发生这种情况，WCF 将提前提交批处理，并打开一个新的批次以接收其他消息。 这样，如果没有要接收的消息，并且事务超时值已经过 20%，则不会提交该批次。  
  
   
  
## Examples  
 下面的代码演示如何设置 <xref:System.ServiceModel.Description.TransactedBatchingBehavior.MaxBatchSize%2A> 属性。  
  
 [!code-csharp[UETransactedBatchingCode#2](~/samples/snippets/csharp/VS_Snippets_CFX/uetransactedbatchingcode/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="MaxBatchSize" /> 小于 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (serviceEndpoint As ServiceEndpoint, bindingParameters As BindingParameterCollection) Implements IEndpointBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters) = System::ServiceModel::Description::IEndpointBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="transactedBatchingBehavior.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters (serviceEndpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">将在其中应用行为设置的服务终结点。</param>
        <param name="bindingParameters">一个绑定参数的集合，这些参数存储由绑定元素用来生成工厂的信息。</param>
        <summary>将绑定设置应用于指定服务终结点。 无法继承此方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使您能够将其他绑定参数添加到指定服务终结点。 它通常用于使用自定义绑定的情形。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.ClientRuntime behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.ClientRuntime behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (serviceEndpoint As ServiceEndpoint, behavior As ClientRuntime) Implements IEndpointBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ behavior) = System::ServiceModel::Description::IEndpointBehavior::ApplyClientBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit&#xA;override this.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="transactedBatchingBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior (serviceEndpoint, behavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="behavior" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">将在其中应用行为设置的服务终结点。</param>
        <param name="behavior">包含事务批处理行为。</param>
        <summary>将事务批处理行为设置应用于指定服务终结点。 无法继承此方法。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (serviceEndpoint As ServiceEndpoint, endpointDispatcher As EndpointDispatcher) Implements IEndpointBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher) = System::ServiceModel::Description::IEndpointBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit&#xA;override this.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="transactedBatchingBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior (serviceEndpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">将在其中应用行为设置的服务终结点。</param>
        <param name="endpointDispatcher">用于调度消息的终结点调度</param>
        <summary>将终结点调度程序与指定服务终结点相关联。 无法继承此方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WCF 调用此方法将服务终结点与终结点调度程序相关联。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.Validate">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.Validate (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.Validate(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.TransactedBatchingBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (serviceEndpoint As ServiceEndpoint) Implements IEndpointBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.Validate(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint) = System::ServiceModel::Description::IEndpointBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IEndpointBehavior.Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit&#xA;override this.System.ServiceModel.Description.IEndpointBehavior.Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="transactedBatchingBehavior.System.ServiceModel.Description.IEndpointBehavior.Validate serviceEndpoint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">验证批处理行为的服务终结点。</param>
        <summary>确保事务批处理仅可应用于支持事务接收操作的绑定。 无法继承此方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 WCF 调用，以确保批处理仅适用于支持事务接收操作的绑定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
