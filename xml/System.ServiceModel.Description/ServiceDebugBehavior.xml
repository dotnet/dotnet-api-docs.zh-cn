<Type Name="ServiceDebugBehavior" FullName="System.ServiceModel.Description.ServiceDebugBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b72e9d4f8c3ab71f5bd5519ae126223c2c497dc7" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83974637" /></Metadata><TypeSignature Language="C#" Value="public class ServiceDebugBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceDebugBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceDebugBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceDebugBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDebugBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceDebugBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>启用 Windows Communication Foundation (WCF) 服务的调试和帮助信息功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从配置文件或以编程方式使用 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 属性，可以使托管异常信息流到客户端以进行调试，还可以向在 Web 浏览器中浏览该服务的用户发布 HTML 信息文件。  
  
 将 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性设置 `true` 为，以指示 WCF 将 SOAP 错误中的托管异常信息返回给客户端以供调试。  
  
> [!CAUTION]
>  将托管异常信息返回给客户端可能会带来安全风险，原因是异常详细信息会公开有关内部服务实现的信息，而这些信息可能会被未经授权客户端使用。 此外，虽然 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 属性也可以通过编程方式进行设置，但在部署时容易忘记禁用 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>。  
  
 由于涉及到一些安全问题，因此强烈建议您：  
  
-   使用应用程序配置文件将 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性的值设置为 `true`。  
  
-   仅在受控调试方案中才这样做。  
  
 有关与托管异常信息相关的安全问题的详细信息，请参阅[在协定和服务中指定和处理错误](/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services)。  
  
 当使用 HTML 浏览器查看服务时，<xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> 和 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> 属性指示服务发布 HTML 帮助文件。  
  
 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> 和 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 属性控制所查看的 HTML 帮助页的位置。  
  
 若要使用配置文件启用或禁用其中一个 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 功能，请执行以下操作：  
  
1.  将 `behaviorConfiguration` 特性添加到 WCF 服务的[&lt;服务&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service)元素。 在[\<终结点 >](https://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017)元素上配置终结点行为;[&lt;服务&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service)元素上的服务行为。  
  
2.  添加到[&lt;serviceBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors)部分，并将[&lt;行为&gt;](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)元素添加到其名称与步骤1中的 `behaviorConfiguration` 特性值相匹配的元素。 使用[&lt;endpointBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/endpointbehaviors)元素配置终结点行为;使用[&lt;serviceBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors)元素配置服务行为。  
  
3.  将[&lt;serviceDebug&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicedebug)元素添加到步骤2中的[&lt;行为&gt;](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)元素，并启用或禁用适用于方案的各种属性。  
  
 有关具体示例的信息，请参见“示例”部分。  
  
   
  
## Examples  
 下面的代码示例演示如何使用配置文件来启用 HTML 帮助页功能，将 SOAP 错误内部的异常信息返回给客户端以供调试，以及启用元数据支持。 此配置文件演示以下用于添加对 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 功能的支持的基本步骤：  
  
-   由于 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 类型是一个 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 实现，因此表示服务类型的[&lt;服务&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service)元素具有 `behaviorConfiguration="metadataAndDebug"`的行为配置标识符。  
  
-   由于 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 类型是一个 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 实现[&lt;行为&gt;](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)元素添加到[&lt;serviceBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors)部分。 将[&lt;行为](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)的 `name` 特性设置&gt;元素，其值是[&lt;服务&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service)元素的 `behaviorConfiguration` 特性的标识符。 在本例中，该值为 `metadataAndDebug`。  
  
-   添加一个[&lt;serviceDebug&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicedebug)元素，并将各种属性设置为所需的配置。 在本例中，`httpHelpPageEnabled` 和 `includeExceptionDetailInFaults` 属性值设置为 `true`。  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDebugBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceDebugBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Description.ServiceDebugBehavior" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数创建一个具有以下默认值的 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 对象：  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性为 `false`。  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> 属性为 `true`。  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> 属性为 `true`。  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> 属性为支持 HTTP 请求的服务的基址。  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 为支持 HTTPS 请求的服务的基址。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpHelpPageBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpHelpPageBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpHelpPageBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpHelpPageBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对绑定定义的高级别访问。</summary>
        <value>通道绑定。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageEnabled">
      <MemberSignature Language="C#" Value="public bool HttpHelpPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpHelpPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpHelpPageEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpHelpPageEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值控制 Windows Communication Foundation (WCF) 是否在由 <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" /> 属性控制的地址发布 HTML 帮助页。</summary>
        <value>如果 WCF 发布 HTML 帮助页，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> 属性设置为 `false`，可禁止发布对 HTML 浏览器可见的 HTML 帮助页。  
  
 若要确保在由 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 属性控制的位置发布 HTML 帮助页，您必须将此属性设置为 `true`，并且必须满足以下条件之一：  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 属性是支持 HTTP 协议方案的绝对地址。  
  
-   服务有支持 HTTP 协议方案的基址。  
  
 尽管为 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 属性指定不支持 HTTP 协议方案的绝对地址会引发异常，但不满足前面两个条件的任何其他方案都不会引发异常，也不会发布 HTML 帮助页。  
  
   
  
## Examples  
 下面的代码示例演示如何使用配置文件来启用 HTML 帮助页功能，并将 SOAP 错误内部的异常信息返回给客户端以供调试。 此配置文件演示以下用于添加对 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 功能的支持的基本步骤：  
  
-   由于 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 类型是一个 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 实现，因此表示服务类型的[&lt;服务&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service)元素具有 `behaviorConfiguration="metadataAndDebug"`的行为配置标识符。  
  
-   同样，因为 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 类型是一个 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 实现&lt;将[&gt;](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)元素添加到[&lt;serviceBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors)部分。 &gt;元素的[&lt;行为](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)的 `name` 属性是[&lt;服务&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service)元素的 `behaviorConfiguration` 特性的标识符。 在本例中，该值为 `metadataAndDebug`。  
  
-   添加一个[&lt;serviceDebug&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicedebug)元素，并将各种属性设置为所需的配置。 在本例中，`httpHelpPageEnabled` 和 `includeExceptionDetailInFaults` 属性值设置为 `true`。  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageUrl">
      <MemberSignature Language="C#" Value="public Uri HttpHelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpHelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpHelpPageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpHelpPageUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置发布 HTML 帮助文件的位置。</summary>
        <value>在使用 HTML 浏览器查看终结点时，用户看到的自定义 HTML 帮助文件基于 HTTP 的相对或绝对 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> 属性可允许使用自定义 HTML 帮助文件，例如从 HTML 浏览器的 HTTP/Get 请求返回的帮助文件。 HTML 帮助文件位置的解析方式如下：  
  
-   如果此属性的值是相对地址，则 HTML 帮助文件的位置是支持 HTTP 请求的服务基址的值再加上此属性值。  
  
-   如果此属性的值是绝对地址并支持 HTTP 请求，则 HTML 帮助文件的位置是此属性的值。  
  
-   如果此属性的值是绝对地址但不支持 HTTP 请求，则会引发异常。  
  
 仅当 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> 属性为 `true` 时，才应用此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsHelpPageBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsHelpPageBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsHelpPageBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsHelpPageBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对绑定定义的高级别访问。</summary>
        <value>通道绑定。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsHelpPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsHelpPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsHelpPageEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsHelpPageEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定 Windows Communication Foundation (WCF) 是否在由 <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" /> 属性控制的地址通过 HTTPS 返回 HTML 帮助文件。</summary>
        <value>如果将 HTML 帮助文件返回到发出 HTTPS/GET 请求（如 HTML 浏览器的请求）的客户端，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> 属性设置为 `false`，可禁止发布对 HTML 浏览器可见的 HTML 帮助页。  
  
 若要确保在由 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 属性控制的位置发布 HTML 帮助页，您必须将此属性设置为 `true`，并且必须满足以下条件之一：  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 属性是支持 HTTPS 协议方案的绝对地址。  
  
-   服务有支持 HTTPS 协议方案的基址。  
  
 尽管为 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 属性指定不支持 HTTPS 协议方案的绝对地址会引发异常，但不满足前面两个条件的任何其他方案都不会引发异常，也不会发布 HTML 帮助页。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsHelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsHelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsHelpPageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsHelpPageUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置发布 HTML 文件以便使用 HTTPS 进行检索的位置。</summary>
        <value>在使用 HTML 浏览器查看终结点时，用户看到的自定义 HTML 帮助文件基于 HTTPS 的相对或绝对 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 属性可允许使用自定义 HTML 帮助文件，例如从 HTML 浏览器的 HTTPS/Get 请求返回的帮助文件。  
  
 HTML 帮助文件位置的解析方式如下：  
  
-   如果此属性的值是相对地址，则 HTML 帮助文件的位置是支持 HTTPS 请求的服务基址的值再加上此属性值。  
  
-   如果此属性的值是绝对地址并支持 HTTPS 请求，则 HTML 帮助文件的位置是此属性的值。  
  
-   如果此属性的值是绝对地址但不支持 HTTPS 请求，则会引发异常。  
  
 仅当 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> 属性为 `true` 时，才应用此属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定在返回客户端以供调试的 SOAP 错误详细信息中是否包含托管异常信息。</summary>
        <value><see langword="true" /> 如果 Windows Communication Foundation （WCF）在 SOAP 错误中返回托管异常信息以供客户端调试，则为; 否则为。否则，<see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性设置 `true` 为，以指示 WCF 在 SOAP 错误中将托管异常信息返回给客户端以简化调试。  
  
> [!CAUTION]
>  将托管异常信息返回给客户端可能会带来安全风险，原因是异常详细信息会公开有关内部服务实现的信息，而这些信息可能会被未经授权客户端使用。 此外，虽然 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 属性也可以通过编程方式进行设置，但在部署时容易忘记禁用 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>。  
  
 由于涉及到一些安全问题，因此强烈建议您：  
  
-   使用应用程序配置文件将 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性的值设置为 `true`。  
  
-   仅在受控调试方案中才这样做。  
  
 有关详细信息，请参阅[在协定和服务中指定和处理错误](/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用配置文件来启用 HTML 帮助页功能，并将 SOAP 错误内部的异常信息返回给客户端以供调试。 此配置文件演示以下用于添加对 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 功能的支持的基本步骤：  
  
-   由于 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 类型是一个 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 实现，因此表示服务类型的[&lt;服务&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service)元素具有 `behaviorConfiguration="metadataAndDebug"`的行为配置标识符。  
  
-   同样，因为 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 类型是一个 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 实现&lt;将[&gt;](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)元素添加到[&lt;serviceBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors)部分。 将[&lt;行为](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)的 `name` 特性设置&gt;元素，其值是[&lt;服务&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service)元素的 `behaviorConfiguration` 特性的标识符。 在本例中，该值为 `metadataAndDebug`。  
  
-   添加一个[&lt;serviceDebug&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicedebug)元素，并将各种属性设置为所需的配置。 在本例中，`httpHelpPageEnabled` 和 `includeExceptionDetailInFaults` 属性值设置为 `true`。  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As ServiceDescription, serviceHostBase As ServiceHostBase, endpoints As Collection(Of ServiceEndpoint), parameters As BindingParameterCollection) Implements IServiceBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="serviceDebugBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters (description, serviceHostBase, endpoints, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">服务说明。</param>
        <param name="serviceHostBase">服务主机。</param>
        <param name="endpoints">服务的终结点。</param>
        <param name="parameters">支持修改绑定的绑定参数。</param>
        <summary>实现 <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> 方法以支持该行为。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 修改绑定以支持该行为。 有关更多信息，请参见 <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As ServiceDescription, serviceHostBase As ServiceHostBase) Implements IServiceBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="serviceDebugBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior (description, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">服务说明。</param>
        <param name="serviceHostBase">服务主机。</param>
        <summary>实现 <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> 方法以支持该行为。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As ServiceDescription, serviceHostBase As ServiceHostBase) Implements IServiceBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="serviceDebugBehavior.System.ServiceModel.Description.IServiceBehavior.Validate (description, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">服务说明。</param>
        <param name="serviceHostBase">服务主机。</param>
        <summary>实现 <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> 方法以支持该行为。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
