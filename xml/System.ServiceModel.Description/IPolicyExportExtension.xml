<Type Name="IPolicyExportExtension" FullName="System.ServiceModel.Description.IPolicyExportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="553e6c58d808beb4ac2d9a4f6c715b8647773b93" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70529128" /></Metadata><TypeSignature Language="C#" Value="public interface IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type IPolicyExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>实现 <see cref="T:System.ServiceModel.Description.IPolicyExportExtension" /> 可以在 Web Services 描述语言 (WSDL) 信息中插入自定义绑定策略断言。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对 <xref:System.ServiceModel.Description.IPolicyExportExtension> 对象实现 <xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType> 接口可以将有关终结点功能或请求的声明写入由特定终结点公开的 WSDL 信息。 通常，绑定元素可实现某些功能，但并不是必需的。 若要从配置文件加载策略导出程序，请实现 <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType>，它可以返回策略导出程序 <xref:System.ServiceModel.Channels.BindingElement> 对象。  
  
 Windows Communication Foundation (WCF) 使用策略导出程序来使用策略断言来与客户端通信，确保存在该自定义绑定要求或终结点功能。  
  
 <xref:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy%2A> 方法使用的是 <xref:System.ServiceModel.Description.MetadataExporter> 和 <xref:System.ServiceModel.Description.PolicyConversionContext> 对象。 使用 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> 和 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> 方法以获取从不同范围导出的策略断言的集合。 然后，将您的自定义策略断言对象添加到适当的集合中。  
  
 <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> 属性可公开正在导出的终结点的 <xref:System.ServiceModel.Description.ContractDescription>。 这样，<xref:System.ServiceModel.Description.IPolicyExportExtension> 扩展就可正确限定它们的导出策略断言的范围。 例如，代码中的安全属性可以将行为添加到指示安全策略断言应该添加到的位置的 <xref:System.ServiceModel.Description.ContractDescription>。  
  
 <xref:System.ServiceModel.Description.IPolicyExportExtension> 机制只支持导出 WSDL 中的策略断言。 若要导出自定义 WSDL 元素，则必须使用 <xref:System.ServiceModel.Description.IWsdlExportExtension> 机制以直接修改 WSDL。  
  
 一旦自定义策略断言附加到了 WSDL 信息，客户端就可以通过使用 <xref:System.ServiceModel.Description.IPolicyImportExtension> 对象来检测和导入自定义绑定断言。  
  
   
  
## Examples  
 下面的代码示例演示了如何在 <xref:System.ServiceModel.Description.IPolicyExportExtension> 上实现 <xref:System.ServiceModel.Channels.BindingElement>。 在此示例中，一个自定义绑定元素在绑定级别附加到了 WSDL 文件。  
  
 [!code-csharp[CustomPolicySample#14](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#14)]
 [!code-vb[CustomPolicySample#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#14)]  
  
 下面的代码示例演示了 <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType> 实现，这可实现从应用程序配置文件加载前面的策略导出程序。  
  
 [!code-csharp[CustomPolicySample#15](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#15)]
 [!code-vb[CustomPolicySample#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#15)]  
  
 下面的示例演示了加载自定义策略导出程序的宿主配置文件。  
  
 [!code-xml[CustomPolicySample#3](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/app.config#3)]   
  
 下面的示例演示了 WSDL 文件中的自定义断言。  
  
 [!code-xml[CustomPolicySample#16](~/samples/snippets/common/VS_Snippets_CFX/custompolicysample/common/tempuri.org.wsdl#16)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="public void ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportPolicy : System.ServiceModel.Description.MetadataExporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="iPolicyExportExtension.ExportPolicy (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter">可以用来修改导出过程的 <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</param>
        <param name="context">可以用来插入您的自定义策略断言的 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</param>
        <summary>实现此方法可以导出有关绑定的自定义策略断言。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> 和 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> 方法以获取从不同范围导出的策略断言的集合。 然后，将您的 <xref:System.ServiceModel.Description.IPolicyExportExtension> 对象添加到适当集合。  
  
   
  
## Examples  
 下面的代码示例演示了如何在 <xref:System.ServiceModel.Description.IPolicyExportExtension> 上实现 <xref:System.ServiceModel.Channels.BindingElement>。 在此示例中，一个自定义绑定元素在绑定级别附加到了 WSDL 文件。  
  
 [!code-csharp[CustomPolicySample#14](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#14)]
 [!code-vb[CustomPolicySample#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#14)]  
  
 下面的代码示例演示了 <xref:System.ServiceModel.Configuration.BindingElementExtensionElement?displayProperty=nameWithType> 实现，这可实现从应用程序配置文件加载前面的策略导出程序。  
  
 [!code-csharp[CustomPolicySample#15](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyexporter.cs#15)]
 [!code-vb[CustomPolicySample#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyexporter.vb#15)]  
  
 下面的示例演示了加载自定义策略导出程序的宿主配置文件。  
  
 [!code-xml[CustomPolicySample#3](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/app.config#3)]   
  
 下面的示例演示了 WSDL 文件中的自定义断言。  
  
 [!code-xml[CustomPolicySample#16](~/samples/snippets/common/VS_Snippets_CFX/custompolicysample/common/tempuri.org.wsdl#16)]    
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
