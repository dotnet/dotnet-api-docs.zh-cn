<Type Name="CallbackDebugBehavior" FullName="System.ServiceModel.Description.CallbackDebugBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="450f383310b012918ffb66f09a88b197bd86c604" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86573090" /></Metadata><TypeSignature Language="C#" Value="public class CallbackDebugBehavior : System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallbackDebugBehavior extends System.Object implements class System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.CallbackDebugBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class CallbackDebugBehavior&#xA;Implements IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallbackDebugBehavior : System::ServiceModel::Description::IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type CallbackDebugBehavior = class&#xA;    interface IEndpointBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IEndpointBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e21f2-101">为 Windows Communication Foundation (WCF) 回调对象启用服务调试。</span><span class="sxs-lookup"><span data-stu-id="e21f2-101">Enables service debugging for a Windows Communication Foundation (WCF) callback object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e21f2-102">从应用程序配置文件中或以编程方式将 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性设置为 `true`，则可以使客户端回调对象中的托管异常信息回流到该服务，以便进行调试。</span><span class="sxs-lookup"><span data-stu-id="e21f2-102">Set the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to `true` from an application configuration file or programmatically to enable the flow of managed exception information in a client callback object back to the service for debugging purposes.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e21f2-103">将托管异常信息返回到服务可能存在安全风险，因为异常详细信息会公开有关内部客户端实现的信息，而未经授权的服务可能会使用这些信息。</span><span class="sxs-lookup"><span data-stu-id="e21f2-103">Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that could be used by unauthorized services.</span></span> <span data-ttu-id="e21f2-104">此外，虽然 <xref:System.ServiceModel.Description.CallbackDebugBehavior> 属性也可以通过编程方式进行设置，但在部署时容易忘记禁用 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A>。</span><span class="sxs-lookup"><span data-stu-id="e21f2-104">In addition, although the <xref:System.ServiceModel.Description.CallbackDebugBehavior> properties can also be set programmatically, it can be easy to forget to disable <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> when deploying.</span></span>  
  
 <span data-ttu-id="e21f2-105">由于涉及到一些安全问题，因此强烈建议您：</span><span class="sxs-lookup"><span data-stu-id="e21f2-105">Because of the security issues involved, it is strongly recommended that:</span></span>  
  
-   <span data-ttu-id="e21f2-106">使用应用程序配置文件将 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性的值设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="e21f2-106">You use an application configuration file to set the value of the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to `true`.</span></span>  
  
-   <span data-ttu-id="e21f2-107">仅在受控调试方案中才这样做。</span><span class="sxs-lookup"><span data-stu-id="e21f2-107">You only do so only in controlled debugging scenarios.</span></span>  
  
 <span data-ttu-id="e21f2-108">有关与托管异常信息相关的安全问题的详细信息，请参阅 [在协定和服务中指定和处理错误](/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services)。</span><span class="sxs-lookup"><span data-stu-id="e21f2-108">For more information about the security issues related to managed exception information, see [Specifying and Handling Faults in Contracts and Services](/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services).</span></span>  
  
 <span data-ttu-id="e21f2-109">还可以通过在客户端应用程序配置文件中使用[ &lt; callbackDebug &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/callbackdebug)元素来设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="e21f2-109">You can also set the values of this attribute by using the [&lt;callbackDebug&gt;](/dotnet/framework/configure-apps/file-schema/wcf/callbackdebug) element in a client application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e21f2-110">下面的代码示例演示一个客户端配置文件，该文件指示 WCF 从 SOAP 消息中的客户端回调对象返回托管异常信息。</span><span class="sxs-lookup"><span data-stu-id="e21f2-110">The following code example shows a client configuration file that instructs WCF to return managed exception information from a client callback object in SOAP messages.</span></span>  
  
 [!code-xml[SCA.CallbackContract#4](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackDebugBehavior (bool includeExceptionDetailInFaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeExceptionDetailInFaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeExceptionDetailInFaults As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackDebugBehavior(bool includeExceptionDetailInFaults);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.CallbackDebugBehavior : bool -&gt; System.ServiceModel.Description.CallbackDebugBehavior" Usage="new System.ServiceModel.Description.CallbackDebugBehavior includeExceptionDetailInFaults" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="includeExceptionDetailInFaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeExceptionDetailInFaults"><span data-ttu-id="e21f2-111">控制 WCF 回调对象是否在发送回服务的 SOAP 错误详细信息中包括托管异常信息。</span><span class="sxs-lookup"><span data-stu-id="e21f2-111">Controls whether a WCF callback object includes managed exception information in the detail of the SOAP faults sent back to the service.</span></span></param>
        <summary><span data-ttu-id="e21f2-112">初始化 <see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e21f2-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e21f2-113">构造函数创建 <xref:System.ServiceModel.Description.CallbackDebugBehavior> 对象，在该对象中，<xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性的值为 `includeExceptionDetailInFaults` 的值。</span><span class="sxs-lookup"><span data-stu-id="e21f2-113">The constructor creates a <xref:System.ServiceModel.Description.CallbackDebugBehavior> object in which the value of the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property is the value of `includeExceptionDetailInFaults`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e21f2-114">获取或设置一个值，该值控制客户端回调对象是否将 SOAP 错误中的托管异常信息返回到服务。</span><span class="sxs-lookup"><span data-stu-id="e21f2-114">Gets or sets a value that controls whether client callback objects return managed exception information in SOAP faults back to the service.</span></span></summary>
        <value><span data-ttu-id="e21f2-115"><see langword="true" /> 如果 WCF 在双工通信中返回 SOAP 错误中的托管客户端回调异常信息以进行服务调试，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="e21f2-115"><see langword="true" /> if WCF returns managed client callback exception information in the SOAP faults for service debugging purposes in duplex communication; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e21f2-116">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e21f2-116">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e21f2-117">从应用程序配置文件中或以编程方式将 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性设置为 `true`，则可以使客户端回调对象中的托管异常信息回流到该服务，以便进行调试。</span><span class="sxs-lookup"><span data-stu-id="e21f2-117">Set the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to `true` from an application configuration file or programmatically to enable the flow of managed exception information in a client callback object back to the service for debugging purposes.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e21f2-118">将托管异常信息返回到服务可能存在安全风险，因为异常详细信息会公开有关内部客户端实现的信息，而未经授权的服务可能会使用这些信息。</span><span class="sxs-lookup"><span data-stu-id="e21f2-118">Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that could be used by unauthorized services.</span></span> <span data-ttu-id="e21f2-119">此外，虽然 <xref:System.ServiceModel.Description.CallbackDebugBehavior> 属性也可以通过编程方式进行设置，但在部署时容易忘记禁用 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A>。</span><span class="sxs-lookup"><span data-stu-id="e21f2-119">In addition, although the <xref:System.ServiceModel.Description.CallbackDebugBehavior> properties can also be set programmatically, it can be easy to forget to disable <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> when deploying.</span></span>  
  
 <span data-ttu-id="e21f2-120">由于涉及到一些安全问题，因此强烈建议您：</span><span class="sxs-lookup"><span data-stu-id="e21f2-120">Because of the security issues involved, it is strongly recommended that:</span></span>  
  
-   <span data-ttu-id="e21f2-121">使用应用程序配置文件将 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 属性的值设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="e21f2-121">You use an application configuration file to set the value of the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to `true`.</span></span>  
  
-   <span data-ttu-id="e21f2-122">仅在受控调试方案中才这样做。</span><span class="sxs-lookup"><span data-stu-id="e21f2-122">You only do so only in controlled debugging scenarios.</span></span>  
  
 <span data-ttu-id="e21f2-123">有关与托管异常信息相关的安全问题的详细信息，请参阅 [在协定和服务中指定和处理错误](/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services)。</span><span class="sxs-lookup"><span data-stu-id="e21f2-123">For more information about the security issues related to managed exception information, see [Specifying and Handling Faults in Contracts and Services](/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services).</span></span>  
  
### <a name="to-enable-or-disable-a-feature-of-callbackdebugbehavior-using-a-configuration-file"></a><span data-ttu-id="e21f2-124">使用配置文件启用或禁用 CallbackDebugBehavio 的功能</span><span class="sxs-lookup"><span data-stu-id="e21f2-124">To enable or disable a feature of CallbackDebugBehavior using a configuration file</span></span>  
  
1.  <span data-ttu-id="e21f2-125">向 `behaviorConfiguration` WCF 客户端应用程序的客户端元素添加属性 [\<endpoint>](https://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) 。</span><span class="sxs-lookup"><span data-stu-id="e21f2-125">Add a `behaviorConfiguration` attribute to the client [\<endpoint>](https://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) element for your WCF client application.</span></span> <span data-ttu-id="e21f2-126"><xref:System.ServiceModel.Description.CallbackDebugBehavior> 行为是终结点行为。</span><span class="sxs-lookup"><span data-stu-id="e21f2-126">The <xref:System.ServiceModel.Description.CallbackDebugBehavior> behavior is an endpoint behavior.</span></span> <span data-ttu-id="e21f2-127">终结点行为在元素上配置 `<endpoint>` ; 服务行为在[ &lt; 服务 &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/service)元素上进行配置。</span><span class="sxs-lookup"><span data-stu-id="e21f2-127">Endpoint behaviors are configured on `<endpoint>` elements; service behaviors are configured on [&lt;service&gt;](/dotnet/framework/configure-apps/file-schema/wcf/service) elements.</span></span>  
  
2.  <span data-ttu-id="e21f2-128">添加到或创建[ &lt; endpointBehaviors &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/endpointbehaviors)节，并使用与步骤1中的属性值相匹配的名称将[ &lt; &gt; 行为](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)元素添加到中 `behaviorConfiguration` 。</span><span class="sxs-lookup"><span data-stu-id="e21f2-128">Add to or create an [&lt;endpointBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/endpointbehaviors) section and add a [&lt;behavior&gt;](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors) element to that with the name that matches the `behaviorConfiguration` attribute value from step 1.</span></span> <span data-ttu-id="e21f2-129">[\<endpoint>](https://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017)使用[ &lt; endpointBehaviors &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/endpointbehaviors)元素添加终结点行为，以便在客户端元素中使用。</span><span class="sxs-lookup"><span data-stu-id="e21f2-129">Endpoint behaviors are added for use in a client [\<endpoint>](https://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) element using an [&lt;endpointBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/endpointbehaviors) element.</span></span>  
  
3.  <span data-ttu-id="e21f2-130">将[ &lt; callbackDebug &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/callbackdebug)元素添加到步骤2中的[ &lt; 行为 &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors)元素，并启用或禁用适用于方案的各种属性。</span><span class="sxs-lookup"><span data-stu-id="e21f2-130">Add a [&lt;callbackDebug&gt;](/dotnet/framework/configure-apps/file-schema/wcf/callbackdebug) element to the [&lt;behavior&gt;](/dotnet/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors) element from step 2 and enable or disable the various properties appropriate to your scenario.</span></span>  
  
 <span data-ttu-id="e21f2-131">有关具体示例的信息，请参见“示例”部分。</span><span class="sxs-lookup"><span data-stu-id="e21f2-131">For a specific example, see the Example section.</span></span> <span data-ttu-id="e21f2-132">还可以通过在客户端应用程序配置文件中使用[ &lt; callbackDebug &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/callbackdebug)元素来设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="e21f2-132">You can also set the values of this attribute by using the [&lt;callbackDebug&gt;](/dotnet/framework/configure-apps/file-schema/wcf/callbackdebug) element in a client application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e21f2-133">下面的代码示例演示一个客户端配置文件，该文件指示 WCF 从 SOAP 消息中的客户端回调对象返回托管异常信息。</span><span class="sxs-lookup"><span data-stu-id="e21f2-133">The following code example shows a client configuration file that instructs WCF to return managed exception information from a client callback object in SOAP messages.</span></span>  
  
 [!code-xml[SCA.CallbackContract#4](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (serviceEndpoint As ServiceEndpoint, bindingParameters As BindingParameterCollection) Implements IEndpointBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters) = System::ServiceModel::Description::IEndpointBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="callbackDebugBehavior.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters (serviceEndpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint"><span data-ttu-id="e21f2-134">要修改的终结点。</span><span class="sxs-lookup"><span data-stu-id="e21f2-134">The endpoint to modify.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="e21f2-135">绑定元素支持该行为所需的对象。</span><span class="sxs-lookup"><span data-stu-id="e21f2-135">The objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="e21f2-136">实现 <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> 方法以支持该行为。</span><span class="sxs-lookup"><span data-stu-id="e21f2-136">Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to support the behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.ClientRuntime behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.ClientRuntime behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (serviceEndpoint As ServiceEndpoint, behavior As ClientRuntime) Implements IEndpointBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ behavior) = System::ServiceModel::Description::IEndpointBehavior::ApplyClientBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit&#xA;override this.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="callbackDebugBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior (serviceEndpoint, behavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="behavior" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint"><span data-ttu-id="e21f2-137">要自定义的终结点。</span><span class="sxs-lookup"><span data-stu-id="e21f2-137">The endpoint that is to be customized.</span></span></param>
        <param name="behavior"><span data-ttu-id="e21f2-138">要自定义的客户端运行时。</span><span class="sxs-lookup"><span data-stu-id="e21f2-138">The client runtime to be customized.</span></span></param>
        <summary><span data-ttu-id="e21f2-139">实现 <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> 以支持该行为。</span><span class="sxs-lookup"><span data-stu-id="e21f2-139">Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> to support the behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e21f2-140">将属性的值分配 <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> 给 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="e21f2-140">Assigns the value of the <xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A> property to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (serviceEndpoint As ServiceEndpoint, endpointDispatcher As EndpointDispatcher) Implements IEndpointBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher) = System::ServiceModel::Description::IEndpointBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit&#xA;override this.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="callbackDebugBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior (serviceEndpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint"><span data-ttu-id="e21f2-141">公开协定的终结点。</span><span class="sxs-lookup"><span data-stu-id="e21f2-141">The endpoint that exposes the contract.</span></span></param>
        <param name="endpointDispatcher"><span data-ttu-id="e21f2-142">要修改或扩展的终结点调度程序。</span><span class="sxs-lookup"><span data-stu-id="e21f2-142">The endpoint dispatcher to be modified or extended.</span></span></param>
        <summary><span data-ttu-id="e21f2-143">实现 <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> 以支持该行为。</span><span class="sxs-lookup"><span data-stu-id="e21f2-143">Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> to support the behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e21f2-144">引发 <xref:System.InvalidOperationException?displayProperty=nameWithType>；此行为只能在客户端应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="e21f2-144">Throws an <xref:System.InvalidOperationException?displayProperty=nameWithType>; this behavior can only be used in a client application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.Validate">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.Validate (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.Validate(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (serviceEndpoint As ServiceEndpoint) Implements IEndpointBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.Validate(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint) = System::ServiceModel::Description::IEndpointBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IEndpointBehavior.Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit&#xA;override this.System.ServiceModel.Description.IEndpointBehavior.Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="callbackDebugBehavior.System.ServiceModel.Description.IEndpointBehavior.Validate serviceEndpoint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint"><span data-ttu-id="e21f2-145">要验证的终结点。</span><span class="sxs-lookup"><span data-stu-id="e21f2-145">The endpoint to validate.</span></span></param>
        <summary><span data-ttu-id="e21f2-146">实现 <see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" /> 以支持该行为。</span><span class="sxs-lookup"><span data-stu-id="e21f2-146">Implements <see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" /> to support the behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
