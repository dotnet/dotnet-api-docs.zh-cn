<Type Name="ServiceHealthBehaviorBase" FullName="System.ServiceModel.Description.ServiceHealthBehaviorBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="052695454f68fadc14ec814dd459e2c4ae0c9083" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86745314" /></Metadata><TypeSignature Language="C#" Value="public abstract class ServiceHealthBehaviorBase : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceHealthBehaviorBase extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceHealthBehaviorBase&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHealthBehaviorBase abstract : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceHealthBehaviorBase = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5a812-101">充当提供运行状况终结点的 Windows Communication Foundation (WCF) 服务行为的基类。</span><span class="sxs-lookup"><span data-stu-id="5a812-101">Serves as the base class for a Windows Communication Foundation (WCF) service behavior that provides a health endpoint.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHealthBehaviorBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHealthBehaviorBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a812-102">初始化 <see cref="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5a812-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" /> class.</span></span></summary>
        <remarks><span data-ttu-id="5a812-103">此构造函数为 <see langword="protected" /> ; 它只能从派生类中调用。</span><span class="sxs-lookup"><span data-stu-id="5a812-103">This constructor is <see langword="protected" />; it can only be called from a derived class.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleHealthRequest">
      <MemberSignature Language="C#" Value="public abstract void HandleHealthRequest (System.ServiceModel.ServiceHostBase serviceHost, System.ServiceModel.Channels.Message httpGetRequest, string[] queries, out System.ServiceModel.Channels.Message replyMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleHealthRequest(class System.ServiceModel.ServiceHostBase serviceHost, class System.ServiceModel.Channels.Message httpGetRequest, string[] queries, [out] class System.ServiceModel.Channels.Message&amp; replyMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.HandleHealthRequest(System.ServiceModel.ServiceHostBase,System.ServiceModel.Channels.Message,System.String[],System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub HandleHealthRequest (serviceHost As ServiceHostBase, httpGetRequest As Message, queries As String(), ByRef replyMessage As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void HandleHealthRequest(System::ServiceModel::ServiceHostBase ^ serviceHost, System::ServiceModel::Channels::Message ^ httpGetRequest, cli::array &lt;System::String ^&gt; ^ queries, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % replyMessage);" />
      <MemberSignature Language="F#" Value="abstract member HandleHealthRequest : System.ServiceModel.ServiceHostBase * System.ServiceModel.Channels.Message * string[] * Message -&gt; unit" Usage="serviceHealthBehaviorBase.HandleHealthRequest (serviceHost, httpGetRequest, queries, replyMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="httpGetRequest" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="queries" Type="System.String[]" />
        <Parameter Name="replyMessage" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceHost"><span data-ttu-id="5a812-104">服务主机。</span><span class="sxs-lookup"><span data-stu-id="5a812-104">The service host.</span></span></param>
        <param name="httpGetRequest"><span data-ttu-id="5a812-105">HTTP/Get 或 HTTPS/Get 请求。</span><span class="sxs-lookup"><span data-stu-id="5a812-105">The HTTP/Get or HTTPS/Get request.</span></span></param>
        <param name="queries"><span data-ttu-id="5a812-106">查询字符串中的变量。</span><span class="sxs-lookup"><span data-stu-id="5a812-106">The variables in the query string.</span></span></param>
        <param name="replyMessage"><span data-ttu-id="5a812-107">响应。</span><span class="sxs-lookup"><span data-stu-id="5a812-107">The response .</span></span></param>
        <summary><span data-ttu-id="5a812-108">处理 HTTP/Get 或 HTTPS/Get 请求并返回响应。</span><span class="sxs-lookup"><span data-stu-id="5a812-108">Processes an HTTP/Get or HTTPS/Get request and returns a response.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthDetailsEnabled">
      <MemberSignature Language="C#" Value="public bool HealthDetailsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HealthDetailsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HealthDetailsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HealthDetailsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HealthDetailsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HealthDetailsEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HealthDetailsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a812-109">获取或设置一个值，该值指定运行状况终结点是否应返回服务详细信息，或者响应是否不应包含任何内容。</span><span class="sxs-lookup"><span data-stu-id="5a812-109">Gets or sets a value that specifies if the health endpoint should return the service details or if the response should contain no content.</span></span></summary>
        <value><span data-ttu-id="5a812-110">一个值，该值指定运行状况终结点应返回服务详细信息，还是在响应中不应包含任何内容。</span><span class="sxs-lookup"><span data-stu-id="5a812-110">A value that specifies if the health endpoint should return the service details or if the response should contain no content.</span></span> <span data-ttu-id="5a812-111">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5a812-111">Its default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a812-112">获取或设置用于通过 HTTP/Get 请求进行运行状况检索的绑定。</span><span class="sxs-lookup"><span data-stu-id="5a812-112">Gets or sets the binding that is used for health retrieval via an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="5a812-113">用于通过 HTTP/Get 请求进行运行状况检索的绑定。</span><span class="sxs-lookup"><span data-stu-id="5a812-113">The binding used for health retrieval via an HTTP/Get request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5a812-114">设置此属性是可选的。</span><span class="sxs-lookup"><span data-stu-id="5a812-114">Setting this property is optional.</span></span> <span data-ttu-id="5a812-115">如果未设置，则使用默认绑定。</span><span class="sxs-lookup"><span data-stu-id="5a812-115">If it is not set, the default bindings are used.</span></span> 

<span data-ttu-id="5a812-116">仅支持具有支持的内部绑定元素的绑定 <xref:System.ServiceModel.Channels.IReplyChannel> 。</span><span class="sxs-lookup"><span data-stu-id="5a812-116">Only bindings with inner binding elements that support <xref:System.ServiceModel.Channels.IReplyChannel> are supported.</span></span> <span data-ttu-id="5a812-117">此外，绑定的 <xref:System.ServiceModel.Channels.Binding.MessageVersion> 属性必须是 <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="5a812-117">In addition, the <xref:System.ServiceModel.Channels.Binding.MessageVersion> property of the binding must be <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a812-118">在设置操作中，<see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" /> 参数的 Url 必须是相对的，或者其方案必须是“HTTP”。</span><span class="sxs-lookup"><span data-stu-id="5a812-118">In a set operation, the Url of the <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" /> argument must be relative or its scheme must be "HTTP".</span></span>

<span data-ttu-id="5a812-119">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5a812-119">-or-</span></span>

<span data-ttu-id="5a812-120">消息版本不正确。</span><span class="sxs-lookup"><span data-stu-id="5a812-120">The message version is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a812-121">获取或设置一个值，该值指示是否发布服务元数据以便使用 HTTP/GET 请求进行检索。</span><span class="sxs-lookup"><span data-stu-id="5a812-121">Gets or sets a value that specifies whether to publish service metadata for retrieval using an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="5a812-122">一个值，该值指定是否发布服务元数据以使用 HTTP/Get 请求进行检索。</span><span class="sxs-lookup"><span data-stu-id="5a812-122">A value that specifies whether to publish service metadata for retrieval using an HTTP/Get request.</span></span> <span data-ttu-id="5a812-123">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5a812-123">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5a812-124">如果 `httpGetUrl` 未指定属性，则发布元数据的地址为服务地址加上 "？ health"。</span><span class="sxs-lookup"><span data-stu-id="5a812-124">If the `httpGetUrl` attribute is not specified, the address to which the metadata is published is the service address plus "?health".</span></span> <span data-ttu-id="5a812-125">例如，如果服务地址为，则 `http://localhost:8080/CalculatorService` HTTP/Get 元数据地址为 `http://localhost:8080/CalculatorService?health` 。</span><span class="sxs-lookup"><span data-stu-id="5a812-125">For example, if the service address is `http://localhost:8080/CalculatorService`, the HTTP/Get metadata address is `http://localhost:8080/CalculatorService?health`.</span></span>

<span data-ttu-id="5a812-126">如果此属性为 `false` ，或服务的地址不基于 HTTP 或 HTTPS，则忽略 "？ health"。</span><span class="sxs-lookup"><span data-stu-id="5a812-126">If this property is `false`, or if the address of the service is not based on HTTP or HTTPS, "?health" is ignored.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a812-127">获取或设置一个 URI，它指定发布元数据的地址，以便使用 HTTP/Get 请求进行检索。</span><span class="sxs-lookup"><span data-stu-id="5a812-127">Gets or sets a Uri that specifies the address to which metadata is published for retrieval using an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="5a812-128">为使用 HTTP/Get 请求进行检索而发布元数据的地址。</span><span class="sxs-lookup"><span data-stu-id="5a812-128">The address to which metadata is published for retrieval using an HTTP/Get request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a812-129"><paramref name="value" /> 必须使用 HTTP 协议，或者是相对 URI。</span><span class="sxs-lookup"><span data-stu-id="5a812-129"><paramref name="value" /> must use the HTTP protocol or be a relative Uri.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a812-130">获取或设置用于通过 HTTPS/Get 请求进行运行状况检索的绑定。</span><span class="sxs-lookup"><span data-stu-id="5a812-130">Gets or sets the binding that is used for health retrieval via an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="5a812-131">用于通过 HTTPS/Get 请求进行运行状况检索的绑定。</span><span class="sxs-lookup"><span data-stu-id="5a812-131">The binding used for health retrieval via an HTTPS/Get request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5a812-132">设置此属性是可选的。</span><span class="sxs-lookup"><span data-stu-id="5a812-132">Setting this property is optional.</span></span> <span data-ttu-id="5a812-133">如果未设置，则使用默认绑定。</span><span class="sxs-lookup"><span data-stu-id="5a812-133">If it is not set, the default bindings are used.</span></span> 

<span data-ttu-id="5a812-134">仅支持具有支持的内部绑定元素的绑定 <xref:System.ServiceModel.Channels.IReplyChannel> 。</span><span class="sxs-lookup"><span data-stu-id="5a812-134">Only bindings with inner binding elements that support <xref:System.ServiceModel.Channels.IReplyChannel> are supported.</span></span> <span data-ttu-id="5a812-135">此外，绑定的 <xref:System.ServiceModel.Channels.Binding.MessageVersion> 属性必须是 <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="5a812-135">In addition, the <xref:System.ServiceModel.Channels.Binding.MessageVersion> property of the binding must be <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a812-136">在设置操作中，<see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" /> 参数的 Url 必须是相对的，或者其方案必须是“HTTPS”。</span><span class="sxs-lookup"><span data-stu-id="5a812-136">In a set operation, the Url of the <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" /> argument must be relative or its scheme must be "HTTPS:".</span></span>

<span data-ttu-id="5a812-137">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5a812-137">-or-</span></span>

<span data-ttu-id="5a812-138">消息版本不正确。</span><span class="sxs-lookup"><span data-stu-id="5a812-138">The message version is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a812-139">获取或设置一个值，该值指示是否发布服务元数据以便使用 HTTPS/Get 请求进行检索。</span><span class="sxs-lookup"><span data-stu-id="5a812-139">Gets or sets a value that specifies whether to publish service metadata for retrieval using an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="5a812-140">一个值，该值指定是否发布服务元数据以使用 HTTPS/Get 请求进行检索。</span><span class="sxs-lookup"><span data-stu-id="5a812-140">A value that specifies whether to publish service metadata for retrieval using an HTTPS/Get request.</span></span> <span data-ttu-id="5a812-141">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="5a812-141">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5a812-142">如果 `httpsGetUrl` 未指定属性，则发布元数据的地址为服务地址加上 "？ health"。</span><span class="sxs-lookup"><span data-stu-id="5a812-142">If the `httpsGetUrl` attribute is not specified, the address to which the metadata is published is the service address plus "?health".</span></span> <span data-ttu-id="5a812-143">例如，如果服务地址为，则 `https://localhost:8080/CalculatorService` HTTP/Get 元数据地址为 `https://localhost:8080/CalculatorService?health` 。</span><span class="sxs-lookup"><span data-stu-id="5a812-143">For example, if the service address is `https://localhost:8080/CalculatorService`, the HTTP/Get metadata address is `https://localhost:8080/CalculatorService?health`.</span></span>

<span data-ttu-id="5a812-144">如果此属性为 `false` ，或服务的地址不基于 HTTP 或 HTTPS，则忽略 "？ health"。</span><span class="sxs-lookup"><span data-stu-id="5a812-144">If this property is `false`, or if the address of the service is not based on HTTP or HTTPS, "?health" is ignored.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a812-145">获取或设置一个 URI，它指定发布元数据的地址，以便使用 HTTPS/Get 请求进行检索。</span><span class="sxs-lookup"><span data-stu-id="5a812-145">Gets or sets a Uri that specifies the address to which metadata is published for retrieval using an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="5a812-146">发布元数据以使用 HTTPS/Get 请求进行检索的地址。</span><span class="sxs-lookup"><span data-stu-id="5a812-146">The address to which metadata is published for retrieval using an HTTPS/Get request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a812-147"><paramref name="value" /> 必须使用 HTTPS 协议，或者是相对 URI。</span><span class="sxs-lookup"><span data-stu-id="5a812-147"><paramref name="value" /> must use the HTTPS protocol or be a relative Uri.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceStartTime">
      <MemberSignature Language="C#" Value="protected DateTimeOffset ServiceStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset ServiceStartTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.ServiceStartTime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceStartTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property DateTimeOffset ServiceStartTime { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceStartTime : DateTimeOffset" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.ServiceStartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a812-148">获取运行状况检查服务开始的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="5a812-148">Gets the date and time that the health check service started.</span></span></summary>
        <value><span data-ttu-id="5a812-149">运行状况检查服务启动的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="5a812-149">The date and time that the health check service started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As ServiceDescription, serviceHostBase As ServiceHostBase, endpoints As Collection(Of ServiceEndpoint), parameters As BindingParameterCollection) Implements IServiceBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="serviceHealthBehaviorBase.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters (description, serviceHostBase, endpoints, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="5a812-150">服务说明。</span><span class="sxs-lookup"><span data-stu-id="5a812-150">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="5a812-151">服务主机。</span><span class="sxs-lookup"><span data-stu-id="5a812-151">The service host.</span></span></param>
        <param name="endpoints"><span data-ttu-id="5a812-152">服务终结点。</span><span class="sxs-lookup"><span data-stu-id="5a812-152">The service endpoints.</span></span></param>
        <param name="parameters"><span data-ttu-id="5a812-153">绑定元素可访问的自定义对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5a812-153">A collection of custom objects to which binding elements have access.</span></span></param>
        <summary><span data-ttu-id="5a812-154">将自定义数据传递给绑定元素以支持联系人实现。</span><span class="sxs-lookup"><span data-stu-id="5a812-154">Passes custom data to binding elements to support the contact implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5a812-155"><paramref name="parameters" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5a812-155"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As ServiceDescription, serviceHostBase As ServiceHostBase) Implements IServiceBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="serviceHealthBehaviorBase.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior (description, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="5a812-156">服务说明。</span><span class="sxs-lookup"><span data-stu-id="5a812-156">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="5a812-157">当前正在生成的服务主机。</span><span class="sxs-lookup"><span data-stu-id="5a812-157">The service host that is currently being built.</span></span></param>
        <summary><span data-ttu-id="5a812-158">更改运行时属性值或插入自定义扩展对象，例如错误处理程序、消息或参数拦截器、安全扩展以及其他自定义扩展对象。</span><span class="sxs-lookup"><span data-stu-id="5a812-158">Changes run-time property values or inserts custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5a812-159">通道调度程序不支持该方案。</span><span class="sxs-lookup"><span data-stu-id="5a812-159">The channel dispatcher does not support the scheme.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As ServiceDescription, serviceHostBase As ServiceHostBase) Implements IServiceBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IServiceBehavior.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.System.ServiceModel.Description.IServiceBehavior.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="serviceHealthBehaviorBase.System.ServiceModel.Description.IServiceBehavior.Validate (description, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="5a812-160">服务说明。</span><span class="sxs-lookup"><span data-stu-id="5a812-160">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="5a812-161">要验证的服务主机。</span><span class="sxs-lookup"><span data-stu-id="5a812-161">The service host to validate.</span></span></param>
        <summary><span data-ttu-id="5a812-162">检查服务主机和服务说明，从而确定服务是否可成功运行。</span><span class="sxs-lookup"><span data-stu-id="5a812-162">Inspects the service host and the service description to confirm that the service can run successfully.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a812-163">有重复的行为。</span><span class="sxs-lookup"><span data-stu-id="5a812-163">There is a duplicate behavior.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
