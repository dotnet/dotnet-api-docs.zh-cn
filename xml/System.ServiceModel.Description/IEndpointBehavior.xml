<Type Name="IEndpointBehavior" FullName="System.ServiceModel.Description.IEndpointBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f956026139df8b74a8c37d3f33750c4269df2a05" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89976368" /></Metadata><TypeSignature Language="C#" Value="public interface IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type IEndpointBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1cc7d-101">实现可用于扩展服务或客户端应用程序中的终结点的运行时行为的方法。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-101">Implements methods that can be used to extend run-time behavior for an endpoint in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cc7d-102">实现 <xref:System.ServiceModel.Description.IEndpointBehavior> 接口可以在应用程序级别，为客户端或服务应用程序修改、检查或扩展终结点范围内的某些执行方面。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-102">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to modify, examine, or extend some aspect of endpoint-wide execution at the application level for either client or service applications.</span></span>  
  
-   <span data-ttu-id="1cc7d-103">使用 <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> 方法可以在运行时传递自定义数据，从而使绑定支持自定义行为。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-103">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to pass custom data at runtime to enable bindings to support custom behavior.</span></span>  
  
-   <span data-ttu-id="1cc7d-104">使用 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> 方法可以在客户端应用程序中修改、检查或插入对终结点中的扩展。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-104">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to an endpoint in a client application.</span></span>  
  
-   <span data-ttu-id="1cc7d-105">使用 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> 方法可以在服务应用程序中修改、检查或插入对终结点范围执行的扩展。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-105">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to endpoint-wide execution in a service application.</span></span>  
  
-   <span data-ttu-id="1cc7d-106">使用 <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> 方法可以确认 <xref:System.ServiceModel.Description.ServiceEndpoint> 是否满足特定需求。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-106">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method to confirm that a <xref:System.ServiceModel.Description.ServiceEndpoint> meets specific requirements.</span></span> <span data-ttu-id="1cc7d-107">这可用于确保终结点启用某一配置设置、支持特定功能和其他要求。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-107">This can be used to ensure that an endpoint has a certain configuration setting enabled, supports a particular feature and other requirements.</span></span>  
  
 <span data-ttu-id="1cc7d-108"><xref:System.ServiceModel.Description.IEndpointBehavior> 对象可以使用其中的任何一种方法，但通常只有一种方法是重要的;在这种情况下，未使用的方法可以返回，而不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-108"><xref:System.ServiceModel.Description.IEndpointBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1cc7d-109">所有 <xref:System.ServiceModel.Description.IEndpointBehavior> 方法会将 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-109">All of the <xref:System.ServiceModel.Description.IEndpointBehavior> methods pass a <xref:System.ServiceModel.Description.ServiceEndpoint> object as a parameter.</span></span> <span data-ttu-id="1cc7d-110">此参数只用于检查；如果您修改了 <xref:System.ServiceModel.Description.ServiceEndpoint> 对象，则执行行为将是不确定的。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-110">This parameter is for examination only; if you modify the <xref:System.ServiceModel.Description.ServiceEndpoint> object the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="1cc7d-111">通常，<xref:System.ServiceModel.Description.IEndpointBehavior> 对象用于访问服务应用程序中的 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>、<xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> 对象的各个属性，以及客户端应用程序中的 <xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> 对象的各个属性。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-111"><xref:System.ServiceModel.Description.IEndpointBehavior> objects are typically used to access the various properties of the <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>, and <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> objects in a service application and the <xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> in a client application.</span></span> <span data-ttu-id="1cc7d-112">此外，您还可分别通过使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> 属性来访问双向客户端和服务的属性。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-112">In addition, you can access the properties of duplex clients and services using the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> properties, respectively.</span></span>  
  
 <span data-ttu-id="1cc7d-113">有关可用的各种属性和自定义的说明，请参阅 [扩展 ServiceHost 和服务模型层](/dotnet/framework/wcf/extending/extending-servicehost-and-the-service-model-layer)。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-113">For a description of the various properties and customizations available, see [Extending ServiceHost and the Service Model Layer](/dotnet/framework/wcf/extending/extending-servicehost-and-the-service-model-layer).</span></span>  
  
 <span data-ttu-id="1cc7d-114">确定自定义 (并在必要时实现的自定义接口) 并且 <xref:System.ServiceModel.Description.IEndpointBehavior> 确定为适当的自定义范围后，必须通过实现 <xref:System.ServiceModel.Description.IEndpointBehavior> 并将终结点行为添加到运行时，将自定义插入到 WINDOWS COMMUNICATION FOUNDATION (WCF) 运行时。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-114">Once a customization has been decided upon (and the customization interface implemented if necessary) and the <xref:System.ServiceModel.Description.IEndpointBehavior> has been decided is the appropriate scope of customization, the customization must be inserted into the Windows Communication Foundation (WCF) runtime by implementing <xref:System.ServiceModel.Description.IEndpointBehavior> and adding the endpoint behavior to the runtime.</span></span>  
  
 <span data-ttu-id="1cc7d-115">有两种方法可以将该行为添加到运行时：</span><span class="sxs-lookup"><span data-stu-id="1cc7d-115">There are two ways to add the behavior to the runtime:</span></span>  
  
-   <span data-ttu-id="1cc7d-116">以编程方式，先将自定义终结点行为添加到 <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> 属性，然后打开服务主机（位于服务应用程序中）或通道工厂（位于客户端应用程序中）。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-116">Programmatically add the custom endpoint behavior to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</span></span>  
  
-   <span data-ttu-id="1cc7d-117">使用应用程序配置文件配置该行为。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-117">Configure the behavior using an application configuration file.</span></span> <span data-ttu-id="1cc7d-118">有关详细信息，请参阅[ &lt; behaviorExtensions &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/behaviorextensions)。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-118">For details, see [&lt;behaviorExtensions&gt;](/dotnet/framework/configure-apps/file-schema/wcf/behaviorextensions).</span></span>  
  
 <span data-ttu-id="1cc7d-119">若要执行服务自定义计划任务，则必须先将 <xref:System.ServiceModel.Description.IEndpointBehavior> 对象添加到 <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> 属性，然后构造服务运行时，该构造操作是在对 <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> 调用 <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> 方法时执行的。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-119">To perform the service customization task for which it is intended, the <xref:System.ServiceModel.Description.IEndpointBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> property prior to the construction of the service runtime, which occurs when <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1cc7d-120">若要执行客户端自定义任务，则必须对 <xref:System.ServiceModel.Description.IEndpointBehavior> 调用 <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> 方法或 <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> 方法之前，先将 <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> 对象添加到 <xref:System.ServiceModel.ChannelFactory%601> 属性。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-120">To perform a client customization task, the <xref:System.ServiceModel.Description.IEndpointBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> property before calling the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> method or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on <xref:System.ServiceModel.ChannelFactory%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cc7d-121">下面的代码示例演示了在服务应用程序中添加 <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> 对象的终结点行为的实现。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-121">The following code example shows the implementation of an endpoint behavior that adds an <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> object in a service application.</span></span> <span data-ttu-id="1cc7d-122">在此情况下，`EndpointBehaviorMessageInspector` 类将通过使用应用程序配置文件，实现 <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> 以检查入站和出站消息，实现 <xref:System.ServiceModel.Description.IEndpointBehavior> 接口以将检查器类插入该行为应用到的所有终结点的检查系统，以及实现 <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> 以启用消息检查器行为。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-122">In this case, the `EndpointBehaviorMessageInspector` class implements <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> to inspect the inbound and outbound message, the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> to enable the message inspector behavior using an application configuration file.</span></span>  
  
 <span data-ttu-id="1cc7d-123">第一步是实现消息检查器。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-123">The first step is to implement the message inspector.</span></span>  
  
 [!code-csharp[IEndpointBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#2)]  
  
 <span data-ttu-id="1cc7d-124">下面的代码示例演示了如何使用 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> 方法将消息检查器添加到 <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-124">The next code example shows the use of the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to add the message inspector to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 <span data-ttu-id="1cc7d-125">下面的代码示例演示了如何实现 <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>，以便从配置文件使用消息检查器行为。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-125">The following code example shows the implementation of <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> in order to enable use of the message inspector behavior from a configuration file.</span></span>  
  
 [!code-csharp[IEndpointBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#3)]  
  
 <span data-ttu-id="1cc7d-126">最后，下面的配置文件演示了如何从配置使用前面的示例。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-126">Finally, the following configuration file shows how the preceding example can be used from configuration.</span></span>  
  
 [!code-xml[IEndpointBehavior#5](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/hostapplication.exe.config#5)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBindingParameters (endpoint As ServiceEndpoint, bindingParameters As BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iEndpointBehavior.AddBindingParameters (endpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1cc7d-127">要修改的终结点。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-127">The endpoint to modify.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="1cc7d-128">绑定元素支持该行为所需的对象。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-128">The objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="1cc7d-129">实现此方法可以在运行时将数据传递给绑定，从而支持自定义行为。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-129">Implement to pass data at runtime to bindings to support custom behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cc7d-130">实现 <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> 方法可以向绑定元素提供其支持终结点行为所需的其他对象。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-130">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the endpoint behavior.</span></span> <span data-ttu-id="1cc7d-131">如果在此处添加绑定参数，则在创建通道侦听器或通道工厂时，绑定将会查找这些对象。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-131">When binding parameters are added here the binding can locate these objects when the channel listener or channel factory is created.</span></span> <span data-ttu-id="1cc7d-132">通常，你可通过实现 <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> 方法，来将有关终结点的信息传递给自定义绑定元素，以使其能正确生成支持通道。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-132">Typically, you implement the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to pass information about the endpoint to a custom binding element so that it can build a supporting channel correctly.</span></span> <span data-ttu-id="1cc7d-133">如果无需任何修改，则不返回值。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-133">Return no value if no modifications are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyClientBehavior (endpoint As ServiceEndpoint, clientRuntime As ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="iEndpointBehavior.ApplyClientBehavior (endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1cc7d-134">要自定义的终结点。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-134">The endpoint that is to be customized.</span></span></param>
        <param name="clientRuntime"><span data-ttu-id="1cc7d-135">要自定义的客户端运行时。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-135">The client runtime to be customized.</span></span></param>
        <summary><span data-ttu-id="1cc7d-136">在终结点范围内实现客户端的修改或扩展。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-136">Implements a modification or extension of the client across an endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cc7d-137">实现 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> 方法可以在通过特定终结点使用的所有消息范围内或针对特定操作，查看、修改或插入对客户端运行时的自定义扩展。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-137">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extension to the client runtime across all messages used with an endpoint or for specific operations.</span></span> <span data-ttu-id="1cc7d-138">有关利用客户端运行时对象可进行的自定义的详细信息，请参见 <xref:System.ServiceModel.Dispatcher.ClientRuntime> 和 <xref:System.ServiceModel.Dispatcher.ClientOperation>。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-138">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="1cc7d-139">如果该行为仅用于服务应用程序中，则建议 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> 方法引发 <xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-139">It is recommended that the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method throw a <xref:System.NotImplementedException> if the behavior is only intended for use in a service application.</span></span>  
  
 <span data-ttu-id="1cc7d-140">由于其他行为可能已经在运行时中添加或移除了某些操作，所以无法保证说明中的操作的数目与  属性中的 对象数目相等。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-140">Because other behaviors may have already added or removed some operations from the runtime there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyDispatchBehavior (endpoint As ServiceEndpoint, endpointDispatcher As EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="iEndpointBehavior.ApplyDispatchBehavior (endpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1cc7d-141">公开协定的终结点。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-141">The endpoint that exposes the contract.</span></span></param>
        <param name="endpointDispatcher"><span data-ttu-id="1cc7d-142">要修改或扩展的终结点调度程序。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-142">The endpoint dispatcher to be modified or extended.</span></span></param>
        <summary><span data-ttu-id="1cc7d-143">在终结点范围内实现服务的修改或扩展。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-143">Implements a modification or extension of the service across an endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cc7d-144">实现 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> 方法可以在所有消息范围内或针对特定操作，查看、修改或扩展服务运行时。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-144">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to view, modify, or extend the service runtime across all messages or for specific operations in an endpoint.</span></span> <span data-ttu-id="1cc7d-145">有关可在服务应用程序中进行的自定义的详细信息，请参见 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-145">For details about what customizations you can do in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1cc7d-146">如果该行为仅用于客户端应用程序中，则建议 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> 方法引发 <xref:System.NotImplementedException> 异常。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-146">It is recommended that the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
 <span data-ttu-id="1cc7d-147">注意，使用回调协定时，说明中可能会存在两个同名的操作（每个方向一个操作）。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-147">Note that there can be two operations with the same name in the description when using a callback contract (one operation in each direction).</span></span> <span data-ttu-id="1cc7d-148">如果您要循环执行操作，则就必须在终结点 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> 属性返回的内容之间关联消息方向。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-148">If you are iterating through operations, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and what is returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1cc7d-149">此外，由于其他行为可能已经在运行时中添加或移除了某些操作，所以无法保证说明中的操作数目同 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 属性中的 <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType> 对象数目相等。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-149">In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cc7d-150">下面的代码示例演示了在服务应用程序中添加 <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> 对象的终结点行为的实现。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-150">The following code example shows the implementation of an endpoint behavior that adds an <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> object in a service application.</span></span> <span data-ttu-id="1cc7d-151">在此情况下，`EndpointBehaviorMessageInspector` 类将通过使用应用程序配置文件，实现 <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> 以检查入站和出站消息，实现 <xref:System.ServiceModel.Description.IEndpointBehavior> 接口以将检查器类插入该行为应用到的所有终结点的检查系统，以及实现 <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> 以启用消息检查器行为。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-151">In this case, the `EndpointBehaviorMessageInspector` class implements <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> to inspect the inbound and outbound message, the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> to enable the message inspector behavior using an application configuration file.</span></span>  
  
 <span data-ttu-id="1cc7d-152">第一步是实现消息检查器。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-152">The first step is to implement the message inspector.</span></span>  
  
 [!code-csharp[IEndpointBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#2)]  
  
 <span data-ttu-id="1cc7d-153">下面的代码示例演示了如何使用 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> 方法将消息检查器添加到 <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-153">The next code example shows the use of the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to add the message inspector to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 <span data-ttu-id="1cc7d-154">下面的代码示例演示了如何实现 <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>，以便从配置文件使用消息检查器行为。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-154">The following code example shows the implementation of <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> in order to enable use of the message inspector behavior from a configuration file.</span></span>  
  
 [!code-csharp[IEndpointBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#3)]  
  
 <span data-ttu-id="1cc7d-155">最后，下面的配置文件演示了如何从配置使用前面的示例。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-155">Finally, the following configuration file shows how the preceding example can be used from configuration.</span></span>  
  
 [!code-xml[IEndpointBehavior#5](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/hostapplication.exe.config#5)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="iEndpointBehavior.Validate endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="1cc7d-156">要验证的终结点。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-156">The endpoint to validate.</span></span></param>
        <summary><span data-ttu-id="1cc7d-157">实现此方法可以确认终结点是否满足某些设定条件。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-157">Implement to confirm that the endpoint meets some intended criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cc7d-158">实现 <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> 方法可以检查结构，从而可以确认所有条件集。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-158">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method to examine the structure to confirm any set of criteria.</span></span> <span data-ttu-id="1cc7d-159">要使用此方法，并不一定要在 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> 或 <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> 中执行自定义。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-159">It is not necessary to perform any customizations in <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> or <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> to make use of this method.</span></span> <span data-ttu-id="1cc7d-160">如果终结点通过验证，则返回；否则，引发异常。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-160">If the endpoint passes validation, return; otherwise, throw an exception.</span></span>  
  
 <span data-ttu-id="1cc7d-161">例如，可以使用 <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> 方法以确保所有终结点都使用一个已批准的合作绑定。</span><span class="sxs-lookup"><span data-stu-id="1cc7d-161">For example, the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method can be use to ensure that all endpoints use an approved corporate binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
