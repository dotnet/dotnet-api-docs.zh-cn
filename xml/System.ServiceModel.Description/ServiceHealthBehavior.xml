<Type Name="ServiceHealthBehavior" FullName="System.ServiceModel.Description.ServiceHealthBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59d2394e0925ebc1db327ab5f1f970867a360ef9" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78747713" /></Metadata><TypeSignature Language="C#" Value="public class ServiceHealthBehavior : System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHealthBehavior extends System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceHealthBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHealthBehavior&#xA;Inherits ServiceHealthBehaviorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHealthBehavior : System::ServiceModel::Description::ServiceHealthBehaviorBase" />
  <TypeSignature Language="F#" Value="type ServiceHealthBehavior = class&#xA;    inherit ServiceHealthBehaviorBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.ServiceHealthBehaviorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供可提供运行状况终结点的 Windows Communication Foundation (WCF) 服务行为。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

运行状况终结点用于执行评估组件的运行状况的运行状况检查。 运行状况终结点可用于：

- 通知业务流程工具终止未通过关键运行状况检查的进程。 

- 通过跟踪和提供有关服务可用性和性能的警报，作为监视工具的早期问题指示器。

`ServiceHealthBehavior`是一个 WCF 服务行为，它扩展 IServiceBehavior 并派生自 <xref:System.ServiceModel.Description.ServiceHealthBehaviorBase> 。  将 `ServiceHealthBehavior` 实例添加到 <xref:System.ServiceModel.Description.ServiceDescription.Behaviors?displayProperty=nameWithType> 集合会启用以下功能：

-   **服务运行状况发布：** 可以通过查询字符串使用 HTTP/GET 请求来显示服务特定的详细信息，如服务状态、限制计数和容量 `?health` 。 在对错误的 WCF 服务进行故障排除时，了解并轻松访问显示的信息是极其重要的。

-   **返回 HTTP 响应代码：** 可以在查询字符串中指定 HTTP/GET health 探测请求的 HTTP 状态代码。

运行状况终结点仅在其运行状况监视的组件上下文中有意义。 它没有其他意义或用途。 因此，其运行状况是指组件的运行状况的管道。 客户端*应*假定运行状况终结点返回的 HTTP 响应代码适用于整个组件。 这与使用运行状况检查的当前基础结构工具（例如负载均衡器、服务发现等）所期望的行为兼容。

### <a name="enable-a-health-endpoint"></a>启用运行状况终结点

可以通过两种方式来指定如何公开运行状况终结点并发布 WCF 服务运行状况信息：

- 通过使用配置文件。 例如：

   ```xml
   <behaviors>
     <serviceBehaviors>
       <behavior name="DefaultBehavior">
         <serviceHealth httpGetEnabled="true"/>
       </behavior>
     </serviceBehaviors>
   </behaviors>
   ```

- 通过. 下面的代码片段使用 c # 公开运行状况终结点：

    ```csharp
    ServiceHost host = new ServiceHost(typeof(Service1),
        new Uri("http://jconde-dev1:81/Service1"));
    ServiceHealthBehavior healthBehavior =
                host.Description.Behaviors.Find<ServiceHealthBehavior>();
    if (healthBehavior == null)
    {
        healthBehavior = new ServiceHealthBehavior();
    }
    //healthBehavior.HttpGetEnabled = false;
    //healthBehavior.HttpsGetEnabled = false;
    host.Description.Behaviors.Add(healthBehavior);
    ```

       ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHealthBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHealthBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpProperty">
      <MemberSignature Language="C#" Value="protected static void AddHttpProperty (System.ServiceModel.Channels.Message message, System.Net.HttpStatusCode status, bool isXml);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AddHttpProperty(class System.ServiceModel.Channels.Message message, valuetype System.Net.HttpStatusCode status, bool isXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.AddHttpProperty(System.ServiceModel.Channels.Message,System.Net.HttpStatusCode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub AddHttpProperty (message As Message, status As HttpStatusCode, isXml As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void AddHttpProperty(System::ServiceModel::Channels::Message ^ message, System::Net::HttpStatusCode status, bool isXml);" />
      <MemberSignature Language="F#" Value="static member AddHttpProperty : System.ServiceModel.Channels.Message * System.Net.HttpStatusCode * bool -&gt; unit" Usage="System.ServiceModel.Description.ServiceHealthBehavior.AddHttpProperty (message, status, isXml)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="status" Type="System.Net.HttpStatusCode" />
        <Parameter Name="isXml" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">回复消息。</param>
        <param name="status">HTTP 状态代码。</param>
        <param name="isXml">定义要写入到消息的 <see langWord="ContentType" /> 标头类型。 如果 <see langword="true" />，<see langWord="ContentType" /> 为 <see langword="text/xml" /> 内容类型；否则 <see langWord="ContentType" /> 为 <see langword="text/sml" />。</param>
        <summary>设置响应消息的内容类型和 HTTP 状态代码。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureHttpStatusCode">
      <MemberSignature Language="C#" Value="protected static bool EnsureHttpStatusCode (int code);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool EnsureHttpStatusCode(int32 code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.EnsureHttpStatusCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function EnsureHttpStatusCode (code As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool EnsureHttpStatusCode(int code);" />
      <MemberSignature Language="F#" Value="static member EnsureHttpStatusCode : int -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.EnsureHttpStatusCode code" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">HTTP 状态代码。</param>
        <summary>确保 HTTP 状态代码在 200 至 599（包括 200 和 599）的范围内。</summary>
        <returns>如果 HTTP 状态代码在 200 至 599（包括 200 和 599）的范围内，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpResponseCode">
      <MemberSignature Language="C#" Value="protected virtual System.Net.HttpStatusCode GetHttpResponseCode (System.ServiceModel.ServiceHostBase serviceHost, string[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Net.HttpStatusCode GetHttpResponseCode(class System.ServiceModel.ServiceHostBase serviceHost, string[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetHttpResponseCode(System.ServiceModel.ServiceHostBase,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHttpResponseCode (serviceHost As ServiceHostBase, queries As String()) As HttpStatusCode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::HttpStatusCode GetHttpResponseCode(System::ServiceModel::ServiceHostBase ^ serviceHost, cli::array &lt;System::String ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpResponseCode : System.ServiceModel.ServiceHostBase * string[] -&gt; System.Net.HttpStatusCode&#xA;override this.GetHttpResponseCode : System.ServiceModel.ServiceHostBase * string[] -&gt; System.Net.HttpStatusCode" Usage="serviceHealthBehavior.GetHttpResponseCode (serviceHost, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="queries" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="serviceHost">包含启用了 <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> 的 WCF 服务的服务主机实例。</param>
        <param name="queries">包含查询字符串的字段/值对的数组。</param>
        <summary>分析查询字符串字段并返回其定义的 HTTP 响应代码。</summary>
        <returns>HTTP 响应代码。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceHealthSections">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Description.ServiceHealthSectionCollection GetServiceHealthSections (System.ServiceModel.ServiceHostBase serviceHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ServiceHealthSectionCollection GetServiceHealthSections(class System.ServiceModel.ServiceHostBase serviceHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetServiceHealthSections(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetServiceHealthSections (serviceHost As ServiceHostBase) As ServiceHealthSectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Description::ServiceHealthSectionCollection ^ GetServiceHealthSections(System::ServiceModel::ServiceHostBase ^ serviceHost);" />
      <MemberSignature Language="F#" Value="abstract member GetServiceHealthSections : System.ServiceModel.ServiceHostBase -&gt; System.ServiceModel.Description.ServiceHealthSectionCollection&#xA;override this.GetServiceHealthSections : System.ServiceModel.ServiceHostBase -&gt; System.ServiceModel.Description.ServiceHealthSectionCollection" Usage="serviceHealthBehavior.GetServiceHealthSections serviceHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceHealthSectionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceHost">包含启用了 <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> 的 WCF 服务的服务主机实例。</param>
        <summary>获取 <see cref="T:System.ServiceModel.Description.ServiceHealthSection" /> 中定义的 <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> 对象的集合。</summary>
        <returns>在 <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> 中定义的 <see cref="T:System.ServiceModel.Description.ServiceHealthSection" /> 对象的集合。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlDocument">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlDocument GetXmlDocument (System.ServiceModel.ServiceHostBase serviceHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlDocument GetXmlDocument(class System.ServiceModel.ServiceHostBase serviceHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetXmlDocument(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetXmlDocument (serviceHost As ServiceHostBase) As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlDocument ^ GetXmlDocument(System::ServiceModel::ServiceHostBase ^ serviceHost);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlDocument : System.ServiceModel.ServiceHostBase -&gt; System.Xml.XmlDocument&#xA;override this.GetXmlDocument : System.ServiceModel.ServiceHostBase -&gt; System.Xml.XmlDocument" Usage="serviceHealthBehavior.GetXmlDocument serviceHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceHost">包含启用了 <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> 的 WCF 服务的服务主机实例。</param>
        <summary>串行化与指定的 <paramref name="serviceHost" /> 关联的 <see cref="T:System.ServiceModel.Description.ServiceHealthModel" /> 对象，并将其以 XML 格式返回。</summary>
        <returns>与串行化的 <see cref="T:System.ServiceModel.Description.ServiceHealthModel" /> 对象响应的 XML 文档。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="HandleHealthRequest">
      <MemberSignature Language="C#" Value="public override void HandleHealthRequest (System.ServiceModel.ServiceHostBase serviceHost, System.ServiceModel.Channels.Message httpGetRequest, string[] queries, out System.ServiceModel.Channels.Message replyMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void HandleHealthRequest(class System.ServiceModel.ServiceHostBase serviceHost, class System.ServiceModel.Channels.Message httpGetRequest, string[] queries, [out] class System.ServiceModel.Channels.Message&amp; replyMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.HandleHealthRequest(System.ServiceModel.ServiceHostBase,System.ServiceModel.Channels.Message,System.String[],System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub HandleHealthRequest (serviceHost As ServiceHostBase, httpGetRequest As Message, queries As String(), ByRef replyMessage As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void HandleHealthRequest(System::ServiceModel::ServiceHostBase ^ serviceHost, System::ServiceModel::Channels::Message ^ httpGetRequest, cli::array &lt;System::String ^&gt; ^ queries, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % replyMessage);" />
      <MemberSignature Language="F#" Value="override this.HandleHealthRequest : System.ServiceModel.ServiceHostBase * System.ServiceModel.Channels.Message * string[] * Message -&gt; unit" Usage="serviceHealthBehavior.HandleHealthRequest (serviceHost, httpGetRequest, queries, replyMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="httpGetRequest" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="queries" Type="System.String[]" />
        <Parameter Name="replyMessage" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceHost">包含启用了 <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> 的 WCF 服务的服务主机实例。</param>
        <param name="httpGetRequest">对运行状况终结点发出的 HTTP 请求。</param>
        <param name="queries">包含查询字符串的字段/值对的数组。</param>
        <param name="replyMessage">返回方法时，运行状况行为的响应消息。 此消息的内容类型为 <see langword="text/html" /> 或 <see langword="text/xml" />，具体取决于请求是针对 XML 还是 HTML。</param>
        <summary>返回指定请求的响应消息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

此方法由 <xref:System.ServiceModel.Description.ServiceHealthBehaviorBase> 实例调用，负责将响应消息精心用于运行状况终结点。

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> 为 <see langword="null" />。

- 或 -

<paramref name="httpGetRequest" /> 为 <see langword="null" />

- 或 -

<paramref name="queries" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasXmlSupport">
      <MemberSignature Language="C#" Value="protected virtual bool HasXmlSupport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasXmlSupport" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehavior.HasXmlSupport" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasXmlSupport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasXmlSupport { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasXmlSupport : bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.HasXmlSupport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示是否支持 XML 响应消息的值。</summary>
        <value>除非在派生类中重写，否则此方法将始终返回 <see langword="true" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseBooleanQueryParameter">
      <MemberSignature Language="C#" Value="protected static bool TryParseBooleanQueryParameter (string parameterName, string parameter, bool defaultValue, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool TryParseBooleanQueryParameter(string parameterName, string parameter, bool defaultValue, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.TryParseBooleanQueryParameter(System.String,System.String,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function TryParseBooleanQueryParameter (parameterName As String, parameter As String, defaultValue As Boolean, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool TryParseBooleanQueryParameter(System::String ^ parameterName, System::String ^ parameter, bool defaultValue, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParseBooleanQueryParameter : string * string * bool * bool -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.TryParseBooleanQueryParameter (parameterName, parameter, defaultValue, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Boolean" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameterName">此方法尝试分析值的参数名。</param>
        <param name="parameter">查询字符串的字段/值对。</param>
        <param name="defaultValue">如果分析操作失败，为要分配给 <paramName name="result" /> 参数的值。</param>
        <param name="result">返回方法时，分析的布尔参数的值。</param>
        <summary>尝试分析布尔查询字符串参数，并返回一个值，该值指示分析操作是否成功。</summary>
        <returns>如果分析操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

`true`如果方法成功分析了字段的值，则该方法返回 <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> 。

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameterName" /> 为 <see langword="null" />。
        
- 或 -

<paramref name="parameter" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseHttpStatusCodeQueryParameter">
      <MemberSignature Language="C#" Value="protected static bool TryParseHttpStatusCodeQueryParameter (string parameterName, string parameter, System.Net.HttpStatusCode defaultErrorCode, out System.Net.HttpStatusCode result);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool TryParseHttpStatusCodeQueryParameter(string parameterName, string parameter, valuetype System.Net.HttpStatusCode defaultErrorCode, [out] valuetype System.Net.HttpStatusCode&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.TryParseHttpStatusCodeQueryParameter(System.String,System.String,System.Net.HttpStatusCode,System.Net.HttpStatusCode@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function TryParseHttpStatusCodeQueryParameter (parameterName As String, parameter As String, defaultErrorCode As HttpStatusCode, ByRef result As HttpStatusCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool TryParseHttpStatusCodeQueryParameter(System::String ^ parameterName, System::String ^ parameter, System::Net::HttpStatusCode defaultErrorCode, [Runtime::InteropServices::Out] System::Net::HttpStatusCode % result);" />
      <MemberSignature Language="F#" Value="static member TryParseHttpStatusCodeQueryParameter : string * string * System.Net.HttpStatusCode * HttpStatusCode -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.TryParseHttpStatusCodeQueryParameter (parameterName, parameter, defaultErrorCode, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="defaultErrorCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="result" Type="System.Net.HttpStatusCode" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameterName">此方法尝试分析值的参数名。</param>
        <param name="parameter">查询字符串的字段/值对。</param>
        <param name="defaultErrorCode">如果分析操作失败，则为要分配给参数的值。</param>
        <param name="result">返回方法时，分析的 HTTP 状态代码参数的值。</param>
        <summary>尝试分析查询字符串变量的 HTTP 状态代码，并返回一个值，该值指示分析操作是否成功。</summary>
        <returns>如果分析操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameterName" /> 为 <see langword="null" />。
        
- 或 -

<paramref name="parameter" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
