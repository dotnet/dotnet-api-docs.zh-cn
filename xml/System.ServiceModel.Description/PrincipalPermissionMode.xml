<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe9558322500409addec4db8212c7c267de369c5" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83974644" /></Metadata><TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="add6a-101">设置使用 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> 对方法访问进行控制时所执行的授权检查的模式。</span><span class="sxs-lookup"><span data-stu-id="add6a-101">Sets the mode for authorization checks when using the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> to control access to a method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="add6a-102">如果将 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 应用到方法，此模式将会指定授权访问时要用的一组角色。</span><span class="sxs-lookup"><span data-stu-id="add6a-102">When applying the <xref:System.Security.Permissions.PrincipalPermissionAttribute> to a method, this mode specifies which set of roles to use when authorizing access.</span></span> <span data-ttu-id="add6a-103">默认情况下，该属性使用 Windows 组（例如 `Administrator` 或 `Users`）来指定用户必须所属的角色。</span><span class="sxs-lookup"><span data-stu-id="add6a-103">By default, the attribute uses Windows groups (such as `Administrator` or `Users`) to specify the role to which the user must belong.</span></span>  
  
 <span data-ttu-id="add6a-104">若要通过编程方式设置该模式，请创建 `ServiceHost` 类的实例，然后在它的行为集合中查找 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>，并将 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> 设置为相应的枚举。</span><span class="sxs-lookup"><span data-stu-id="add6a-104">To set the mode programmatically, create an instance of the `ServiceHost` class, then find the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> in its collection of behaviors, and set the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> to the appropriate enumeration.</span></span> <span data-ttu-id="add6a-105">下面的示例将属性设置为 UseAspNetRoles。</span><span class="sxs-lookup"><span data-stu-id="add6a-105">The following example sets the property to UseAspNetRoles.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 <span data-ttu-id="add6a-106">还可以通过将[ &lt; serviceAuthorization &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/serviceauthorization-element)添加到配置文件的[ &lt; serviceBehaviors &gt; ](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors)来设置配置中的行为，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="add6a-106">You can also set the behavior in configuration by adding a [&lt;serviceAuthorization&gt;](/dotnet/framework/configure-apps/file-schema/wcf/serviceauthorization-element) to the [&lt;serviceBehaviors&gt;](/dotnet/framework/configure-apps/file-schema/wcf/servicebehaviors) of a configuration file, as shown in the following code.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 <span data-ttu-id="add6a-107">当 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 属性应用到方法时，枚举会影响该属性向用户授权的方式。</span><span class="sxs-lookup"><span data-stu-id="add6a-107">The enumeration affects how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> attribute authorizes a user when it is applied to a method.</span></span> <span data-ttu-id="add6a-108">下面的示例将该属性应用到了方法，并且要求用户属于该计算机上的 Users 组。</span><span class="sxs-lookup"><span data-stu-id="add6a-108">The following example applies the attribute to a method and demands that the user belong to the Users group on the computer.</span></span> <span data-ttu-id="add6a-109">只有将 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> 设置为 `UseWindowsGroup`（默认设置）时，此代码才起作用。</span><span class="sxs-lookup"><span data-stu-id="add6a-109">This code works only when the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> is set to `UseWindowsGroup` (the default setting).</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a><span data-ttu-id="add6a-110">UseAspNetRoles</span><span class="sxs-lookup"><span data-stu-id="add6a-110">UseAspNetRoles</span></span>  
 <span data-ttu-id="add6a-111">UseAspNetRoles 值用于所有凭据类型。</span><span class="sxs-lookup"><span data-stu-id="add6a-111">The UseAspNetRoles value is used for all credential types.</span></span> <span data-ttu-id="add6a-112">此模式允许 Windows Communication Foundation （WCF）使用 ASP.NET 角色提供程序来做出授权决策。</span><span class="sxs-lookup"><span data-stu-id="add6a-112">This mode enables Windows Communication Foundation (WCF) to use the ASP.NET role provider to make authorization decisions.</span></span>  
  
 <span data-ttu-id="add6a-113">如果服务的凭据为 X.509 证书，则可以将 `Name` 的 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 属性设置为由“主题”字段和“指纹”字段的串联值组成的字符串，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="add6a-113">When the credential for a service is an X.509 certificate, you can set the `Name` property of the <xref:System.Security.Permissions.PrincipalPermissionAttribute> to a string that consists of the concatenated values of the Subject field and the Thumbprint field, as shown in the following example.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 <span data-ttu-id="add6a-114">该串联字符串由用分号和空格分隔的主题值和指纹值组成。</span><span class="sxs-lookup"><span data-stu-id="add6a-114">The concatenated string consists of the subject and thumbprint values separated by a semicolon and a space.</span></span>  
  
 <span data-ttu-id="add6a-115">还可以将证书的“主题”字段设置为空字符串。</span><span class="sxs-lookup"><span data-stu-id="add6a-115">It is also possible for a certificate to have a Subject field set to a null string.</span></span> <span data-ttu-id="add6a-116">在这种情况下，可以将 `Name` 属性设置为分号，后跟空格，然后是指纹，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="add6a-116">In that case, you can set the `Name` property to a semicolon followed by a space and then the thumbprint, as shown in the following example.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 <span data-ttu-id="add6a-117">如果存在 ASP.NET 角色提供程序，则还可以将 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> 属性设置为数据库中的角色。</span><span class="sxs-lookup"><span data-stu-id="add6a-117">If an ASP.NET role provider is present, you can also set the <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> property to a role in the database.</span></span> <span data-ttu-id="add6a-118">默认情况下，数据库由 <xref:System.Web.Security.SqlRoleProvider> 表示。</span><span class="sxs-lookup"><span data-stu-id="add6a-118">By default, the database is represented by the <xref:System.Web.Security.SqlRoleProvider>.</span></span> <span data-ttu-id="add6a-119">您还可以利用 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> 类的 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> 属性来设置自定义角色提供程序。</span><span class="sxs-lookup"><span data-stu-id="add6a-119">You can also set a custom role provider with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> property of the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> class.</span></span> <span data-ttu-id="add6a-120">下面的代码将该角色设置为了 `Administrators`。</span><span class="sxs-lookup"><span data-stu-id="add6a-120">The following code sets the role to `Administrators`.</span></span> <span data-ttu-id="add6a-121">请注意，角色提供程序必须将用户帐户映射到该角色。</span><span class="sxs-lookup"><span data-stu-id="add6a-121">Note that the role provider must map the user account to that role.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 <span data-ttu-id="add6a-122">有关 ASP.NET 角色提供程序的详细信息，请参阅[如何：使用 ASP.NET 2.0 中的角色管理器](https://go.microsoft.com/fwlink/?LinkId=96692)。</span><span class="sxs-lookup"><span data-stu-id="add6a-122">For more information about the ASP.NET Role provider, see [How To: Use Role Manager in ASP.NET 2.0](https://go.microsoft.com/fwlink/?LinkId=96692).</span></span>  
  
 <span data-ttu-id="add6a-123">有关使用 WCF 和角色提供程序的详细信息，请参阅[如何：将 ASP.NET 角色提供程序用于服务](/dotnet/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service)。</span><span class="sxs-lookup"><span data-stu-id="add6a-123">For more information about using WCF and the role provider, see [How to: Use the ASP.NET Role Provider with a Service](/dotnet/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service).</span></span>  
  
## <a name="custom"></a><span data-ttu-id="add6a-124">自定义</span><span class="sxs-lookup"><span data-stu-id="add6a-124">Custom</span></span>  
 <span data-ttu-id="add6a-125">当属性设置为 Custom 时，还必须提供实现类的自定义类 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 。</span><span class="sxs-lookup"><span data-stu-id="add6a-125">When the property is set to Custom, you must also provide a custom class that implements the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> class.</span></span> <span data-ttu-id="add6a-126">此类负责提供 `IPrincipal` 集合内调用方的 <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="add6a-126">This class is responsible for providing the caller's `IPrincipal` representation inside the <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> collection.</span></span> <span data-ttu-id="add6a-127">它必须使用“Principal”字符串关键字将 `IPrincipal` 实例存储到属性集合中，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="add6a-127">It must store the `IPrincipal` instance to the properties collection using the "Principal" string key, as shown in the following example.</span></span>  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a><span data-ttu-id="add6a-128">背景</span><span class="sxs-lookup"><span data-stu-id="add6a-128">Background</span></span>  
 <span data-ttu-id="add6a-129">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中基于角色的安全性使得应用程序可以通过代码指定授权。</span><span class="sxs-lookup"><span data-stu-id="add6a-129">The role-based security in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] enables applications to specify authorizations through code.</span></span> <span data-ttu-id="add6a-130">指定 <xref:System.Security.Permissions.PrincipalPermission> 请求后，<xref:System.Threading.Thread.CurrentPrincipal%2A> 必须满足 `PrincipalPermission` 要求。</span><span class="sxs-lookup"><span data-stu-id="add6a-130">By specifying the <xref:System.Security.Permissions.PrincipalPermission> demand, the <xref:System.Threading.Thread.CurrentPrincipal%2A> must satisfy the `PrincipalPermission` requirement.</span></span> <span data-ttu-id="add6a-131">例如，用户必须为特定的角色或位于特定的组中。</span><span class="sxs-lookup"><span data-stu-id="add6a-131">For example, that the user must be in a specific role or group.</span></span> <span data-ttu-id="add6a-132">否则，线程将无权执行代码，这会导致异常。</span><span class="sxs-lookup"><span data-stu-id="add6a-132">Otherwise, the thread is not authorized to execute the code, which results in an exception.</span></span> <span data-ttu-id="add6a-133">WCF 提供了一组 <xref:System.ServiceModel.Description.PrincipalPermissionMode> 选项，用于根据 <xref:System.Threading.Thread.CurrentPrincipal%2A> 相应的具体情况指定 <xref:System.Security.SecurityContext> 。</span><span class="sxs-lookup"><span data-stu-id="add6a-133">WCF provides a set of <xref:System.ServiceModel.Description.PrincipalPermissionMode> selections to specify the <xref:System.Threading.Thread.CurrentPrincipal%2A> based on <xref:System.Security.SecurityContext> accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="add6a-134">下面的示例演示如何指定 UseAspNetRoles。</span><span class="sxs-lookup"><span data-stu-id="add6a-134">The following example shows how to specify UseAspNetRoles.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 <span data-ttu-id="add6a-135">下面的示例演示如何指定自定义。</span><span class="sxs-lookup"><span data-stu-id="add6a-135">The following example shows how to specify Custom.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="add6a-136">始终允许用户为 <see cref="T:System.Security.Principal.IPrincipal" /> 指定 <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 类。</span><span class="sxs-lookup"><span data-stu-id="add6a-136">Always enables the user to specify a <see cref="T:System.Security.Principal.IPrincipal" /> class for <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="add6a-137">使用户能够为 <see cref="T:System.Security.Principal.IPrincipal" /> 指定自定义 <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 类。</span><span class="sxs-lookup"><span data-stu-id="add6a-137">Enables the user to specify a custom <see cref="T:System.Security.Principal.IPrincipal" /> class for <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="add6a-138">未设置 <see cref="P:System.Threading.Thread.CurrentPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="add6a-138"><see cref="P:System.Threading.Thread.CurrentPrincipal" /> is not set.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="add6a-139"><see cref="P:System.Threading.Thread.CurrentPrincipal" /> 的设置是基于 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 角色提供程序 (<see cref="T:System.Web.Security.RoleProvider" />) 进行的。</span><span class="sxs-lookup"><span data-stu-id="add6a-139"><see cref="P:System.Threading.Thread.CurrentPrincipal" /> is set based on the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] role provider (<see cref="T:System.Web.Security.RoleProvider" />).</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="add6a-140"><see cref="P:System.Threading.Thread.CurrentPrincipal" /> 的设置是基于 Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />) 进行的。</span><span class="sxs-lookup"><span data-stu-id="add6a-140"><see cref="P:System.Threading.Thread.CurrentPrincipal" /> is set based on Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />).</span></span> <span data-ttu-id="add6a-141">如果用户标识不与 Windows 帐户关联，则将使用匿名 Windows 用户。</span><span class="sxs-lookup"><span data-stu-id="add6a-141">If the user identity is not associated with a Windows account, anonymous Windows is used.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
