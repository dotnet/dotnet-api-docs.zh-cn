<Type Name="CaseInsensitiveHashCodeProvider" FullName="System.Collections.CaseInsensitiveHashCodeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cac735952fd4863ea2dd375a71603e217c86af83" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91911113" /></Metadata><TypeSignature Language="C#" Value="public class CaseInsensitiveHashCodeProvider : System.Collections.IHashCodeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CaseInsensitiveHashCodeProvider extends System.Object implements class System.Collections.IHashCodeProvider" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CaseInsensitiveHashCodeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CaseInsensitiveHashCodeProvider&#xA;Implements IHashCodeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CaseInsensitiveHashCodeProvider : System::Collections::IHashCodeProvider" />
  <TypeSignature Language="F#" Value="type CaseInsensitiveHashCodeProvider = class&#xA;    interface IHashCodeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CaseInsensitiveHashCodeProvider extends System.Object implements class System.Collections.IHashCodeProvider" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Collections.NonGeneric" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections.NonGeneric" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IHashCodeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Obsolete("Please use StringComparer instead.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Please use StringComparer instead.")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28e06-101">使用忽略字符串大小写的哈希算法，为对象提供哈希代码。</span><span class="sxs-lookup"><span data-stu-id="28e06-101">Supplies a hash code for an object, using a hashing algorithm that ignores the case of strings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks
  
<span data-ttu-id="28e06-102"><xref:System.Collections.CaseInsensitiveHashCodeProvider> 实现 <xref:System.Collections.IHashCodeProvider> 接口，该接口支持对字符串进行不区分大小写的比较，就像 <xref:System.Collections.CaseInsensitiveComparer> 实现了接口，该 <xref:System.Collections.IComparer> 接口支持对字符串进行不区分大小写的比较。</span><span class="sxs-lookup"><span data-stu-id="28e06-102"><xref:System.Collections.CaseInsensitiveHashCodeProvider> implements the <xref:System.Collections.IHashCodeProvider> interface supporting case-insensitive comparisons on strings, just as <xref:System.Collections.CaseInsensitiveComparer> implements the <xref:System.Collections.IComparer> interface supporting case-insensitive comparisons on strings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="28e06-103">不建议使用 `CaseInsensitiveHashCodeProvider` 类进行新的开发。</span><span class="sxs-lookup"><span data-stu-id="28e06-103">We don't recommend that you use the `CaseInsensitiveHashCodeProvider` class for new development.</span></span> <span data-ttu-id="28e06-104">相反，我们建议使用 <xref:System.StringComparer?displayProperty=nameWithType> <xref:System.StringComparer.CurrentCultureIgnoreCase?displayProperty=nameWithType> 、或属性返回的对象  <xref:System.StringComparer.InvariantCultureIgnoreCase?displayProperty=nameWithType> <xref:System.StringComparer.OrdinalIgnoreCase?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="28e06-104">Instead, we recommend that you use the <xref:System.StringComparer?displayProperty=nameWithType> object returned by the <xref:System.StringComparer.CurrentCultureIgnoreCase?displayProperty=nameWithType>,  <xref:System.StringComparer.InvariantCultureIgnoreCase?displayProperty=nameWithType>, or <xref:System.StringComparer.OrdinalIgnoreCase?displayProperty=nameWithType> property.</span></span>

 <span data-ttu-id="28e06-105">用作键的对象 <xref:System.Collections.Hashtable> 需要重写 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 方法 (或 <xref:System.Collections.IHashCodeProvider> 接口) 和 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 方法 (或 <xref:System.Collections.IComparer> 接口) 。</span><span class="sxs-lookup"><span data-stu-id="28e06-105">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="28e06-106">方法或接口的实现必须以相同的方式处理区分大小写。否则， <xref:System.Collections.Hashtable> 可能行为不正确。</span><span class="sxs-lookup"><span data-stu-id="28e06-106">The implementation of both methods or interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="28e06-107">例如，在创建时 <xref:System.Collections.Hashtable> ，必须将此类与 <xref:System.Collections.CaseInsensitiveComparer> 类或任何不区分大小写的实现一起使用 <xref:System.Collections.IComparer> 。</span><span class="sxs-lookup"><span data-stu-id="28e06-107">For example, when creating a <xref:System.Collections.Hashtable>, you must use this class with the <xref:System.Collections.CaseInsensitiveComparer> class or any case-insensitive <xref:System.Collections.IComparer> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28e06-108">下面的代码示例创建区分大小写的哈希表和不区分大小写的哈希表，并演示其行为中的差异，即使两者都包含相同的元素也是如此。</span><span class="sxs-lookup"><span data-stu-id="28e06-108">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.IHashCodeProvider" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
    <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="28e06-109">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="28e06-109">Performing Culture-Insensitive String Operations in Collections</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28e06-110">初始化 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="28e06-110">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveHashCodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveHashCodeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28e06-111">使用当前线程的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 初始化 <see cref="P:System.Threading.Thread.CurrentCulture" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="28e06-111">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> class using the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28e06-112"><xref:System.Collections.CaseInsensitiveHashCodeProvider>使用此构造函数创建实例时，将 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 保存当前线程的。</span><span class="sxs-lookup"><span data-stu-id="28e06-112">When the <xref:System.Collections.CaseInsensitiveHashCodeProvider> instance is created using this constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> of the current thread is saved.</span></span> <span data-ttu-id="28e06-113">比较过程使用保存的区域性来确定大小写规则;因此，哈希代码比较可能会产生不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="28e06-113">Comparison procedures use the saved culture to determine the casing rules; therefore, hash code comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="28e06-114">有关区域性特定比较的详细信息，请参阅 <xref:System.Globalization> 命名空间和 [全球化和本地化](/dotnet/standard/globalization-localization/)。</span><span class="sxs-lookup"><span data-stu-id="28e06-114">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](/dotnet/standard/globalization-localization/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28e06-115">下面的代码示例创建区分大小写的哈希表和不区分大小写的哈希表，并演示其行为中的差异，即使两者都包含相同的元素也是如此。</span><span class="sxs-lookup"><span data-stu-id="28e06-115">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="28e06-116">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="28e06-116">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveHashCodeProvider (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveHashCodeProvider(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Collections.CaseInsensitiveHashCodeProvider : System.Globalization.CultureInfo -&gt; System.Collections.CaseInsensitiveHashCodeProvider" Usage="new System.Collections.CaseInsensitiveHashCodeProvider culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="28e06-117">要用于新 <see cref="T:System.Globalization.CultureInfo" /> 的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />。</span><span class="sxs-lookup"><span data-stu-id="28e06-117">The <see cref="T:System.Globalization.CultureInfo" /> to use for the new <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />.</span></span></param>
        <summary><span data-ttu-id="28e06-118">使用指定的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="28e06-118">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> class using the specified <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28e06-119">比较过程使用指定的 <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> 来确定大小写规则。</span><span class="sxs-lookup"><span data-stu-id="28e06-119">Comparison procedures use the specified <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> to determine the casing rules.</span></span> <span data-ttu-id="28e06-120">哈希代码比较可能会产生不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="28e06-120">Hash code comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="28e06-121">有关区域性特定比较的详细信息，请参阅 <xref:System.Globalization> 命名空间和 [全球化和本地化](/dotnet/standard/globalization-localization/)。</span><span class="sxs-lookup"><span data-stu-id="28e06-121">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](/dotnet/standard/globalization-localization/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28e06-122">下面的代码示例创建区分大小写的哈希表和不区分大小写的哈希表，并演示其行为中的差异，即使两者都包含相同的元素也是如此。</span><span class="sxs-lookup"><span data-stu-id="28e06-122">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28e06-123"><paramref name="culture" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28e06-123"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="28e06-124">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="28e06-124">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveHashCodeProvider Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveHashCodeProvider Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveHashCodeProvider.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CaseInsensitiveHashCodeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveHashCodeProvider ^ Default { System::Collections::CaseInsensitiveHashCodeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.CaseInsensitiveHashCodeProvider" Usage="System.Collections.CaseInsensitiveHashCodeProvider.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28e06-125">获取 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的一个实例，该实例与当前线程的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 关联并且始终可用。</span><span class="sxs-lookup"><span data-stu-id="28e06-125">Gets an instance of <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> that is associated with the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread and that is always available.</span></span></summary>
        <value><span data-ttu-id="28e06-126"><see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的实例，它与当前线程的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 关联。</span><span class="sxs-lookup"><span data-stu-id="28e06-126">An instance of <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> that is associated with the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28e06-127"><xref:System.Collections.CaseInsensitiveHashCodeProvider>使用无参数构造函数创建实例时，将 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 保存当前线程的。</span><span class="sxs-lookup"><span data-stu-id="28e06-127">When the <xref:System.Collections.CaseInsensitiveHashCodeProvider> instance is created using the parameterless constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> of the current thread is saved.</span></span> <span data-ttu-id="28e06-128">比较过程使用保存的区域性来确定大小写规则;因此，哈希代码比较可能会产生不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="28e06-128">Comparison procedures use the saved culture to determine the casing rules; therefore, hash code comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="28e06-129">有关区域性特定比较的详细信息，请参阅 <xref:System.Globalization> 命名空间和 [全球化和本地化](/dotnet/standard/globalization-localization/)。</span><span class="sxs-lookup"><span data-stu-id="28e06-129">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](/dotnet/standard/globalization-localization/).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="28e06-130">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="28e06-130">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveHashCodeProvider DefaultInvariant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveHashCodeProvider DefaultInvariant" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInvariant As CaseInsensitiveHashCodeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveHashCodeProvider ^ DefaultInvariant { System::Collections::CaseInsensitiveHashCodeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInvariant : System.Collections.CaseInsensitiveHashCodeProvider" Usage="System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28e06-131">获取 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的一个实例，该实例与 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 关联并且始终可用。</span><span class="sxs-lookup"><span data-stu-id="28e06-131">Gets an instance of <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> that is associated with <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> and that is always available.</span></span></summary>
        <value><span data-ttu-id="28e06-132"><see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的实例，它与 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 关联。</span><span class="sxs-lookup"><span data-stu-id="28e06-132">An instance of <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> that is associated with <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28e06-133">比较过程使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 来确定大小写规则。</span><span class="sxs-lookup"><span data-stu-id="28e06-133">Comparison procedures use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to determine the casing rules.</span></span> <span data-ttu-id="28e06-134">哈希代码比较可能会产生不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="28e06-134">Hash code comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="28e06-135">有关区域性特定比较的详细信息，请参阅 <xref:System.Globalization> 命名空间和 [全球化和本地化](/dotnet/standard/globalization-localization/)。</span><span class="sxs-lookup"><span data-stu-id="28e06-135">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](/dotnet/standard/globalization-localization/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28e06-136">下面的代码示例创建区分大小写的哈希表和不区分大小写的哈希表，并演示其行为中的差异，即使两者都包含相同的元素也是如此。</span><span class="sxs-lookup"><span data-stu-id="28e06-136">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="28e06-137">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="28e06-137">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : obj -&gt; int" Usage="caseInsensitiveHashCodeProvider.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IHashCodeProvider.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="28e06-138"><see cref="T:System.Object" />，将为其返回哈希代码。</span><span class="sxs-lookup"><span data-stu-id="28e06-138">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="28e06-139">使用忽略字符串大小写的哈希算法返回给定对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="28e06-139">Returns a hash code for the given object, using a hashing algorithm that ignores the case of strings.</span></span></summary>
        <returns><span data-ttu-id="28e06-140">给定对象的哈希代码（使用忽略字符串大小写的哈希算法返回）。</span><span class="sxs-lookup"><span data-stu-id="28e06-140">A hash code for the given object, using a hashing algorithm that ignores the case of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28e06-141">由于两个原因，不能保留此方法的返回值。</span><span class="sxs-lookup"><span data-stu-id="28e06-141">The return value from this method must not be persisted for two reasons.</span></span> <span data-ttu-id="28e06-142">首先，可以更改类的哈希函数，以生成更好的分布，从而使旧哈希函数中的任何值都没有用。</span><span class="sxs-lookup"><span data-stu-id="28e06-142">First, the hash function of a class might be altered to generate a better distribution, thereby rendering any values from the old hash function useless.</span></span> <span data-ttu-id="28e06-143">其次，此类的默认实现不保证不同的实例将返回相同的值。</span><span class="sxs-lookup"><span data-stu-id="28e06-143">Second, the default implementation of this class does not guarantee that the same value will be returned by different instances.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28e06-144"><paramref name="obj" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28e06-144"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="28e06-145">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="28e06-145">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
