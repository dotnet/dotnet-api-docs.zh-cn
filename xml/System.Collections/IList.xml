<Type Name="IList" FullName="System.Collections.IList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aec75dd750f65a2aeebd1adc22f0ebd0ce5a5e7d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86737277" /></Metadata><TypeSignature Language="C#" Value="public interface IList : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IList implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IList" />
  <TypeSignature Language="VB.NET" Value="Public Interface IList&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public interface class IList : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IList = interface&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c40a8-101">表示可按照索引单独访问的对象的非泛型集合。</span><span class="sxs-lookup"><span data-stu-id="c40a8-101">Represents a non-generic collection of objects that can be individually accessed by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-102"><xref:System.Collections.IList>是接口的后代 <xref:System.Collections.ICollection> ，是所有非泛型列表的基接口。</span><span class="sxs-lookup"><span data-stu-id="c40a8-102"><xref:System.Collections.IList> is a descendant of the <xref:System.Collections.ICollection> interface and is the base interface of all non-generic lists.</span></span> <span data-ttu-id="c40a8-103"><xref:System.Collections.IList>实现分为三个类别：只读、固定大小和可变大小。</span><span class="sxs-lookup"><span data-stu-id="c40a8-103"><xref:System.Collections.IList> implementations fall into three categories: read-only, fixed-size, and variable-size.</span></span> <span data-ttu-id="c40a8-104"><xref:System.Collections.IList>不能修改只读。</span><span class="sxs-lookup"><span data-stu-id="c40a8-104">A read-only <xref:System.Collections.IList> cannot be modified.</span></span> <span data-ttu-id="c40a8-105">固定大小不 <xref:System.Collections.IList> 允许添加或删除元素，但允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="c40a8-105">A fixed-size <xref:System.Collections.IList> does not allow the addition or removal of elements, but it allows the modification of existing elements.</span></span> <span data-ttu-id="c40a8-106">可变大小 <xref:System.Collections.IList> 允许添加、移除和修改元素。</span><span class="sxs-lookup"><span data-stu-id="c40a8-106">A variable-size <xref:System.Collections.IList> allows the addition, removal, and modification of elements.</span></span>  
  
 <span data-ttu-id="c40a8-107">有关此接口的泛型版本，请参阅 <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-107">For the generic version of this interface, see <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-108">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-108">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#01)]
 [!code-vb[System.Collections.IList_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#01)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.Generic.IList`1" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int" Usage="iList.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c40a8-109">要添加到 <see cref="T:System.Collections.IList" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="c40a8-109">The object to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c40a8-110">将某项添加到 <see cref="T:System.Collections.IList" /> 中。</span><span class="sxs-lookup"><span data-stu-id="c40a8-110">Adds an item to the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="c40a8-111">新元素插入到的位置；或者为 -1，指示该项未插入到集合中。</span><span class="sxs-lookup"><span data-stu-id="c40a8-111">The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c40a8-112">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-112">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-113">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-113">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c40a8-114"><see cref="T:System.Collections.IList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="c40a8-114">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
<span data-ttu-id="c40a8-115">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c40a8-115">-or-</span></span> 
<span data-ttu-id="c40a8-116"><see cref="T:System.Collections.IList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="c40a8-116">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iList.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c40a8-117">从 <see cref="T:System.Collections.IList" /> 中移除所有项。</span><span class="sxs-lookup"><span data-stu-id="c40a8-117">Removes all items from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-118">此方法的实现在处理 <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> 集合和容量的方式上可能会有所不同。</span><span class="sxs-lookup"><span data-stu-id="c40a8-118">Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> and the capacity of a collection.</span></span> <span data-ttu-id="c40a8-119">通常情况下，计数设置为零，还会释放对集合的元素的其他对象的引用。</span><span class="sxs-lookup"><span data-stu-id="c40a8-119">Typically, the count is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="c40a8-120">容量可以设置为零或默认值，也可以保持不变。</span><span class="sxs-lookup"><span data-stu-id="c40a8-120">The capacity can be set to zero or a default value, or it can remain unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-121">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-121">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-122">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-122">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c40a8-123"><see cref="T:System.Collections.IList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="c40a8-123">The <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool" Usage="iList.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c40a8-124">要在 <see cref="T:System.Collections.IList" /> 中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="c40a8-124">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c40a8-125">确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。</span><span class="sxs-lookup"><span data-stu-id="c40a8-125">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="c40a8-126">如果在 <see cref="T:System.Collections.IList" /> 中找到了 <see cref="T:System.Object" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c40a8-126"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-127">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="c40a8-127">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="c40a8-128">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="c40a8-128">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-129">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-129">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-130">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-130">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int" Usage="iList.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c40a8-131">要在 <see cref="T:System.Collections.IList" /> 中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="c40a8-131">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c40a8-132">确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</span><span class="sxs-lookup"><span data-stu-id="c40a8-132">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="c40a8-133">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="c40a8-133">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-134">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="c40a8-134">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="c40a8-135">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="c40a8-135">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-136">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-136">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-137">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-137">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit" Usage="iList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c40a8-138">应插入 <paramref name="value" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="c40a8-138">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="c40a8-139">要插入到 <see cref="T:System.Collections.IList" /> 中的对象。</span><span class="sxs-lookup"><span data-stu-id="c40a8-139">The object to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c40a8-140">在 <see cref="T:System.Collections.IList" /> 中的指定索引处插入一个项。</span><span class="sxs-lookup"><span data-stu-id="c40a8-140">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-141">如果 `index` 等于 <xref:System.Collections.IList> 中的项数，则将 `value` 追加到末尾。</span><span class="sxs-lookup"><span data-stu-id="c40a8-141">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="c40a8-142">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="c40a8-142">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="c40a8-143">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="c40a8-143">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c40a8-144">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-144">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-145">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-145">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-146">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-146">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c40a8-147"><paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="c40a8-147"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c40a8-148"><see cref="T:System.Collections.IList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="c40a8-148">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
<span data-ttu-id="c40a8-149">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c40a8-149">-or-</span></span> 
<span data-ttu-id="c40a8-150"><see cref="T:System.Collections.IList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="c40a8-150">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="c40a8-151"><paramref name="value" /> 是 <see cref="T:System.Collections.IList" /> 中的 null 引用。</span><span class="sxs-lookup"><span data-stu-id="c40a8-151"><paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c40a8-152">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</span><span class="sxs-lookup"><span data-stu-id="c40a8-152">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="c40a8-153">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c40a8-153"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-154">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="c40a8-154">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-155">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-155">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-156">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-156">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c40a8-157">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="c40a8-157">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="c40a8-158">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c40a8-158"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-159">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="c40a8-159">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-160">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-160">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-161">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-161">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c40a8-162">要获取或设置的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="c40a8-162">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="c40a8-163">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="c40a8-163">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="c40a8-164">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="c40a8-164">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-165">通过此属性，可以使用以下语法来访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="c40a8-165">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="c40a8-166">C # 语言使用[this](/dotnet/csharp/language-reference/keywords/this)关键字来定义索引器，而不是实现 <xref:System.Collections.IList.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="c40a8-166">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="c40a8-167">Visual Basic 将 <xref:System.Collections.IList.Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="c40a8-167">Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-168">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-168">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-169">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-169">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c40a8-170"><paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="c40a8-170"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c40a8-171">设置了该属性，但 <see cref="T:System.Collections.IList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="c40a8-171">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iList.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c40a8-172">要从 <see cref="T:System.Collections.IList" /> 中删除的对象。</span><span class="sxs-lookup"><span data-stu-id="c40a8-172">The object to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="c40a8-173">从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="c40a8-173">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-174">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="c40a8-174">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c40a8-175">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="c40a8-175">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c40a8-176">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-176">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="c40a8-177">如果在 `value` 中找不到 <xref:System.Collections.IList>，则 <xref:System.Collections.IList>保持不变且不引发异常。</span><span class="sxs-lookup"><span data-stu-id="c40a8-177">If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-178">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-178">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-179">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-179">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c40a8-180"><see cref="T:System.Collections.IList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="c40a8-180">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
<span data-ttu-id="c40a8-181">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c40a8-181">-or-</span></span> 
<span data-ttu-id="c40a8-182"><see cref="T:System.Collections.IList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="c40a8-182">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c40a8-183">如果不 <paramref name="value" /> 在列表中，则该 <see cref="M:System.Collections.IList.Remove(System.Object)" /> 方法不应执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="c40a8-183">If <paramref name="value" /> is not in the list, the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method should do nothing.</span></span> <span data-ttu-id="c40a8-184">具体而言，它不应引发异常。</span><span class="sxs-lookup"><span data-stu-id="c40a8-184">In particular, it should not throw an exception.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c40a8-185">要移除的项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="c40a8-185">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="c40a8-186">移除位于指定索引处的 <see cref="T:System.Collections.IList" /> 项。</span><span class="sxs-lookup"><span data-stu-id="c40a8-186">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c40a8-187">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="c40a8-187">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c40a8-188">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="c40a8-188">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c40a8-189">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-189">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c40a8-190">下面的示例演示 <xref:System.Collections.IList> 接口的实现以创建具有固定大小的简单列表。</span><span class="sxs-lookup"><span data-stu-id="c40a8-190">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="c40a8-191">此代码是接口的更大示例的一部分 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="c40a8-191">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c40a8-192"><paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="c40a8-192"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c40a8-193"><see cref="T:System.Collections.IList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="c40a8-193">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
<span data-ttu-id="c40a8-194">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c40a8-194">-or-</span></span> 
<span data-ttu-id="c40a8-195"><see cref="T:System.Collections.IList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="c40a8-195">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
