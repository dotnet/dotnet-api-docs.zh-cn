<Type Name="IComparer" FullName="System.Collections.IComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f29fd37f96278bc05e779f5a6f55323d3e83d65" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91911813" /></Metadata><TypeSignature Language="C#" Value="public interface IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IComparer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparer" />
  <TypeSignature Language="F#" Value="type IComparer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="31f26-101">提供比较两个对象的方法。</span><span class="sxs-lookup"><span data-stu-id="31f26-101">Exposes a method that compares two objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f26-102">此接口与 <xref:System.Array.Sort%2A?displayProperty=nameWithType> 和方法一起使用 <xref:System.Array.BinarySearch%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="31f26-102">This interface is used in conjunction with the <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Array.BinarySearch%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="31f26-103">它提供了一种方法来自定义集合的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="31f26-103">It provides a way to customize the sort order of a collection.</span></span> <span data-ttu-id="31f26-104"><xref:System.Collections.IComparer.Compare%2A>有关参数和返回值的说明，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="31f26-104">See the <xref:System.Collections.IComparer.Compare%2A> method for notes on parameters and return value.</span></span>  <span data-ttu-id="31f26-105">它的泛型等效项是 <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> 接口。</span><span class="sxs-lookup"><span data-stu-id="31f26-105">Its generic equivalent is the <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> interface.</span></span>   
  
 <span data-ttu-id="31f26-106">此接口的默认实现是 <xref:System.Collections.Comparer> 类。</span><span class="sxs-lookup"><span data-stu-id="31f26-106">The default implementation of this interface is the <xref:System.Collections.Comparer> class.</span></span> <span data-ttu-id="31f26-107">有关此接口的泛型版本，请参阅 <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="31f26-107">For the generic version of this interface, see <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  

<span data-ttu-id="31f26-108">下面的示例使用 <xref:System.Collections.IComparer> 接口对字符串数组进行排序。</span><span class="sxs-lookup"><span data-stu-id="31f26-108">The following example uses the <xref:System.Collections.IComparer> interface to sort a string array.</span></span> <span data-ttu-id="31f26-109">在此示例中， <xref:System.Collections.IComparer.Compare%2A> 使用类实现了方法， <xref:System.Collections.CaseInsensitiveComparer> 以反转数组内容的顺序。</span><span class="sxs-lookup"><span data-stu-id="31f26-109">In this example, the <xref:System.Collections.IComparer.Compare%2A> method is implemented using the <xref:System.Collections.CaseInsensitiveComparer> class to reverse the order of the contents of the array.</span></span>  
  
[!code-csharp[sorting-an-array](~/samples/snippets/csharp/api/system.collections/icomparer/reverse.cs)]
[!code-vb[sorting-an-array](~/samples/snippets/visualbasic/api/system.collections/icomparer/reverse.vb)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Comparer" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Object, y As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Compare(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int" Usage="iComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="31f26-110">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="31f26-110">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="31f26-111">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="31f26-111">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="31f26-112">比较两个对象并返回一个值，该值指示一个对象小于、等于还是大于另一个对象。</span><span class="sxs-lookup"><span data-stu-id="31f26-112">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="31f26-113">一个带符号整数，指示 <paramref name="x" /> 和<paramref name="y" /> 的相对值：</span><span class="sxs-lookup"><span data-stu-id="31f26-113">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />:</span></span><br />   <span data-ttu-id="31f26-114">- 如果小于 0，则 <paramref name="x" /> 小于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="31f26-114">- If less than 0, <paramref name="x" /> is less than <paramref name="y" />.</span></span><br />   <span data-ttu-id="31f26-115">- 如果为 0，则 <paramref name="x" /> 等于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="31f26-115">- If 0, <paramref name="x" /> equals <paramref name="y" />.</span></span><br />   <span data-ttu-id="31f26-116">- 如果大于 0，则 <paramref name="x" /> 大于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="31f26-116">- If greater than 0, <paramref name="x" /> is greater than <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f26-117">首选的实现方法是使用 <xref:System.IComparable.CompareTo%2A> 其中一个参数的方法。</span><span class="sxs-lookup"><span data-stu-id="31f26-117">The preferred implementation is to use the <xref:System.IComparable.CompareTo%2A> method of one of the parameters.</span></span>  
  
 <span data-ttu-id="31f26-118">`null`允许与任何类型进行比较，并且在使用时不会生成异常 <xref:System.IComparable> 。</span><span class="sxs-lookup"><span data-stu-id="31f26-118">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="31f26-119">进行排序时， `null` 视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="31f26-119">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  

<span data-ttu-id="31f26-120">下面的示例使用 <xref:System.Collections.IComparer> 接口对字符串数组进行排序。</span><span class="sxs-lookup"><span data-stu-id="31f26-120">The following example uses the <xref:System.Collections.IComparer> interface to sort a string array.</span></span> <span data-ttu-id="31f26-121">在此示例中， <xref:System.Collections.IComparer.Compare%2A> 使用类实现了方法， <xref:System.Collections.CaseInsensitiveComparer> 以反转数组内容的顺序。</span><span class="sxs-lookup"><span data-stu-id="31f26-121">In this example, the <xref:System.Collections.IComparer.Compare%2A> method is implemented using the <xref:System.Collections.CaseInsensitiveComparer> class to reverse the order of the contents of the array.</span></span>  
  
[!code-csharp[sorting-an-array](~/samples/snippets/csharp/api/system.collections/icomparer/reverse.cs)]
[!code-vb[sorting-an-array](~/samples/snippets/visualbasic/api/system.collections/icomparer/reverse.vb)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31f26-122"><paramref name="x" /> 和 <paramref name="y" /> 都不实现 <see cref="T:System.IComparable" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="31f26-122">Neither <paramref name="x" /> nor <paramref name="y" /> implements the <see cref="T:System.IComparable" /> interface.</span></span>  
  
<span data-ttu-id="31f26-123">- 或 -</span><span class="sxs-lookup"><span data-stu-id="31f26-123">-or-</span></span> 
 <span data-ttu-id="31f26-124"><paramref name="x" /> 和 <paramref name="y" /> 的类型不同，它们都无法处理与另一个进行的比较。</span><span class="sxs-lookup"><span data-stu-id="31f26-124"><paramref name="x" /> and <paramref name="y" /> are of different types and neither one can handle comparisons with the other.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
