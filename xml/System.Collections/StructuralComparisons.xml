<Type Name="StructuralComparisons" FullName="System.Collections.StructuralComparisons">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6b0e4de47db1415a4843799e866ec2f4e588c4d" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94480963" /></Metadata><TypeSignature Language="C#" Value="public static class StructuralComparisons" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StructuralComparisons extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.StructuralComparisons" />
  <TypeSignature Language="VB.NET" Value="Public Class StructuralComparisons" />
  <TypeSignature Language="C++ CLI" Value="public ref class StructuralComparisons abstract sealed" />
  <TypeSignature Language="F#" Value="type StructuralComparisons = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Collections" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于执行两个集合对象的结构化比较的对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.StructuralComparisons>类返回以下两个预定义的比较对象：  
  
-   一个 <xref:System.Collections.IComparer> 实现，该实现可传递给方法（如 <xref:System.Array.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 或） <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 以执行两个对象的结构比较。 它旨在指示第一个对象在排序顺序中是位于第二个对象之前、之后还是与其出现在同一位置。  
  
-   一个 <xref:System.Collections.IEqualityComparer> 实现，该实现可传递给方法（如 <xref:System.Array.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 或） <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 以执行结构相等性比较。  
  
 对象可用于对两个集合对象（如数组或元组对象）执行结构比较或结构相等比较。 在结构比较中，将根据它们的值比较两个对象。 可以根据某些条件对对象进行排序，如果两个对象具有相等的值，则将它们视为相等，而不是因为它们引用相同的物理对象  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StructuralComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IComparer StructuralComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IComparer StructuralComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.StructuralComparisons.StructuralComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StructuralComparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IComparer ^ StructuralComparer { System::Collections::IComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StructuralComparer : System.Collections.IComparer" Usage="System.Collections.StructuralComparisons.StructuralComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可执行两个对象的结构比较的预定义对象。</summary>
        <value>一个用于执行两个集合对象的结构比较的预定义对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Collections.IComparer> 此属性返回的对象传递给集合对象（如或）的比较方法， <xref:System.Array.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> <xref:System.Collections.IComparer.Compare%2A> 则将为数组的每个成员或元组的每个组件调用其方法。 此方法的实现 <xref:System.Collections.IComparer.Compare%2A> 在将集合对象的每个项与另一个集合对象的相应项进行比较时的行为如下：  
  
-   它认为两个项 `null` 相等，并将空项视为小于非空项。  
  
-   如果比较中的第一项可以转换为 <xref:System.Collections.IStructuralComparable> 对象 (换言之，如果它是实现接口的集合对象 <xref:System.Collections.IStructuralComparable>) ，则它将调用 <xref:System.Collections.IStructuralComparable.CompareTo%2A> 方法。  
  
-   如果比较中的第一项无法转换为 <xref:System.Collections.IStructuralComparable> 对象 (换言之，如果它不是实现接口的集合对象 <xref:System.Collections.IStructuralComparable>) ，它将调用 `Comparer.Default.Compare` 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Comparer" />
      </Docs>
    </Member>
    <Member MemberName="StructuralEqualityComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IEqualityComparer StructuralEqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEqualityComparer StructuralEqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StructuralEqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEqualityComparer ^ StructuralEqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StructuralEqualityComparer : System.Collections.IEqualityComparer" Usage="System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个可比较两个对象的结构是否相等的预定义对象。</summary>
        <value>一个用于比较两个集合对象的结构是否相等的预定义对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Collections.IComparer> 此属性返回的对象传递到集合对象的相等比较方法（如 <xref:System.Array.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 或 <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> ）， <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 则将为数组的每个成员或每个元组的每个组件调用其方法。 此方法的实现 <xref:System.Collections.IEqualityComparer.Equals%2A> 在将集合对象的每个项与另一个集合对象的相应项进行比较时的行为如下：  
  
-   如果两个项都为 `null` ，则它会将两个项视为相等。  
  
-   如果一项为 null，但另一项不是，则会将这两个项视为不相等。  
  
-   如果比较中的第一项可以转换为 <xref:System.Collections.IStructuralEquatable> 对象 (换言之，如果它是实现接口的集合对象 <xref:System.Collections.IStructuralEquatable>) ，则它将调用 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 方法。  
  
-   如果比较中的第一项无法转换为 <xref:System.Collections.IStructuralEquatable> 对象 (换言之，如果它不是实现接口的集合对象 <xref:System.Collections.IStructuralEquatable>) ，它将调用该项的 `Equals` 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Comparer" />
      </Docs>
    </Member>
  </Members>
</Type>
