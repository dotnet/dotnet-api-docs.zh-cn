<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0441109ceed85a9b4e3b5fc5d39869b591aabcc6" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91911203" /></Metadata><TypeSignature Language="C#" Value="public class ArrayList : System.Collections.IList" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements IList" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : System::Collections::IList" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICloneable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface ICloneable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IList&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Collections.NonGeneric" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Collections.NonGeneric" FromVersion="4.1.0.0" To="System.Runtime.Extensions" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Collections.NonGeneric" FromVersion="4.1.1.0" To="System.Runtime.Extensions" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Collections.NonGeneric" FromVersion="4.1.2.0" To="System.Runtime.Extensions" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("Count = {Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("Count = {Count}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9f03d-101">使用大小会根据需要动态增加的数组来实现 <see cref="T:System.Collections.IList" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="9f03d-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="9f03d-102">不建议使用 `ArrayList` 类进行新的开发。</span><span class="sxs-lookup"><span data-stu-id="9f03d-102">We don't recommend that you use the `ArrayList` class for new development.</span></span> <span data-ttu-id="9f03d-103">相反，我们建议使用泛型 <xref:System.Collections.Generic.List%601> 类。</span><span class="sxs-lookup"><span data-stu-id="9f03d-103">Instead, we recommend that you use the generic <xref:System.Collections.Generic.List%601> class.</span></span>
> <span data-ttu-id="9f03d-104"><xref:System.Collections.ArrayList>类旨在保存对象的异类集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-104">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="9f03d-105">但是，它并不总是提供最佳性能。</span><span class="sxs-lookup"><span data-stu-id="9f03d-105">However, it does not always offer the best performance.</span></span> <span data-ttu-id="9f03d-106">相反，我们建议执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="9f03d-106">Instead, we recommend the following:</span></span>  
> - <span data-ttu-id="9f03d-107">对于异类对象集合，请使用 `List<Object>` c # 中的 () 或 `List(Of Object)` (Visual Basic) 类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-107">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
> - <span data-ttu-id="9f03d-108">对于同类对象的同类集合，请使用 <xref:System.Collections.Generic.List%601> 类。</span><span class="sxs-lookup"><span data-stu-id="9f03d-108">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
> <span data-ttu-id="9f03d-109">有关这些类的相对性能的讨论，请参阅参考主题中的 [性能注意事项](xref:System.Collections.Generic.List%601#performance-considerations) <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-109">See [Performance Considerations](xref:System.Collections.Generic.List%601#performance-considerations) in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  <span data-ttu-id="9f03d-110">有关使用泛型而非泛型集合类型的一般信息，请参阅 GitHub 上 [不应使用非泛型集合](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-110">See [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub for general information on the use of generic instead of non-generic collection types.</span></span> 
  
 <span data-ttu-id="9f03d-111">不保证会对进行 <xref:System.Collections.ArrayList> 排序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-111">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="9f03d-112">在 <xref:System.Collections.ArrayList> 执行操作之前，必须通过调用其方法来对进行排序， <xref:System.Collections.ArrayList.Sort%2A> 如 <xref:System.Collections.ArrayList.BinarySearch%2A> 需要 <xref:System.Collections.ArrayList> 对进行排序 (如) 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-112">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="9f03d-113">若要维护自动排序为新元素的集合，可以使用 <xref:System.Collections.Generic.SortedSet%601> 类。</span><span class="sxs-lookup"><span data-stu-id="9f03d-113">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="9f03d-114">的容量 <xref:System.Collections.ArrayList> 是可容纳的元素数 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-114">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="9f03d-115">向添加元素时 <xref:System.Collections.ArrayList> ，会根据需要通过重新分配来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-115">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="9f03d-116">可以通过调用 <xref:System.Collections.ArrayList.TrimToSize%2A> 或显式设置属性来减少容量 <xref:System.Collections.ArrayList.Capacity%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-116">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="9f03d-117">**仅 .NET Framework：** 对于非常大的 <xref:System.Collections.ArrayList> 对象，可以通过 `enabled` [`<gcAllowVeryLargeObjects>`](/dotnet/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element) `true` 在运行时环境中将配置元素的属性设置为，来将64位系统上的最大容量增加到2000000000个元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-117">**.NET Framework only:** For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](/dotnet/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="9f03d-118">可以使用整数索引访问此集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-118">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="9f03d-119">此集合中的索引从零开始。</span><span class="sxs-lookup"><span data-stu-id="9f03d-119">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="9f03d-120"><xref:System.Collections.ArrayList>集合接受 `null` 为有效的值。</span><span class="sxs-lookup"><span data-stu-id="9f03d-120">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="9f03d-121">它还允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-121">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="9f03d-122">不支持使用多维数组作为集合中的元素 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-122">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-123">下面的示例演示如何创建和初始化 <xref:System.Collections.ArrayList> ，以及如何显示其值。</span><span class="sxs-lookup"><span data-stu-id="9f03d-123">The following example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="9f03d-124"><see langword="Shared" />此类型) 成员 Visual Basic 的公共静态 (是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-124">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="9f03d-125">但不保证所有实例成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-125">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="9f03d-126"><see cref="T:System.Collections.ArrayList" />只要不修改集合，就可以同时支持多个读取器。</span><span class="sxs-lookup"><span data-stu-id="9f03d-126">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="9f03d-127">若要保证的线程安全 <see cref="T:System.Collections.ArrayList" /> ，必须通过方法返回的包装执行所有操作 <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-127">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span></span>  
  
<span data-ttu-id="9f03d-128">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9f03d-128">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9f03d-129">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-129">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9f03d-130">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-130">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
    <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-131">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-131">Performing Culture-Insensitive String Operations in Collections</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-132">初始化 <see cref="T:System.Collections.ArrayList" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9f03d-132">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f03d-133">初始化 <see cref="T:System.Collections.ArrayList" /> 类的新实例，该实例为空并且具有默认初始容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-133">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-134">的容量 <xref:System.Collections.ArrayList> 是可容纳的元素数 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-134">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="9f03d-135">当向添加元素时 <xref:System.Collections.ArrayList> ，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-135">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9f03d-136">如果集合的大小可为估算值，则指定初始容量后，无需在将元素添加到时执行多个大小调整操作 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-136">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-137">此构造函数是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-137">This constructor is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : System.Collections.ICollection -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList c" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="9f03d-138">其元素已复制到新列表的 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-138">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span></span></param>
        <summary><span data-ttu-id="9f03d-139">初始化 <see cref="T:System.Collections.ArrayList" /> 类的新实例，该类包含从指定集合复制的元素，并具有与复制的元素数相同的初始容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-139">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-140">的容量 <xref:System.Collections.ArrayList> 是可容纳的元素数 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-140">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="9f03d-141">当向添加元素时 <xref:System.Collections.ArrayList> ，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-141">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9f03d-142">如果集合的大小可为估算值，则指定初始容量后，无需在将元素添加到时执行多个大小调整操作 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-142">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-143">将元素复制到，其 <xref:System.Collections.ArrayList> 顺序与的读取顺序相同 <xref:System.Collections.IEnumerator> <xref:System.Collections.ICollection> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-143">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="9f03d-144">此构造函数是一个 `O(n)` 操作，其中 `n` 是中的元素数 `c` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-144">This constructor is an `O(n)` operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-145"><paramref name="c" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-145"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : int -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="9f03d-146">新列表最初可以存储的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-146">The number of elements that the new list can initially store.</span></span></param>
        <summary><span data-ttu-id="9f03d-147">初始化 <see cref="T:System.Collections.ArrayList" /> 类的新实例，该实例为空并且具有指定的初始容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-147">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-148">的容量 <xref:System.Collections.ArrayList> 是可容纳的元素数 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-148">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="9f03d-149">当向添加元素时 <xref:System.Collections.ArrayList> ，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-149">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9f03d-150">如果集合的大小可为估算值，则指定初始容量后，无需在将元素添加到时执行多个大小调整操作 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-150">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-151">此构造函数是一个 `O(n)` 操作，其中 `n` 是 `capacity` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-151">This constructor is an `O(n)` operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-152"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-152"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Adapter : System.Collections.IList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Adapter list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="9f03d-153">要包装的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-153">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="9f03d-154">为特定 <see cref="T:System.Collections.IList" /> 创建 <see cref="T:System.Collections.ArrayList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-154">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-155"><see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Collections.ArrayList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-155">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-156"><xref:System.Collections.ArrayList.Adapter%2A> 不会复制的内容 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-156"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="9f03d-157">相反，它只会创建一个 <xref:System.Collections.ArrayList> 包装， <xref:System.Collections.IList> 因此对的更改 <xref:System.Collections.IList> 也会影响 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-157">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-158"><xref:System.Collections.ArrayList>类提供泛型 <xref:System.Collections.ArrayList.Reverse%2A> <xref:System.Collections.ArrayList.BinarySearch%2A> 和 <xref:System.Collections.ArrayList.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="9f03d-158">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="9f03d-159">此包装可能是在上使用这些方法的方法 <xref:System.Collections.IList> ; 但是，通过包装执行这些泛型操作可能不如直接在上应用的操作有效 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-159">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="9f03d-160">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-160">This method is an `O(1)` operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="9f03d-161">版本兼容性</span><span class="sxs-lookup"><span data-stu-id="9f03d-161">Version Compatibility</span></span>  
 <span data-ttu-id="9f03d-162">在 .NET Framework 版本1.0 和1.1 中， <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> 对包装器调用方法重载 <xref:System.Collections.ArrayList> 返回一个枚举器，该枚举器将第二个参数视为上限而不是计数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-162">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="9f03d-163">在中， [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 第二个参数被正确地视为计数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-163">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-164"><paramref name="list" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-164"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="arrayList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-165">要添加到 <see cref="T:System.Object" /> 的结尾处的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-165">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-166">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-166">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-167">将对象添加到 <see cref="T:System.Collections.ArrayList" /> 的结尾处。</span><span class="sxs-lookup"><span data-stu-id="9f03d-167">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-168">已添加 <paramref name="value" /> 的 <see cref="T:System.Collections.ArrayList" /> 索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-168">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-169"><xref:System.Collections.ArrayList> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-169"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="9f03d-170">如果 <xref:System.Collections.ArrayList.Count%2A> 已 <xref:System.Collections.ArrayList.Capacity%2A> 为 equals，则 <xref:System.Collections.ArrayList> 通过自动重新分配内部数组，并将现有元素复制到新数组，然后再添加新元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-170">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="9f03d-171">如果 <xref:System.Collections.ArrayList.Count%2A> 小于 <xref:System.Collections.ArrayList.Capacity%2A> ，则此方法为 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-171">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an `O(1)` operation.</span></span> <span data-ttu-id="9f03d-172">如果需要增加容量以容纳新元素，则此方法将成为一个 `O(n)` 操作，其中 `n` 为 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-172">If the capacity needs to be increased to accommodate the new element, this method becomes an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-173">下面的代码示例演示如何向中添加元素 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-173">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-174"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-174">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-175">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-175">-or-</span></span> 
<span data-ttu-id="9f03d-176"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-176">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Collections.ICollection -&gt; unit&#xA;override this.AddRange : System.Collections.ICollection -&gt; unit" Usage="arrayList.AddRange c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="9f03d-177"><see cref="T:System.Collections.ICollection" />，其元素应添加到 <see cref="T:System.Collections.ArrayList" /> 的末尾。</span><span class="sxs-lookup"><span data-stu-id="9f03d-177">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-178">集合本身不能为 <see langword="null" />，但它可以包含为 <see langword="null" /> 的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-178">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-179">将 <see cref="T:System.Collections.ICollection" /> 的元素添加到 <see cref="T:System.Collections.ArrayList" /> 的末尾。</span><span class="sxs-lookup"><span data-stu-id="9f03d-179">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-180"><xref:System.Collections.ArrayList> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-180"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="9f03d-181">中的元素的顺序 <xref:System.Collections.ICollection> 保留在中 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-181">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-182">如果新 <xref:System.Collections.ArrayList.Count%2A> (当前 <xref:System.Collections.ArrayList.Count%2A> 加上集合的大小) 将大于 <xref:System.Collections.ArrayList.Capacity%2A> ，则 <xref:System.Collections.ArrayList> 通过自动重新分配内部数组以容纳新元素，并将现有元素复制到新数组中，然后再添加新元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-182">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="9f03d-183">如果在 <xref:System.Collections.ArrayList> 不增加的情况下可以容纳新元素 <xref:System.Collections.ArrayList.Capacity%2A> ，则此方法是一个 `O(n)` 操作，其中 `n` 是要添加的元素的数目。</span><span class="sxs-lookup"><span data-stu-id="9f03d-183">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an `O(n)` operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="9f03d-184">如果需要增加容量以容纳新元素，则此方法将成为一个 `O(n + m)` 操作，其中 `n` 是要添加的元素的数目，并且 `m` 为 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-184">If the capacity needs to be increased to accommodate the new elements, this method becomes an `O(n + m)` operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-185">下面的代码示例演示如何向中添加元素 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-185">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-186"><paramref name="c" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-186"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-187"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-187">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-188">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-188">-or-</span></span> 
<span data-ttu-id="9f03d-189"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-189">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-190">使用对分检索算法在已排序的 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中查找特定元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-190">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj -&gt; int&#xA;override this.BinarySearch : obj -&gt; int" Usage="arrayList.BinarySearch value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-191">要查找的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-191">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="9f03d-192">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-192">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-193">使用默认的比较器在整个已排序的 <see cref="T:System.Collections.ArrayList" /> 中搜索元素，并返回该元素从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-193">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="9f03d-194">如果找到 <paramref name="value" />，则为排序的 <see cref="T:System.Collections.ArrayList" /> 中从零开始的 <paramref name="value" /> 索引；否则为一个负数，它是大于 <paramref name="value" /> 的下一个元素索引的按位求补，或者，如果没有更大的元素，则为 <see cref="P:System.Collections.ArrayList.Count" /> 的按位求补。</span><span class="sxs-lookup"><span data-stu-id="9f03d-194">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-195">`value`参数和的每个元素都 <xref:System.Collections.ArrayList> 必须实现 <xref:System.IComparable> 接口，该接口用于比较。</span><span class="sxs-lookup"><span data-stu-id="9f03d-195">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="9f03d-196">的元素 <xref:System.Collections.ArrayList> 必须已根据实现定义的排序顺序按递增值排序 <xref:System.IComparable> ; 否则，结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="9f03d-196">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="9f03d-197">`null`允许与任何类型进行比较，并且在使用时不会生成异常 <xref:System.IComparable> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-197">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="9f03d-198">进行排序时， `null` 视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-198">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="9f03d-199">如果 <xref:System.Collections.ArrayList> 包含多个具有相同值的元素，则此方法只返回其中一个匹配项，并且它可能会返回任何一个匹配项，而不一定是第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="9f03d-199">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="9f03d-200">如果不 <xref:System.Collections.ArrayList> 包含指定的值，则该方法返回一个负整数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-200">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="9f03d-201">可以将按位求补运算 (~) 应用于此负整数，以获取大于搜索值的第一个元素的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-201">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="9f03d-202">将值插入到时 <xref:System.Collections.ArrayList> ，应将此索引用作插入点来维护排序顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-202">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="9f03d-203">此方法是一个 `O(log n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-203">This method is an `O(log n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-204">下面的代码示例演示如何使用 <xref:System.Collections.ArrayList.BinarySearch%2A> 在中查找特定的对象 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-204">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-205"><paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素均未实现 <see cref="T:System.IComparable" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="9f03d-205">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f03d-206"><paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素不是同一类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-206"><paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-207">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-207">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-208">要查找的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-208">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="9f03d-209">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-209">The value can be <see langword="null" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="9f03d-210">比较元素时要使用的 <see cref="T:System.Collections.IComparer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-210">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="9f03d-211">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-211">-or-</span></span> 
 <span data-ttu-id="9f03d-212">如果为 <see langword="null" />，则使用默认比较器，即每个元素的 <see cref="T:System.IComparable" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-212"><see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="9f03d-213">使用指定的比较器在整个已排序的 <see cref="T:System.Collections.ArrayList" /> 中搜索元素，并返回该元素从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-213">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="9f03d-214">如果找到 <paramref name="value" />，则为排序的 <see cref="T:System.Collections.ArrayList" /> 中从零开始的 <paramref name="value" /> 索引；否则为一个负数，它是大于 <paramref name="value" /> 的下一个元素索引的按位求补，或者，如果没有更大的元素，则为 <see cref="P:System.Collections.ArrayList.Count" /> 的按位求补。</span><span class="sxs-lookup"><span data-stu-id="9f03d-214">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-215">比较器自定义元素的比较方式。</span><span class="sxs-lookup"><span data-stu-id="9f03d-215">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="9f03d-216">例如，可以将 <xref:System.Collections.CaseInsensitiveComparer> 实例用作比较器来执行不区分大小写的字符串搜索。</span><span class="sxs-lookup"><span data-stu-id="9f03d-216">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="9f03d-217">如果 `comparer` 提供了，则使用指定的实现将的元素 <xref:System.Collections.ArrayList> 与指定的值进行比较 <xref:System.Collections.IComparer> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-217">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="9f03d-218">的元素 <xref:System.Collections.ArrayList> 必须已根据定义的排序顺序按递增的值排序 `comparer` ; 否则，结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="9f03d-218">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="9f03d-219">如果 `comparer` 为 `null` ，则使用 <xref:System.IComparable> 由元素本身或指定的值提供的实现进行比较。</span><span class="sxs-lookup"><span data-stu-id="9f03d-219">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="9f03d-220">的元素 <xref:System.Collections.ArrayList> 必须已根据实现定义的排序顺序按递增值排序 <xref:System.IComparable> ; 否则，结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="9f03d-220">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="9f03d-221">`null`允许与任何类型进行比较，并且在使用时不会生成异常 <xref:System.IComparable> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-221">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="9f03d-222">进行排序时， `null` 视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-222">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="9f03d-223">如果 <xref:System.Collections.ArrayList> 包含多个具有相同值的元素，则此方法只返回其中一个匹配项，并且它可能会返回任何一个匹配项，而不一定是第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="9f03d-223">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="9f03d-224">如果不 <xref:System.Collections.ArrayList> 包含指定的值，则该方法返回一个负整数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-224">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="9f03d-225">可以将按位求补运算 (~) 应用于此负整数，以获取大于搜索值的第一个元素的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-225">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="9f03d-226">将值插入到时 <xref:System.Collections.ArrayList> ，应将此索引用作插入点来维护排序顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-226">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="9f03d-227">此方法是一个 `O(log n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-227">This method is an `O(log n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-228">下面的示例创建了 <xref:System.Collections.ArrayList> 彩色动物的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-228">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="9f03d-229">提供的 <xref:System.Collections.IComparer> 执行二进制搜索的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="9f03d-229">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="9f03d-230">将显示迭代搜索和二进制搜索的结果。</span><span class="sxs-lookup"><span data-stu-id="9f03d-230">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-231"><paramref name="comparer" /> 为 <see langword="null" />，并且 <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素均不实现 <see cref="T:System.IComparable" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="9f03d-231"><paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f03d-232"><paramref name="comparer" /> 为 <see langword="null" />，并且 <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-232"><paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-233">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-233">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (index, count, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-234">要搜索范围的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-234">The zero-based starting index of the range to search.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-235">要搜索的范围的长度。</span><span class="sxs-lookup"><span data-stu-id="9f03d-235">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="9f03d-236">要查找的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-236">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="9f03d-237">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-237">The value can be <see langword="null" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="9f03d-238">比较元素时要使用的 <see cref="T:System.Collections.IComparer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-238">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="9f03d-239">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-239">-or-</span></span> 
 <span data-ttu-id="9f03d-240">如果为 <see langword="null" />，则使用默认比较器，即每个元素的 <see cref="T:System.IComparable" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-240"><see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="9f03d-241">使用指定的比较器在已排序 <see cref="T:System.Collections.ArrayList" /> 的某个元素范围中搜索元素，并返回该元素从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-241">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="9f03d-242">如果找到 <paramref name="value" />，则为排序的 <see cref="T:System.Collections.ArrayList" /> 中从零开始的 <paramref name="value" /> 索引；否则为一个负数，它是大于 <paramref name="value" /> 的下一个元素索引的按位求补，或者，如果没有更大的元素，则为 <see cref="P:System.Collections.ArrayList.Count" /> 的按位求补。</span><span class="sxs-lookup"><span data-stu-id="9f03d-242">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-243">比较器自定义元素的比较方式。</span><span class="sxs-lookup"><span data-stu-id="9f03d-243">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="9f03d-244">例如，可以将 <xref:System.Collections.CaseInsensitiveComparer> 实例用作比较器来执行不区分大小写的字符串搜索。</span><span class="sxs-lookup"><span data-stu-id="9f03d-244">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="9f03d-245">如果 `comparer` 提供了，则使用指定的实现将的元素 <xref:System.Collections.ArrayList> 与指定的值进行比较 <xref:System.Collections.IComparer> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-245">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="9f03d-246">的元素 <xref:System.Collections.ArrayList> 必须已根据定义的排序顺序按递增的值排序 `comparer` ; 否则，结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="9f03d-246">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="9f03d-247">如果 `comparer` 为 `null` ，则使用 <xref:System.IComparable> 由元素本身或指定的值提供的实现进行比较。</span><span class="sxs-lookup"><span data-stu-id="9f03d-247">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="9f03d-248">的元素 <xref:System.Collections.ArrayList> 必须已根据实现定义的排序顺序按递增值排序 <xref:System.IComparable> ; 否则，结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="9f03d-248">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="9f03d-249">`null`允许与任何类型进行比较，并且在使用时不会生成异常 <xref:System.IComparable> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-249">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="9f03d-250">进行排序时， `null` 视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-250">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="9f03d-251">如果 <xref:System.Collections.ArrayList> 包含多个具有相同值的元素，则此方法只返回其中一个匹配项，并且它可能会返回任何一个匹配项，而不一定是第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="9f03d-251">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="9f03d-252">如果不 <xref:System.Collections.ArrayList> 包含指定的值，则该方法返回一个负整数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-252">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="9f03d-253">可以将按位求补运算 (~) 应用于此负整数，以获取大于搜索值的第一个元素的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-253">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="9f03d-254">将值插入到时 <xref:System.Collections.ArrayList> ，应将此索引用作插入点来维护排序顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-254">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="9f03d-255">此方法是一个 `O(log n)` 操作，其中 `n` 是 `count` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-255">This method is an `O(log n)` operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-256"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <see cref="T:System.Collections.ArrayList" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-256"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="9f03d-257">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-257">-or-</span></span> 
 <span data-ttu-id="9f03d-258"><paramref name="comparer" /> 为 <see langword="null" />，并且 <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素均不实现 <see cref="T:System.IComparable" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="9f03d-258"><paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f03d-259"><paramref name="comparer" /> 为 <see langword="null" />，并且 <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-259"><paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-260"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-260"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-261">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-261">-or-</span></span> 
 <span data-ttu-id="9f03d-262"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-262"><paramref name="count" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-263">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-263">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.ArrayList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f03d-264">获取或设置 <see cref="T:System.Collections.ArrayList" /> 可包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-264">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span></span></summary>
        <value><span data-ttu-id="9f03d-265"><see cref="T:System.Collections.ArrayList" /> 可包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-265">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-266"><xref:System.Collections.ArrayList.Capacity%2A> 可以存储的元素数 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-266"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="9f03d-267"><xref:System.Collections.ArrayList.Count%2A> 实际在中的元素的数目 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-267"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-268"><xref:System.Collections.ArrayList.Capacity%2A> 始终大于或等于 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-268"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="9f03d-269">如果 <xref:System.Collections.ArrayList.Count%2A> 在 <xref:System.Collections.ArrayList.Capacity%2A> 添加元素时超过，则会通过在复制旧元素并添加新元素之前重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-269">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="9f03d-270">可以通过调用 <xref:System.Collections.ArrayList.TrimToSize%2A> 或显式设置属性来减少容量 <xref:System.Collections.ArrayList.Capacity%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-270">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="9f03d-271">如果 <xref:System.Collections.ArrayList.Capacity%2A> 显式设置的值，则还会重新分配内部数组以容纳指定的容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-271">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="9f03d-272">检索此属性的值是一个 `O(1)` 操作; 设置属性是一个 `O(n)` 操作，其中 `n` 是新容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-272">Retrieving the value of this property is an `O(1)` operation; setting the property is an `O(n)` operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-273"><see cref="P:System.Collections.ArrayList.Capacity" /> 已设置为一个小于 <see cref="P:System.Collections.ArrayList.Count" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="9f03d-273"><see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="9f03d-274">系统上没有足够的可用内存。</span><span class="sxs-lookup"><span data-stu-id="9f03d-274">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="arrayList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f03d-275">从 <see cref="T:System.Collections.ArrayList" /> 中移除所有元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-275">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-276"><xref:System.Collections.ArrayList.Count%2A> 将设置为零，同时还会释放集合元素中其他对象的引用。</span><span class="sxs-lookup"><span data-stu-id="9f03d-276"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="9f03d-277"><xref:System.Collections.ArrayList.Capacity%2A> 保持不变。</span><span class="sxs-lookup"><span data-stu-id="9f03d-277"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="9f03d-278">若要重置的容量 <xref:System.Collections.ArrayList> ，请 <xref:System.Collections.ArrayList.TrimToSize%2A> 直接调用或设置 <xref:System.Collections.ArrayList.Capacity%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9f03d-278">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="9f03d-279">修整空会将的 <xref:System.Collections.ArrayList> 容量设置 <xref:System.Collections.ArrayList> 为默认容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-279">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="9f03d-280">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-280">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-281">下面的代码示例演示如何剪裁的未使用部分 <xref:System.Collections.ArrayList> 以及如何清除的值 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-281">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-282"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-282">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-283">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-283">-or-</span></span> 
<span data-ttu-id="9f03d-284"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-284">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="arrayList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f03d-285">创建 <see cref="T:System.Collections.ArrayList" /> 的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="9f03d-285">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-286"><see cref="T:System.Collections.ArrayList" /> 的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="9f03d-286">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-287">集合的浅表副本仅复制集合的元素，无论它们是引用类型还是值类型，但不复制引用引用的对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-287">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="9f03d-288">新集合中的引用指向原始集合中的引用所指向的相同对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-288">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="9f03d-289">与此相反，集合的深层副本会复制元素以及元素直接或间接引用的所有内容。</span><span class="sxs-lookup"><span data-stu-id="9f03d-289">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="9f03d-290">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-290">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="arrayList.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9f03d-291">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-291">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-292">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-292">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-293">确定某元素是否在 <see cref="T:System.Collections.ArrayList" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9f03d-293">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-294">如果在 <see langword="true" /> 中找到 <paramref name="item" />，则为 <see cref="T:System.Collections.ArrayList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-294"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-295">此方法执行线性搜索;因此，此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-295">This method performs a linear search; therefore, this method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="9f03d-296">此方法通过调用来确定相等性 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-296">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f03d-297">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="9f03d-297">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="9f03d-298">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-298">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-299">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-299">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-300">将 <see cref="T:System.Collections.ArrayList" /> 或它的一部分复制到一维数组。</span><span class="sxs-lookup"><span data-stu-id="9f03d-300">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (array As Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array -&gt; unit&#xA;override this.CopyTo : Array -&gt; unit" Usage="arrayList.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9f03d-301">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ArrayList" /> 复制的元素的目标。</span><span class="sxs-lookup"><span data-stu-id="9f03d-301">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-302"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-302">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <summary><span data-ttu-id="9f03d-303">从目标数组的开头开始，将整个 <see cref="T:System.Collections.ArrayList" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-303">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-304">指定的数组必须是兼容的类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-304">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="9f03d-305">此方法使用 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 复制元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-305">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="9f03d-306">元素 <xref:System.Array> 按枚举器循环访问的相同顺序复制到中 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-306">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-307">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-307">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-308">下面的代码示例演示如何将复制 <xref:System.Collections.ArrayList> 到一维中 <xref:System.Array?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-308">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-309"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-309"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-310"><paramref name="array" /> 是多维的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-310"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="9f03d-311">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-311">-or-</span></span> 
<span data-ttu-id="9f03d-312">源 <see cref="T:System.Collections.ArrayList" /> 中的元素个数大于目标 <paramref name="array" /> 可以包含的元素个数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-312">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9f03d-313">无法自动将源 <see cref="T:System.Collections.ArrayList" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-313">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (array As Array, arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrayList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9f03d-314">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ArrayList" /> 复制的元素的目标。</span><span class="sxs-lookup"><span data-stu-id="9f03d-314">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-315"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-315">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="9f03d-316"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="9f03d-316">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="9f03d-317">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.ArrayList" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-317">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-318">指定的数组必须是兼容的类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-318">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="9f03d-319">此方法使用 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 复制元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-319">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="9f03d-320">元素 <xref:System.Array> 按枚举器循环访问的相同顺序复制到中 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-320">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-321">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-321">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-322">下面的代码示例演示如何将复制 <xref:System.Collections.ArrayList> 到一维中 <xref:System.Array?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-322">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-323"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-323"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-324"><paramref name="arrayIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-324"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-325"><paramref name="array" /> 是多维的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-325"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="9f03d-326">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-326">-or-</span></span> 
<span data-ttu-id="9f03d-327">源 <see cref="T:System.Collections.ArrayList" /> 中的元素个数大于从 <paramref name="arrayIndex" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span><span class="sxs-lookup"><span data-stu-id="9f03d-327">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9f03d-328">无法自动将源 <see cref="T:System.Collections.ArrayList" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-328">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (index As Integer, array As Array, arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int * Array * int * int -&gt; unit&#xA;override this.CopyTo : int * Array * int * int -&gt; unit" Usage="arrayList.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-329">复制即从源 <see cref="T:System.Collections.ArrayList" /> 中从零开始的索引开始。</span><span class="sxs-lookup"><span data-stu-id="9f03d-329">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span></span></param>
        <param name="array"><span data-ttu-id="9f03d-330">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ArrayList" /> 复制的元素的目标。</span><span class="sxs-lookup"><span data-stu-id="9f03d-330">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-331"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-331">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="9f03d-332"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="9f03d-332">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-333">要复制的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-333">The number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="9f03d-334">从目标数组的指定索引处开始，将 <see cref="T:System.Collections.ArrayList" /> 中某个范围的元素复制到兼容的一维数组  <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-334">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-335">指定的数组必须是兼容的类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-335">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="9f03d-336">此方法使用 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 复制元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-336">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="9f03d-337">元素 <xref:System.Array> 按枚举器循环访问的相同顺序复制到中 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-337">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-338">此方法是一个 `O(n)` 操作，其中 `n` 是 `count` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-338">This method is an `O(n)` operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-339">下面的代码示例演示如何将复制 <xref:System.Collections.ArrayList> 到一维中 <xref:System.Array?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-339">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-340"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-340"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-341"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-341"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-342">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-342">-or-</span></span> 
 <span data-ttu-id="9f03d-343"><paramref name="arrayIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-343"><paramref name="arrayIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-344">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-344">-or-</span></span> 
 <span data-ttu-id="9f03d-345"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-345"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-346"><paramref name="array" /> 是多维的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-346"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="9f03d-347">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-347">-or-</span></span> 
 <span data-ttu-id="9f03d-348"><paramref name="index" /> 等于或大于源 <see cref="T:System.Collections.ArrayList" /> 的 <see cref="P:System.Collections.ArrayList.Count" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-348"><paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="9f03d-349">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-349">-or-</span></span> 
<span data-ttu-id="9f03d-350">从 <paramref name="index" /> 到源 <see cref="T:System.Collections.ArrayList" /> 的末尾的元素数大于从 <paramref name="arrayIndex" /> 到目标 <paramref name="array" /> 的末尾的可用空间。</span><span class="sxs-lookup"><span data-stu-id="9f03d-350">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9f03d-351">无法自动将源 <see cref="T:System.Collections.ArrayList" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-351">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ArrayList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f03d-352">获取 <see cref="T:System.Collections.ArrayList" /> 中实际包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-352">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <value><span data-ttu-id="9f03d-353"><see cref="T:System.Collections.ArrayList" /> 中实际包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-353">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-354"><xref:System.Collections.ArrayList.Capacity%2A> 可以存储的元素数 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-354"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="9f03d-355"><xref:System.Collections.ArrayList.Count%2A> 实际在中的元素的数目 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-355"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-356"><xref:System.Collections.ArrayList.Capacity%2A> 始终大于或等于 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-356"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="9f03d-357">如果 <xref:System.Collections.ArrayList.Count%2A> 在 <xref:System.Collections.ArrayList.Capacity%2A> 添加元素时超过，则会通过在复制旧元素并添加新元素之前重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-357">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="9f03d-358">检索此属性的值是一个 `O(1)` 运算。</span><span class="sxs-lookup"><span data-stu-id="9f03d-358">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-359">返回具有固定大小的列表包装，其中的元素允许修改，但不允许添加或移除。</span><span class="sxs-lookup"><span data-stu-id="9f03d-359">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="9f03d-360">要包装的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-360">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="9f03d-361">返回具有固定大小的 <see cref="T:System.Collections.ArrayList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-361">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span></span></summary>
        <returns><span data-ttu-id="9f03d-362">具有固定大小的 <see cref="T:System.Collections.ArrayList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-362">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-363">此包装可用于阻止从原始项中进行添加和删除 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-363">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="9f03d-364">仍可修改或替换元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-364">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="9f03d-365">具有固定大小的集合就是一个集合，其中包含阻止添加和移除元素的包装;因此，如果对基础集合进行了更改，包括添加或删除元素，则固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="9f03d-365">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9f03d-366">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-366">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-367">下面的代码示例演示如何创建周围固定大小的包装 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-367">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-368"><paramref name="list" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-368"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="9f03d-369">要包装的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-369">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="9f03d-370">返回具有固定大小的 <see cref="T:System.Collections.IList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-370">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span></span></summary>
        <returns><span data-ttu-id="9f03d-371">具有固定大小的 <see cref="T:System.Collections.IList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-371">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-372">此包装可用于阻止从原始项中进行添加和删除 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-372">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="9f03d-373">仍可修改或替换元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-373">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="9f03d-374">具有固定大小的集合就是一个集合，其中包含阻止添加和移除元素的包装;因此，如果对基础集合进行了更改，包括添加或删除元素，则固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="9f03d-374">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9f03d-375">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-375">This method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-376"><paramref name="list" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-376"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-377">返回循环访问 <see cref="T:System.Collections.ArrayList" /> 的枚举数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-377">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f03d-378">返回用于整个 <see cref="T:System.Collections.ArrayList" /> 的枚举数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-378">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-379">用于整个 <see cref="T:System.Collections.ArrayList" /> 的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-379">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-380">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="9f03d-380">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="9f03d-381">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-381">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="9f03d-382">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-382">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9f03d-383">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="9f03d-383">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9f03d-384"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="9f03d-384"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="9f03d-385">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="9f03d-385">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="9f03d-386">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-386">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="9f03d-387">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-387"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="9f03d-388"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-388"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="9f03d-389">如果 <xref:System.Collections.IEnumerator.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-389">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="9f03d-390">当枚举器位于此位置时，对的后续调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 也将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-390">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="9f03d-391">如果最后一次调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` ， <xref:System.Collections.IEnumerator.Current%2A> 则未定义。</span><span class="sxs-lookup"><span data-stu-id="9f03d-391">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="9f03d-392">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="9f03d-392">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="9f03d-393">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="9f03d-393">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9f03d-394">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-394">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="9f03d-395">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9f03d-395">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="9f03d-396">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-396">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="9f03d-397">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="9f03d-397">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="9f03d-398">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-398">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-399">下面的示例获取的枚举器 <xref:System.Collections.ArrayList> ，以及中某个元素范围的枚举器 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-399">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : int * int -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : int * int -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-400">枚举器应引用的 <see cref="T:System.Collections.ArrayList" /> 部分从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-400">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-401">枚举器应引用的 <see cref="T:System.Collections.ArrayList" /> 部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-401">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span></span></param>
        <summary><span data-ttu-id="9f03d-402">返回 <see cref="T:System.Collections.ArrayList" /> 中元素范围的枚举器。</span><span class="sxs-lookup"><span data-stu-id="9f03d-402">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-403"><see cref="T:System.Collections.ArrayList" /> 中指定的元素范围的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-403">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-404">`foreach`C # 语言的语句 `for each` 在 Visual C++ 中 (， `For Each` Visual Basic) 隐藏了枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="9f03d-404">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="9f03d-405">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-405">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="9f03d-406">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-406">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9f03d-407">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="9f03d-407">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9f03d-408"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="9f03d-408"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="9f03d-409">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="9f03d-409">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="9f03d-410">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-410">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="9f03d-411">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-411"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="9f03d-412"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-412"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="9f03d-413">如果 <xref:System.Collections.IEnumerator.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-413">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="9f03d-414">当枚举器位于此位置时，对的后续调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 也将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-414">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="9f03d-415">如果最后一次调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` ， <xref:System.Collections.IEnumerator.Current%2A> 则未定义。</span><span class="sxs-lookup"><span data-stu-id="9f03d-415">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="9f03d-416">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="9f03d-416">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="9f03d-417">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="9f03d-417">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9f03d-418">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-418">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="9f03d-419">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9f03d-419">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="9f03d-420">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-420">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="9f03d-421">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="9f03d-421">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="9f03d-422">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-422">This method is an `O(1)` operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="9f03d-423">版本兼容性</span><span class="sxs-lookup"><span data-stu-id="9f03d-423">Version Compatibility</span></span>  
 <span data-ttu-id="9f03d-424">在 .NET Framework 版本1.0 和1.1 中，方法返回的包装器的枚举器将 <xref:System.Collections.ArrayList> <xref:System.Collections.ArrayList.Adapter%2A> 第二个参数视为上限而不是计数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-424">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="9f03d-425">在中， [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 第二个参数被正确地视为计数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-425">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-426">下面的示例获取的枚举器 <xref:System.Collections.ArrayList> ，以及中某个元素范围的枚举器 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-426">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-427"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-427"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-428">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-428">-or-</span></span> 
 <span data-ttu-id="9f03d-429"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-429"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-430"><paramref name="index" /> 和 <paramref name="count" /> 未在 <see cref="T:System.Collections.ArrayList" /> 中指定有效范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-430"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetRange : int * int -&gt; System.Collections.ArrayList&#xA;override this.GetRange : int * int -&gt; System.Collections.ArrayList" Usage="arrayList.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-431">范围开始处的从零开始的 <see cref="T:System.Collections.ArrayList" /> 索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-431">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-432">范围中的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-432">The number of elements in the range.</span></span></param>
        <summary><span data-ttu-id="9f03d-433">返回一个 <see cref="T:System.Collections.ArrayList" />，它表示源 <see cref="T:System.Collections.ArrayList" /> 中的元素子集。</span><span class="sxs-lookup"><span data-stu-id="9f03d-433">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-434">一个 <see cref="T:System.Collections.ArrayList" />，它表示源 <see cref="T:System.Collections.ArrayList" /> 中的元素子集。</span><span class="sxs-lookup"><span data-stu-id="9f03d-434">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-435">此方法不创建元素的副本。</span><span class="sxs-lookup"><span data-stu-id="9f03d-435">This method does not create copies of the elements.</span></span> <span data-ttu-id="9f03d-436">新的 <xref:System.Collections.ArrayList> 只是进入源的视图窗口 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-436">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="9f03d-437">但是， <xref:System.Collections.ArrayList> 必须通过此视图窗口完成对源的所有后续更改 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-437">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="9f03d-438">如果直接对源进行更改，则 <xref:System.Collections.ArrayList> "视图" 窗口将 <xref:System.Collections.ArrayList> 失效，对其执行的任何操作都将返回 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-438">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="9f03d-439">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-439">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-440">下面的代码示例演示如何设置和获取中的元素范围 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-440">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-441"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-441"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-442">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-442">-or-</span></span> 
 <span data-ttu-id="9f03d-443"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-443"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-444"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <see cref="T:System.Collections.ArrayList" /> 中元素的有效范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-444"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-445">返回 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中某个值的第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-445">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="arrayList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-446">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-446">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-447">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-447">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-448">搜索指定的 <see cref="T:System.Object" />，并返回整个 <see cref="T:System.Collections.ArrayList" /> 中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-448">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-449">如果找到，则为整个 <paramref name="value" /> 中 <see cref="T:System.Collections.ArrayList" /> 第一个匹配项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-449">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-450"><xref:System.Collections.ArrayList>向前搜索从第一个元素开始，到最后一个元素结束。</span><span class="sxs-lookup"><span data-stu-id="9f03d-450">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="9f03d-451">此方法执行线性搜索;因此，此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-451">This method performs a linear search; therefore, this method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="9f03d-452">此方法通过调用来确定相等性 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-452">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f03d-453">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="9f03d-453">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="9f03d-454">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-454">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-455">下面的代码示例演示如何确定指定元素的第一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-455">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-456">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-456">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int -&gt; int&#xA;override this.IndexOf : obj * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-457">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-457">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-458">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-458">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="9f03d-459">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-459">The zero-based starting index of the search.</span></span> <span data-ttu-id="9f03d-460">空列表中 0（零）为有效值。</span><span class="sxs-lookup"><span data-stu-id="9f03d-460">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="9f03d-461">搜索指定的 <see cref="T:System.Object" />，并返回 <see cref="T:System.Collections.ArrayList" /> 中从指定索引到最后一个元素的元素范围中第一个匹配项的从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-461">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="9f03d-462">如果在 <see cref="T:System.Collections.ArrayList" /> 中从 <paramref name="startIndex" /> 到最后一个元素的元素范围内找到 <paramref name="value" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-462">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-463"><xref:System.Collections.ArrayList>将从 `startIndex` 最后一个元素开始向前搜索并结束。</span><span class="sxs-lookup"><span data-stu-id="9f03d-463">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="9f03d-464">此方法执行线性搜索;因此，此方法是一个 `O(n)` 操作，其中 `n` 是从到末尾的元素数 `startIndex` <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-464">This method performs a linear search; therefore, this method is an `O(n)` operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-465">此方法通过调用来确定相等性 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-465">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f03d-466">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="9f03d-466">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="9f03d-467">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-467">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-468">下面的代码示例演示如何确定指定元素的第一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-468">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-469"><paramref name="startIndex" /> 超出了 <see cref="T:System.Collections.ArrayList" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-469"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-470">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-470">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int * int -&gt; int&#xA;override this.IndexOf : obj * int * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-471">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-471">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-472">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-472">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="9f03d-473">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-473">The zero-based starting index of the search.</span></span> <span data-ttu-id="9f03d-474">空列表中 0（零）为有效值。</span><span class="sxs-lookup"><span data-stu-id="9f03d-474">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-475">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-475">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="9f03d-476">搜索指定的 <see cref="T:System.Object" />，并返回 <see cref="T:System.Collections.ArrayList" /> 中从指定索引开始，并包含指定元素数的元素范围中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-476">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="9f03d-477">如果在 <see cref="T:System.Collections.ArrayList" /> 中从 <paramref name="startIndex" /> 开始并包含 <paramref name="count" /> 个元素的元素范围内找到 <paramref name="value" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-477">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-478"><xref:System.Collections.ArrayList>如果大于0，则从开始向前搜索， `startIndex` 并在 `startIndex` plus `count` 减1处结束 `count` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-478">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="9f03d-479">此方法执行线性搜索;因此，此方法是一个 `O(n)` 操作，其中 `n` 是 `count` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-479">This method performs a linear search; therefore, this method is an `O(n)` operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="9f03d-480">此方法通过调用来确定相等性 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-480">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f03d-481">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="9f03d-481">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="9f03d-482">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-482">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-483">下面的代码示例演示如何确定指定元素的第一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-483">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-484"><paramref name="startIndex" /> 超出了 <see cref="T:System.Collections.ArrayList" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-484"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="9f03d-485">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-485">-or-</span></span> 
 <span data-ttu-id="9f03d-486"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-486"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-487">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-487">-or-</span></span> 
 <span data-ttu-id="9f03d-488"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <see cref="T:System.Collections.ArrayList" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="9f03d-488"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-489">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-489">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="arrayList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-490">应插入 <paramref name="value" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-490">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="9f03d-491">要插入的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-491">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="9f03d-492">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-492">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-493">将元素插入 <see cref="T:System.Collections.ArrayList" /> 的指定索引处。</span><span class="sxs-lookup"><span data-stu-id="9f03d-493">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-494"><xref:System.Collections.ArrayList> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-494"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="9f03d-495">如果 <xref:System.Collections.ArrayList.Count%2A> 已 <xref:System.Collections.ArrayList.Capacity%2A> 为 equals，则 <xref:System.Collections.ArrayList> 通过自动重新分配内部数组，并将现有元素复制到新数组，然后再添加新元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-495">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="9f03d-496">如果 `index` 等于 <xref:System.Collections.ArrayList.Count%2A> ， `value` 则将添加到的末尾 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-496">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-497">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-497">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="9f03d-498">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="9f03d-498">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9f03d-499">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="9f03d-499">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="9f03d-500">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-500">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-501">下面的代码示例演示如何在中插入元素 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-501">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-502"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-502"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-503">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-503">-or-</span></span> 
 <span data-ttu-id="9f03d-504"><paramref name="index" /> 大于 <see cref="P:System.Collections.ArrayList.Count" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-504"><paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-505"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-505">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-506">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-506">-or-</span></span> 
<span data-ttu-id="9f03d-507"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-507">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member InsertRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.InsertRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.InsertRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-508">应在此处插入新元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-508">The zero-based index at which the new elements should be inserted.</span></span></param>
        <param name="c"><span data-ttu-id="9f03d-509"><see cref="T:System.Collections.ICollection" />，应将其元素插入到 <see cref="T:System.Collections.ArrayList" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9f03d-509">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-510">集合本身不能为 <see langword="null" />，但它可以包含为 <see langword="null" /> 的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-510">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-511">将集合中的元素插入 <see cref="T:System.Collections.ArrayList" /> 的指定索引处。</span><span class="sxs-lookup"><span data-stu-id="9f03d-511">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-512"><xref:System.Collections.ArrayList> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-512"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="9f03d-513">如果新 <xref:System.Collections.ArrayList.Count%2A> (当前 <xref:System.Collections.ArrayList.Count%2A> 加上集合的大小) 将大于 <xref:System.Collections.ArrayList.Capacity%2A> ，则 <xref:System.Collections.ArrayList> 通过自动重新分配内部数组以容纳新元素，并将现有元素复制到新数组中，然后再添加新元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-513">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="9f03d-514">如果 `index` 等于 <xref:System.Collections.ArrayList.Count%2A> ，则将元素添加到的末尾 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-514">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-515">中的元素的顺序 <xref:System.Collections.ICollection> 保留在中 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-515">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-516">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-516">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="9f03d-517">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="9f03d-517">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9f03d-518">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="9f03d-518">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="9f03d-519">此方法是一个 `O(n + m)` 操作，其中 `n` 是要添加的元素的数目，并且 `m` 为 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-519">This method is an `O(n + m)` operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-520">下面的代码示例演示如何在中插入元素 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-520">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-521"><paramref name="c" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-521"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-522"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-522"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-523">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-523">-or-</span></span> 
 <span data-ttu-id="9f03d-524"><paramref name="index" /> 大于 <see cref="P:System.Collections.ArrayList.Count" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-524"><paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-525"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-525">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-526">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-526">-or-</span></span> 
<span data-ttu-id="9f03d-527"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-527">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.ArrayList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f03d-528">获取一个值，该值指示 <see cref="T:System.Collections.ArrayList" /> 是否具有固定大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-528">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="9f03d-529">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.ArrayList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-529"><see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9f03d-530">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-530">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-531">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-531">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="9f03d-532">具有固定大小的集合就是一个集合，其中包含阻止添加和移除元素的包装;因此，如果对基础集合进行了更改，包括添加或删除元素，则固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="9f03d-532">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9f03d-533">检索此属性的值是一个 `O(1)` 运算。</span><span class="sxs-lookup"><span data-stu-id="9f03d-533">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-534">下面的代码示例演示如何创建周围固定大小的包装 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-534">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.ArrayList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f03d-535">获取一个值，该值指示 <see cref="T:System.Collections.ArrayList" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-535">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="9f03d-536">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.ArrayList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-536"><see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9f03d-537">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-537">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-538">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-538">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="9f03d-539">只读集合就是一个集合，其中包含阻止修改集合的包装器;因此，如果对基础集合进行了更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="9f03d-539">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9f03d-540">检索此属性的值是一个 `O(1)` 运算。</span><span class="sxs-lookup"><span data-stu-id="9f03d-540">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-541">下面的代码示例演示如何创建周围的只读包装 <xref:System.Collections.ArrayList> ，以及如何确定 <xref:System.Collections.ArrayList> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-541">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.ArrayList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f03d-542">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ArrayList" /> 的访问（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="9f03d-542">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="9f03d-543">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ArrayList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-543"><see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9f03d-544">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-544">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-545">若要保证的线程安全 <xref:System.Collections.ArrayList> ，必须通过方法返回的包装执行所有操作 <xref:System.Collections.ArrayList.Synchronized%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-545">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="9f03d-546">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9f03d-546">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9f03d-547">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-547">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9f03d-548">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-548">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-549">下面的代码示例演示如何使用在 <xref:System.Collections.ArrayList.SyncRoot%2A> 整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-549">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="9f03d-550">检索此属性的值是一个 `O(1)` 运算。</span><span class="sxs-lookup"><span data-stu-id="9f03d-550">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 <span data-ttu-id="9f03d-551">下面的代码示例演示如何同步 <xref:System.Collections.ArrayList> ，确定 <xref:System.Collections.ArrayList> 是否同步并使用同步的 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-551">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.ArrayList.Item" />
      <MemberSignature Language="C#" Value="public virtual object? this[int index] { get; set; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-552">要获取或设置的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-552">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="9f03d-553">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-553">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="9f03d-554">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-554">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-555"><xref:System.Collections.ArrayList.Item%2A> 返回 <xref:System.Object>，因此，您可能需要将返回的值强制转换为原始类型以便对其进行操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-555">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="9f03d-556">请务必注意，<xref:System.Collections.ArrayList> 不是个强类型集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-556">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="9f03d-557">有关强类型替代项，请参见 <xref:System.Collections.Generic.List%601>。</span><span class="sxs-lookup"><span data-stu-id="9f03d-557">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="9f03d-558"><xref:System.Collections.ArrayList> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-558"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="9f03d-559">通过此属性，可以使用以下语法来访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="9f03d-559">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="9f03d-560">C # 语言使用 [`this`](/dotnet/csharp/language-reference/keywords/this) 关键字来定义索引器，而不是实现 <xref:System.Collections.ArrayList.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9f03d-560">The C# language uses the [`this`](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="9f03d-561">Visual Basic 将 <xref:System.Collections.ArrayList.Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="9f03d-561">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="9f03d-562">检索此属性的值是一个 `O(1)` 操作; 设置属性也是一个 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-562">Retrieving the value of this property is an `O(1)` operation; setting the property is also an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-563">下面的代码示例创建一个 <xref:System.Collections.ArrayList> 并添加多个项。</span><span class="sxs-lookup"><span data-stu-id="9f03d-563">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="9f03d-564">该示例演示了如何使用 <xref:System.Collections.ArrayList.Item%2A> 属性 (c # 中的索引器 ) 访问元素，并通过将新值分配给指定索引的属性来更改元素 <xref:System.Collections.ArrayList.Item%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-564">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="9f03d-565">该示例还演示 <xref:System.Collections.ArrayList.Item%2A> 属性无法用于访问或添加列表当前大小以外的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-565">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="9f03d-566">下面的示例显式使用 <xref:System.Collections.ArrayList.Item%2A> 属性将值分配给列表中的项。</span><span class="sxs-lookup"><span data-stu-id="9f03d-566">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="9f03d-567">该示例定义了一个继承的类 <xref:System.Collections.ArrayList> ，并添加了一个方法来打乱列表项。</span><span class="sxs-lookup"><span data-stu-id="9f03d-567">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-568"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-568"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-569">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-569">-or-</span></span> 
 <span data-ttu-id="9f03d-570"><paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ArrayList.Count" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-570"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-571">返回 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中某个值的最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-571">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj -&gt; int&#xA;override this.LastIndexOf : obj -&gt; int" Usage="arrayList.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-572">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-572">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-573">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-573">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-574">在整个 <see cref="T:System.Collections.ArrayList" /> 中搜索指定的 <see cref="T:System.Object" />，并返回最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-574">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="9f03d-575">如果在整个 <see cref="T:System.Collections.ArrayList" /> 中找到 <paramref name="value" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-575">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-576"><xref:System.Collections.ArrayList>向后搜索从最后一个元素开始，到第一个元素结束。</span><span class="sxs-lookup"><span data-stu-id="9f03d-576">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="9f03d-577">此方法执行线性搜索;因此，此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-577">This method performs a linear search; therefore, this method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="9f03d-578">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="9f03d-578">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="9f03d-579">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-579">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-580">下面的代码示例演示如何确定指定元素的最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-580">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-581">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-581">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int -&gt; int&#xA;override this.LastIndexOf : obj * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-582">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-582">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-583">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-583">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="9f03d-584">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-584">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="9f03d-585">搜索指定的 <see cref="T:System.Object" />，并返回 <see cref="T:System.Collections.ArrayList" /> 中从第一个元素到指定索引这部分元素中最后一个匹配项的从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-585">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="9f03d-586">如果找到，则返回在 <see cref="T:System.Collections.ArrayList" /> 中从第一个元素到 <paramref name="startIndex" /> 的元素范围内找到 <paramref name="value" /> 的最后一个匹配项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-586">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-587"><xref:System.Collections.ArrayList>向后搜索从 `startIndex` 第一个元素开始和结束的位置。</span><span class="sxs-lookup"><span data-stu-id="9f03d-587">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="9f03d-588">此方法执行线性搜索;因此，此方法是一个 `O(n)` 操作，其中 `n` 是从开始到的元素的数目 <xref:System.Collections.ArrayList> `startIndex` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-588">This method performs a linear search; therefore, this method is an `O(n)` operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="9f03d-589">此方法通过调用来确定相等性 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-589">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f03d-590">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="9f03d-590">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="9f03d-591">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-591">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-592">下面的代码示例演示如何确定指定元素的最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-592">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-593"><paramref name="startIndex" /> 超出了 <see cref="T:System.Collections.ArrayList" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-593"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-594">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-594">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int * int -&gt; int&#xA;override this.LastIndexOf : obj * int * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-595">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-595">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-596">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-596">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="9f03d-597">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-597">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-598">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-598">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="9f03d-599">搜索指定的 <see cref="T:System.Object" />，并返回 <see cref="T:System.Collections.ArrayList" /> 中到指定索引为止包含指定元素数的这部分元素中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-599">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="9f03d-600">如果在 <see cref="T:System.Collections.ArrayList" /> 中到 <paramref name="startIndex" /> 为止包含 <paramref name="count" /> 个元素的这部分元素中找到 <paramref name="value" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-600">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-601"><xref:System.Collections.ArrayList> `startIndex` `startIndex` `count` 如果 `count` 大于0，则搜索从开始，到从减号 + 1 开始向后终止。</span><span class="sxs-lookup"><span data-stu-id="9f03d-601">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="9f03d-602">此方法执行线性搜索;因此，此方法是一个 `O(n)` 操作，其中 `n` 是 `count` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-602">This method performs a linear search; therefore, this method is an `O(n)` operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="9f03d-603">此方法通过调用来确定相等性 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-603">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f03d-604">从 .NET Framework 2.0 开始，此方法使用集合的对象的 <xref:System.Object.Equals%2A> 和 <xref:System.IComparable.CompareTo%2A> 方法 `item` 来确定项是否存在。</span><span class="sxs-lookup"><span data-stu-id="9f03d-604">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="9f03d-605">在 .NET Framework 的早期版本中，此决定是通过对 <xref:System.Object.Equals%2A> <xref:System.IComparable.CompareTo%2A> `item` 集合中的对象使用参数的和方法进行的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-605">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-606">下面的代码示例演示如何确定指定元素的最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-606">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="9f03d-607">请注意， `LastIndexOf` 是向后搜索; 因此， `count` 必须小于或等于 `startIndex` + 1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-607">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-608"><paramref name="startIndex" /> 超出了 <see cref="T:System.Collections.ArrayList" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-608"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="9f03d-609">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-609">-or-</span></span> 
 <span data-ttu-id="9f03d-610"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-610"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-611">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-611">-or-</span></span> 
 <span data-ttu-id="9f03d-612"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <see cref="T:System.Collections.ArrayList" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="9f03d-612"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-613">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-613">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-614">返回只读的列表包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-614">Returns a list wrapper that is read-only.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="9f03d-615">要包装的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-615">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="9f03d-616">返回只读的 <see cref="T:System.Collections.ArrayList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-616">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="9f03d-617"><paramref name="list" /> 周围的只读 <see cref="T:System.Collections.ArrayList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-617">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-618">若要防止任何修改 `list` ， `list` 只需要通过此包装器公开。</span><span class="sxs-lookup"><span data-stu-id="9f03d-618">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="9f03d-619">只读集合就是一个集合，其中包含阻止修改集合的包装器。</span><span class="sxs-lookup"><span data-stu-id="9f03d-619">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="9f03d-620">如果对基础集合进行了更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="9f03d-620">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9f03d-621">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-621">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-622">下面的代码示例演示如何创建周围的只读包装 <xref:System.Collections.ArrayList> ，以及如何确定 <xref:System.Collections.ArrayList> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-622">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-623"><paramref name="list" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-623"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="9f03d-624">要包装的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-624">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="9f03d-625">返回只读的 <see cref="T:System.Collections.IList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-625">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="9f03d-626"><paramref name="list" /> 周围的只读 <see cref="T:System.Collections.IList" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-626">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-627">若要防止任何修改 `list` ， `list` 只需要通过此包装器公开。</span><span class="sxs-lookup"><span data-stu-id="9f03d-627">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="9f03d-628">只读集合就是一个集合，其中包含阻止修改集合的包装器。</span><span class="sxs-lookup"><span data-stu-id="9f03d-628">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="9f03d-629">如果对基础集合进行了更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="9f03d-629">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9f03d-630">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-630">This method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-631"><paramref name="list" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-631"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="arrayList.Remove obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9f03d-632">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-632">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-633">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-633">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-634">从 <see cref="T:System.Collections.ArrayList" /> 中移除特定对象的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="9f03d-634">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-635">如果不 <xref:System.Collections.ArrayList> 包含指定的对象，则 <xref:System.Collections.ArrayList> 保持不变。</span><span class="sxs-lookup"><span data-stu-id="9f03d-635">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="9f03d-636">不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-636">No exception is thrown.</span></span>  
  
 <span data-ttu-id="9f03d-637">此方法执行线性搜索;因此，此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-637">This method performs a linear search; therefore, this method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="9f03d-638">此方法通过调用来确定相等性 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-638">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9f03d-639">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="9f03d-639">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9f03d-640">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="9f03d-640">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9f03d-641">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="9f03d-641">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-642">下面的代码示例演示如何从中移除元素 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-642">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-643"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-643">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-644">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-644">-or-</span></span> 
<span data-ttu-id="9f03d-645"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-645">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-646">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-646">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="arrayList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-647">要移除的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-647">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="9f03d-648">移除 <see cref="T:System.Collections.ArrayList" /> 的指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-648">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-649">删除该元素后，将调整集合的大小，并将该属性的值 <xref:System.Collections.ArrayList.Count%2A> 减少1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-649">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="9f03d-650">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="9f03d-650">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9f03d-651">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="9f03d-651">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9f03d-652">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="9f03d-652">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="9f03d-653">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-653">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-654">下面的代码示例演示如何从中移除元素 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-654">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-655"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-655"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-656">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-656">-or-</span></span> 
 <span data-ttu-id="9f03d-657"><paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ArrayList.Count" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-657"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-658"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-658">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-659">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-659">-or-</span></span> 
<span data-ttu-id="9f03d-660"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-660">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRange : int * int -&gt; unit&#xA;override this.RemoveRange : int * int -&gt; unit" Usage="arrayList.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-661">要移除的元素范围的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-661">The zero-based starting index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-662">要移除的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-662">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="9f03d-663">从 <see cref="T:System.Collections.ArrayList" /> 中移除一系列元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-663">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-664">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="9f03d-664">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9f03d-665">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="9f03d-665">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9f03d-666">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="9f03d-666">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="9f03d-667">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-667">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-668">下面的代码示例演示如何从中移除元素 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-668">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-669"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-669"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-670">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-670">-or-</span></span> 
 <span data-ttu-id="9f03d-671"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-671"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-672"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <see cref="T:System.Collections.ArrayList" /> 中元素的有效范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-672"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-673"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-673">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-674">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-674">-or-</span></span> 
<span data-ttu-id="9f03d-675"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-675">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : obj * int -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Repeat (value, count)" />
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object? value, int count);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f03d-676">要在新的 <see cref="T:System.Collections.ArrayList" /> 中对其进行多次复制的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-676">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-677">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-677">The value can be <see langword="null" />.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-678"><paramref name="value" /> 应复制的次数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-678">The number of times <paramref name="value" /> should be copied.</span></span></param>
        <summary><span data-ttu-id="9f03d-679">返回 <see cref="T:System.Collections.ArrayList" />，其元素是指定值的副本。</span><span class="sxs-lookup"><span data-stu-id="9f03d-679">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span></span></summary>
        <returns><span data-ttu-id="9f03d-680">具有 <paramref name="count" /> 个元素数的 <see cref="T:System.Collections.ArrayList" />，所有元素都是 <paramref name="value" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="9f03d-680">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-681"><xref:System.Collections.ArrayList> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-681"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="9f03d-682">此方法是一个 `O(n)` 操作，其中 `n` 是 `count` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-682">This method is an `O(n)` operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-683">下面的代码示例演示如何 <xref:System.Collections.ArrayList> 使用相同的值创建和初始化新的。</span><span class="sxs-lookup"><span data-stu-id="9f03d-683">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-684"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-684"><paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-685">将 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中元素的顺序反转。</span><span class="sxs-lookup"><span data-stu-id="9f03d-685">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberSignature Language="F#" Value="abstract member Reverse : unit -&gt; unit&#xA;override this.Reverse : unit -&gt; unit" Usage="arrayList.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f03d-686">将整个 <see cref="T:System.Collections.ArrayList" /> 中元素的顺序反转。</span><span class="sxs-lookup"><span data-stu-id="9f03d-686">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-687">此方法使用 <xref:System.Array.Reverse%2A?displayProperty=nameWithType> 反转元素的顺序，以便 [i] 处的元素（ <xref:System.Collections.ArrayList> 其中 i 是该范围内的任何索引）移动到 <xref:System.Collections.ArrayList> [j]，其中 j 等于 `index`  +  `index`  +  `count` -i-1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-687">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="9f03d-688">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-688">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-689">下面的代码示例演示如何反转中的值的排序顺序 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-689">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-690"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-690">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Reverse : int * int -&gt; unit&#xA;override this.Reverse : int * int -&gt; unit" Usage="arrayList.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-691">要反转的范围的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-691">The zero-based starting index of the range to reverse.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-692">要反转的范围内的元素数。</span><span class="sxs-lookup"><span data-stu-id="9f03d-692">The number of elements in the range to reverse.</span></span></param>
        <summary><span data-ttu-id="9f03d-693">将指定范围中元素的顺序反转。</span><span class="sxs-lookup"><span data-stu-id="9f03d-693">Reverses the order of the elements in the specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-694">此方法使用 <xref:System.Array.Reverse%2A?displayProperty=nameWithType> 反转元素的顺序，以便 [i] 处的元素（ <xref:System.Collections.ArrayList> 其中 i 是该范围内的任何索引）移动到 <xref:System.Collections.ArrayList> [j]，其中 j 等于 `index`  +  `index`  +  `count` -i-1。</span><span class="sxs-lookup"><span data-stu-id="9f03d-694">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="9f03d-695">此方法是一个 `O(n)` 操作，其中 `n` 是 `count` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-695">This method is an `O(n)` operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-696">下面的代码示例演示如何反转中某个范围内的值的排序顺序 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-696">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-697"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-697"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-698">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-698">-or-</span></span> 
 <span data-ttu-id="9f03d-699"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-699"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-700"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <see cref="T:System.Collections.ArrayList" /> 中元素的有效范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-700"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-701"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-701">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member SetRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.SetRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.SetRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-702">从零开始的 <see cref="T:System.Collections.ArrayList" /> 索引，从此索引处开始复制 <paramref name="c" /> 的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-702">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <paramref name="c" />.</span></span></param>
        <param name="c"><span data-ttu-id="9f03d-703"><see cref="T:System.Collections.ICollection" />，它的元素要复制到 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-703">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="9f03d-704">集合本身不能为 <see langword="null" />，但它可以包含为 <see langword="null" /> 的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-704">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f03d-705">复制 <see cref="T:System.Collections.ArrayList" /> 中一个子集合的元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-705">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-706"><xref:System.Collections.ArrayList> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="9f03d-706"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="9f03d-707">中的元素的顺序 <xref:System.Collections.ICollection> 保留在中 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-707">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="9f03d-708">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-708">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-709">下面的代码示例演示如何设置和获取中的元素范围 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-709">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-710"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-710"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-711">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-711">-or-</span></span> 
 <span data-ttu-id="9f03d-712"><paramref name="index" /> 加上 <paramref name="c" /> 中的元素数大于 <see cref="P:System.Collections.ArrayList.Count" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-712"><paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-713"><paramref name="c" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-713"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-714"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-714">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-715">对 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中的元素进行排序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-715">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberSignature Language="F#" Value="abstract member Sort : unit -&gt; unit&#xA;override this.Sort : unit -&gt; unit" Usage="arrayList.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f03d-716">对整个 <see cref="T:System.Collections.ArrayList" /> 中的元素进行排序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-716">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-717">此方法使用 <xref:System.Array.Sort%2A?displayProperty=nameWithType> ，它使用快速排序算法。</span><span class="sxs-lookup"><span data-stu-id="9f03d-717">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="9f03d-718">快速排序算法是一种比较排序 (也称为不稳定的排序) ，这意味着 "小于或等于" 比较运算将确定两个元素中的哪一个应在最终排序列表中首先出现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-718">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="9f03d-719">但是，如果两个元素相等，则可能不会保留它们的原始顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-719">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="9f03d-720">相反，稳定排序会保留相等元素的顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-720">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="9f03d-721">若要执行稳定排序，必须实现 <xref:System.Collections.IComparer> 要与此方法的其他重载一起使用的自定义接口。</span><span class="sxs-lookup"><span data-stu-id="9f03d-721">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="9f03d-722">平均而言，此方法是一个 `O(n log n)` 操作，其中 `n` 为 <xref:System.Collections.ArrayList.Count%2A> ; 在最糟糕的情况下，它是一个 ``O(n^2)`` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-722">On average, this method is an `O(n log n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an ``O(n^2)`` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-723">下面的代码示例演示如何对中的值进行排序 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-723">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-724"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-724">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-725">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-725">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="9f03d-726">比较元素时要使用的 <see cref="T:System.Collections.IComparer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-726">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="9f03d-727">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-727">-or-</span></span> 
<span data-ttu-id="9f03d-728">一个空引用（在 Visual Basic 中为 <see langword="Nothing" />），将使用每个元素的 <see cref="T:System.IComparable" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-728">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="9f03d-729">使用指定的比较器对整个 <see cref="T:System.Collections.ArrayList" /> 中的元素进行排序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-729">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-730">使用 <xref:System.Collections.ArrayList.Sort%2A> 方法通过实现 <xref:System.Collections.IComparer> 接口的自定义比较器对对象的列表进行排序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-730">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="9f03d-731">如果为 `null` 传递 `comparer`，则此方法将使用每个元素的 <xref:System.IComparable> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-731">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="9f03d-732">在此情况下，您必须确保列表中包含的对象实现 <xref:System.Collections.IComparer> 接口，否则将发生异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-732">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="9f03d-733">此外，使用 <xref:System.IComparable> 实现意味着此列表将执行比较排序（也称为“不稳定排序”）；也就是说，如果两个元素相等，则可能不会保留其顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-733">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="9f03d-734">相反，稳定排序会保留相等元素的顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-734">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="9f03d-735">若要执行稳定排序，必须实现自定义 <xref:System.Collections.IComparer> 接口。</span><span class="sxs-lookup"><span data-stu-id="9f03d-735">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="9f03d-736">平均而言，此方法是一个 `O(n log n)` 操作，其中 `n` 为 <xref:System.Collections.ArrayList.Count%2A> ; 在最糟糕的情况下，它是一个 ``O(n^2)`` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-736">On average, this method is an `O(n log n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an ``O(n^2)`` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-737">下面的代码示例演示如何 <xref:System.Collections.ArrayList> 使用默认比较器和反向排序顺序的自定义比较器对中的值进行排序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-737">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-738"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-738">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f03d-739">比较两个元素时出错。</span><span class="sxs-lookup"><span data-stu-id="9f03d-739">An error occurred while comparing two elements.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-740">将为 <see langword="null" /> 传递 <paramref name="comparer" />，并且列表中的元素不实现 <see cref="T:System.IComparable" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-740"><see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-741">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-741">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : int * int * System.Collections.IComparer -&gt; unit&#xA;override this.Sort : int * int * System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9f03d-742">要排序范围的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="9f03d-742">The zero-based starting index of the range to sort.</span></span></param>
        <param name="count"><span data-ttu-id="9f03d-743">要排序的范围的长度。</span><span class="sxs-lookup"><span data-stu-id="9f03d-743">The length of the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="9f03d-744">比较元素时要使用的 <see cref="T:System.Collections.IComparer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-744">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="9f03d-745">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-745">-or-</span></span> 
<span data-ttu-id="9f03d-746">一个空引用（在 Visual Basic 中为 <see langword="Nothing" />），将使用每个元素的 <see cref="T:System.IComparable" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f03d-746">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="9f03d-747">使用指定的比较器对 <see cref="T:System.Collections.ArrayList" /> 中某个范围内的元素进行排序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-747">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-748">如果 `comparer` 设置为 `null` ，则此方法执行比较排序 (也称为不稳定排序) ; 也就是说，如果两个元素相等，则可能不会保留它们的顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-748">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="9f03d-749">相反，稳定排序会保留相等元素的顺序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-749">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="9f03d-750">若要执行稳定排序，必须实现自定义 <xref:System.Collections.IComparer> 接口。</span><span class="sxs-lookup"><span data-stu-id="9f03d-750">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="9f03d-751">平均而言，此方法是一个 `O(n log n)` 操作，其中 `n` 为 `count` ; 在最糟糕的情况下，它是一个 `O(n^2)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-751">On average, this method is an `O(n log n)` operation, where `n` is `count`; in the worst case it is an `O(n^2)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-752">下面的代码示例演示如何 <xref:System.Collections.ArrayList> 使用默认比较器和反向排序顺序的自定义比较器对中某个范围内的元素进行排序。</span><span class="sxs-lookup"><span data-stu-id="9f03d-752">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f03d-753"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-753"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="9f03d-754">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-754">-or-</span></span> 
 <span data-ttu-id="9f03d-755"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="9f03d-755"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f03d-756"><paramref name="index" /> 和 <paramref name="count" /> 未在 <see cref="T:System.Collections.ArrayList" /> 中指定有效范围。</span><span class="sxs-lookup"><span data-stu-id="9f03d-756"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-757"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-757">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9f03d-758">比较两个元素时出错。</span><span class="sxs-lookup"><span data-stu-id="9f03d-758">An error occurred while comparing two elements.</span></span></exception>
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="9f03d-759">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="9f03d-759">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-760">返回同步的（线程安全）列表包装。</span><span class="sxs-lookup"><span data-stu-id="9f03d-760">Returns a list wrapper that is synchronized (thread safe).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="9f03d-761">要同步的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-761">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="9f03d-762">返回同步的（线程安全）<see cref="T:System.Collections.ArrayList" /> 包装器。</span><span class="sxs-lookup"><span data-stu-id="9f03d-762">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span></span></summary>
        <returns><span data-ttu-id="9f03d-763">同步的（线程安全）<see cref="T:System.Collections.ArrayList" /> 包装器。</span><span class="sxs-lookup"><span data-stu-id="9f03d-763">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-764">若要保证的线程安全 <xref:System.Collections.ArrayList> ，必须通过此包装完成所有操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-764">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="9f03d-765">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9f03d-765">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9f03d-766">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-766">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9f03d-767">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-767">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-768">下面的代码示例演示如何使用在 <xref:System.Collections.ArrayList.SyncRoot%2A> 整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-768">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="9f03d-769">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-769">This method is an `O(1)` operation.</span></span>  
  
 <span data-ttu-id="9f03d-770">下面的代码示例演示如何同步 <xref:System.Collections.ArrayList> ，确定 <xref:System.Collections.ArrayList> 是否同步并使用同步的 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-770">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-771"><paramref name="list" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-771"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="9f03d-772">要同步的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-772">The <see cref="T:System.Collections.IList" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="9f03d-773">返回同步的（线程安全）<see cref="T:System.Collections.IList" /> 包装器。</span><span class="sxs-lookup"><span data-stu-id="9f03d-773">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span></span></summary>
        <returns><span data-ttu-id="9f03d-774">同步的（线程安全）<see cref="T:System.Collections.IList" /> 包装器。</span><span class="sxs-lookup"><span data-stu-id="9f03d-774">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-775">若要保证的线程安全 <xref:System.Collections.ArrayList> ，必须通过此包装完成所有操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-775">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="9f03d-776">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9f03d-776">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9f03d-777">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-777">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9f03d-778">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-778">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-779">下面的代码示例演示如何使用在 <xref:System.Collections.ArrayList.SyncRoot%2A> 整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-779">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="9f03d-780">此方法是一种 `O(1)` 操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-780">This method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-781"><paramref name="list" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-781"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.ArrayList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f03d-782">获取可用于同步对 <see cref="T:System.Collections.ArrayList" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-782">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <value><span data-ttu-id="9f03d-783">用于同步对 <see cref="T:System.Collections.ArrayList" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="9f03d-783">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-784">若要创建的同步版本 <xref:System.Collections.ArrayList> ，请使用 <xref:System.Collections.ArrayList.Synchronized%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="9f03d-784">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="9f03d-785">但是，派生类可以使用属性提供自己的同步版本 <xref:System.Collections.ArrayList> <xref:System.Collections.ArrayList.SyncRoot%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-785">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="9f03d-786">同步代码必须对的执行操作 <xref:System.Collections.ArrayList.SyncRoot%2A> <xref:System.Collections.ArrayList> ，而不是直接在上执行操作 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-786">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="9f03d-787">这样可确保对从其他对象派生的集合正确地执行操作。</span><span class="sxs-lookup"><span data-stu-id="9f03d-787">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="9f03d-788">具体而言，它与可能同时修改对象的其他线程保持正确的同步 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-788">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="9f03d-789">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9f03d-789">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9f03d-790">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-790">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9f03d-791">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="9f03d-791">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-792">下面的代码示例演示如何使用在 <xref:System.Collections.ArrayList.SyncRoot%2A> 整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="9f03d-792">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="9f03d-793">检索此属性的值是一个 `O(1)` 运算。</span><span class="sxs-lookup"><span data-stu-id="9f03d-793">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f03d-794">将 <see cref="T:System.Collections.ArrayList" /> 的元素复制到新数组中。</span><span class="sxs-lookup"><span data-stu-id="9f03d-794">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; obj[]&#xA;override this.ToArray : unit -&gt; obj[]" Usage="arrayList.ToArray " />
      <MemberSignature Language="C#" Value="public virtual object[]? ToArray ();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f03d-795">将 <see cref="T:System.Collections.ArrayList" /> 的元素复制到新 <see cref="T:System.Object" /> 数组中。</span><span class="sxs-lookup"><span data-stu-id="9f03d-795">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span></span></summary>
        <returns><span data-ttu-id="9f03d-796">一个包含 <see cref="T:System.Collections.ArrayList" /> 的元素副本的 <see cref="T:System.Object" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="9f03d-796">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-797">使用 <xref:System.Array.Copy%2A?displayProperty=nameWithType> （一个 `O(n)` 操作，其中为）复制元素 `n` <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-797">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray (type As Type) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ToArray : Type -&gt; Array&#xA;override this.ToArray : Type -&gt; Array" Usage="arrayList.ToArray type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9f03d-798">要创建和复制元素的目标数组的元素 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-798">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span></span></param>
        <summary><span data-ttu-id="9f03d-799">将 <see cref="T:System.Collections.ArrayList" /> 的元素复制到新的指定元素类型数组中。</span><span class="sxs-lookup"><span data-stu-id="9f03d-799">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span></span></summary>
        <returns><span data-ttu-id="9f03d-800">包含 <see cref="T:System.Collections.ArrayList" /> 的元素副本的指定元素类型数组。</span><span class="sxs-lookup"><span data-stu-id="9f03d-800">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-801">对象中的所有对象 <xref:System.Collections.ArrayList> 都将转换为 <xref:System.Type> 参数中指定的 `type` 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-801">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="9f03d-802">使用 <xref:System.Array.Copy%2A?displayProperty=nameWithType> （一个 `O(n)` 操作，其中为）复制元素 `n` <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-802">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-803">下面的复制示例演示如何将的元素复制 <xref:System.Collections.ArrayList> 到字符串数组。</span><span class="sxs-lookup"><span data-stu-id="9f03d-803">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f03d-804"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f03d-804"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9f03d-805">源 <see cref="T:System.Collections.ArrayList" /> 的类型无法自动转换为指定类型。</span><span class="sxs-lookup"><span data-stu-id="9f03d-805">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span></span></exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="arrayList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f03d-806">将容量设置为 <see cref="T:System.Collections.ArrayList" /> 中元素的实际数目。</span><span class="sxs-lookup"><span data-stu-id="9f03d-806">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f03d-807">如果没有新元素添加到集合中，则可以使用此方法最大程度地减少集合的内存开销。</span><span class="sxs-lookup"><span data-stu-id="9f03d-807">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="9f03d-808">若要将重置 <xref:System.Collections.ArrayList> 为其初始状态，请 <xref:System.Collections.ArrayList.Clear%2A> 在调用之前调用方法 <xref:System.Collections.ArrayList.TrimToSize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-808">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="9f03d-809">修整空会将的 <xref:System.Collections.ArrayList> 容量设置 <xref:System.Collections.ArrayList> 为默认容量。</span><span class="sxs-lookup"><span data-stu-id="9f03d-809">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="9f03d-810">此方法是一个 `O(n)` 操作，其中 `n` 是 <xref:System.Collections.ArrayList.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-810">This method is an `O(n)` operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f03d-811">下面的代码示例演示如何剪裁的未使用部分 <xref:System.Collections.ArrayList> 以及如何清除的值 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="9f03d-811">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9f03d-812"><see cref="T:System.Collections.ArrayList" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9f03d-812">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="9f03d-813">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9f03d-813">-or-</span></span> 
<span data-ttu-id="9f03d-814"><see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="9f03d-814">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>
