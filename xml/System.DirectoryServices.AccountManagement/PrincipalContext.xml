<Type Name="PrincipalContext" FullName="System.DirectoryServices.AccountManagement.PrincipalContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="add504d4e180a596db7d8d6d265c6d5f1b989c74" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89787739" /></Metadata><TypeSignature Language="C#" Value="public class PrincipalContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrincipalContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.PrincipalContext" />
  <TypeSignature Language="VB.NET" Value="Public Class PrincipalContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalContext : IDisposable" />
  <TypeSignature Language="F#" Value="type PrincipalContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>封装对其执行所有操作的服务器或域、用作这些操作的基础的容器和用于执行这些操作的凭据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于搜索操作，主体上下文定义搜索基础，对于插入操作，上下文定义要插入对象的容器。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext>构造函数执行参数和服务器的验证，但不尝试验证凭据。  
  
 如果在未指定容器的情况下创建主体上下文对象，则可以使用它来表示多个不同的容器。 一个容器可用作查询操作的基础，而其他容器则可以保存新创建的主体对象。 例如，当用户或组插入到域上下文类型中时，帐户管理 API 将使用默认的已知用户容器 "CN = Users，DC = Fabrikam，DC = com"。 在应用商店中插入计算机时，API 将使用默认的 "CN = 计算机，DC = Fabrikam，DC = com" 容器。 请注意，域管理员可以更改默认容器名称。 由于主体对象构造函数只能指定一个主体上下文，因此，当应用程序在未指定容器的情况下创建域上下文时，其他上下文将公开为默认行为。 由于应用程序目录没有众所周知的容器，因此应用程序必须在构造函数中指定容器，否则将 <xref:System.ArgumentException> 引发。 由于 SAM 没有容器， <xref:System.ArgumentException> 如果应用程序尝试在构造函数中指定容器，则会引发。  
  
 在采用用户名作为参数的构造函数的每个版本中， `userName` 字符串可以采用各种不同的格式。 的三个受支持的 NameFormats 是 Nt4Name、UserPrincipalName 和 SamAccountName。 有关名称格式的详细信息，请参阅 [此处](https://go.microsoft.com/fwlink/?LinkID=99942)的 ADS_NAME_TYPE_ENUM 文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contextType As ContextType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext contextType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
      </Parameters>
      <Docs>
        <param name="contextType">一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值，指定主体上下文的存储区的类型。</param>
        <summary>使用指定的上下文类型初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">在使用应用程序目录上下文时，必须指定名称或容器。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType" /> 参数不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contextType As ContextType, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值，指定主体上下文的存储区的类型。</param>
        <param name="name">用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的域或服务器的名称、用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的计算机名称或承载 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 实例的服务器和端口的名称。  
  
如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的名称为 <see langword="null" />，则此上下文是运行该线程的用户主体的域的域控制器。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的名称为 <see langword="null" />，则此名称是本地计算机名称。 对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数不能为 <see langword="null" />。</param>
        <summary>使用指定的上下文类型和名称初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 时，必须指定名称。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType" /> 参数不包含有效的 <see cref="F:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contextType As ContextType, name As String, container As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值，指定主体上下文的存储区的类型。</param>
        <param name="name">用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的域或服务器的名称、用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的计算机名称或承载 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 实例的服务器和端口的名称。  
  
如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的名称为 <see langword="null" />，则此上下文是运行该线程的用户主体的域的域控制器。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的名称为 <see langword="null" />，则此名称是本地计算机名称。 对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数不能为 <see langword="null" />。</param>
        <param name="container">存储区上要用作上下文的根的容器。 所有查询都在此根下执行，并且所有插入都在此容器中执行。  
  
对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 和 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数是容器对象的可分辨名称。  
  
对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型，此参数必须设置为 <see langword="null" />。</param>
        <summary>使用指定的上下文类型、名称和容器初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException>如果为主体上下文指定的容器不是有效的容器，则可能会在连接到服务器的后续目录操作调用中引发 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 。 容器定义为一个对象，其 schema 类在其 possibleInferiors 属性中具有主体类（用户、组或计算机）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型时，不能指定容器。  
  
在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 时，必须指定 name 或 container。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType" /> 参数不包含有效的 <see cref="F:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, System.DirectoryServices.AccountManagement.ContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, valuetype System.DirectoryServices.AccountManagement.ContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contextType As ContextType, name As String, container As String, options As ContextOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::DirectoryServices::AccountManagement::ContextOptions options);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * System.DirectoryServices.AccountManagement.ContextOptions -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
      </Parameters>
      <Docs>
        <param name="contextType">一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值，指定主体上下文的存储区的类型。</param>
        <param name="name">用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的域或服务器的名称、用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的计算机名称或承载 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 实例的服务器和端口的名称。  
  
如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的名称为 <see langword="null" />，则此上下文是运行该线程的用户主体的域的域控制器。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的名称为 <see langword="null" />，则此名称是本地计算机名称。 对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数不能为 <see langword="null" />。</param>
        <param name="container">存储区上要用作上下文的根的容器。 所有查询都在此根下执行，并且所有插入都在此容器中执行。  
  
对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 和 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数是容器对象的可分辨名称。  
  
对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型，此参数必须设置为 <see langword="null" />。</param>
        <param name="options">一个或多个 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 枚举值的组合，这些枚举值指定用于绑定到服务器的选项。 如果此参数为 <see langword="null" />，则默认选项为 ContextOptions.Negotiate | ContextOptions.Signing | ContextOptions.Sealing。</param>
        <summary>使用指定的上下文类型、名称、容器和上下文选项初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException>如果为主体上下文指定的容器不是有效的容器，则可能会在连接到服务器的后续目录操作调用中引发 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 。 容器定义为一个对象，其 schema 类在其 possibleInferiors 属性中具有主体类（用户、组或计算机）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型时，不能指定容器。  
  
在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 时，必须指定 name 或 container。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType" /> 参数不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值。  
  
<paramref name="options" /> 参数不包含有效 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 枚举值的组合。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contextType As ContextType, name As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值，指定主体上下文的存储区的类型。</param>
        <param name="name">用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的域或服务器的名称、用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的计算机名称或承载 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 实例的服务器和端口的名称。  
  
如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的名称为 <see langword="null" />，则此上下文是运行该线程的用户主体的域的域控制器。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的名称为 <see langword="null" />，则此名称是本地计算机名称。 对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数不能为 <see langword="null" />。</param>
        <param name="userName">用于连接到存储区的用户名。 如果 <paramref name="userName" /> 和 <paramref name="password" /> 参数都为 <see langword="null" />，则使用当前进程的凭据。 否则，<paramref name="userName" /> 和 <paramref name="password" /> 都不可以为 null，并使用这两个参数指定的凭据来连接到存储区。</param>
        <param name="password">用于连接到存储区的密码。 如果 <paramref name="userName" /> 和 <paramref name="password" /> 参数都为 <see langword="null" />，则使用当前进程的凭据。 否则，<paramref name="userName" /> 和 <paramref name="password" /> 都不可以为 null，并使用这两个参数指定的凭据来连接到存储区。</param>
        <summary>使用指定的上下文类型、名称、用户名和密码初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 和 <paramref name="password" /> 参数必须为 <see langword="null" /> 或包含值。  
  
在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 时，必须指定名称。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType" /> 参数不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contextType As ContextType, name As String, container As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值，指定主体上下文的存储区的类型。</param>
        <param name="name">用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的域或服务器的名称、用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的计算机名称或承载 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 实例的服务器和端口的名称。  
  
如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的名称为 <see langword="null" />，则此上下文是运行该线程的用户主体的域的域控制器。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的名称为 <see langword="null" />，则此名称是本地计算机名称。 对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数不能为 <see langword="null" />。</param>
        <param name="container">存储区上要用作上下文的根的容器。 所有查询都在此根下执行，并且所有插入都在此容器中执行。  
  
对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 和 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数是容器对象的可分辨名称。  
  
对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型，此参数必须设置为 <see langword="null" />。</param>
        <param name="userName">用于连接到存储区的用户名。 如果 <paramref name="userName" /> 和 <paramref name="password" /> 参数都为 <see langword="null" />，则使用当前主体的默认凭据。 否则，<paramref name="userName" /> 和 <paramref name="password" /> 都不可以为 null，并使用这两个参数指定的凭据来连接到存储区。</param>
        <param name="password">用于连接到存储区的密码。 如果 <paramref name="userName" /> 和 <paramref name="password" /> 参数都为 <see langword="null" />，则使用当前主体的默认凭据。 否则，<paramref name="userName" /> 和 <paramref name="password" /> 都不可以为 null，并使用这两个参数指定的凭据来连接到存储区。</param>
        <summary>使用指定的上下文类型、名称、容器、用户名和密码初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException>如果为主体上下文指定的容器不是有效的容器，则可能会在连接到服务器的后续目录操作调用中引发 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 。 容器定义为一个对象，其 schema 类在其 possibleInferiors 属性中具有主体类（用户、组或计算机）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 和 <paramref name="password" /> 参数必须为 <see langword="null" /> 或包含值。  
  
在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型时，不能指定容器。  
  
在 <paramref name="name" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 时，必须指定 <paramref name="container" /> 或 <paramref name="contextType" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType" /> 参数不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, System.DirectoryServices.AccountManagement.ContextOptions options, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, valuetype System.DirectoryServices.AccountManagement.ContextOptions options, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contextType As ContextType, name As String, container As String, options As ContextOptions, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::DirectoryServices::AccountManagement::ContextOptions options, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * System.DirectoryServices.AccountManagement.ContextOptions * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, options, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值，指定主体上下文的存储区的类型。</param>
        <param name="name">用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的域或服务器的名称、用于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的计算机名称或承载 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 实例的服务器和端口的名称。  
  
如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 上下文类型的名称为 <see langword="null" />，则此上下文是运行该线程的用户主体的域的域控制器。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型的名称为 <see langword="null" />，则此名称是本地计算机名称。 对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数不能为 <see langword="null" />。</param>
        <param name="container">存储区上要用作上下文的根的容器。 所有查询都在此根下执行，并且所有插入都在此容器中执行。  
  
对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 和 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 上下文类型，此参数是容器对象的可分辨名称。  
  
对于 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型，此参数必须设置为 <see langword="null" />。</param>
        <param name="options">一个或多个 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 枚举值的组合，这些枚举值指定用于绑定到服务器的选项。 如果此参数为 <see langword="null" />，则默认选项为 ContextOptions.Negotiate | ContextOptions.Signing | ContextOptions.Sealing。</param>
        <param name="userName">用于连接到存储区的用户名。 如果 <paramref name="userName" /> 和 <paramref name="password" /> 参数都为 <see langword="null" />，则使用当前主体的默认凭据。 否则，<paramref name="userName" /> 和 <paramref name="password" /> 都不可以为 null，并使用这两个参数指定的凭据来连接到存储区。</param>
        <param name="password">用于连接到存储区的密码。 如果 <paramref name="userName" /> 和 <paramref name="password" /> 参数都为 <see langword="null" />，则使用当前主体的默认凭据。 否则，<paramref name="userName" /> 和 <paramref name="password" /> 都不可以为 null，并使用这两个参数指定的凭据来连接到存储区。</param>
        <summary>使用指定的上下文类型、名称、容器、上下文选项、用户名和密码初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException>如果为主体上下文指定的容器不是有效的容器，则可能会在连接到服务器的后续目录操作调用中引发 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 。 容器定义为一个对象，其 schema 类在其 possibleInferiors 属性中具有主体类（用户、组或计算机）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 和 <paramref name="password" /> 参数必须为 <see langword="null" /> 或包含值。  
  
在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 上下文类型时，不能指定容器。  
  
在 <paramref name="contextType" /> 参数中指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 时，必须指定 name 或 container。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType" /> 参数不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值。  
  
<paramref name="options" /> 参数不包含有效 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 枚举值的组合。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectedServer">
      <MemberSignature Language="C#" Value="public string ConnectedServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectedServer" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectedServer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectedServer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectedServer : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取主体上下文连接到的服务器的名称。</summary>
        <value>主体上下文连接到的服务器的名称，或者 <see langword="null" /> ，如果主体上下文未连接到服务器，则为。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当上下文类型为时 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> ，此属性返回域控制器或应用程序目录实例的名称。 当上下文类型为时 <xref:System.DirectoryServices.AccountManagement.ContextType.Machine> ，此属性将返回计算机名称。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public string Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Container" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Container { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在构造函数的容器参数中指定的值。</summary>
        <value>存储区上要用作上下文的根的容器，或者 <see langword="null" /> ，如果未指定容器，则为。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有查询都在此根下执行，并且所有插入都在此容器中执行。 对于 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 和 <xref:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory> 上下文类型，此属性是容器对象的可分辨名称。 对于 <xref:System.DirectoryServices.AccountManagement.ContextType.Machine> 上下文类型，此属性必须为 `null` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.ContextType ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AccountManagement.ContextType ContextType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextType As ContextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::ContextType ContextType { System::DirectoryServices::AccountManagement::ContextType get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : System.DirectoryServices.AccountManagement.ContextType" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.ContextType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.ContextType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上下文类型，该上下文类型指定主体上下文的存储区的类型。</summary>
        <value>一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 枚举值，指定要连接到的目标的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当应用程序不直接创建主体上下文和指定上下文类型时，将使用此属性。 例如，当应用程序枚举组成员身份时，此属性可用于确定主体所属的存储区的类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="principalContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>处置 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 对象的当前实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取构造函数中指定作为 <paramref name="name" /> 参数的值。</summary>
        <value>用于上下文类型的域或服务器的名称 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 、上下文类型的主机名 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 、承载实例的服务器的名称， <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 或者 <see langword="null" /> 如果未设置名称，则为。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.ContextOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AccountManagement.ContextOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ContextOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::ContextOptions Options { System::DirectoryServices::AccountManagement::ContextOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.DirectoryServices.AccountManagement.ContextOptions" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.ContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在构造函数的 <paramref name="contextOptions" /> 参数中指定的选项。</summary>
        <value>一个 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 枚举值，指定要连接到的目标的类型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在构造函数的用户名参数中指定的值。</summary>
        <value>用于连接到存储区的用户名， <see langword="null" /> 如果不存在用户名，则为。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过向其传递任意一种不同格式的用户名来设置此属性。 有关可接受的格式类型的完整列表，请参阅 [此处](https://go.microsoft.com/fwlink/?LinkID=99942)的 ADS_NAME_TYPE_ENUM 文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateCredentials">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建到服务器的连接，如果连接成功，则验证指定的凭据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
`userName`此方法的两个重载中的参数都必须采用*用户名* (例如， *mcampbell*) 而不是域*\*用户名或*用户名 \@ 域*。   
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateCredentials">
      <MemberSignature Language="C#" Value="public bool ValidateCredentials (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateCredentials(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCredentials (userName As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateCredentials(System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.ValidateCredentials : string * string -&gt; bool" Usage="principalContext.ValidateCredentials (userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">在服务器上验证的用户名。 有关 <paramref name="userName" /> 格式的详细信息，请参阅“备注”部分。</param>
        <param name="password">在服务器上验证的密码。</param>
        <summary>创建到服务器的连接并返回一个布尔值，该值指定所指定的用户名和密码是否有效。</summary>
        <returns>如果凭据有效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials%2A>方法绑定到构造函数中指定的服务器。 如果 `username` 和 `password` 参数为 `null` ，则此方法将验证当前主体的默认凭据。  

`userName`参数的格式必须为*用户名* (例如*mcampbell*) ，而不是域*\*用户名或*用户名 \@ 域*。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateCredentials">
      <MemberSignature Language="C#" Value="public bool ValidateCredentials (string userName, string password, System.DirectoryServices.AccountManagement.ContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateCredentials(string userName, string password, valuetype System.DirectoryServices.AccountManagement.ContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCredentials (userName As String, password As String, options As ContextOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateCredentials(System::String ^ userName, System::String ^ password, System::DirectoryServices::AccountManagement::ContextOptions options);" />
      <MemberSignature Language="F#" Value="member this.ValidateCredentials : string * string * System.DirectoryServices.AccountManagement.ContextOptions -&gt; bool" Usage="principalContext.ValidateCredentials (userName, password, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
      </Parameters>
      <Docs>
        <param name="userName">在服务器上验证的用户名。 有关 <paramref name="userName" /> 格式的信息，请参阅“备注”部分。</param>
        <param name="password">在服务器上验证的密码。</param>
        <param name="options">一个或多个 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 枚举值的组合，这些枚举值指定用于绑定到服务器的选项。 此参数只能指定使用/不使用 SSL 的简单绑定或 Negotiate 绑定。</param>
        <summary>创建到服务器的连接并返回一个布尔值，该值指定所指定的用户名和密码是否有效。 此方法对用户名和密码执行快速凭据验证。</summary>
        <returns>如果凭据有效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials%2A>方法绑定到构造函数中指定的服务器。 如果 `username` 和 `password` 参数为 `null` ，则此方法将验证当前主体的默认凭据。  

`userName`参数的格式必须为*用户名* (例如*mcampbell*) ，而不是域*\*用户名或*用户名 \@ 域*。 
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">当上下文类型为 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 时，<paramref name="options" /> 参数必须指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextOptions.Negotiate" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
