<Type Name="HandleProcessCorruptedStateExceptionsAttribute" FullName="System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="266cebf6094a17729b181295eb794b0efd1b41c4" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102064292" /></Metadata><TypeSignature Language="C#" Value="public sealed class HandleProcessCorruptedStateExceptionsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HandleProcessCorruptedStateExceptionsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HandleProcessCorruptedStateExceptionsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleProcessCorruptedStateExceptionsAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type HandleProcessCorruptedStateExceptionsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>启用托管代码以处理用于指示损坏的进程状态的异常。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 损坏的进程状态异常是指示进程状态已损坏的异常。 建议不要在此状态下执行应用程序。  
  
 默认情况下，公共语言运行时 (CLR) 不会将这些异常提供给托管代码，并且 `try` / `catch` 不会为它们调用块 (和其他异常处理) 子句。 如果你完全确信要保持对这些异常的处理，则必须将属性应用于 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> 要执行的异常处理子句的方法。 CLR 仅在同时具有和属性的方法中，将损坏的进程状态异常传递给适用的异常子句 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> <xref:System.Security.SecurityCriticalAttribute> 。  
  
 你还可以将 [\<legacyCorruptedStateExceptionsPolicy>](/dotnet/framework/configure-apps/file-schema/runtime/legacycorruptedstateexceptionspolicy-element) 元素添加到应用程序的配置文件中。 这将确保在没有或属性的情况下，将损坏状态异常传递给异常处理程序 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> <xref:System.Security.SecurityCriticalAttribute> 。 此配置元素对在 .NET Framework 4 之前的版本中编译但在 .NET Framework 4 或更高版本中运行的应用程序不起作用;将继续为这些应用程序提供损坏状态异常。 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>当在部分受信任的或透明的代码中遇到此属性时，该属性将被忽略，因为受信任的主机不允许不受信任的外接程序捕获和忽略这些严重异常。  
  
 有关损坏的进程状态异常的详细信息，请参阅博客中的 CLR 内部的 [处理损坏状态异常](https://go.microsoft.com/fwlink/?LinkID=179681) 的条目。  
 
 **仅适用于 .Net Core：** 即使 .NET Core 中存在此属性，因为不支持从损坏的进程状态异常进行恢复，但会忽略此属性。 CLR 不会将损坏的进程状态异常传递给托管代码。 

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleProcessCorruptedStateExceptionsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleProcessCorruptedStateExceptionsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
