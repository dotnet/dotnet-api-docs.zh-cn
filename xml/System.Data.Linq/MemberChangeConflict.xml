<Type Name="MemberChangeConflict" FullName="System.Data.Linq.MemberChangeConflict">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ea58d194c7f648a125ef9b671742026c31726e9" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86773152" /></Metadata><TypeSignature Language="C#" Value="public sealed class MemberChangeConflict" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemberChangeConflict extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.MemberChangeConflict" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemberChangeConflict" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberChangeConflict sealed" />
  <TypeSignature Language="F#" Value="type MemberChangeConflict = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="41d6a-101">表示以下情况：由于自客户端上次读取成员值后这些值已被更新，因此尝试的更新失败。</span><span class="sxs-lookup"><span data-stu-id="41d6a-101">Represents a situation in which an attempted update fails because member values have been updated since the client last read them.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d6a-102">下面的示例演示如何检索有关发生冲突的成员的信息。</span><span class="sxs-lookup"><span data-stu-id="41d6a-102">The following example shows how to retrieve information about members in conflict.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.memberchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.memberchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public object CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : obj" Usage="System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41d6a-103">获取发生冲突的成员的当前值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-103">Gets the current value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="41d6a-104">发生冲突的对象。</span><span class="sxs-lookup"><span data-stu-id="41d6a-104">The object in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseValue">
      <MemberSignature Language="C#" Value="public object DatabaseValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DatabaseValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DatabaseValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DatabaseValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DatabaseValue : obj" Usage="System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41d6a-105">获取发生冲突的成员的数据库值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-105">Gets the database value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="41d6a-106">发生冲突的对象的值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-106">The value of the object in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModified { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModified : bool" Usage="System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41d6a-107">获取一个值，该值指示自上次读取或刷新数据库后，是否已更改成员数据。</span><span class="sxs-lookup"><span data-stu-id="41d6a-107">Gets a value that indicates whether the member data has been changed since the last database read or refresh.</span></span></summary>
        <value><span data-ttu-id="41d6a-108">如果成员数据已更改，则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="41d6a-108"><see langword="True" /> if the member data has been changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d6a-109">使用属性合并新值而不覆盖挂起的更新。</span><span class="sxs-lookup"><span data-stu-id="41d6a-109">Use the property to merge new values without overwriting pending updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResolved">
      <MemberSignature Language="C#" Value="public bool IsResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResolved" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResolved { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsResolved : bool" Usage="System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41d6a-110">获取一个值，该值指示是否已解决冲突。</span><span class="sxs-lookup"><span data-stu-id="41d6a-110">Gets a value that indicates whether the conflict has been resolved.</span></span></summary>
        <value><span data-ttu-id="41d6a-111">如果冲突已解决，则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="41d6a-111"><see langword="True" /> if the conflict has been resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d6a-112">此属性是只读的，在冲突解决后会自动更新。</span><span class="sxs-lookup"><span data-stu-id="41d6a-112">This property is read-only and is automatically updated as conflicts are resolved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.Member" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Data.Linq.MemberChangeConflict.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41d6a-113">获取有关发生冲突的成员的元数据信息。</span><span class="sxs-lookup"><span data-stu-id="41d6a-113">Gets metadata information about the member in conflict.</span></span></summary>
        <value><span data-ttu-id="41d6a-114">有关发生冲突的成员的信息。</span><span class="sxs-lookup"><span data-stu-id="41d6a-114">Information about the member in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValue">
      <MemberSignature Language="C#" Value="public object OriginalValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalValue : obj" Usage="System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41d6a-115">获取发生冲突的成员的原始值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-115">Gets the original value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="41d6a-116">发生冲突的成员的原始值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-116">The original value of the member in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41d6a-117">通过保留当前值并重置基线原始值以匹配较新数据库值来解决成员冲突。</span><span class="sxs-lookup"><span data-stu-id="41d6a-117">Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (refreshMode As RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Data.Linq.RefreshMode -&gt; unit" Usage="memberChangeConflict.Resolve refreshMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="41d6a-118">请参阅 <see cref="T:System.Data.Linq.RefreshMode" />。</span><span class="sxs-lookup"><span data-stu-id="41d6a-118">See <see cref="T:System.Data.Linq.RefreshMode" />.</span></span></param>
        <summary><span data-ttu-id="41d6a-119">使用 <see cref="T:System.Data.Linq.RefreshMode" /> 参数可自动指定要设置为发生冲突的成员的当前值的值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-119">Uses a <see cref="T:System.Data.Linq.RefreshMode" /> parameter to automatically specify the value to set as the current value for the member in conflict.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d6a-120">下面的示例演示使用的各种值生成的结果 <xref:System.Data.Linq.RefreshMode> 。</span><span class="sxs-lookup"><span data-stu-id="41d6a-120">The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41d6a-121">下面的示例将从数据库中的值覆盖当前值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-121">The following example overwrites current values with values from the database.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  
  
 <span data-ttu-id="41d6a-122">下面的示例演示如何将原始值与从数据库中检索到的值进行交换。</span><span class="sxs-lookup"><span data-stu-id="41d6a-122">The following example shows how to swap the original value with the values retrieved from the database.</span></span> <span data-ttu-id="41d6a-123">不会修改当前值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-123">No current value is modified.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  
  
 <span data-ttu-id="41d6a-124">下面的示例保留已更改的当前值，但使用数据库值更新其他值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-124">The following example keeps the current values that have been changed, but updates the other values with database values.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Resolve : obj -&gt; unit" Usage="memberChangeConflict.Resolve value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="41d6a-125">要设置为当前值的值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-125">The value to set as the current value.</span></span></param>
        <summary><span data-ttu-id="41d6a-126">指定要设置为发生冲突的成员的当前值的值。</span><span class="sxs-lookup"><span data-stu-id="41d6a-126">Specifies the value to set as the current value for the member in conflict.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d6a-127">此处设置的值是要在后续操作中使用的值 <xref:System.Data.Linq.DataContext.SubmitChanges%2A> 。</span><span class="sxs-lookup"><span data-stu-id="41d6a-127">The value set here is the value to be used in a subsequent <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
