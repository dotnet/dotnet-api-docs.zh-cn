<Type Name="ObjectChangeConflict" FullName="System.Data.Linq.ObjectChangeConflict">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48dbd1b70109c3cad6d537f17285e5dbcc91729d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86773113" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectChangeConflict" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectChangeConflict extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.ObjectChangeConflict" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectChangeConflict" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectChangeConflict sealed" />
  <TypeSignature Language="F#" Value="type ObjectChangeConflict = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f28d4-101">表示对一个或多个开放式并发冲突的更新尝试。</span><span class="sxs-lookup"><span data-stu-id="f28d4-101">Represents an update attempt with one or more optimistic concurrency conflicts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f28d4-102">在此方案中，尝试的更新失败，因为自客户端上次读取数据库值后数据库值已更新。</span><span class="sxs-lookup"><span data-stu-id="f28d4-102">This scenario is one in which an attempted update fails because database values have been updated since the client last read them.</span></span>  
  
 <span data-ttu-id="f28d4-103">下面的示例演示如何检索有关发生冲突的对象的信息。</span><span class="sxs-lookup"><span data-stu-id="f28d4-103">The following example shows how to retrieve information about objects in conflict.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDeleted">
      <MemberSignature Language="C#" Value="public bool IsDeleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleted" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ObjectChangeConflict.IsDeleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleted : bool" Usage="System.Data.Linq.ObjectChangeConflict.IsDeleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f28d4-104">获取指示是否已从数据库中删除发生冲突的对象的值。</span><span class="sxs-lookup"><span data-stu-id="f28d4-104">Gets a value that indicates whether the object in conflict has been deleted from the database.</span></span></summary>
        <value><span data-ttu-id="f28d4-105">如果该对象已被删除，则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="f28d4-105"><see langword="True" /> if the object has been deleted.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResolved">
      <MemberSignature Language="C#" Value="public bool IsResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResolved" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ObjectChangeConflict.IsResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResolved { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsResolved : bool" Usage="System.Data.Linq.ObjectChangeConflict.IsResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f28d4-106">获取指示是否已解决此对象的冲突的值。</span><span class="sxs-lookup"><span data-stu-id="f28d4-106">Gets a value that indicates whether the conflicts for this object have already been resolved.</span></span></summary>
        <value><span data-ttu-id="f28d4-107">如果冲突已解决，则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="f28d4-107"><see langword="True" /> if the conflicts have been resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f28d4-108">此属性是只读的，在冲突解决后会自动更新。</span><span class="sxs-lookup"><span data-stu-id="f28d4-108">This property is read-only and is automatically updated as conflicts are resolved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberConflicts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.MemberChangeConflict&gt; MemberConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.MemberChangeConflict&gt; MemberConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ObjectChangeConflict.MemberConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberConflicts As ReadOnlyCollection(Of MemberChangeConflict)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::MemberChangeConflict ^&gt; ^ MemberConflicts { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::MemberChangeConflict ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberConflicts : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.MemberChangeConflict&gt;" Usage="System.Data.Linq.ObjectChangeConflict.MemberConflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.MemberChangeConflict&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f28d4-109">获取导致更新失败的所有成员冲突的集合。</span><span class="sxs-lookup"><span data-stu-id="f28d4-109">Gets a collection of all member conflicts that caused the update to fail.</span></span></summary>
        <value><span data-ttu-id="f28d4-110">成员冲突的集合。</span><span class="sxs-lookup"><span data-stu-id="f28d4-110">A collection of member conflicts.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ObjectChangeConflict.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Object : obj" Usage="System.Data.Linq.ObjectChangeConflict.Object" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f28d4-111">获取发生冲突的对象。</span><span class="sxs-lookup"><span data-stu-id="f28d4-111">Gets the object in conflict.</span></span></summary>
        <value><span data-ttu-id="f28d4-112">发生冲突的对象。</span><span class="sxs-lookup"><span data-stu-id="f28d4-112">The object in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f28d4-113">解决成员冲突。</span><span class="sxs-lookup"><span data-stu-id="f28d4-113">Resolves member conflicts.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ObjectChangeConflict.Resolve" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve();" />
      <MemberSignature Language="F#" Value="member this.Resolve : unit -&gt; unit" Usage="objectChangeConflict.Resolve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f28d4-114">通过保留当前值并重置基线原始值以匹配较新数据库值来解决成员冲突。</span><span class="sxs-lookup"><span data-stu-id="f28d4-114">Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (refreshMode As RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Data.Linq.RefreshMode -&gt; unit" Usage="objectChangeConflict.Resolve refreshMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="f28d4-115"><see cref="T:System.Data.Linq.RefreshMode" /> 的相应选择。</span><span class="sxs-lookup"><span data-stu-id="f28d4-115">The appropriate option from <see cref="T:System.Data.Linq.RefreshMode" />.</span></span></param>
        <summary><span data-ttu-id="f28d4-116">使用指定的 <see cref="T:System.Data.Linq.RefreshMode" /> 来解决成员冲突。</span><span class="sxs-lookup"><span data-stu-id="f28d4-116">Resolves member conflicts by using the specified <see cref="T:System.Data.Linq.RefreshMode" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f28d4-117">下面的示例演示使用的各种值生成的结果 <xref:System.Data.Linq.RefreshMode> 。</span><span class="sxs-lookup"><span data-stu-id="f28d4-117">The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f28d4-118">下面的示例将从数据库中的值覆盖当前值。</span><span class="sxs-lookup"><span data-stu-id="f28d4-118">The following example overwrites current values with values from the database.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  
  
 <span data-ttu-id="f28d4-119">下面的示例演示如何将原始值与从数据库中检索到的值进行交换。</span><span class="sxs-lookup"><span data-stu-id="f28d4-119">The following example shows how to swap the original value with the values retrieved from the database.</span></span> <span data-ttu-id="f28d4-120">不会修改当前值。</span><span class="sxs-lookup"><span data-stu-id="f28d4-120">No current value is modified.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  
  
 <span data-ttu-id="f28d4-121">下面的示例保留已更改的当前值，但使用数据库值更新其他值。</span><span class="sxs-lookup"><span data-stu-id="f28d4-121">The following example keeps the current values that have been changed, but updates the other values with database values.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode, bool autoResolveDeletes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode, bool autoResolveDeletes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ObjectChangeConflict.Resolve(System.Data.Linq.RefreshMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (refreshMode As RefreshMode, autoResolveDeletes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode, bool autoResolveDeletes);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Data.Linq.RefreshMode * bool -&gt; unit" Usage="objectChangeConflict.Resolve (refreshMode, autoResolveDeletes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="autoResolveDeletes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="f28d4-122"><see cref="T:System.Data.Linq.RefreshMode" /> 的相应选择。</span><span class="sxs-lookup"><span data-stu-id="f28d4-122">The appropriate option from <see cref="T:System.Data.Linq.RefreshMode" />.</span></span></param>
        <param name="autoResolveDeletes"><span data-ttu-id="f28d4-123">如果为 <see langword="true" />，则自动解决由数据库中不再存在的已修改对象产生的冲突。</span><span class="sxs-lookup"><span data-stu-id="f28d4-123">When <see langword="true" />, automatically resolves conflicts resulting from a modified object that is no longer in the database.</span></span></param>
        <summary><span data-ttu-id="f28d4-124">解决保留当前值且表示基线原始值的成员冲突。</span><span class="sxs-lookup"><span data-stu-id="f28d4-124">Resolve member conflicts keeping current values and resetting the baseline original values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
