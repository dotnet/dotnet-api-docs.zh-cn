<Type Name="XmlStreamStore" FullName="System.Windows.Annotations.Storage.XmlStreamStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fcb44a59d3682599c2cc31a4d04d6851114fb845" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86707133" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlStreamStore : System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlStreamStore extends System.Windows.Annotations.Storage.AnnotationStore" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.Storage.XmlStreamStore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlStreamStore&#xA;Inherits AnnotationStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlStreamStore sealed : System::Windows::Annotations::Storage::AnnotationStore" />
  <TypeSignature Language="F#" Value="type XmlStreamStore = class&#xA;    inherit AnnotationStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlStreamStore extends System.Windows.Annotations.Storage.AnnotationStore" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Annotations.Storage.AnnotationStore</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="27c8a-101">表示用于写入或读取用户批注的 XML 数据存储区。</span><span class="sxs-lookup"><span data-stu-id="27c8a-101">Represents an XML data store for writing and reading user annotations.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=73824"><span data-ttu-id="27c8a-102">XML 标记兼容性规范</span><span class="sxs-lookup"><span data-stu-id="27c8a-102">XML Markup Compatibility Specification</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c8a-103">初始化 <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="27c8a-103">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.Storage.XmlStreamStore : System.IO.Stream -&gt; System.Windows.Annotations.Storage.XmlStreamStore" Usage="new System.Windows.Annotations.Storage.XmlStreamStore stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="27c8a-104">用于读取和写入用户批注的 I/O 流。</span><span class="sxs-lookup"><span data-stu-id="27c8a-104">The I/O stream for reading and writing user annotations.</span></span></param>
        <summary><span data-ttu-id="27c8a-105">使用指定 I/O <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="27c8a-105">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c8a-106">`stream`必须为有效的 XML 格式且符合该 [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] 架构。</span><span class="sxs-lookup"><span data-stu-id="27c8a-106">`stream` must be in valid XML format and comply with the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] schema.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream, System.Collections.Generic.IDictionary&lt;Uri,System.Collections.Generic.IList&lt;Uri&gt;&gt; knownNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Collections.Generic.IDictionary`2&lt;class System.Uri, class System.Collections.Generic.IList`1&lt;class System.Uri&gt;&gt; knownNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, knownNamespaces As IDictionary(Of Uri, IList(Of Uri)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream, System::Collections::Generic::IDictionary&lt;Uri ^, System::Collections::Generic::IList&lt;Uri ^&gt; ^&gt; ^ knownNamespaces);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.Storage.XmlStreamStore : System.IO.Stream * System.Collections.Generic.IDictionary&lt;Uri, System.Collections.Generic.IList&lt;Uri&gt;&gt; -&gt; System.Windows.Annotations.Storage.XmlStreamStore" Usage="new System.Windows.Annotations.Storage.XmlStreamStore (stream, knownNamespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="knownNamespaces" Type="System.Collections.Generic.IDictionary&lt;System.Uri,System.Collections.Generic.IList&lt;System.Uri&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="27c8a-107">用于读取和写入用户批注的 I/O 流。</span><span class="sxs-lookup"><span data-stu-id="27c8a-107">The I/O stream for reading and writing user annotations.</span></span></param>
        <param name="knownNamespaces"><span data-ttu-id="27c8a-108">包含已知兼容命名空间列表的字典。</span><span class="sxs-lookup"><span data-stu-id="27c8a-108">A dictionary with a list of known compatible namespaces.</span></span></param>
        <summary><span data-ttu-id="27c8a-109">使用指定 I/O <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> 和已知兼容命名空间的字典初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="27c8a-109">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" /> and dictionary of known compatible namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c8a-110">此 <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> 构造函数允许注册应用程序特定的已知命名空间。</span><span class="sxs-lookup"><span data-stu-id="27c8a-110">This <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor enables the registration of application-specific known namespaces.</span></span>  
  
 <span data-ttu-id="27c8a-111">`knownNamespace`字典定义在将自定义内容作为批注的一部分存储时使用的应用程序命名空间。</span><span class="sxs-lookup"><span data-stu-id="27c8a-111">The `knownNamespace` dictionary defines application namespaces that are used when you store custom content as part of an annotation.</span></span>  <span data-ttu-id="27c8a-112">字典键是应用程序已知的主命名空间。</span><span class="sxs-lookup"><span data-stu-id="27c8a-112">The dictionary key is the primary namespace known to the application program.</span></span>  <span data-ttu-id="27c8a-113">命名空间键与较旧命名空间的值列表相关联，这些命名空间与 "key" 命名空间兼容。</span><span class="sxs-lookup"><span data-stu-id="27c8a-113">The namespace key is associated with a value list of older namespaces that are compatible with the "key" namespace.</span></span>  <span data-ttu-id="27c8a-114">加载批注时，此列表中的所有命名空间都将替换为 "key" 命名空间。</span><span class="sxs-lookup"><span data-stu-id="27c8a-114">When annotations are loaded all namespaces from this list will be replaced by the "key" namespace.</span></span>  
  
 <span data-ttu-id="27c8a-115">`stream`必须为有效的 XML 格式且符合[批注架构](/dotnet/framework/wpf/advanced/annotations-schema)。</span><span class="sxs-lookup"><span data-stu-id="27c8a-115">`stream` must be in valid XML format and comply with the [Annotations Schema](/dotnet/framework/wpf/advanced/annotations-schema).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27c8a-116"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-116"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="27c8a-117"><paramref name="stream" /> 包含无效的 XML。</span><span class="sxs-lookup"><span data-stu-id="27c8a-117"><paramref name="stream" /> contains invalid XML.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27c8a-118"><paramref name="knownNamespaces" /> 字典包含重复的命名空间。</span><span class="sxs-lookup"><span data-stu-id="27c8a-118">The <paramref name="knownNamespaces" /> dictionary contains a duplicate namespace.</span></span>  
  
<span data-ttu-id="27c8a-119">-或-</span><span class="sxs-lookup"><span data-stu-id="27c8a-119">-or-</span></span> 
<span data-ttu-id="27c8a-120"><paramref name="knownNamespaces" /> 字典包含具有 <see langword="null" /> 键的元素。</span><span class="sxs-lookup"><span data-stu-id="27c8a-120">The <paramref name="knownNamespaces" /> dictionary contains an element that has a <see langword="null" /> key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public override void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddAnnotation(class System.Windows.Annotations.Annotation newAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddAnnotation (newAnnotation As Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddAnnotation(System::Windows::Annotations::Annotation ^ newAnnotation);" />
      <MemberSignature Language="F#" Value="override this.AddAnnotation : System.Windows.Annotations.Annotation -&gt; unit" Usage="xmlStreamStore.AddAnnotation newAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAnnotation" Type="System.Windows.Annotations.Annotation" />
      </Parameters>
      <Docs>
        <param name="newAnnotation"><span data-ttu-id="27c8a-121">要添加到存储区的批注。</span><span class="sxs-lookup"><span data-stu-id="27c8a-121">The annotation to add to the store.</span></span></param>
        <summary><span data-ttu-id="27c8a-122">将新 <see cref="T:System.Windows.Annotations.Annotation" /> 添加到存储区中。</span><span class="sxs-lookup"><span data-stu-id="27c8a-122">Adds a new <see cref="T:System.Windows.Annotations.Annotation" /> to the store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c8a-123">调用时，将对的 <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> <xref:System.Windows.Annotations.Annotation.Id%2A> <xref:System.Windows.Annotations.Annotation> 进行检查，以确定是否已将 <xref:System.Windows.Annotations.Annotation> 添加到存储区中。</span><span class="sxs-lookup"><span data-stu-id="27c8a-123">When <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> is called, the <xref:System.Windows.Annotations.Annotation.Id%2A> of the <xref:System.Windows.Annotations.Annotation> is checked to see whether the <xref:System.Windows.Annotations.Annotation> already has been added to the store.</span></span>  <span data-ttu-id="27c8a-124">如果 <xref:System.Windows.Annotations.Annotation> 已添加并且在存储区中，则会 <xref:System.ArgumentException> 引发错误。</span><span class="sxs-lookup"><span data-stu-id="27c8a-124">If the <xref:System.Windows.Annotations.Annotation> already has been added and is in the store an <xref:System.ArgumentException> error is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27c8a-125"><paramref name="newAnnotation" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-125"><paramref name="newAnnotation" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27c8a-126">存储区中已存在具有相同 <see cref="T:System.Windows.Annotations.Annotation" /> 的 <see cref="P:System.Windows.Annotations.Annotation.Id" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-126">An <see cref="T:System.Windows.Annotations.Annotation" /> with the same <see cref="P:System.Windows.Annotations.Annotation.Id" /> already is in the store.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27c8a-127">还没有为存储区设置 I/O <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-127">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="27c8a-128">已在存储区上调用 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-128"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public override bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27c8a-129">获取或设置一个值，该值指示是否立即将批注缓冲区中的数据写入物理数据存储区。</span><span class="sxs-lookup"><span data-stu-id="27c8a-129">Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.</span></span></summary>
        <value><span data-ttu-id="27c8a-130">如果对每次操作都要立即将批注缓冲区中的数据写入物理数据存储区，则为 <see langword="true" />；如果要在应用程序显式调用 <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" /> 时写入批注缓冲区中的数据，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-130"><see langword="true" /> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <see langword="false" /> if data in the annotation buffers is to be written when the application explicitly calls <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation DeleteAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ DeleteAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="override this.DeleteAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="xmlStreamStore.DeleteAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId"><span data-ttu-id="27c8a-131">要删除的注释的全局唯一标识符 (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="27c8a-131">The globally unique identifier (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be deleted.</span></span></param>
        <summary><span data-ttu-id="27c8a-132">从存储区中删除具有指定 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注。</span><span class="sxs-lookup"><span data-stu-id="27c8a-132">Deletes the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</span></span></summary>
        <returns><span data-ttu-id="27c8a-133">已删除的批注；如果在存储区中未找到具有指定 <see langword="null" /> 的批注，则为 <paramref name="annotationId" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-133">The annotation that was deleted; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c8a-134">下面的示例演示如何使用 <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> 和 <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="27c8a-134">The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="27c8a-135">已在存储区上调用 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-135"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27c8a-136">还没有为存储区设置 I/O <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-136">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span></span></exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xmlStreamStore.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlStreamStore.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27c8a-137">强制将内部缓冲区中保留的所有批注数据写入基础存储设备中。</span><span class="sxs-lookup"><span data-stu-id="27c8a-137">Forces any annotation data retained in internal buffers to be written to the underlying storage device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c8a-138">下面的示例演示如何 <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> 在应用程序关闭时使用方法 <xref:System.Windows.Annotations.AnnotationService> 。</span><span class="sxs-lookup"><span data-stu-id="27c8a-138">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> method when the application closes the <xref:System.Windows.Annotations.AnnotationService>.</span></span>  
  
 [!code-csharp[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#stopannotations)]
 [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#stopannotations)]  
  
 <span data-ttu-id="27c8a-139">下面的示例演示如何使用 <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> 和 <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="27c8a-139">The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="27c8a-140">已在存储区上调用 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-140"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27c8a-141">还没有为存储区设置 I/O <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-141">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="27c8a-142">存储区 I/O <see cref="T:System.IO.Stream" /> 为只读，且无法进行输出访问。</span><span class="sxs-lookup"><span data-stu-id="27c8a-142">The store I/O <see cref="T:System.IO.Stream" /> is read-only and cannot be accessed for output.</span></span></exception>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation GetAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ GetAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="override this.GetAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="xmlStreamStore.GetAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId"><span data-ttu-id="27c8a-143">要返回的注释的 GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="27c8a-143">The GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be returned.</span></span></param>
        <summary><span data-ttu-id="27c8a-144">从存储区中返回具有指定 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注。</span><span class="sxs-lookup"><span data-stu-id="27c8a-144">Returns the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</span></span></summary>
        <returns><span data-ttu-id="27c8a-145">具有给定 <paramref name="annotationId" /> 的批注；如果在存储区中未找到具有指定 <paramref name="annotationId" /> 的批注，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-145">The annotation with the given <paramref name="annotationId" />; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="27c8a-146">已在存储区上调用 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-146"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAnnotations">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c8a-147">返回存储区中所有批注的列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-147">Returns a list of all the annotations in the store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c8a-148">下面的示例演示如何使用 <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> 方法来确定存储区中是否包含任何批注。</span><span class="sxs-lookup"><span data-stu-id="27c8a-148">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations contained in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations () As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations();" />
      <MemberSignature Language="F#" Value="override this.GetAnnotations : unit -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="xmlStreamStore.GetAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27c8a-149">返回存储区中所有批注的列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-149">Returns a list of all the annotations in the store.</span></span></summary>
        <returns><span data-ttu-id="27c8a-150">存储区中当前存在的所有批注的列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-150">The list of all annotations that are currently in the store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c8a-151"><xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A>方法从不返回 `null` ; 但是，如果存储区不包含批注，则该列表可能为空。</span><span class="sxs-lookup"><span data-stu-id="27c8a-151">The <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method will never return `null`; however the list may be empty if the store contains no annotations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c8a-152">下面的示例演示如何使用 <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> 方法来确定存储区中是否存在任何批注。</span><span class="sxs-lookup"><span data-stu-id="27c8a-152">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="27c8a-153">已在存储区上调用 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-153"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations(class System.Windows.Annotations.ContentLocator anchorLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations (anchorLocator As ContentLocator) As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations(System::Windows::Annotations::ContentLocator ^ anchorLocator);" />
      <MemberSignature Language="F#" Value="override this.GetAnnotations : System.Windows.Annotations.ContentLocator -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="xmlStreamStore.GetAnnotations anchorLocator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchorLocator" Type="System.Windows.Annotations.ContentLocator" />
      </Parameters>
      <Docs>
        <param name="anchorLocator"><span data-ttu-id="27c8a-154">为其返回匹配批注的起始 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 序列。</span><span class="sxs-lookup"><span data-stu-id="27c8a-154">The starting <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence to return matching annotations for.</span></span></param>
        <summary><span data-ttu-id="27c8a-155">返回批注的列表，这些批注具有 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 且定位器以匹配 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 序列开头。</span><span class="sxs-lookup"><span data-stu-id="27c8a-155">Returns a list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that begin with a matching <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence.</span></span></summary>
        <returns><span data-ttu-id="27c8a-156">具有 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 且定位器以给定 <paramref name="anchorLocator" /> 开始并与之匹配的批注列表；如果找不到匹配的批注，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-156">The list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that start and match the given <paramref name="anchorLocator" />; otherwise, <see langword="null" /> if no matching annotations were found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c8a-157">此 <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> 方法在内部使用 <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> 类的方法 <xref:System.Windows.Annotations.ContentLocator> 来搜索和匹配要返回的批注。</span><span class="sxs-lookup"><span data-stu-id="27c8a-157">This <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c8a-158">下面的示例演示如何使用 <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> 方法来确定存储区中是否存在任何批注。</span><span class="sxs-lookup"><span data-stu-id="27c8a-158">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetWellKnownCompatibleNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; GetWellKnownCompatibleNamespaces (Uri name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Uri&gt; GetWellKnownCompatibleNamespaces(class System.Uri name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWellKnownCompatibleNamespaces (name As Uri) As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Uri ^&gt; ^ GetWellKnownCompatibleNamespaces(Uri ^ name);" />
      <MemberSignature Language="F#" Value="static member GetWellKnownCompatibleNamespaces : Uri -&gt; System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="27c8a-159">为其返回命名空间列表的起始 URI 序列。</span><span class="sxs-lookup"><span data-stu-id="27c8a-159">The starting URI sequence to return the list of namespaces for.</span></span></param>
        <summary><span data-ttu-id="27c8a-160">返回与输入命名空间兼容的命名空间列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-160">Returns a list of namespaces that are compatible as an input namespace.</span></span></summary>
        <returns><span data-ttu-id="27c8a-161">与 <paramref name="name" /> 匹配的兼容命名空间的列表；如果找不到任何兼容命名空间，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27c8a-161">A list of compatible namespaces that match <paramref name="name" />; otherwise, <see langword="null" /> if there are no compatible namespaces found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c8a-162">此 `name` 参数仅适用于预定义的 [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] 命名空间。</span><span class="sxs-lookup"><span data-stu-id="27c8a-162">The `name` parameter works only for predefined [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] namespaces.</span></span>  <span data-ttu-id="27c8a-163">对于参数中给定的任何其他命名空间 `name` <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> `null` ，甚至将返回通过 `knownNamespaces` 构造函数的参数注册 <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> 的命名空间。</span><span class="sxs-lookup"><span data-stu-id="27c8a-163">For any other namespace given in the `name` parameter <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> will return `null`, even those namespaces registered through the `knownNamespaces` parameter of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="27c8a-164">预定义的命名空间 [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] 包括：</span><span class="sxs-lookup"><span data-stu-id="27c8a-164">The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] include the following:</span></span>  
  
- `http://schemas.microsoft.com/windows/annotations/2003/11/core`
  
- `http://schemas.microsoft.com/windows/annotations/2003/11/base`
  
- `http://schemas.microsoft.com/winfx/2006/xaml/presentation`
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=73824"><span data-ttu-id="27c8a-165">XML 标记兼容性规范</span><span class="sxs-lookup"><span data-stu-id="27c8a-165">XML Markup Compatibility Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IgnoredNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Uri&gt; IgnoredNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Uri&gt; IgnoredNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoredNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Uri ^&gt; ^ IgnoredNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoredNamespaces : System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27c8a-166">获取加载 XML 流时被忽略的命名空间的列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-166">Gets a list of the namespaces that were ignored when the XML stream was loaded.</span></span></summary>
        <value><span data-ttu-id="27c8a-167">加载 XML 流时被忽略的命名空间的列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-167">The list of the namespaces that were ignored when the XML stream was loaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c8a-168">此 <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> 属性将从不返回 `null` ，但是，如果不忽略任何命名空间，则返回的列表可能为空。</span><span class="sxs-lookup"><span data-stu-id="27c8a-168">The <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> property will never return `null`, however the returned list can be empty if no namespaces are ignored.</span></span>  
  
 <span data-ttu-id="27c8a-169"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A>当程序读取由的不同版本创建的批注内容时，有助于 XML 标记兼容性 [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="27c8a-169"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> helps in XML markup compatibility when the program reads annotation content created by different versions of the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span></span>  <span data-ttu-id="27c8a-170">当给定较旧的应用程序使用较新版本的创建的批注内容时 [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] ，将 <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> 返回较旧框架未知的元素和属性的 XML 命名空间列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-170">When an older application is given annotation content created using a newer version of the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)], <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> returns a list of the XML namespaces for elements and attributes not known to the older framework.</span></span>  <span data-ttu-id="27c8a-171">当较旧的应用程序读取并反序列化批注内容时，将忽略与较新的命名空间相关联的未知 XML 元素和属性。</span><span class="sxs-lookup"><span data-stu-id="27c8a-171">Unknown XML elements and attributes associated with newer namespaces are ignored when the annotation content is read and deserialized by the older application.</span></span>  <span data-ttu-id="27c8a-172">有关详细信息，请参阅中提供的*XML 标记兼容性规范* [https://go.microsoft.com/fwlink/?LinkId=73824](https://go.microsoft.com/fwlink/?LinkId=73824) 。</span><span class="sxs-lookup"><span data-stu-id="27c8a-172">For more information see the *XML Markup Compatibility Specification* available at [https://go.microsoft.com/fwlink/?LinkId=73824](https://go.microsoft.com/fwlink/?LinkId=73824).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=73824"><span data-ttu-id="27c8a-173">XML 标记兼容性规范</span><span class="sxs-lookup"><span data-stu-id="27c8a-173">XML Markup Compatibility Specification</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnStoreContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStoreContentChanged(class System.Windows.Annotations.Storage.StoreContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStoreContentChanged (e As StoreContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStoreContentChanged(System::Windows::Annotations::Storage::StoreContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnStoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventArgs -&gt; unit" Usage="xmlStreamStore.OnStoreContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Annotations.Storage.StoreContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WellKnownNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; WellKnownNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;class System.Uri&gt; WellKnownNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WellKnownNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IList&lt;Uri ^&gt; ^ WellKnownNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WellKnownNamespaces : System.Collections.Generic.IList&lt;Uri&gt;" Usage="System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27c8a-174">获取由 [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] 预定义的所有命名空间的列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-174">Gets a list of all namespaces that are predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)].</span></span></summary>
        <value><span data-ttu-id="27c8a-175">由 [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] 预定义的所有命名空间的列表。</span><span class="sxs-lookup"><span data-stu-id="27c8a-175">The list of namespaces that are predefined by the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c8a-176">预定义的命名空间 [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] 包括：</span><span class="sxs-lookup"><span data-stu-id="27c8a-176">The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] include the following:</span></span>  
  
- `http://schemas.microsoft.com/windows/annotations/2003/11/core`
  
- `http://schemas.microsoft.com/windows/annotations/2003/11/base`
  
- `http://schemas.microsoft.com/winfx/2006/xaml/presentation`
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=73824"><span data-ttu-id="27c8a-177">XML 标记兼容性规范</span><span class="sxs-lookup"><span data-stu-id="27c8a-177">XML Markup Compatibility Specification</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
