<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a12c27348c86955bb3166be4fca252e144caaf4c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89964898" /></Metadata><TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <TypeSignature Language="F#" Value="type ICommunicationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>为系统中所有面向通信的对象（包括通道、通道管理器、工厂、侦听器以及调度程序和服务主机）定义基本状态机的协定。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject>接口定义：  
  
-   一组用于启动状态转换的打开、关闭和中止方法：  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   打开和关闭方法的异步版本：  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   一组提供状态转换通知的事件：  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   <xref:System.ServiceModel.ICommunicationObject.State%2A>用于检查对象状态的公共属性  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="iCommunicationObject.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使通信对象立即从其当前状态转换到关闭状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法指示在返回之前应忽略或意外终止任何未完成的工作。 <xref:System.ServiceModel.ICommunicationObject.Abort%2A> 方法可用于取消任何未处理的操作，包括对 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 的未处理的调用。  
  
 将 <xref:System.ServiceModel.ICommunicationObject> 从状态正常转换 <xref:System.ServiceModel.CommunicationState.Opened> 为 <xref:System.ServiceModel.CommunicationState.Closed> 状态调用 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>开始一个异步操作以关闭通信对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法导致 <xref:System.ServiceModel.ICommunicationObject> 从状态正常转换 <xref:System.ServiceModel.CommunicationState.Opened> 到 <xref:System.ServiceModel.CommunicationState.Closed> 状态。  
  
 提供了有显式超时和没有显式超时两个版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</param>
        <summary>开始一个异步操作以关闭通信对象。</summary>
        <returns>引用异步关闭操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法导致 <xref:System.ServiceModel.ICommunicationObject> 从状态正常转换为状态，而不是状态 <xref:System.ServiceModel.CommunicationState.Opened> <xref:System.ServiceModel.CommunicationState.Closed> 。 使用 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法，可在返回之前完成所有未完成的工作。 例如，完成所有缓冲的消息的发送）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">对处于 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的默认超时。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</param>
        <param name="callback">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</param>
        <summary>开始一个异步操作以在指定超时内关闭通信对象。</summary>
        <returns>引用异步关闭操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法会导致 <xref:System.ServiceModel.ICommunicationObject> <xref:System.ServiceModel.CommunicationState.Opened> <xref:System.ServiceModel.CommunicationState.Closed> 在指定时间间隔内从任何状态正常转换为状态，而不是状态。 使用 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法，可在返回之前完成所有未完成的工作。 例如，完成所有缓冲的消息的发送）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">对处于 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的指定超时。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>开始一个异步操作以关闭通信对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>方法会使 <xref:System.ServiceModel.ICommunicationObject> 进入状态，在 <xref:System.ServiceModel.CommunicationState.Opening> 该状态下，它的转换到 <xref:System.ServiceModel.CommunicationState.Opened> 状态为 "已完成" 或 "失败"。  
  
 提供了有显式超时和没有显式超时两个版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">接收异步打开操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步打开操作相关联的状态信息。</param>
        <summary>开始一个异步操作以打开通信对象。</summary>
        <returns>引用异步打开操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject>实例化时，它将以状态开始 <xref:System.ServiceModel.CommunicationState.Created> 。 在处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时，可以配置此对象（例如，可以设置属性或注册事件），但仍不能用此对象发送或接收消息。 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>方法会使进入状态，在此 <xref:System.ServiceModel.ICommunicationObject> 状态下，在 <xref:System.ServiceModel.CommunicationState.Opening> 打开操作成功、打开操作超时或失败以及对象出现故障时，或 <xref:System.ServiceModel.ICommunicationObject> 中止。  
  
 在 <xref:System.ServiceModel.CommunicationState.Opened> 状态下， <xref:System.ServiceModel.ICommunicationObject> 可以使用 (例如，可以) 接收消息，但它将不再可配置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的默认打开超时。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</param>
        <param name="callback">接收异步打开操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</param>
        <param name="state">一个由应用程序指定的对象，它包含与异步打开操作相关联的状态信息。</param>
        <summary>开始一个异步操作以在指定时间间隔内打开通信对象。</summary>
        <returns>引用异步打开操作的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject>实例化时，它将以状态开始 <xref:System.ServiceModel.CommunicationState.Created> 。 在处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时，可以配置此对象（例如，可以设置属性或注册事件），但仍不能用此对象发送或接收消息。 <xref:System.ServiceModel.ICommunicationObject.Open%2A>方法会使进入状态，在此 <xref:System.ServiceModel.ICommunicationObject> 状态下，在 <xref:System.ServiceModel.CommunicationState.Opening> 打开操作成功、打开操作超时或失败以及对象出现故障时，或 <xref:System.ServiceModel.ICommunicationObject> 中止。  
  
 在 <xref:System.ServiceModel.CommunicationState.Opened> 状态下， <xref:System.ServiceModel.ICommunicationObject> 可以使用 (例如，可以) 接收消息，但它将不再可配置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的指定超时。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.TimeoutException" />如果超出指定的，则操作必须引发 <paramref name="timeout" /> 。</para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使通信对象从其当前状态转换到关闭状态。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iCommunicationObject.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使通信对象从其当前状态转换到关闭状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法导致 <xref:System.ServiceModel.ICommunicationObject> 从状态正常转换 <xref:System.ServiceModel.CommunicationState.Opened> 到 <xref:System.ServiceModel.CommunicationState.Closed> 状态。 使用 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 方法，可在返回之前完成所有未完成的工作。 例如，完成所有缓冲的消息的发送）。  
  
 <xref:System.ServiceModel.ICommunicationObject>进入 <xref:System.ServiceModel.CommunicationState.Closing> 状态，并在转换为状态之前保留在其中 <xref:System.ServiceModel.CommunicationState.Closed> 。  
  
 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 在 <xref:System.ServiceModel.CommunicationState.Closed> 达到状态后返回。  
  
 如果在能够正常关闭之前所经过的默认关闭超时时间 <xref:System.ServiceModel.ICommunicationObject> ，则 <xref:System.ServiceModel.ICommunicationObject> 中止。  
  
 如果在 <xref:System.ServiceModel.ICommunicationObject.Close%2A> <xref:System.ServiceModel.ICommunicationObject> 、或状态中对调用了，则将 <xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opening> <xref:System.ServiceModel.CommunicationState.Faulted> <xref:System.ServiceModel.ICommunicationObject> 中止。 如果在 <xref:System.ServiceModel.ICommunicationObject.Close%2A> <xref:System.ServiceModel.ICommunicationObject> 或状态中对的 <xref:System.ServiceModel.CommunicationState.Closing> 调用 <xref:System.ServiceModel.CommunicationState.Closed> ，则调用将立即返回。  
  
 还有一种异步版本的 close 方法，该方法通过调用来启动 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 并通过调用完成 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">对处于 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的默认关闭超时。</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="iCommunicationObject.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</param>
        <summary>使通信对象从其当前状态转换到关闭状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使 <xref:System.ServiceModel.ICommunicationObject> <xref:System.ServiceModel.CommunicationState.Opened> <xref:System.ServiceModel.CommunicationState.Closed> 在指定时间间隔内从状态正常转换到状态。 使用 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 方法，可在返回之前完成所有未完成的工作。 例如，完成所有缓冲的消息的发送）。  
  
 <xref:System.ServiceModel.ICommunicationObject>进入 <xref:System.ServiceModel.CommunicationState.Closing> 状态，并在转换为状态之前保留在其中 <xref:System.ServiceModel.CommunicationState.Closed> 。  
  
 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 在 <xref:System.ServiceModel.CommunicationState.Closed> 达到状态后返回。  
  
 如果在 <xref:System.ServiceModel.ICommunicationObject> 能够正常关闭之前超时，则 <xref:System.ServiceModel.ICommunicationObject> 中止。  
  
 如果在 <xref:System.ServiceModel.ICommunicationObject.Close%2A> <xref:System.ServiceModel.ICommunicationObject> 、或状态中对调用了，则将 <xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opening> <xref:System.ServiceModel.CommunicationState.Faulted> <xref:System.ServiceModel.ICommunicationObject> 中止。  如果在 <xref:System.ServiceModel.ICommunicationObject.Close%2A> <xref:System.ServiceModel.ICommunicationObject> 或状态中对的 <xref:System.ServiceModel.CommunicationState.Closing> 调用 <xref:System.ServiceModel.CommunicationState.Closed> ，则调用将立即返回。  
  
 还有一种异步版本的 close 方法，该方法通过调用来启动 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 并通过调用完成 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">对处于 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的超时。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.TimeoutException" />如果超出指定的，则操作必须引发 <paramref name="timeout" /> 。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当通信对象完成从正在关闭状态转换到已关闭状态时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : EventHandler " Usage="member this.Closing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当通信对象首次进入正在关闭状态时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当通信对象首次开始从 <xref:System.ServiceModel.CommunicationState.Opened> 状态转换到状态时，如果在 <xref:System.ServiceModel.CommunicationState.Closed> <xref:System.ServiceModel.ICommunicationObject.Close%2A> 调用或方法之后立即开始转换，则会发生此事件 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndClose : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，由对 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> 方法的调用返回。</param>
        <summary>完成一个异步操作以关闭通信对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">对处于 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的超时。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOpen : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，由对 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> 方法的调用返回。</param>
        <summary>完成一个异步操作以打开通信对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的超时。</exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberSignature Language="F#" Value="member this.Faulted : EventHandler " Usage="member this.Faulted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当通信对象首次进入出错状态时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使通信对象从已创建状态转换到已打开状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供了有显式超时和没有显式超时两个版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="iCommunicationObject.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使通信对象从已创建状态转换到已打开状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject>实例化时，它将以状态开始 <xref:System.ServiceModel.CommunicationState.Created> 。 在处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时，可以配置此对象（例如，可以设置属性或注册事件），但仍不能用此对象发送或接收消息。 <xref:System.ServiceModel.ICommunicationObject.Open%2A>方法会使进入状态，在此 <xref:System.ServiceModel.ICommunicationObject> 状态下，在 <xref:System.ServiceModel.CommunicationState.Opening> 打开操作成功、打开操作超时或失败以及对象出现故障时，或 <xref:System.ServiceModel.ICommunicationObject> 中止。  
  
 在 <xref:System.ServiceModel.CommunicationState.Opened> 状态下， <xref:System.ServiceModel.ICommunicationObject> 可以使用 (例如，可以) 接收消息，但它将不再可配置。  
  
 还有一个打开方法的异步版本，该方法可通过调用 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 来启动并通过调用 <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> 来完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的默认打开超时。</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Open : TimeSpan -&gt; unit" Usage="iCommunicationObject.Open timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</param>
        <summary>使通信对象在指定时间间隔内从已创建状态转换到已打开状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ICommunicationObject>实例化时，它将以状态开始 <xref:System.ServiceModel.CommunicationState.Created> 。 在处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时，可以配置此对象（例如，可以设置属性或注册事件），但仍不能用此对象发送或接收消息。 <xref:System.ServiceModel.ICommunicationObject.Open%2A>方法会使进入状态，在此 <xref:System.ServiceModel.ICommunicationObject> 状态下，在 <xref:System.ServiceModel.CommunicationState.Opening> 打开操作成功、打开操作超时或失败以及对象出现故障时，或 <xref:System.ServiceModel.ICommunicationObject> 中止。  
  
 在 <xref:System.ServiceModel.CommunicationState.Opened> 状态下， <xref:System.ServiceModel.ICommunicationObject> 可以使用 (例如，可以) 接收消息，但它将不再可配置。  
  
 还有一个打开方法的异步版本，该方法可通过调用 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 来启动并通过调用 <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> 来完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</exception>
        <exception cref="T:System.TimeoutException">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的指定超时。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.TimeoutException" />如果超出指定的，则操作必须引发 <paramref name="timeout" /> 。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当通信对象完成从正在打开状态转换到已打开状态时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberSignature Language="F#" Value="member this.Opening : EventHandler " Usage="member this.Opening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当通信对象首次进入正在打开状态时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当通信对象首次开始从 <xref:System.ServiceModel.CommunicationState.Created> 状态转换到状态时，如果在 <xref:System.ServiceModel.CommunicationState.Opened> <xref:System.ServiceModel.ICommunicationObject.Open%2A> 调用或方法之后立即开始转换，则会发生此事件 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.ServiceModel.CommunicationState" Usage="System.ServiceModel.ICommunicationObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取面向通信的对象的当前状态。</summary>
        <value>对象的 <see cref="T:System.ServiceModel.CommunicationState" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可用的主要通信状态为 <xref:System.ServiceModel.ICommunicationObject> ：  
  
-   <xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 当在前三个主状态之间转换时，这类对象还可能处于下列两个暂时状态下：  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 这 <xref:System.ServiceModel.CommunicationState> 会定义对系统中所有面向通信的对象（包括通道、侦听器、通道和侦听器工厂以及类）有效的状态 <xref:System.ServiceModel.ServiceHost> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
