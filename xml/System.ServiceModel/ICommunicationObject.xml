<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41913ea802158d134e30686271372014a1646d48" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83958541" /></Metadata><TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <TypeSignature Language="F#" Value="type ICommunicationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e5392-101">为系统中所有面向通信的对象（包括通道、通道管理器、工厂、侦听器以及调度程序和服务主机）定义基本状态机的协定。</span><span class="sxs-lookup"><span data-stu-id="e5392-101">Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-102"><xref:System.ServiceModel.ICommunicationObject> 接口定义：</span><span class="sxs-lookup"><span data-stu-id="e5392-102">The <xref:System.ServiceModel.ICommunicationObject> interface defines:</span></span>  
  
-   <span data-ttu-id="e5392-103">一组用于启动状态转换的打开、关闭和中止方法：</span><span class="sxs-lookup"><span data-stu-id="e5392-103">A set of open, close and abort methods for initiating state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   <span data-ttu-id="e5392-104">打开和关闭方法的异步版本：</span><span class="sxs-lookup"><span data-stu-id="e5392-104">Asynchronous versions of the open and close methods:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   <span data-ttu-id="e5392-105">一组提供状态转换通知的事件：</span><span class="sxs-lookup"><span data-stu-id="e5392-105">A set of events that provide notifications of state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   <span data-ttu-id="e5392-106">用于检查对象状态的常见 <xref:System.ServiceModel.ICommunicationObject.State%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="e5392-106">A common <xref:System.ServiceModel.ICommunicationObject.State%2A> property for inspecting the state of an object</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="iCommunicationObject.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5392-107">使通信对象立即从其当前状态转换到关闭状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-107">Causes a communication object to transition immediately from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-108">此方法指示在返回之前应忽略或意外终止任何未完成的工作。</span><span class="sxs-lookup"><span data-stu-id="e5392-108">This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</span></span> <span data-ttu-id="e5392-109"><xref:System.ServiceModel.ICommunicationObject.Abort%2A> 方法可用于取消任何未处理的操作，包括对 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 的未处理的调用。</span><span class="sxs-lookup"><span data-stu-id="e5392-109">The <xref:System.ServiceModel.ICommunicationObject.Abort%2A> method can be used to cancel any outstanding operations, including outstanding calls to <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 <span data-ttu-id="e5392-110">将 <xref:System.ServiceModel.ICommunicationObject> 从 <xref:System.ServiceModel.CommunicationState.Opened> 状态正常转换为 <xref:System.ServiceModel.CommunicationState.Closed> 状态调用 <xref:System.ServiceModel.ICommunicationObject.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="e5392-110">To gracefully transition an <xref:System.ServiceModel.ICommunicationObject> from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state call <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5392-111">开始执行异步操作，以关闭通信对象。</span><span class="sxs-lookup"><span data-stu-id="e5392-111">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-112">此方法导致 <xref:System.ServiceModel.ICommunicationObject> 从 <xref:System.ServiceModel.CommunicationState.Opened> 状态正常转换为 <xref:System.ServiceModel.CommunicationState.Closed> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-112">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span>  
  
 <span data-ttu-id="e5392-113">提供了有显式超时和没有显式超时两个版本。</span><span class="sxs-lookup"><span data-stu-id="e5392-113">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e5392-114">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="e5392-114">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="e5392-115">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="e5392-115">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="e5392-116">开始执行异步操作，以关闭通信对象。</span><span class="sxs-lookup"><span data-stu-id="e5392-116">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <returns><span data-ttu-id="e5392-117">引用异步关闭操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-117">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-118">此方法导致 <xref:System.ServiceModel.ICommunicationObject> 从除 <xref:System.ServiceModel.CommunicationState.Opened> 状态以外的任何状态正常转换为 <xref:System.ServiceModel.CommunicationState.Closed> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-118">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="e5392-119">使用 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法，可在返回之前完成所有未完成的工作。</span><span class="sxs-lookup"><span data-stu-id="e5392-119">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="e5392-120">例如，完成所有缓冲的消息的发送）。</span><span class="sxs-lookup"><span data-stu-id="e5392-120">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="e5392-121">对处于 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-121"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-122">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的默认超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-122">The default timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e5392-123"><see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</span><span class="sxs-lookup"><span data-stu-id="e5392-123">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="e5392-124">接收异步关闭操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="e5392-124">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="e5392-125">一个由应用程序指定的对象，它包含与异步关闭操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="e5392-125">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="e5392-126">开始一个异步操作以在指定超时内关闭通信对象。</span><span class="sxs-lookup"><span data-stu-id="e5392-126">Begins an asynchronous operation to close a communication object with a specified timeout.</span></span></summary>
        <returns><span data-ttu-id="e5392-127">引用异步关闭操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-127">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-128">此方法导致 <xref:System.ServiceModel.ICommunicationObject> 在指定时间间隔内从除 <xref:System.ServiceModel.CommunicationState.Opened> 状态以外的任何状态正常转换为 <xref:System.ServiceModel.CommunicationState.Closed> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-128">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state with in a specified interval of time.</span></span> <span data-ttu-id="e5392-129">使用 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法，可在返回之前完成所有未完成的工作。</span><span class="sxs-lookup"><span data-stu-id="e5392-129">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="e5392-130">例如，完成所有缓冲的消息的发送）。</span><span class="sxs-lookup"><span data-stu-id="e5392-130">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="e5392-131">对处于 <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-131"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-132">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的指定超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-132">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5392-133">开始执行异步操作，以关闭通信对象。</span><span class="sxs-lookup"><span data-stu-id="e5392-133">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-134"><xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 方法导致 <xref:System.ServiceModel.ICommunicationObject> 进入 <xref:System.ServiceModel.CommunicationState.Opening> 状态，在该状态下，将其保持到 <xref:System.ServiceModel.CommunicationState.Opened> 状态为 "已完成" 或 "失败"。</span><span class="sxs-lookup"><span data-stu-id="e5392-134">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until its transition to the <xref:System.ServiceModel.CommunicationState.Opened> state is completed or fails.</span></span>  
  
 <span data-ttu-id="e5392-135">提供了有显式超时和没有显式超时两个版本。</span><span class="sxs-lookup"><span data-stu-id="e5392-135">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e5392-136">接收异步打开操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="e5392-136">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span></span></param>
        <param name="state"><span data-ttu-id="e5392-137">一个由应用程序指定的对象，它包含与异步打开操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="e5392-137">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="e5392-138">开始执行异步操作，以打开通信对象。</span><span class="sxs-lookup"><span data-stu-id="e5392-138">Begins an asynchronous operation to open a communication object.</span></span></summary>
        <returns><span data-ttu-id="e5392-139">引用异步打开操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-139">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-140">实例化 <xref:System.ServiceModel.ICommunicationObject> 时，它将以 <xref:System.ServiceModel.CommunicationState.Created> 状态启动。</span><span class="sxs-lookup"><span data-stu-id="e5392-140">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="e5392-141">在处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时，可以配置此对象（例如，可以设置属性或注册事件），但仍不能用此对象发送或接收消息。</span><span class="sxs-lookup"><span data-stu-id="e5392-141">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="e5392-142"><xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 方法导致 <xref:System.ServiceModel.ICommunicationObject> 进入 <xref:System.ServiceModel.CommunicationState.Opening> 状态，在该状态下，该操作会一直保留，直到打开操作成功、打开操作超时或失败以及对象出现故障或 <xref:System.ServiceModel.ICommunicationObject> 中止。</span><span class="sxs-lookup"><span data-stu-id="e5392-142">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="e5392-143">在 <xref:System.ServiceModel.CommunicationState.Opened> 状态下，<xref:System.ServiceModel.ICommunicationObject> 可用（例如，可以接收消息），但它不再可配置。</span><span class="sxs-lookup"><span data-stu-id="e5392-143">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="e5392-144"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-144">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-145">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的默认打开超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-145">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e5392-146"><see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</span><span class="sxs-lookup"><span data-stu-id="e5392-146">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="e5392-147">接收异步打开操作完成通知的 <see cref="T:System.AsyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="e5392-147">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span></span></param>
        <param name="state"><span data-ttu-id="e5392-148">一个由应用程序指定的对象，它包含与异步打开操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="e5392-148">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="e5392-149">开始一个异步操作以在指定时间间隔内打开通信对象。</span><span class="sxs-lookup"><span data-stu-id="e5392-149">Begins an asynchronous operation to open a communication object within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="e5392-150">引用异步打开操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-150">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-151">实例化 <xref:System.ServiceModel.ICommunicationObject> 时，它将以 <xref:System.ServiceModel.CommunicationState.Created> 状态启动。</span><span class="sxs-lookup"><span data-stu-id="e5392-151">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="e5392-152">在处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时，可以配置此对象（例如，可以设置属性或注册事件），但仍不能用此对象发送或接收消息。</span><span class="sxs-lookup"><span data-stu-id="e5392-152">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="e5392-153"><xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法导致 <xref:System.ServiceModel.ICommunicationObject> 进入 <xref:System.ServiceModel.CommunicationState.Opening> 状态，在该状态下，该操作会一直保留，直到打开操作成功、打开操作超时或失败以及对象出现故障或 <xref:System.ServiceModel.ICommunicationObject> 中止。</span><span class="sxs-lookup"><span data-stu-id="e5392-153">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="e5392-154">在 <xref:System.ServiceModel.CommunicationState.Opened> 状态下，<xref:System.ServiceModel.ICommunicationObject> 可用（例如，可以接收消息），但它不再可配置。</span><span class="sxs-lookup"><span data-stu-id="e5392-154">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="e5392-155"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-155">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-156">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的指定超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-156">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="e5392-157">如果超过指定的 <paramref name="timeout" />，操作必须引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-157">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5392-158">让通信对象的状态从当前值变成“已关闭”。</span><span class="sxs-lookup"><span data-stu-id="e5392-158">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iCommunicationObject.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5392-159">让通信对象的状态从当前值变成“已关闭”。</span><span class="sxs-lookup"><span data-stu-id="e5392-159">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-160">此方法导致 <xref:System.ServiceModel.ICommunicationObject> 从 <xref:System.ServiceModel.CommunicationState.Opened> 状态正常转换为 <xref:System.ServiceModel.CommunicationState.Closed> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-160">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="e5392-161">使用 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 方法，可在返回之前完成所有未完成的工作。</span><span class="sxs-lookup"><span data-stu-id="e5392-161">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="e5392-162">例如，完成所有缓冲的消息的发送）。</span><span class="sxs-lookup"><span data-stu-id="e5392-162">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="e5392-163"><xref:System.ServiceModel.ICommunicationObject> 进入 <xref:System.ServiceModel.CommunicationState.Closing> 状态，并在转换到 <xref:System.ServiceModel.CommunicationState.Closed> 状态之前保留在其中。</span><span class="sxs-lookup"><span data-stu-id="e5392-163">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="e5392-164">一旦达到 <xref:System.ServiceModel.CommunicationState.Closed> 状态，<xref:System.ServiceModel.ICommunicationObject.Close%2A> 就返回。</span><span class="sxs-lookup"><span data-stu-id="e5392-164"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="e5392-165">如果在 <xref:System.ServiceModel.ICommunicationObject> 能够正常关闭之前所经过的默认关闭超时时间，则将中止 <xref:System.ServiceModel.ICommunicationObject>。</span><span class="sxs-lookup"><span data-stu-id="e5392-165">If the default close timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to close gracefully, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="e5392-166">如果对 <xref:System.ServiceModel.CommunicationState.Created>、<xref:System.ServiceModel.CommunicationState.Opening>或 <xref:System.ServiceModel.CommunicationState.Faulted> 状态中的 <xref:System.ServiceModel.ICommunicationObject> 调用 <xref:System.ServiceModel.ICommunicationObject.Close%2A>，则中止 <xref:System.ServiceModel.ICommunicationObject>。</span><span class="sxs-lookup"><span data-stu-id="e5392-166">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span> <span data-ttu-id="e5392-167">如果对 <xref:System.ServiceModel.CommunicationState.Closing> 或 <xref:System.ServiceModel.CommunicationState.Closed> 状态的 <xref:System.ServiceModel.ICommunicationObject> 调用 <xref:System.ServiceModel.ICommunicationObject.Close%2A>，则调用将立即返回。</span><span class="sxs-lookup"><span data-stu-id="e5392-167">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="e5392-168">还有一种异步版本的 close 方法，该方法通过调用 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 并通过调用 <xref:System.ServiceModel.ICommunicationObject.Close%2A>完成。</span><span class="sxs-lookup"><span data-stu-id="e5392-168">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="e5392-169">对处于 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-169"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-170">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的默认关闭超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-170">The default close timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="iCommunicationObject.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e5392-171"><see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</span><span class="sxs-lookup"><span data-stu-id="e5392-171">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="e5392-172">让通信对象的状态从当前值变成“已关闭”。</span><span class="sxs-lookup"><span data-stu-id="e5392-172">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-173">此方法导致 <xref:System.ServiceModel.ICommunicationObject> 在指定时间间隔内从 <xref:System.ServiceModel.CommunicationState.Opened> 状态正常转换为 <xref:System.ServiceModel.CommunicationState.Closed> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-173">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state within a specified interval of time.</span></span> <span data-ttu-id="e5392-174">使用 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 方法，可在返回之前完成所有未完成的工作。</span><span class="sxs-lookup"><span data-stu-id="e5392-174">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="e5392-175">例如，完成所有缓冲的消息的发送）。</span><span class="sxs-lookup"><span data-stu-id="e5392-175">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="e5392-176"><xref:System.ServiceModel.ICommunicationObject> 进入 <xref:System.ServiceModel.CommunicationState.Closing> 状态，并在转换到 <xref:System.ServiceModel.CommunicationState.Closed> 状态之前保留在其中。</span><span class="sxs-lookup"><span data-stu-id="e5392-176">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="e5392-177">一旦达到 <xref:System.ServiceModel.CommunicationState.Closed> 状态，<xref:System.ServiceModel.ICommunicationObject.Close%2A> 就返回。</span><span class="sxs-lookup"><span data-stu-id="e5392-177"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="e5392-178">如果在 <xref:System.ServiceModel.ICommunicationObject> 能够正常关闭之前超时，则中止 <xref:System.ServiceModel.ICommunicationObject>。</span><span class="sxs-lookup"><span data-stu-id="e5392-178">If the timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to gracefully close, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="e5392-179">如果对 <xref:System.ServiceModel.CommunicationState.Created>、<xref:System.ServiceModel.CommunicationState.Opening>或 <xref:System.ServiceModel.CommunicationState.Faulted> 状态中的 <xref:System.ServiceModel.ICommunicationObject> 调用 <xref:System.ServiceModel.ICommunicationObject.Close%2A>，则中止 <xref:System.ServiceModel.ICommunicationObject>。</span><span class="sxs-lookup"><span data-stu-id="e5392-179">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  <span data-ttu-id="e5392-180">如果对 <xref:System.ServiceModel.CommunicationState.Closing> 或 <xref:System.ServiceModel.CommunicationState.Closed> 状态的 <xref:System.ServiceModel.ICommunicationObject> 调用 <xref:System.ServiceModel.ICommunicationObject.Close%2A>，则调用将立即返回。</span><span class="sxs-lookup"><span data-stu-id="e5392-180">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="e5392-181">还有一种异步版本的 close 方法，该方法通过调用 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 并通过调用 <xref:System.ServiceModel.ICommunicationObject.Close%2A>完成。</span><span class="sxs-lookup"><span data-stu-id="e5392-181">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="e5392-182">对处于 <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-182"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-183">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-183">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="e5392-184">如果超过指定的 <paramref name="timeout" />，操作必须引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-184">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5392-185">当通信对象完成从正在关闭状态转换到已关闭状态时发生。</span><span class="sxs-lookup"><span data-stu-id="e5392-185">Occurs when the communication object completes its transition from the closing state into the closed state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : EventHandler " Usage="member this.Closing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5392-186">当通信对象首次进入正在关闭状态时发生。</span><span class="sxs-lookup"><span data-stu-id="e5392-186">Occurs when the communication object first enters the closing state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-187">当通信对象首次开始从 <xref:System.ServiceModel.CommunicationState.Opened> 状态转换到 <xref:System.ServiceModel.CommunicationState.Closed> 状态时，在调用了 <xref:System.ServiceModel.ICommunicationObject.Close%2A> 或 <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> 方法之后，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="e5392-187">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Opened> state into the <xref:System.ServiceModel.CommunicationState.Closed> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Close%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndClose : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e5392-188"><see cref="T:System.IAsyncResult" />，由对 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> 方法的调用返回。</span><span class="sxs-lookup"><span data-stu-id="e5392-188">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> method.</span></span></param>
        <summary><span data-ttu-id="e5392-189">完成一个异步操作以关闭通信对象。</span><span class="sxs-lookup"><span data-stu-id="e5392-189">Completes an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="e5392-190">对处于 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> 状态的对象调用了 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-190"><see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-191">在 <see cref="T:System.ServiceModel.ICommunicationObject" /> 能够正常关闭之前所经过的超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-191">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOpen : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e5392-192"><see cref="T:System.IAsyncResult" />，由对 <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> 方法的调用返回。</span><span class="sxs-lookup"><span data-stu-id="e5392-192">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> method.</span></span></param>
        <summary><span data-ttu-id="e5392-193">完成一个异步操作以打开通信对象。</span><span class="sxs-lookup"><span data-stu-id="e5392-193">Completes an asynchronous operation to open a communication object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="e5392-194"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-194">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-195">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-195">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberSignature Language="F#" Value="member this.Faulted : EventHandler " Usage="member this.Faulted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5392-196">当通信对象首次进入出错状态时发生。</span><span class="sxs-lookup"><span data-stu-id="e5392-196">Occurs when the communication object first enters the faulted state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5392-197">让通信对象的状态从“已创建”变成“已打开”。</span><span class="sxs-lookup"><span data-stu-id="e5392-197">Causes a communication object to transition from the created state into the opened state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-198">提供了有显式超时和没有显式超时两个版本。</span><span class="sxs-lookup"><span data-stu-id="e5392-198">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="iCommunicationObject.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5392-199">让通信对象的状态从“已创建”变成“已打开”。</span><span class="sxs-lookup"><span data-stu-id="e5392-199">Causes a communication object to transition from the created state into the opened state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-200">实例化 <xref:System.ServiceModel.ICommunicationObject> 时，它将以 <xref:System.ServiceModel.CommunicationState.Created> 状态启动。</span><span class="sxs-lookup"><span data-stu-id="e5392-200">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="e5392-201">在处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时，可以配置此对象（例如，可以设置属性或注册事件），但仍不能用此对象发送或接收消息。</span><span class="sxs-lookup"><span data-stu-id="e5392-201">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="e5392-202"><xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法导致 <xref:System.ServiceModel.ICommunicationObject> 进入 <xref:System.ServiceModel.CommunicationState.Opening> 状态，在该状态下，该操作会一直保留，直到打开操作成功、打开操作超时或失败以及对象出现故障或 <xref:System.ServiceModel.ICommunicationObject> 中止。</span><span class="sxs-lookup"><span data-stu-id="e5392-202">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="e5392-203">在 <xref:System.ServiceModel.CommunicationState.Opened> 状态下，<xref:System.ServiceModel.ICommunicationObject> 可用（例如，可以接收消息），但它不再可配置。</span><span class="sxs-lookup"><span data-stu-id="e5392-203">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="e5392-204">还有一个打开方法的异步版本，该方法可通过调用 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 来启动并通过调用 <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> 来完成。</span><span class="sxs-lookup"><span data-stu-id="e5392-204">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="e5392-205"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-205">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-206">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的默认打开超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-206">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Open : TimeSpan -&gt; unit" Usage="iCommunicationObject.Open timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e5392-207"><see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</span><span class="sxs-lookup"><span data-stu-id="e5392-207">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="e5392-208">使通信对象在指定时间间隔内从已创建状态转换到已打开状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-208">Causes a communication object to transition from the created state into the opened state within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-209">实例化 <xref:System.ServiceModel.ICommunicationObject> 时，它将以 <xref:System.ServiceModel.CommunicationState.Created> 状态启动。</span><span class="sxs-lookup"><span data-stu-id="e5392-209">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="e5392-210">在处于 <xref:System.ServiceModel.CommunicationState.Created> 状态时，可以配置此对象（例如，可以设置属性或注册事件），但仍不能用此对象发送或接收消息。</span><span class="sxs-lookup"><span data-stu-id="e5392-210">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="e5392-211"><xref:System.ServiceModel.ICommunicationObject.Open%2A> 方法导致 <xref:System.ServiceModel.ICommunicationObject> 进入 <xref:System.ServiceModel.CommunicationState.Opening> 状态，在该状态下，该操作会一直保留，直到打开操作成功、打开操作超时或失败以及对象出现故障或 <xref:System.ServiceModel.ICommunicationObject> 中止。</span><span class="sxs-lookup"><span data-stu-id="e5392-211">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="e5392-212">在 <xref:System.ServiceModel.CommunicationState.Opened> 状态下，<xref:System.ServiceModel.ICommunicationObject> 可用（例如，可以接收消息），但它不再可配置。</span><span class="sxs-lookup"><span data-stu-id="e5392-212">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="e5392-213">还有一个打开方法的异步版本，该方法可通过调用 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 来启动并通过调用 <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> 来完成。</span><span class="sxs-lookup"><span data-stu-id="e5392-213">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="e5392-214"><see cref="T:System.ServiceModel.ICommunicationObject" /> 无法打开并且已进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-214">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="e5392-215">在 <see cref="T:System.ServiceModel.ICommunicationObject" />（已经进入 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状态）能够进入 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状态之前所经过的指定超时。</span><span class="sxs-lookup"><span data-stu-id="e5392-215">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="e5392-216">如果超过指定的 <paramref name="timeout" />，操作必须引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="e5392-216">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5392-217">当通信对象完成从正在打开状态转换到已打开状态时发生。</span><span class="sxs-lookup"><span data-stu-id="e5392-217">Occurs when the communication object completes its transition from the opening state into the opened state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberSignature Language="F#" Value="member this.Opening : EventHandler " Usage="member this.Opening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5392-218">当通信对象首次进入正在打开状态时发生。</span><span class="sxs-lookup"><span data-stu-id="e5392-218">Occurs when the communication object first enters the opening state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-219">当通信对象首次开始从 <xref:System.ServiceModel.CommunicationState.Created> 状态转换到 <xref:System.ServiceModel.CommunicationState.Opened> 状态时，在调用了 <xref:System.ServiceModel.ICommunicationObject.Open%2A> 或 <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> 方法之后，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="e5392-219">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Created> state into the <xref:System.ServiceModel.CommunicationState.Opened> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.ServiceModel.CommunicationState" Usage="System.ServiceModel.ICommunicationObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5392-220">获取面向通信的对象的当前状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-220">Gets the current state of the communication-oriented object.</span></span></summary>
        <value><span data-ttu-id="e5392-221">对象的 <see cref="T:System.ServiceModel.CommunicationState" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="e5392-221">The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5392-222"><xref:System.ServiceModel.ICommunicationObject> 提供的主要通信状态如下：</span><span class="sxs-lookup"><span data-stu-id="e5392-222">The main communication states available to an <xref:System.ServiceModel.ICommunicationObject> are:</span></span>  
  
-   <span data-ttu-id="e5392-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span><span class="sxs-lookup"><span data-stu-id="e5392-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 <span data-ttu-id="e5392-224">当在前三个主状态之间转换时，这类对象还可能处于下列两个暂时状态下：</span><span class="sxs-lookup"><span data-stu-id="e5392-224">There are also transitory states that such an object can occupy when transitioning between the first three main states:</span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 <span data-ttu-id="e5392-225">此 <xref:System.ServiceModel.CommunicationState> 为系统中所有面向通信的对象（包括通道、侦听器、通道和侦听器工厂以及 <xref:System.ServiceModel.ServiceHost> 类）定义有效的状态。</span><span class="sxs-lookup"><span data-stu-id="e5392-225">This <xref:System.ServiceModel.CommunicationState> defines the states that are valid for all communication-oriented objects in the system, including channels, listeners, the channel and listener factories, and the <xref:System.ServiceModel.ServiceHost> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
