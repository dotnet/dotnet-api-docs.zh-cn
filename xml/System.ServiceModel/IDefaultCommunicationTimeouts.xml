<Type Name="IDefaultCommunicationTimeouts" FullName="System.ServiceModel.IDefaultCommunicationTimeouts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4673a037912d5893eb001541edc11ed795d5bade" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89950215" /></Metadata><TypeSignature Language="C#" Value="public interface IDefaultCommunicationTimeouts" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDefaultCommunicationTimeouts" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDefaultCommunicationTimeouts" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDefaultCommunicationTimeouts" />
  <TypeSignature Language="F#" Value="type IDefaultCommunicationTimeouts = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9de6d-101">定义用于指定通道、通道管理器（如通道侦听器和通道工厂）和服务主机所使用的通信超时的接口。</span><span class="sxs-lookup"><span data-stu-id="9de6d-101">Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9de6d-102">此接口有四个用于为 open、send、receive 和 close 方法提供默认超时值的只读属性。您可以对通信对象调用这四种方法。</span><span class="sxs-lookup"><span data-stu-id="9de6d-102">This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object.</span></span> <span data-ttu-id="9de6d-103">每个实现都负责以任何适合实现的方式获取默认值。</span><span class="sxs-lookup"><span data-stu-id="9de6d-103">Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation.</span></span> <span data-ttu-id="9de6d-104">此接口由 <xref:System.ServiceModel.Channels.ChannelBase>（这是用于编写自定义通道的基实现）和 <xref:System.ServiceModel.Channels.ChannelManagerBase>（这是用于编写从 <xref:System.ServiceModel.Channels.ChannelFactoryBase> 和 <xref:System.ServiceModel.Channels.ChannelListenerBase> 派生的自定义通道管理器的基实现）来实现。</span><span class="sxs-lookup"><span data-stu-id="9de6d-104">This interface is implemented by <xref:System.ServiceModel.Channels.ChannelBase>, the base implementation for writing custom channels, and the <xref:System.ServiceModel.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from <xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase>.</span></span> <span data-ttu-id="9de6d-105">该接口还由 <xref:System.ServiceModel.Channels.Binding> 类实现，然后继承自 <xref:System.ServiceModel.Channels.CustomBinding> 和系统提供的绑定，如 <xref:System.ServiceModel.BasicHttpBinding>。</span><span class="sxs-lookup"><span data-stu-id="9de6d-105">The interface is also implemented by the <xref:System.ServiceModel.Channels.Binding> class and then inherited from there by <xref:System.ServiceModel.Channels.CustomBinding> and the system-provided bindings, such as <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 <span data-ttu-id="9de6d-106">直接使用通道时，可以基于每个通道、每个操作或任何其他自定义方式来明确指定超时。</span><span class="sxs-lookup"><span data-stu-id="9de6d-106">When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis.</span></span> <span data-ttu-id="9de6d-107">使用通道模型时，可以在想要控制超时的时候轻松地对其进行访问。</span><span class="sxs-lookup"><span data-stu-id="9de6d-107">When using the channel model, timeouts are quite accessible when you want to control them.</span></span>  
  
 <span data-ttu-id="9de6d-108">另一方面，使用服务模型时，您是对服务和协定进行编程，而超时更多地是在后台处理。</span><span class="sxs-lookup"><span data-stu-id="9de6d-108">When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background.</span></span> <span data-ttu-id="9de6d-109">它们由基础结构系统来控制，该系统会代表您使超时从一个地方流动到另一个地方。</span><span class="sxs-lookup"><span data-stu-id="9de6d-109">They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf.</span></span> <span data-ttu-id="9de6d-110"><xref:System.ServiceModel.IDefaultCommunicationTimeouts> 就是一种提供该流程的机制。</span><span class="sxs-lookup"><span data-stu-id="9de6d-110"><xref:System.ServiceModel.IDefaultCommunicationTimeouts> is one mechanism for providing that flow.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseTimeout : TimeSpan" Usage="System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9de6d-111">获取 close 方法（由通信对象调用）在超时之前的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9de6d-111">Gets the interval of time after which the close method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="9de6d-112">指定在 close 方法超时之前要等待的时间间隔的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="9de6d-112">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the close method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9de6d-113">时间可能较长的操作必须设置超时。</span><span class="sxs-lookup"><span data-stu-id="9de6d-113">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="9de6d-114">未使用明确超时的方法必须委托将处理默认超时的方法，否则不得进行任何阻止工作。</span><span class="sxs-lookup"><span data-stu-id="9de6d-114">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="9de6d-115">超时是完成高级别操作的总时间限制，因此任何重试操作只能在前面的操作尚未耗尽时间之前进行。</span><span class="sxs-lookup"><span data-stu-id="9de6d-115">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan OpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan OpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.OpenTimeout : TimeSpan" Usage="System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9de6d-116">获取 open 方法（由通信对象调用）在超时之前的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9de6d-116">Gets the interval of time after which the open method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="9de6d-117">指定在 open 方法超时之前要等待的时间间隔的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="9de6d-117">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the open method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9de6d-118">时间可能较长的操作必须设置超时。</span><span class="sxs-lookup"><span data-stu-id="9de6d-118">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="9de6d-119">未使用明确超时的方法必须委托将处理默认超时的方法，否则不得进行任何阻止工作。</span><span class="sxs-lookup"><span data-stu-id="9de6d-119">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="9de6d-120">超时是完成高级别操作的总时间限制，因此任何重试操作只能在前面的操作尚未耗尽时间之前进行。</span><span class="sxs-lookup"><span data-stu-id="9de6d-120">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ReceiveTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ReceiveTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : TimeSpan" Usage="System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9de6d-121">获取 receive 方法（由通信对象调用）在超时之前的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9de6d-121">Gets the interval of time after which the receive method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="9de6d-122">指定在 receive 方法超时之前要等待的时间间隔的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="9de6d-122">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the receive method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9de6d-123">时间可能较长的操作必须设置超时。</span><span class="sxs-lookup"><span data-stu-id="9de6d-123">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="9de6d-124">未使用明确超时的方法必须委托将处理默认超时的方法，否则不得进行任何阻止工作。</span><span class="sxs-lookup"><span data-stu-id="9de6d-124">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="9de6d-125">超时是完成高级别操作的总时间限制，因此任何重试操作只能在前面的操作尚未耗尽时间之前进行。</span><span class="sxs-lookup"><span data-stu-id="9de6d-125">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SendTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SendTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SendTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : TimeSpan" Usage="System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9de6d-126">获取 send 方法（由通信对象调用）在超时之前的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9de6d-126">Gets the interval of time after which the send method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="9de6d-127">指定在 send 方法超时之前要等待的时间间隔的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="9de6d-127">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the send method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9de6d-128">时间可能较长的操作必须设置超时。</span><span class="sxs-lookup"><span data-stu-id="9de6d-128">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="9de6d-129">未使用明确超时的方法必须委托将处理默认超时的方法，否则不得进行任何阻止工作。</span><span class="sxs-lookup"><span data-stu-id="9de6d-129">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="9de6d-130">超时是完成高级别操作的总时间限制，因此任何重试操作只能在前面的操作尚未耗尽时间之前进行。</span><span class="sxs-lookup"><span data-stu-id="9de6d-130">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
