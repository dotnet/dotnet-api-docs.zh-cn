<Type Name="MessageContractAttribute" FullName="System.ServiceModel.MessageContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e18942937205e86e884aeb38543dbd074f46135d" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100306696" /></Metadata><TypeSignature Language="C#" Value="public sealed class MessageContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type MessageContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="415b7-101">定义与 SOAP 消息相对应的强类型类。</span><span class="sxs-lookup"><span data-stu-id="415b7-101">Defines a strongly-typed class that corresponds to a SOAP message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415b7-102">使用 <xref:System.ServiceModel.MessageContractAttribute> 属性为特定消息指定 SOAP 信封的结构。</span><span class="sxs-lookup"><span data-stu-id="415b7-102">Use the <xref:System.ServiceModel.MessageContractAttribute> attribute to specify the structure of the SOAP envelope for a particular message.</span></span> <span data-ttu-id="415b7-103">然后服务就可以在服务操作中使用消息作为参数或返回类型。</span><span class="sxs-lookup"><span data-stu-id="415b7-103">Your service can then use the message as a parameter or return type in service operations.</span></span> <span data-ttu-id="415b7-104">有关在不修改默认 SOAP 信封本身的情况下控制 SOAP 正文内容序列化的信息，请参阅 <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType> [在服务协定中指定数据传输](/dotnet/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts)和 [使用数据协定](/dotnet/framework/wcf/feature-details/using-data-contracts)。</span><span class="sxs-lookup"><span data-stu-id="415b7-104">For information about controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](/dotnet/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts), and [Using Data Contracts](/dotnet/framework/wcf/feature-details/using-data-contracts).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="415b7-105">您不能在具有常规可序列化参数的服务操作中使用自定义消息类型。</span><span class="sxs-lookup"><span data-stu-id="415b7-105">You cannot use custom message types in your service operation with regular serializable parameters.</span></span> <span data-ttu-id="415b7-106">使用自定义消息类型或序列化参数，该参数不是 <xref:System.ServiceModel.Channels.Message> 对象。</span><span class="sxs-lookup"><span data-stu-id="415b7-106">Either use custom message types or serializable parameters that are not <xref:System.ServiceModel.Channels.Message> objects.</span></span> <span data-ttu-id="415b7-107">有关详细信息，请参阅 [在服务协定中指定数据传输](/dotnet/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts)。</span><span class="sxs-lookup"><span data-stu-id="415b7-107">For details, see , [Specifying Data Transfer in Service Contracts](/dotnet/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts).</span></span>  
  
 <span data-ttu-id="415b7-108">要针对某一类型实施消息协定，请使用 <xref:System.ServiceModel.MessageContractAttribute> 对其进行批注，并使用 <xref:System.ServiceModel.MessageBodyMemberAttribute>、<xref:System.ServiceModel.MessageHeaderAttribute> 或 <xref:System.ServiceModel.MessageHeaderArrayAttribute> 对一个或多个类的字段或属性进行批注。</span><span class="sxs-lookup"><span data-stu-id="415b7-108">To implement a message contract for a type, annotate it with <xref:System.ServiceModel.MessageContractAttribute> and annotate one or more of the class's fields or properties with <xref:System.ServiceModel.MessageBodyMemberAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, or <xref:System.ServiceModel.MessageHeaderArrayAttribute>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="415b7-109"><xref:System.ServiceModel.MessageParameterAttribute?displayProperty=nameWithType> 不是消息协定属性，不能与一起使用 <xref:System.ServiceModel.MessageContractAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="415b7-109"><xref:System.ServiceModel.MessageParameterAttribute?displayProperty=nameWithType> is not a message contract attribute and cannot be used in conjunction with <xref:System.ServiceModel.MessageContractAttribute>.</span></span>  
  
 <span data-ttu-id="415b7-110">使用 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 和 <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 属性来指定 SOAP 消息中 `<Action>` 元素的值。</span><span class="sxs-lookup"><span data-stu-id="415b7-110">Use the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to specify the value of the `<Action>` element in the SOAP message.</span></span>  
  
-   <span data-ttu-id="415b7-111">使用 <xref:System.ServiceModel.MessageContractAttribute.HasProtectionLevel%2A> 和 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A> 属性来指示 SOAP 消息类型使用拥有保护级别，如果有，该保护级别是什么。</span><span class="sxs-lookup"><span data-stu-id="415b7-111">Use the <xref:System.ServiceModel.MessageContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A> properties to indicate whether the SOAP message type has a protection level, and if so, what it is.</span></span>  
  
-   <span data-ttu-id="415b7-112">使用 <xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A> 属性来指示消息正文是否有包装元素，如果有，请使用 <xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A> 和 <xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A> 属性分别指定包装元素的名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="415b7-112">Use the <xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A> property to indicate whether the message body has a wrapper element, and if so, use the <xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A> and <xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A> properties to specify the name and namespace, respectively, of the wrapping element.</span></span>  
  
 <span data-ttu-id="415b7-113">有关详细信息，请参阅 [使用消息协定](/dotnet/framework/wcf/feature-details/using-message-contracts)。</span><span class="sxs-lookup"><span data-stu-id="415b7-113">For more information, see [Using Message Contracts](/dotnet/framework/wcf/feature-details/using-message-contracts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="415b7-114">下面的代码示例演示如何使用 <xref:System.ServiceModel.MessageContractAttribute> 来控制请求消息和响应消息的 SOAP 信封结构，以及如何使用 <xref:System.ServiceModel.MessageHeaderAttribute>（创建响应消息的 SOAP 标头）和 <xref:System.ServiceModel.MessageBodyMemberAttribute>（指定请求消息和响应消息的正文）。</span><span class="sxs-lookup"><span data-stu-id="415b7-114">The following code example shows the use of the <xref:System.ServiceModel.MessageContractAttribute> to control the SOAP envelope structure for both the request message and the response message, and the use of both the <xref:System.ServiceModel.MessageHeaderAttribute> (to create a SOAP header for the response message) and the <xref:System.ServiceModel.MessageBodyMemberAttribute> (to specify the bodies of both the request and response message).</span></span> <span data-ttu-id="415b7-115">此代码示例包含发送时的每个消息的示例。</span><span class="sxs-lookup"><span data-stu-id="415b7-115">The code example contains an example of each message when sent.</span></span>  
  
 [!code-csharp[MessageHeaderAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#1)]
 [!code-vb[MessageHeaderAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="415b7-116">初始化 <see cref="T:System.ServiceModel.MessageContractAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="415b7-116">Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.MessageContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415b7-117">获取一个值，该值指示消息是否有保护级别。</span><span class="sxs-lookup"><span data-stu-id="415b7-117">Gets a value that indicates whether the message has a protection level.</span></span></summary>
        <value><span data-ttu-id="415b7-118">如果必须对消息进行加密、签名或执行这两种操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="415b7-118"><see langword="true" /> if the message must be encrypted, signed, or both; otherwise <see langword="false" />.</span></span> <span data-ttu-id="415b7-119">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="415b7-119">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415b7-120">如果此设置为 `true`，则消息的保护级别为 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="415b7-120">If this setting is `true`, the protection level for the message is the value of <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A>.</span></span> <span data-ttu-id="415b7-121">有关保护级别及其假设和范围的详细信息，请参阅 [了解保护级别](/dotnet/framework/wcf/understanding-protection-level)。</span><span class="sxs-lookup"><span data-stu-id="415b7-121">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](/dotnet/framework/wcf/understanding-protection-level).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWrapped">
      <MemberSignature Language="C#" Value="public bool IsWrapped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWrapped" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.IsWrapped" />
      <MemberSignature Language="VB.NET" Value="Public Property IsWrapped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWrapped { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsWrapped : bool with get, set" Usage="System.ServiceModel.MessageContractAttribute.IsWrapped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415b7-122">获取或设置一个值，该值指定消息正文是否有包装元素。</span><span class="sxs-lookup"><span data-stu-id="415b7-122">Gets or sets a value that specifies whether the message body has a wrapper element.</span></span></summary>
        <value><span data-ttu-id="415b7-123">如果消息正文有包装元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="415b7-123"><see langword="true" /> if the message body has a wrapper element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="415b7-124">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="415b7-124">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415b7-125">将 <xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A> 的值设置为 `false`，可取消消息正文序列化到的包装元素。</span><span class="sxs-lookup"><span data-stu-id="415b7-125">Set the value of <xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A> to `false` to suppress the wrapper element into which the message body is serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.MessageContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415b7-126">获取或设置一个值，该值指定是否对消息进行加密、签名或同时执行这两种操作。</span><span class="sxs-lookup"><span data-stu-id="415b7-126">Gets or sets a value that specified whether the message must be encrypted, signed, or both.</span></span></summary>
        <value><span data-ttu-id="415b7-127"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="415b7-127">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="415b7-128">默认值为 <see cref="F:System.Net.Security.ProtectionLevel.None" />。</span><span class="sxs-lookup"><span data-stu-id="415b7-128">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415b7-129">有关保护级别及其假设和范围的详细信息，请参阅 [了解保护级别](/dotnet/framework/wcf/understanding-protection-level)。</span><span class="sxs-lookup"><span data-stu-id="415b7-129">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](/dotnet/framework/wcf/understanding-protection-level).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="415b7-130">设置不是 <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一时传递给属性的值。</span><span class="sxs-lookup"><span data-stu-id="415b7-130">The value passed to the property when the setting is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WrapperName">
      <MemberSignature Language="C#" Value="public string WrapperName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WrapperName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.WrapperName" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapperName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WrapperName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WrapperName : string with get, set" Usage="System.ServiceModel.MessageContractAttribute.WrapperName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415b7-131">获取或设置消息正文的包装元素名称。</span><span class="sxs-lookup"><span data-stu-id="415b7-131">Gets or sets the name of the wrapper element of the message body.</span></span></summary>
        <value><span data-ttu-id="415b7-132">消息正文中的包装元素的名称。</span><span class="sxs-lookup"><span data-stu-id="415b7-132">The name of the wrapper element in the message body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415b7-133">使用 <xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A> 属性可设置包装元素的名称。</span><span class="sxs-lookup"><span data-stu-id="415b7-133">Use the <xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A> property to set the name of the wrapper element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="415b7-134">该值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="415b7-134">The value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="415b7-135">该值是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="415b7-135">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WrapperNamespace">
      <MemberSignature Language="C#" Value="public string WrapperNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WrapperNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapperNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WrapperNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WrapperNamespace : string with get, set" Usage="System.ServiceModel.MessageContractAttribute.WrapperNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="415b7-136">获取或设置消息正文包装元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="415b7-136">Gets or sets the namespace of the message body wrapper element.</span></span></summary>
        <value><span data-ttu-id="415b7-137">包装元素命名空间。</span><span class="sxs-lookup"><span data-stu-id="415b7-137">The wrapper element namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="415b7-138">使用 <xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A> 属性可设置包装元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="415b7-138">Use the <xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A> property to set the namespace of the wrapper element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="415b7-139">下面的代码示例演示如何使用 <xref:System.ServiceModel.MessageContractAttribute> 来控制请求消息和响应消息的 SOAP 信封结构，以及如何使用 <xref:System.ServiceModel.MessageHeaderAttribute>（创建响应消息的 SOAP 标头）和 <xref:System.ServiceModel.MessageBodyMemberAttribute>（指定请求消息和响应消息的正文）。</span><span class="sxs-lookup"><span data-stu-id="415b7-139">The following code example shows the use of the <xref:System.ServiceModel.MessageContractAttribute> to control the SOAP envelope structure for both the request message and the response message, and the use of both the <xref:System.ServiceModel.MessageHeaderAttribute> (to create a SOAP header for the response message) and the <xref:System.ServiceModel.MessageBodyMemberAttribute> (to specify the bodies of both the request and response message).</span></span> <span data-ttu-id="415b7-140">此代码示例包含发送时的每个消息的示例。</span><span class="sxs-lookup"><span data-stu-id="415b7-140">The code example contains an example of each message when sent.</span></span>  
  
 [!code-csharp[MessageHeaderAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#1)]
 [!code-vb[MessageHeaderAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
