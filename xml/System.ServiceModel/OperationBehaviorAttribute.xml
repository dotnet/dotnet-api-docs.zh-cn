<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a25de0f7aea16f6bfa7e3ca1171a37f7fcd1c8be" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83945914" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="030bc-101">指定服务方法的本地执行行为。</span><span class="sxs-lookup"><span data-stu-id="030bc-101">Specifies the local execution behavior of a service method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="030bc-102">使用 <xref:System.ServiceModel.OperationBehaviorAttribute> 属性可以指示操作在执行时具有何种操作特定的执行行为。</span><span class="sxs-lookup"><span data-stu-id="030bc-102">Use the <xref:System.ServiceModel.OperationBehaviorAttribute> attribute to indicate what operation-specific execution behavior the operation has when executed.</span></span> <span data-ttu-id="030bc-103">若要指定服务级别的执行行为，请使用 <xref:System.ServiceModel.ServiceBehaviorAttribute> 属性。</span><span class="sxs-lookup"><span data-stu-id="030bc-103">(To specify execution behavior at the service level, use the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="030bc-104">也可以使用 <xref:System.ServiceModel.OperationBehaviorAttribute> 在双工客户端应用程序中配置回调协定操作。</span><span class="sxs-lookup"><span data-stu-id="030bc-104">You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application.</span></span> <span data-ttu-id="030bc-105">对回调操作使用它时，<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性必须为 <xref:System.ServiceModel.ReleaseInstanceMode.None>，否则会在运行时引发 <xref:System.InvalidOperationException> 异常。</span><span class="sxs-lookup"><span data-stu-id="030bc-105">When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode.None> or an <xref:System.InvalidOperationException> exception is thrown at runtime.</span></span>  
  
 <span data-ttu-id="030bc-106"><xref:System.ServiceModel.OperationBehaviorAttribute> 特性是一个 Windows Communication Foundation （WCF）编程模型功能，它能够实现开发人员自行实现的通用功能。</span><span class="sxs-lookup"><span data-stu-id="030bc-106">The <xref:System.ServiceModel.OperationBehaviorAttribute> attribute is a Windows Communication Foundation (WCF) programming model feature that enables common features that developers otherwise must implement themselves.</span></span>  
  
-   <span data-ttu-id="030bc-107"><xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> 属性控制当服务操作完成时是否释放传递给操作的参数对象。</span><span class="sxs-lookup"><span data-stu-id="030bc-107">The <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> property controls whether parameter objects passed to an operation are disposed when the operation completes.</span></span>  
  
-   <span data-ttu-id="030bc-108"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性指定如果没有发生未经处理的异常，是否自动提交在其中执行方法的事务。</span><span class="sxs-lookup"><span data-stu-id="030bc-108">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur.</span></span>  
  
-   <span data-ttu-id="030bc-109"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性指定是否必须在事务内执行方法。</span><span class="sxs-lookup"><span data-stu-id="030bc-109">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property specifies whether a method must execute within a transaction.</span></span>  
  
-   <span data-ttu-id="030bc-110"><xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 属性指定服务操作是可以、必须还是无法模拟调用方的标识。</span><span class="sxs-lookup"><span data-stu-id="030bc-110">The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property specifies whether the service operation can, must, or cannot impersonate the caller's identity.</span></span>  
  
-   <span data-ttu-id="030bc-111"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性指定在调用方法过程中回收服务对象的时间。</span><span class="sxs-lookup"><span data-stu-id="030bc-111">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property specifies when service objects are recycled during the method invocation process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="030bc-112">下面的代码示例演示在强制的分布式事务中执行的操作。</span><span class="sxs-lookup"><span data-stu-id="030bc-112">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="030bc-113"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性指示方法在调用方的事务下执行，<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性指示在没有发生未经处理的异常时，将自动提交事务。</span><span class="sxs-lookup"><span data-stu-id="030bc-113">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the method executes under the caller's transaction and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction commits automatically.</span></span> <span data-ttu-id="030bc-114">如果确实出现未经处理的异常，则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="030bc-114">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="030bc-115">初始化 <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="030bc-115">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="030bc-116">无参数构造函数使用以下默认值创建类的实例：</span><span class="sxs-lookup"><span data-stu-id="030bc-116">The parameterless constructor creates an instance of the class with the following defaults:</span></span>  
  
-   <span data-ttu-id="030bc-117"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性为 `true`。</span><span class="sxs-lookup"><span data-stu-id="030bc-117">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="030bc-118"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性为 `false`。</span><span class="sxs-lookup"><span data-stu-id="030bc-118">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="030bc-119"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性为 <xref:System.ServiceModel.ReleaseInstanceMode.None>。</span><span class="sxs-lookup"><span data-stu-id="030bc-119">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is <xref:System.ServiceModel.ReleaseInstanceMode.None>.</span></span>  
  
-   <span data-ttu-id="030bc-120"><xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 为 <xref:System.ServiceModel.ImpersonationOption.NotAllowed>。</span><span class="sxs-lookup"><span data-stu-id="030bc-120">The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="030bc-121">获取或设置一个值，它指示是否自动释放参数。</span><span class="sxs-lookup"><span data-stu-id="030bc-121">Gets or sets a value that indicates whether parameters are to be automatically disposed.</span></span></summary>
        <value><span data-ttu-id="030bc-122"><see langword="true" /> 如果要自动释放参数，则为; 否则为。否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="030bc-122"><see langword="true" /> if the parameters are to be automatically disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="030bc-123">此属性确定服务是否释放在处理消息的过程中创建的所有可释放参数（输入、输出或引用参数）。</span><span class="sxs-lookup"><span data-stu-id="030bc-123">This property determines whether the service disposes all disposable parameters (input, output or reference parameters) that were created while processing a message.</span></span> <span data-ttu-id="030bc-124">默认值是 `true`。</span><span class="sxs-lookup"><span data-stu-id="030bc-124">The default value is `true`.</span></span> <span data-ttu-id="030bc-125">若要阻止系统释放资源并根据需要缓存资源，请将此属性设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="030bc-125">Set this property to `false` if you want to prevent the system from disposing of resources and cache them if required.</span></span>  
  
 <span data-ttu-id="030bc-126">例如，如果 <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> 为 `false`，则发送方负责在发送端关闭流。</span><span class="sxs-lookup"><span data-stu-id="030bc-126">For example, if <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> is `false`, then the sender is responsible for closing the stream on the sending side.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="030bc-127">获取或设置一个值，该值指示操作支持的调用方模拟级别。</span><span class="sxs-lookup"><span data-stu-id="030bc-127">Gets or sets a value that indicates the level of caller impersonation that the operation supports.</span></span></summary>
        <value><span data-ttu-id="030bc-128"><see cref="T:System.ServiceModel.ImpersonationOption" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="030bc-128">One of the <see cref="T:System.ServiceModel.ImpersonationOption" /> values.</span></span> <span data-ttu-id="030bc-129">默认为 <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />。</span><span class="sxs-lookup"><span data-stu-id="030bc-129">The default is <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="030bc-130">使用 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 属性（外加支持模拟的绑定配置）可以使指定的方法（通过将 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 属性设置为 <xref:System.ServiceModel.ImpersonationOption.Allowed> 或 <xref:System.ServiceModel.ImpersonationOption.Required> 进行标记的方法）在调用方的标识下执行。</span><span class="sxs-lookup"><span data-stu-id="030bc-130">Use the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property set to <xref:System.ServiceModel.ImpersonationOption.Allowed> or <xref:System.ServiceModel.ImpersonationOption.Required>) to execute under the caller's identity.</span></span> <span data-ttu-id="030bc-131">有关详细信息，包括在将 <xref:System.ServiceModel.ImpersonationOption.Allowed> 与 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> 属性一起使用时如何执行模拟，请参阅[委派和模拟](/dotnet/framework/wcf/feature-details/delegation-and-impersonation-with-wcf)，以及[如何：在服务上模拟客户端](/dotnet/framework/wcf/how-to-impersonate-a-client-on-a-service)。</span><span class="sxs-lookup"><span data-stu-id="030bc-131">For details, including how impersonation is performed when using <xref:System.ServiceModel.ImpersonationOption.Allowed> together with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> property, see [Delegation and Impersonation](/dotnet/framework/wcf/feature-details/delegation-and-impersonation-with-wcf) and [How to: Impersonate a Client on a Service](/dotnet/framework/wcf/how-to-impersonate-a-client-on-a-service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="030bc-132">当以编程方式添加执行模拟的服务终结点时，必须使用 <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> 方法之一或 <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> 方法，才能将协定正确地加载到新的 <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> 对象。</span><span class="sxs-lookup"><span data-stu-id="030bc-132">When programmatically adding a service endpoint that performs impersonation, you must either use one of the <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> methods or the <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> method to properly load the contract into a new <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="030bc-133">使用配置文件无需额外步骤。</span><span class="sxs-lookup"><span data-stu-id="030bc-133">Using a configuration file requires no extra step.</span></span>  
  
 <span data-ttu-id="030bc-134">对于不支持模拟的情况，可能有特定的方案。</span><span class="sxs-lookup"><span data-stu-id="030bc-134">There may be specific scenarios when impersonation is not supported.</span></span> <span data-ttu-id="030bc-135">有关详细信息，请参阅[不支持的方案](/dotnet/framework/wcf/feature-details/unsupported-scenarios)。</span><span class="sxs-lookup"><span data-stu-id="030bc-135">For more information, see [Unsupported Scenarios](/dotnet/framework/wcf/feature-details/unsupported-scenarios).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="030bc-136">下面的服务代码示例要求通过将 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 属性设置为 <xref:System.ServiceModel.ImpersonationOption.Required> 来进行模拟。</span><span class="sxs-lookup"><span data-stu-id="030bc-136">The following service code example requires impersonation by setting the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property to <xref:System.ServiceModel.ImpersonationOption.Required>.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 <span data-ttu-id="030bc-137">下面的代码示例演示如何在调用需要使用客户端应用程序凭据进行模拟的操作之前使用 <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> 属性来设置那些凭据。</span><span class="sxs-lookup"><span data-stu-id="030bc-137">The following code example shows using the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property to set the client application credentials prior to invoking the operation that requires those credentials for impersonation.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="030bc-138">获取或设置一个值，该值指示在调用操作过程中回收服务对象的时间。</span><span class="sxs-lookup"><span data-stu-id="030bc-138">Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.</span></span></summary>
        <value><span data-ttu-id="030bc-139"><see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="030bc-139">One of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values.</span></span> <span data-ttu-id="030bc-140">默认为 <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />。</span><span class="sxs-lookup"><span data-stu-id="030bc-140">The default is <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="030bc-141">在执行方法的过程中，使用 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性指定 Windows Communication Foundation （WCF）回收服务对象的时间。</span><span class="sxs-lookup"><span data-stu-id="030bc-141">Use the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property to specify when Windows Communication Foundation (WCF) recycles a service object in the course of executing a method.</span></span> <span data-ttu-id="030bc-142">默认行为是根据 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 值来回收服务对象。</span><span class="sxs-lookup"><span data-stu-id="030bc-142">The default behavior is to recycle a service object according to the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value.</span></span> <span data-ttu-id="030bc-143">通过设置 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性，可以更改该默认行为。</span><span class="sxs-lookup"><span data-stu-id="030bc-143">Setting the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property changes that default behavior.</span></span>  
  
 <span data-ttu-id="030bc-144"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 不提供线程保证。</span><span class="sxs-lookup"><span data-stu-id="030bc-144">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> makes no threading guarantees.</span></span> <span data-ttu-id="030bc-145">如果在服务运行时必须有一个新的未修改对象，请将 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 属性设置为 <xref:System.ServiceModel.InstanceContextMode.PerCall>。</span><span class="sxs-lookup"><span data-stu-id="030bc-145">If you must have a new, unmodified object when your service runs, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to <xref:System.ServiceModel.InstanceContextMode.PerCall>.</span></span>  
  
 <span data-ttu-id="030bc-146">在事务处理方案中，通常会使用 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性来确保在调用方法之前已清除与服务对象关联的旧数据。</span><span class="sxs-lookup"><span data-stu-id="030bc-146">In transaction scenarios, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is often used to ensure that old data associated with the service object is cleaned up prior to processing a method call.</span></span> <span data-ttu-id="030bc-147">也可以通过将 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> 属性设置为 `true` 来确保在成功完成事务后回收与事务关联的服务对象。</span><span class="sxs-lookup"><span data-stu-id="030bc-147">You can also ensure that service objects associated with transactions are recycled after the transaction successfully completes by setting the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="030bc-148">可以选择下列行为：</span><span class="sxs-lookup"><span data-stu-id="030bc-148">You can choose the following behaviors:</span></span>  
  
-   <span data-ttu-id="030bc-149">在调用操作之前回收服务对象。</span><span class="sxs-lookup"><span data-stu-id="030bc-149">Recycle a service object before an operation is called.</span></span>  
  
-   <span data-ttu-id="030bc-150">在调用操作之后回收服务对象。</span><span class="sxs-lookup"><span data-stu-id="030bc-150">Recycle a service object after an operation is called.</span></span>  
  
-   <span data-ttu-id="030bc-151">在调用操作之前和之后均回收服务对象。</span><span class="sxs-lookup"><span data-stu-id="030bc-151">Recycle a service object both before and after an operation is called.</span></span>  
  
-   <span data-ttu-id="030bc-152">无回收行为。</span><span class="sxs-lookup"><span data-stu-id="030bc-152">No recycling behavior.</span></span>  
  
 <span data-ttu-id="030bc-153">也可以使用 <xref:System.ServiceModel.OperationBehaviorAttribute> 在双工客户端应用程序中配置回调协定操作。</span><span class="sxs-lookup"><span data-stu-id="030bc-153">You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application.</span></span> <span data-ttu-id="030bc-154">对回调操作使用它时，<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性必须为 <xref:System.ServiceModel.ReleaseInstanceMode.None>，否则会在运行时引发 <xref:System.InvalidOperationException> 异常。</span><span class="sxs-lookup"><span data-stu-id="030bc-154">When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode.None> or an <xref:System.InvalidOperationException> exception is thrown at runtime.</span></span>  
  
 <span data-ttu-id="030bc-155">此外，一定要了解如果服务是通过将服务对象传递给 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> 构造函数来创建的，则会按照此属性的值为 <xref:System.ServiceModel.ReleaseInstanceMode.None> 来进行处理。</span><span class="sxs-lookup"><span data-stu-id="030bc-155">In addition, it is important to realize that if the service is created by passing a service object to the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> constructor, the value of this property is treated as if it were <xref:System.ServiceModel.ReleaseInstanceMode.None>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="030bc-156">下面的代码示例演示如何使用 <xref:System.ServiceModel.ReleaseInstanceMode> 在调用之前和之后均回收服务对象。</span><span class="sxs-lookup"><span data-stu-id="030bc-156">The following example code shows the use of <xref:System.ServiceModel.ReleaseInstanceMode> to recycle service objects both before and after a call.</span></span>  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="030bc-157">该值不是 <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="030bc-157">The value is not one of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters (description, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="030bc-158">为支持 <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 属性而修改的操作说明。</span><span class="sxs-lookup"><span data-stu-id="030bc-158">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span></span></param>
        <param name="parameters"><span data-ttu-id="030bc-159">为支持绑定行为而传递的绑定参数。</span><span class="sxs-lookup"><span data-stu-id="030bc-159">Binding parameters passed to support binding behaviors.</span></span></param>
        <summary><span data-ttu-id="030bc-160">实现 <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="030bc-160">Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior (description, proxy)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="030bc-161">为支持 <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 属性而修改的操作说明。</span><span class="sxs-lookup"><span data-stu-id="030bc-161">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span></span></param>
        <param name="proxy"><span data-ttu-id="030bc-162">用于插入此操作的自定义客户端修改的扩展访问点。</span><span class="sxs-lookup"><span data-stu-id="030bc-162">The extensibility access point to insert custom client modifications for this operation.</span></span></param>
        <summary><span data-ttu-id="030bc-163">实现客户端操作行为。</span><span class="sxs-lookup"><span data-stu-id="030bc-163">Implements the client operation behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior (description, dispatch)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="030bc-164">为支持 <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 属性而修改的操作说明。</span><span class="sxs-lookup"><span data-stu-id="030bc-164">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span></span></param>
        <param name="dispatch"><span data-ttu-id="030bc-165">用于插入此操作的自定义服务修改的扩展点。</span><span class="sxs-lookup"><span data-stu-id="030bc-165">The extensibility point to insert custom service modifications for this operation.</span></span></param>
        <summary><span data-ttu-id="030bc-166">实现服务操作行为。</span><span class="sxs-lookup"><span data-stu-id="030bc-166">Implements the service operation behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.Validate : System.ServiceModel.Description.OperationDescription -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.Validate : System.ServiceModel.Description.OperationDescription -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate description" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="030bc-167">要验证的操作说明。</span><span class="sxs-lookup"><span data-stu-id="030bc-167">The operation description to validate.</span></span></param>
        <summary><span data-ttu-id="030bc-168">实现验证行为。</span><span class="sxs-lookup"><span data-stu-id="030bc-168">Implements the validation behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="030bc-169">获取或设置一个值，该值指示如果没有发生未经处理的异常，是否自动完成当前的事务范围。</span><span class="sxs-lookup"><span data-stu-id="030bc-169">Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.</span></span></summary>
        <value><span data-ttu-id="030bc-170">如果在成功执行操作后自动完成事务范围，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="030bc-170"><see langword="true" /> to complete the transaction scope automatically on successful execution of the operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="030bc-171">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="030bc-171">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="030bc-172">将 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性设置为 `false`，可以直接在操作代码中完成或中止事务。</span><span class="sxs-lookup"><span data-stu-id="030bc-172">Set the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property to `false` to complete or abort transactions directly in the code for the operation.</span></span>  
  
 <span data-ttu-id="030bc-173">在操作过程中，可能会引发已处理的异常，而不会自动中止事务。</span><span class="sxs-lookup"><span data-stu-id="030bc-173">Handled exceptions can be thrown in the course of the operation without automatically aborting the transaction.</span></span> <span data-ttu-id="030bc-174">只有未经处理的异常才会触发自动中止。</span><span class="sxs-lookup"><span data-stu-id="030bc-174">Only unhandled exceptions trigger an automatic abort.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="030bc-175">下面的代码示例演示在强制的分布式事务中执行的操作。</span><span class="sxs-lookup"><span data-stu-id="030bc-175">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="030bc-176"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性指示操作在事务范围下执行，<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性指示在没有发生未经处理的异常时，将自动完成事务范围。</span><span class="sxs-lookup"><span data-stu-id="030bc-176">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically.</span></span> <span data-ttu-id="030bc-177">如果确实出现未经处理的异常，则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="030bc-177">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="030bc-178">获取或设置一个值，该值指示方法在执行时是否需要事务范围。</span><span class="sxs-lookup"><span data-stu-id="030bc-178">Gets or sets a value that indicates whether the method requires a transaction scope for its execution.</span></span></summary>
        <value><span data-ttu-id="030bc-179">如果方法需要事务范围才能执行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="030bc-179"><see langword="true" /> if the method requires a transaction scope to execute; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="030bc-180">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="030bc-180">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="030bc-181">将 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 设置为 `true`，可以要求操作在事务范围内执行。</span><span class="sxs-lookup"><span data-stu-id="030bc-181">Set the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> to `true` to require your operation to execute within a transaction scope.</span></span> <span data-ttu-id="030bc-182">如果流事务可用，则操作会在该事务内执行。</span><span class="sxs-lookup"><span data-stu-id="030bc-182">If a flowed transaction is available, the operation executes within that transaction.</span></span> <span data-ttu-id="030bc-183">如果流事务不可用，则会创建一个新事务并使用它来执行操作。</span><span class="sxs-lookup"><span data-stu-id="030bc-183">If one is not available, a new transaction is created and used for the operation execution.</span></span> <span data-ttu-id="030bc-184">终结点中指定的绑定可以控制是否支持流事务。</span><span class="sxs-lookup"><span data-stu-id="030bc-184">The binding specified in the endpoint controls whether flowed transactions are supported.</span></span> <span data-ttu-id="030bc-185">因此，若要获取正确的行为，您必须理解绑定是否允许事务流和 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性之间的相互影响。</span><span class="sxs-lookup"><span data-stu-id="030bc-185">Therefore, to obtain the proper behavior you must understand the interaction between whether transaction flow is permitted by the binding and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property.</span></span> <span data-ttu-id="030bc-186">下表显示可能的行为。</span><span class="sxs-lookup"><span data-stu-id="030bc-186">The following table shows the possible behavior.</span></span>  
  
|<span data-ttu-id="030bc-187">TransactionScopeRequired</span><span class="sxs-lookup"><span data-stu-id="030bc-187">TransactionScopeRequired</span></span>|<span data-ttu-id="030bc-188">绑定允许事务流</span><span class="sxs-lookup"><span data-stu-id="030bc-188">Binding permits transaction flow</span></span>|<span data-ttu-id="030bc-189">调用方对事务进行流处理</span><span class="sxs-lookup"><span data-stu-id="030bc-189">Caller flows transaction</span></span>|<span data-ttu-id="030bc-190">结果</span><span class="sxs-lookup"><span data-stu-id="030bc-190">Result</span></span>|  
|-|-|-|-|  
|<span data-ttu-id="030bc-191">False</span><span class="sxs-lookup"><span data-stu-id="030bc-191">False</span></span>|<span data-ttu-id="030bc-192">False</span><span class="sxs-lookup"><span data-stu-id="030bc-192">False</span></span>|<span data-ttu-id="030bc-193">是</span><span class="sxs-lookup"><span data-stu-id="030bc-193">No</span></span>|<span data-ttu-id="030bc-194">方法在没有事务的情况下执行。</span><span class="sxs-lookup"><span data-stu-id="030bc-194">Method executes without a transaction.</span></span>|  
|<span data-ttu-id="030bc-195">True</span><span class="sxs-lookup"><span data-stu-id="030bc-195">True</span></span>|<span data-ttu-id="030bc-196">False</span><span class="sxs-lookup"><span data-stu-id="030bc-196">False</span></span>|<span data-ttu-id="030bc-197">是</span><span class="sxs-lookup"><span data-stu-id="030bc-197">No</span></span>|<span data-ttu-id="030bc-198">方法创建一个新事务，并在该事务内执行。</span><span class="sxs-lookup"><span data-stu-id="030bc-198">Method creates and executes within a new transaction.</span></span>|  
|<span data-ttu-id="030bc-199">是或否</span><span class="sxs-lookup"><span data-stu-id="030bc-199">True or False</span></span>|<span data-ttu-id="030bc-200">False</span><span class="sxs-lookup"><span data-stu-id="030bc-200">False</span></span>|<span data-ttu-id="030bc-201">是</span><span class="sxs-lookup"><span data-stu-id="030bc-201">Yes</span></span>|<span data-ttu-id="030bc-202">事务标头返回 SOAP 错误。</span><span class="sxs-lookup"><span data-stu-id="030bc-202">A SOAP fault is returned for the transaction header.</span></span>|  
|<span data-ttu-id="030bc-203">False</span><span class="sxs-lookup"><span data-stu-id="030bc-203">False</span></span>|<span data-ttu-id="030bc-204">True</span><span class="sxs-lookup"><span data-stu-id="030bc-204">True</span></span>|<span data-ttu-id="030bc-205">是</span><span class="sxs-lookup"><span data-stu-id="030bc-205">Yes</span></span>|<span data-ttu-id="030bc-206">方法在没有事务的情况下执行。</span><span class="sxs-lookup"><span data-stu-id="030bc-206">Method executes without a transaction.</span></span>|  
|<span data-ttu-id="030bc-207">True</span><span class="sxs-lookup"><span data-stu-id="030bc-207">True</span></span>|<span data-ttu-id="030bc-208">True</span><span class="sxs-lookup"><span data-stu-id="030bc-208">True</span></span>|<span data-ttu-id="030bc-209">是</span><span class="sxs-lookup"><span data-stu-id="030bc-209">Yes</span></span>|<span data-ttu-id="030bc-210">方法在流事务下执行。</span><span class="sxs-lookup"><span data-stu-id="030bc-210">Method executes under the flowed transaction.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="030bc-211">下面的代码示例演示在强制的分布式事务中执行的操作。</span><span class="sxs-lookup"><span data-stu-id="030bc-211">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="030bc-212"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性指示操作在事务范围下执行，<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性指示在没有发生未经处理的异常时，将自动完成事务范围。</span><span class="sxs-lookup"><span data-stu-id="030bc-212">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically.</span></span> <span data-ttu-id="030bc-213">如果确实出现未经处理的异常，则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="030bc-213">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
