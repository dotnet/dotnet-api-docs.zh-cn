<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8aa2fdc63e5da4d6427c69dc97818881a36381c9" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86827895" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定服务方法的本地执行行为。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.ServiceModel.OperationBehaviorAttribute> 属性可以指示操作在执行时具有何种操作特定的执行行为。 若要指定服务级别的执行行为，请使用 <xref:System.ServiceModel.ServiceBehaviorAttribute> 属性。  
  
> [!NOTE]
>  也可以使用 <xref:System.ServiceModel.OperationBehaviorAttribute> 在双工客户端应用程序中配置回调协定操作。 对回调操作使用它时，<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性必须为 <xref:System.ServiceModel.ReleaseInstanceMode.None>，否则会在运行时引发 <xref:System.InvalidOperationException> 异常。  
  
 <xref:System.ServiceModel.OperationBehaviorAttribute>特性是一个 Windows Communication Foundation (WCF) 编程模型功能，它能够实现开发人员必须自行实现的通用功能。  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> 属性控制当服务操作完成时是否释放传递给操作的参数对象。  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性指定如果没有发生未经处理的异常，是否自动提交在其中执行方法的事务。  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性指定是否必须在事务内执行方法。  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 属性指定服务操作是可以、必须还是无法模拟调用方的标识。  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性指定在调用方法过程中回收服务对象的时间。  
  
   
  
## Examples  
 下面的代码示例演示在强制的分布式事务中执行的操作。 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性指示方法在调用方的事务下执行，<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性指示在没有发生未经处理的异常时，将自动提交事务。 如果确实出现未经处理的异常，则中止此事务。  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无参数构造函数使用以下默认值创建类的实例：  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性为 `true`。  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性为 `false`。  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性为 <xref:System.ServiceModel.ReleaseInstanceMode.None>。  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 为 <xref:System.ServiceModel.ImpersonationOption.NotAllowed>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，它指示是否自动释放参数。</summary>
        <value><see langword="true" /> 如果将自动释放参数，则为; 否则为。否则为 <see langword="false" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性确定服务是否释放在处理消息的过程中创建的所有可释放参数（输入、输出或引用参数）。 默认值为 `true`。 若要阻止系统释放资源并根据需要缓存资源，请将此属性设置为 `false`。  
  
 例如，如果 <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> 为 `false`，则发送方负责在发送端关闭流。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示操作支持的调用方模拟级别。</summary>
        <value><see cref="T:System.ServiceModel.ImpersonationOption" /> 值之一。 默认值为 <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 属性（外加支持模拟的绑定配置）可以使指定的方法（通过将 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 属性设置为 <xref:System.ServiceModel.ImpersonationOption.Allowed> 或 <xref:System.ServiceModel.ImpersonationOption.Required> 进行标记的方法）在调用方的标识下执行。 有关详细信息，包括与属性一起使用时如何执行模拟 <xref:System.ServiceModel.ImpersonationOption.Allowed> <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> ，请参阅 [委派和模拟](/dotnet/framework/wcf/feature-details/delegation-and-impersonation-with-wcf) 和 [如何：模拟服务上的客户端](/dotnet/framework/wcf/how-to-impersonate-a-client-on-a-service)。  
  
> [!NOTE]
>  当以编程方式添加执行模拟的服务终结点时，必须使用 <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> 方法之一或 <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> 方法，才能将协定正确地加载到新的 <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> 对象。 使用配置文件无需额外步骤。  
  
 对于不支持模拟的情况，可能有特定的方案。 有关详细信息，请参阅 [不支持的方案](/dotnet/framework/wcf/feature-details/unsupported-scenarios)。  
  
   
  
## Examples  
 下面的服务代码示例要求通过将 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 属性设置为 <xref:System.ServiceModel.ImpersonationOption.Required> 来进行模拟。  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 下面的代码示例演示如何在调用需要使用客户端应用程序凭据进行模拟的操作之前使用 <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> 属性来设置那些凭据。  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在调用操作过程中回收服务对象的时间。</summary>
        <value><see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 值之一。 默认值为 <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>在执行方法的过程中，使用属性指定 Windows Communication Foundation (WCF) 回收服务对象的时间。 默认行为是根据 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 值来回收服务对象。 通过设置 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性，可以更改该默认行为。  
  
 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 不提供线程保证。 如果在服务运行时必须有一个新的未修改对象，请将 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 属性设置为 <xref:System.ServiceModel.InstanceContextMode.PerCall>。  
  
 在事务处理方案中，通常会使用 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性来确保在调用方法之前已清除与服务对象关联的旧数据。 也可以通过将 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> 属性设置为 `true` 来确保在成功完成事务后回收与事务关联的服务对象。  
  
 可以选择下列行为：  
  
-   在调用操作之前回收服务对象。  
  
-   在调用操作之后回收服务对象。  
  
-   在调用操作之前和之后均回收服务对象。  
  
-   无回收行为。  
  
 也可以使用 <xref:System.ServiceModel.OperationBehaviorAttribute> 在双工客户端应用程序中配置回调协定操作。 对回调操作使用它时，<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 属性必须为 <xref:System.ServiceModel.ReleaseInstanceMode.None>，否则会在运行时引发 <xref:System.InvalidOperationException> 异常。  
  
 此外，一定要了解如果服务是通过将服务对象传递给 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> 构造函数来创建的，则会按照此属性的值为 <xref:System.ServiceModel.ReleaseInstanceMode.None> 来进行处理。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.ServiceModel.ReleaseInstanceMode> 在调用之前和之后均回收服务对象。  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">该值不是 <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters (description, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">为支持 <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 属性而修改的操作说明。</param>
        <param name="parameters">为支持绑定行为而传递的绑定参数。</param>
        <summary>实现 <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> 方法。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior (description, proxy)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description">为支持 <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 属性而修改的操作说明。</param>
        <param name="proxy">用于插入此操作的自定义客户端修改的扩展访问点。</param>
        <summary>实现客户端操作行为。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior (description, dispatch)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description">为支持 <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 属性而修改的操作说明。</param>
        <param name="dispatch">用于插入此操作的自定义服务修改的扩展点。</param>
        <summary>实现服务操作行为。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.Validate : System.ServiceModel.Description.OperationDescription -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.Validate : System.ServiceModel.Description.OperationDescription -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate description" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">要验证的操作说明。</param>
        <summary>实现验证行为。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示如果没有发生未经处理的异常，是否自动完成当前的事务范围。</summary>
        <value>如果在成功执行操作后自动完成事务范围，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性设置为 `false`，可以直接在操作代码中完成或中止事务。  
  
 在操作过程中，可能会引发已处理的异常，而不会自动中止事务。 只有未经处理的异常才会触发自动中止。  
  
   
  
## Examples  
 下面的代码示例演示在强制的分布式事务中执行的操作。 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性指示操作在事务范围下执行，<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性指示在没有发生未经处理的异常时，将自动完成事务范围。 如果确实出现未经处理的异常，则中止此事务。  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示方法在执行时是否需要事务范围。</summary>
        <value>如果方法需要事务范围才能执行，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 设置为 `true`，可以要求操作在事务范围内执行。 如果流事务可用，则操作会在该事务内执行。 如果流事务不可用，则会创建一个新事务并使用它来执行操作。 终结点中指定的绑定可以控制是否支持流事务。 因此，若要获取正确的行为，您必须理解绑定是否允许事务流和 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性之间的相互影响。 下表显示可能的行为。  
  
|TransactionScopeRequired|绑定允许事务流|调用方对事务进行流处理|结果|  
|-|-|-|-|  
|False|False|否|方法在没有事务的情况下执行。|  
|正确|False|否|方法创建一个新事务，并在该事务内执行。|  
|是或否|False|是|事务标头返回 SOAP 错误。|  
|False|True|是|方法在没有事务的情况下执行。|  
|True|True|是|方法在流事务下执行。|  
  
   
  
## Examples  
 下面的代码示例演示在强制的分布式事务中执行的操作。 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 属性指示操作在事务范围下执行，<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 属性指示在没有发生未经处理的异常时，将自动完成事务范围。 如果确实出现未经处理的异常，则中止此事务。  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
