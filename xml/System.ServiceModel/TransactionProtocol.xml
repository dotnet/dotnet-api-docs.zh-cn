<Type Name="TransactionProtocol" FullName="System.ServiceModel.TransactionProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ecc5821a75433bca9ed308b431c4b69a047ef6db" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86827427" /></Metadata><TypeSignature Language="C#" Value="public abstract class TransactionProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransactionProtocol extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.TransactionProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransactionProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionProtocol abstract" />
  <TypeSignature Language="F#" Value="type TransactionProtocol = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TransactionProtocolConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TransactionProtocolConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5064a-101">指定在流动事务中使用的事务处理协议。</span><span class="sxs-lookup"><span data-stu-id="5064a-101">Specifies the transaction protocol used in flowing transactions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5064a-102">将此类和 <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> 类一起使用，可以指定流动事务所需的协议。</span><span class="sxs-lookup"><span data-stu-id="5064a-102">This class is used together with the <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> class to specify the desired protocol for flowing transactions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />
    <related type="Article" href="/dotnet/framework/wcf/feature-details/enabling-transaction-flow"><span data-ttu-id="5064a-103">启用事务流</span><span class="sxs-lookup"><span data-stu-id="5064a-103">Enabling Transaction Flow</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.TransactionProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TransactionProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5064a-104">初始化 <see cref="T:System.ServiceModel.TransactionProtocol" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5064a-104">Initializes a new instance of the <see cref="T:System.ServiceModel.TransactionProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.TransactionProtocol Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.TransactionProtocol Default" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.TransactionProtocol.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::TransactionProtocol ^ Default { System::ServiceModel::TransactionProtocol ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.ServiceModel.TransactionProtocol" Usage="System.ServiceModel.TransactionProtocol.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5064a-105">获取事务处理协议的默认值。</span><span class="sxs-lookup"><span data-stu-id="5064a-105">Gets the default value for the transaction protocol.</span></span></summary>
        <value><span data-ttu-id="5064a-106">一个有效的 <see cref="T:System.ServiceModel.TransactionProtocol" /> 值，指定用于对事务进行流处理的默认事务处理协议。</span><span class="sxs-lookup"><span data-stu-id="5064a-106">A valid <see cref="T:System.ServiceModel.TransactionProtocol" /> value that specifies the default transaction protocol to be used in flowing a transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5064a-107">有关选择事务协议的详细信息，请参阅 [启用事务流](/dotnet/framework/wcf/feature-details/enabling-transaction-flow)。</span><span class="sxs-lookup"><span data-stu-id="5064a-107">For more information on selecting a transaction protocol, see [Enabling Transaction Flow](/dotnet/framework/wcf/feature-details/enabling-transaction-flow).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OleTransactions">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.TransactionProtocol OleTransactions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.TransactionProtocol OleTransactions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.TransactionProtocol.OleTransactions" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OleTransactions As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::TransactionProtocol ^ OleTransactions { System::ServiceModel::TransactionProtocol ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OleTransactions : System.ServiceModel.TransactionProtocol" Usage="System.ServiceModel.TransactionProtocol.OleTransactions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5064a-108">获取 OleTransactions 事务处理协议值。</span><span class="sxs-lookup"><span data-stu-id="5064a-108">Gets the OleTransactions transaction protocol value.</span></span></summary>
        <value><span data-ttu-id="5064a-109">一个 <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5064a-109">An <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5064a-110">OleTransactions 协议对于如下的情形非常有用：即不要求第三方协议堆栈具有互操作性，并且服务部署人员预先知道 WS-AtomicTransaction 将在本地禁用或者现有网络拓扑不支持使用 WS-AtomicTransaction。</span><span class="sxs-lookup"><span data-stu-id="5064a-110">The OleTransactions protocol is useful for scenarios when interoperability with third-party protocol stacks is not a requirement, and the deployer of a service knows in advance that WS-AtomicTransaction is disabled locally or that the existing network topology does not favor the usage of WS-AtomicTransaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WSAtomicTransaction11">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.TransactionProtocol WSAtomicTransaction11 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.TransactionProtocol WSAtomicTransaction11" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WSAtomicTransaction11 As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::TransactionProtocol ^ WSAtomicTransaction11 { System::ServiceModel::TransactionProtocol ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WSAtomicTransaction11 : System.ServiceModel.TransactionProtocol" Usage="System.ServiceModel.TransactionProtocol.WSAtomicTransaction11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5064a-111">获取 WSAtomicTransaction11 事务处理协议值。</span><span class="sxs-lookup"><span data-stu-id="5064a-111">Gets the WSAtomicTransaction11 transaction protocol value.</span></span></summary>
        <value><span data-ttu-id="5064a-112">一个 <see cref="T:System.ServiceModel.TransactionProtocol" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5064a-112">A <see cref="T:System.ServiceModel.TransactionProtocol" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WSAtomicTransactionOctober2004">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.TransactionProtocol WSAtomicTransactionOctober2004 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.TransactionProtocol WSAtomicTransactionOctober2004" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WSAtomicTransactionOctober2004 As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::TransactionProtocol ^ WSAtomicTransactionOctober2004 { System::ServiceModel::TransactionProtocol ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WSAtomicTransactionOctober2004 : System.ServiceModel.TransactionProtocol" Usage="System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5064a-113">获取 WSAtomicTransactionOctober2004 事务处理协议值。</span><span class="sxs-lookup"><span data-stu-id="5064a-113">Gets the WSAtomicTransactionOctober2004 transaction protocol value.</span></span></summary>
        <value><span data-ttu-id="5064a-114">一个 <see cref="T:System.ServiceModel.TransactionProtocol" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5064a-114">A <see cref="T:System.ServiceModel.TransactionProtocol" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5064a-115">WS-AtomicTransaction 协议对于要求第三方协议堆栈具有互操作性时的情形非常有用。</span><span class="sxs-lookup"><span data-stu-id="5064a-115">The WS-AtomicTransaction protocol is useful for scenarios when interoperability with third-party protocol stacks is a requirement.</span></span> <span data-ttu-id="5064a-116">它也是一个有用的简单机制，用于使用 WS-AT 协议检测事务流和两阶段提交协议，且不会干扰 OleTransactions 协议。</span><span class="sxs-lookup"><span data-stu-id="5064a-116">It is also useful as a simple mechanism for testing transaction flow and the two-phase commit protocol using the WS-AT protocol, without interference with the OleTransactions protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
