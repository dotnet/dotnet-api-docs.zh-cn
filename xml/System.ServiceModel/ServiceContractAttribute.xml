<Type Name="ServiceContractAttribute" FullName="System.ServiceModel.ServiceContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c260501cbab211baef771bf74c04e90c2b96263c" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100314612" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ServiceContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8d36c-101">指示接口或类在 Windows Communication Foundation (WCF) 应用程序中定义服务协定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-101">Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36c-102">使用接口（或类）上的 <xref:System.ServiceModel.ServiceContractAttribute> 属性定义服务协定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-102">Use the <xref:System.ServiceModel.ServiceContractAttribute> attribute on an interface (or class) to define a service contract.</span></span> <span data-ttu-id="8d36c-103">然后使用一个或多个类（或接口）方法中的 <xref:System.ServiceModel.OperationContractAttribute> 属性定义协定的服务操作。</span><span class="sxs-lookup"><span data-stu-id="8d36c-103">Then use the <xref:System.ServiceModel.OperationContractAttribute> attribute on one or more of the class (or interface) methods to define the contract's service operations.</span></span> <span data-ttu-id="8d36c-104">当实现服务协定并将其与 [绑定](/dotnet/framework/wcf/bindings) 和对象结合使用时 <xref:System.ServiceModel.EndpointAddress> ，服务协定将公开供客户端使用。</span><span class="sxs-lookup"><span data-stu-id="8d36c-104">When the service contract is implemented and combined with a [Bindings](/dotnet/framework/wcf/bindings) and an <xref:System.ServiceModel.EndpointAddress> object, the service contract is exposed for use by clients.</span></span> <span data-ttu-id="8d36c-105">有关使用简单示例的过程的概述，请参阅 [入门教程](/dotnet/framework/wcf/getting-started-tutorial)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-105">For an overview of the process using simple examples, see [Getting Started Tutorial](/dotnet/framework/wcf/getting-started-tutorial).</span></span> <span data-ttu-id="8d36c-106">有关创建服务协定的详细信息，请参阅 [设计和实现服务](/dotnet/framework/wcf/designing-and-implementing-services)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-106">For more information about creating service contracts, see [Designing and Implementing Services](/dotnet/framework/wcf/designing-and-implementing-services).</span></span>  
  
 <span data-ttu-id="8d36c-107">此信息由 <xref:System.ServiceModel.ServiceContractAttribute> 表示，其接口与 Web 服务描述语言 (WSDL) `<portType>` 元素松散相关。</span><span class="sxs-lookup"><span data-stu-id="8d36c-107">The information expressed by a <xref:System.ServiceModel.ServiceContractAttribute> and its interface is loosely related to the Web Services Description Language (WSDL) `<portType>` element.</span></span> <span data-ttu-id="8d36c-108">服务协定在服务端用于指定服务的终结点向调用方公开的内容。</span><span class="sxs-lookup"><span data-stu-id="8d36c-108">A service contract is used on the service side to specify what the service's endpoint exposes to callers.</span></span> <span data-ttu-id="8d36c-109">它也可以在客户端使用，以指定客户端与终结点通信的协定，如果是双工协定，则用于指定客户端必须实现的回调协定（使用 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 属性）以参与双工对话。</span><span class="sxs-lookup"><span data-stu-id="8d36c-109">It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property) that the client must implement in order to participate in a duplex conversation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d36c-110">使用 <xref:System.ServiceModel.ServiceContractAttribute> 修饰的接口或类还必须至少拥有一个用 <xref:System.ServiceModel.OperationContractAttribute> 属性标记的方法以公开任意功能。</span><span class="sxs-lookup"><span data-stu-id="8d36c-110">An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality.</span></span> <span data-ttu-id="8d36c-111">有关使用这两个属性定义和实现服务的最简单用法的代码示例，请参见“示例”部分。</span><span class="sxs-lookup"><span data-stu-id="8d36c-111">See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.</span></span>  
  
 <span data-ttu-id="8d36c-112">使用 <xref:System.ServiceModel.ServiceContractAttribute> 属性修改服务协定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-112">Use the <xref:System.ServiceModel.ServiceContractAttribute> properties to modify the service contract.</span></span>  
  
-   <span data-ttu-id="8d36c-113"><xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> 属性指定要使用的配置文件中的服务元素的名称。</span><span class="sxs-lookup"><span data-stu-id="8d36c-113">The <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> property specifies the name of the service element in the configuration file to use.</span></span>  
  
-   <span data-ttu-id="8d36c-114"><xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 和 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 属性控制 WSDL `<portType>` 元素中的协定名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="8d36c-114">The <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties control the name and namespace of the contract in the WSDL `<portType>` element.</span></span>  
  
-   <span data-ttu-id="8d36c-115"><xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 属性指定协定是否需要支持会话的绑定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-115">The <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property specifies whether the contract requires a binding that supports sessions.</span></span>  
  
-   <span data-ttu-id="8d36c-116"><xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 属性指定双向（双工）对话中的返回协定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-116">The <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property specifies the return contract in a two-way (duplex) conversation.</span></span>  
  
-   <span data-ttu-id="8d36c-117"><xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> 和 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 属性指示是否所有支持协定的消息都具有一个显式 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 值，如果有，处于什么级别。</span><span class="sxs-lookup"><span data-stu-id="8d36c-117">The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> properties indicate whether all messages supporting the contract have a explicit <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> value, and if so, what that level is.</span></span>  
  
 <span data-ttu-id="8d36c-118">服务实现服务协定，此协定表示服务类型支持的数据交换。</span><span class="sxs-lookup"><span data-stu-id="8d36c-118">Services implement service contracts, which represent the data exchange that a service type supports.</span></span> <span data-ttu-id="8d36c-119">服务类可以实现服务协定（通过实现以 <xref:System.ServiceModel.ServiceContractAttribute> 标记的接口，该接口具有以 <xref:System.ServiceModel.OperationContractAttribute> 标记的方法），或者也可以使用 <xref:System.ServiceModel.ServiceContractAttribute> 标记并将 <xref:System.ServiceModel.OperationContractAttribute> 属性应用到它自己的方法中。</span><span class="sxs-lookup"><span data-stu-id="8d36c-119">A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods.</span></span> <span data-ttu-id="8d36c-120"> (如果类实现用标记的接口 <xref:System.ServiceModel.ServiceContractAttribute> ，则它不能以本身标记 <xref:System.ServiceModel.ServiceContractAttribute> 。使用标记的服务类型的 ) 方法被 <xref:System.ServiceModel.OperationContractAttribute> 视为由服务类型本身指定的默认服务协定的一部分。</span><span class="sxs-lookup"><span data-stu-id="8d36c-120">(If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself.</span></span> <span data-ttu-id="8d36c-121">有关服务操作的详细信息，请参见 <xref:System.ServiceModel.OperationContractAttribute>。</span><span class="sxs-lookup"><span data-stu-id="8d36c-121">For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>.</span></span>  
  
 <span data-ttu-id="8d36c-122">默认情况下，<xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 和 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 属性分别是协定类型的名称和 `http://tempuri.org`，且 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 为 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8d36c-122">By default, the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties are the name of the contract type and `http://tempuri.org`, respectively, and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8d36c-123">建议服务协定使用这些属性显式设置其名称、命名空间和保护级别。</span><span class="sxs-lookup"><span data-stu-id="8d36c-123">It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties.</span></span> <span data-ttu-id="8d36c-124">这样做可以实现两个目的。</span><span class="sxs-lookup"><span data-stu-id="8d36c-124">Doing so accomplishes two goals.</span></span> <span data-ttu-id="8d36c-125">首先，它将生成一个并不直接与托管的类型信息连接的协定，从而使你可以重构托管代码和命名空间而不破坏协定，这是因为协定使用 WSDL 表示。</span><span class="sxs-lookup"><span data-stu-id="8d36c-125">First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL.</span></span> <span data-ttu-id="8d36c-126">其次，显式要求协定本身具有特定保护级别将使运行时能够验证绑定配置是否支持该安全级别，从而防止因配置不当而公开敏感信息。</span><span class="sxs-lookup"><span data-stu-id="8d36c-126">Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information.</span></span> <span data-ttu-id="8d36c-127">有关保护级别的详细信息，请参阅 [了解保护级别](/dotnet/framework/wcf/understanding-protection-level)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-127">For more information about protection levels, see [Understanding Protection Level](/dotnet/framework/wcf/understanding-protection-level).</span></span>  
  
 <span data-ttu-id="8d36c-128">若要公开服务以供客户端应用程序使用，请创建一个主机应用程序，用 Windows Communication Foundation (WCF) 注册服务终结点。</span><span class="sxs-lookup"><span data-stu-id="8d36c-128">To expose a service for use by client applications, create a host application to register your service endpoint with Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="8d36c-129">你可以在控制台应用程序、Windows 服务应用程序、ASP.NET 应用程序、Windows 窗体应用程序或任何其他类型的应用程序域中使用 Windows 激活服务来承载 WCF 服务)  (。</span><span class="sxs-lookup"><span data-stu-id="8d36c-129">You can host WCF services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.</span></span>  
  
 <span data-ttu-id="8d36c-130">在 WAS 中承载与创建 ASP.NET 应用程序非常类似。</span><span class="sxs-lookup"><span data-stu-id="8d36c-130">Hosting in the WAS is very similar to creating an ASP.NET application.</span></span> <span data-ttu-id="8d36c-131">有关详细信息，请参阅 [如何：在 IIS 中承载 WCF 服务](/dotnet/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-131">For details, see [How to: Host a WCF Service in IIS](/dotnet/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis).</span></span>  
  
 <span data-ttu-id="8d36c-132">客户端既可以使用服务协定接口（使用 <xref:System.ServiceModel.ServiceContractAttribute> 标记的接口）创建服务的信道，也可以使用客户端对象（这些对象将服务协定接口的类型信息与 <xref:System.ServiceModel.ClientBase%601> 类相结合）与您的服务通信。</span><span class="sxs-lookup"><span data-stu-id="8d36c-132">Clients either use the service contract interface (the interface marked with <xref:System.ServiceModel.ServiceContractAttribute>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <xref:System.ServiceModel.ClientBase%601> class) to communicate with your service.</span></span> <span data-ttu-id="8d36c-133">有关客户端信道到服务的详细信息，请参阅 <xref:System.ServiceModel.ChannelFactory%601> 类和 [WCF 客户端概述](/dotnet/framework/wcf/wcf-client-overview)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-133">For details on client channels to services, see the <xref:System.ServiceModel.ChannelFactory%601> class and [WCF Client Overview](/dotnet/framework/wcf/wcf-client-overview).</span></span>  
  
 <span data-ttu-id="8d36c-134">使用 <xref:System.ServiceModel.ServiceContractAttribute> 类或接口从另一个 <xref:System.ServiceModel.ServiceContractAttribute> 类或接口继承将会扩展其父协定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-134">Using a <xref:System.ServiceModel.ServiceContractAttribute> class or interface to inherit from another <xref:System.ServiceModel.ServiceContractAttribute> class or interface extends the parent contract.</span></span> <span data-ttu-id="8d36c-135">例如，如果 `IChildContract` 接口使用 <xref:System.ServiceModel.ServiceContractAttribute> 标记并且是从另一个服务协定接口 `IParentContract` 继承的，则 `IChildContract` 服务协定将包含 `IParentContract` 和 `IChildContract` 的方法。</span><span class="sxs-lookup"><span data-stu-id="8d36c-135">For example, if an `IChildContract` interface is marked with <xref:System.ServiceModel.ServiceContractAttribute> and inherited from another service contract interface, `IParentContract`, the `IChildContract` service contract contains the methods of both `IParentContract` and `IChildContract`.</span></span> <span data-ttu-id="8d36c-136">扩展协定（无论在类或接口上）与扩展托管类和接口非常类似。</span><span class="sxs-lookup"><span data-stu-id="8d36c-136">Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.</span></span>  
  
 <span data-ttu-id="8d36c-137">创建服务最灵活的方法是先定义服务协定接口，然后再让服务类实现该接口。</span><span class="sxs-lookup"><span data-stu-id="8d36c-137">The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface.</span></span> <span data-ttu-id="8d36c-138"> (如果你必须实现其他人定义的服务协定，则这也是生成服务的最简单方法。如果 <xref:System.ServiceModel.ServiceContractAttribute> <xref:System.ServiceModel.OperationContractAttribute> 服务仅公开一个协定 (但该协定可通过多个终结点) 公开，则 ) 直接生成服务。</span><span class="sxs-lookup"><span data-stu-id="8d36c-138">(This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).</span></span>  
  
 <span data-ttu-id="8d36c-139">使用 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 属性来指示另一个服务协定，该协定在与原始服务协定结合使用时，定义可单独以两种方式流过的消息交换。</span><span class="sxs-lookup"><span data-stu-id="8d36c-139">Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently.</span></span> <span data-ttu-id="8d36c-140">有关详细信息，请参阅 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>。</span><span class="sxs-lookup"><span data-stu-id="8d36c-140">For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d36c-141">下面的代码示例演示如何对接口应用 <xref:System.ServiceModel.ServiceContractAttribute> 以使用一个由 <xref:System.ServiceModel.OperationContractAttribute> 指示的服务方法来定义服务协定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-141">The following code example shows how to apply the <xref:System.ServiceModel.ServiceContractAttribute> to an interface to define a service contract with one service method, indicated by the <xref:System.ServiceModel.OperationContractAttribute>.</span></span> <span data-ttu-id="8d36c-142">在这种情况下，所有消息的绑定需要的保护级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8d36c-142">In this case, the protection level required of bindings for all messages is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8d36c-143">然后，该代码示例将在 `SampleService` 类上实现该协定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-143">The code example then implements that contract on the `SampleService` class.</span></span>  
  
 [!code-csharp[ServiceContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/services.cs#1)]
 [!code-vb[ServiceContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="8d36c-144">下面的代码示例演示了上述服务（创建一个终结点）的简单配置文件。</span><span class="sxs-lookup"><span data-stu-id="8d36c-144">The following code example shows a simple configuration file for the preceding service that creates one endpoint.</span></span>  
  
 [!code-xml[ServiceContractAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/hostapplication.exe.config#2)]   
  
 <span data-ttu-id="8d36c-145">下面的代码示例演示调用上述 `SampleService` 的简单客户端。</span><span class="sxs-lookup"><span data-stu-id="8d36c-145">The following code example shows a simple client that invokes the preceding `SampleService`.</span></span>  
  
 [!code-csharp[ServiceContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/client.cs#3)]
 [!code-vb[ServiceContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.OperationContractAttribute" />
    <related type="Article" href="/dotnet/framework/wcf/designing-and-implementing-services"><span data-ttu-id="8d36c-146">定义服务协定</span><span class="sxs-lookup"><span data-stu-id="8d36c-146">Defining Service Contracts</span></span></related>
    <related type="Article" href="/dotnet/framework/wcf/hosting-services"><span data-ttu-id="8d36c-147">承载服务</span><span class="sxs-lookup"><span data-stu-id="8d36c-147">Hosting a Service</span></span></related>
    <related type="Article" href="/dotnet/framework/wcf/basic-programming-lifecycle"><span data-ttu-id="8d36c-148">服务创建概述</span><span class="sxs-lookup"><span data-stu-id="8d36c-148">Service Creation Overview</span></span></related>
    <related type="Article" href="/dotnet/framework/wcf/building-clients"><span data-ttu-id="8d36c-149">构建客户端</span><span class="sxs-lookup"><span data-stu-id="8d36c-149">Building a Client</span></span></related>
    <related type="Article" href="/dotnet/framework/wcf/accessing-services-using-a-wcf-client"><span data-ttu-id="8d36c-150">代理创建概述</span><span class="sxs-lookup"><span data-stu-id="8d36c-150">Proxy Creation Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d36c-151">初始化 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8d36c-151">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36c-152">此构造函数创建无会话需求、无回调协定但具有默认名称和命名空间的属性实例。</span><span class="sxs-lookup"><span data-stu-id="8d36c-152">The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackContract">
      <MemberSignature Language="C#" Value="public Type CallbackContract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberSignature Language="VB.NET" Value="Public Property CallbackContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackContract { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CallbackContract : Type with get, set" Usage="System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d36c-153">获取或设置当协定为双工协定时的回调协定类型。</span><span class="sxs-lookup"><span data-stu-id="8d36c-153">Gets or sets the type of callback contract when the contract is a duplex contract.</span></span></summary>
        <value><span data-ttu-id="8d36c-154">指示回调协定的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="8d36c-154">A <see cref="T:System.Type" /> that indicates the callback contract.</span></span> <span data-ttu-id="8d36c-155">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d36c-155">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36c-156">在属性中指定一个接口 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> ，该接口表示双向 (或双工) 消息交换中所需的相对协定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-156">Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange.</span></span> <span data-ttu-id="8d36c-157">这使得客户端应用程序能够侦听入站操作调用，该调用可以由服务器端服务应用程序独立于客户端活动进行发送。</span><span class="sxs-lookup"><span data-stu-id="8d36c-157">This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity.</span></span> <span data-ttu-id="8d36c-158">具有单向操作的回调协定表示从客户端可以处理的服务发出的调用。</span><span class="sxs-lookup"><span data-stu-id="8d36c-158">Callback contracts that have one-way operations represent calls from the service that the client can handle.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d36c-159">此 <xref:System.ServiceModel.ServiceContractAttribute> 属性在回调协定上被忽略。</span><span class="sxs-lookup"><span data-stu-id="8d36c-159">The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts.</span></span> <span data-ttu-id="8d36c-160">若要配置回调对象的运行时行为，请使用 <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8d36c-160">To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d36c-161">下面的代码示例演示了一个服务，该服务指定一个回调协定，该服务指示类型的服务 `IDuplexHello` 必须具有实现类型为的服务的 `IHelloCallbackContract` 通信。</span><span class="sxs-lookup"><span data-stu-id="8d36c-161">The following code example shows a service that specifies a callback contract, which indicates that a service of type `IDuplexHello` must have a correspondent that implements a service of type `IHelloCallbackContract`.</span></span> <span data-ttu-id="8d36c-162">此外，还 `IHelloCallbackContract` 实现了一个单向回调方法，使服务能够调用客户端，而无需等待回复来支持分布式的事件驱动客户端。</span><span class="sxs-lookup"><span data-stu-id="8d36c-162">In addition, `IHelloCallbackContract` implements a one-way callback method, enabling the service to call the client without waiting for a reply to support a distributed, event-driven client.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationName">
      <MemberSignature Language="C#" Value="public string ConfigurationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationName : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d36c-163">获取或设置用于查找应用程序配置文件中的服务的名称。</span><span class="sxs-lookup"><span data-stu-id="8d36c-163">Gets or sets the name used to locate the service in an application configuration file.</span></span></summary>
        <value><span data-ttu-id="8d36c-164">用于查找应用程序配置文件中的服务元素的名称。</span><span class="sxs-lookup"><span data-stu-id="8d36c-164">The name used to locate the service element in an application configuration file.</span></span> <span data-ttu-id="8d36c-165">默认值是服务实现类的名称。</span><span class="sxs-lookup"><span data-stu-id="8d36c-165">The default is the name of the service implementation class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36c-166">若要设置配置系统在配置文件中查找协定值所用的值，请参阅 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="8d36c-166">To set the value by which the configuration system locates a contract value in the configuration file, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d36c-167">该值为 Null。</span><span class="sxs-lookup"><span data-stu-id="8d36c-167">The value is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d36c-168">该值是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="8d36c-168">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d36c-169">获取一个值，该值指示是否对成员分配保护级别。</span><span class="sxs-lookup"><span data-stu-id="8d36c-169">Gets a value that indicates whether the member has a protection level assigned.</span></span></summary>
        <value><span data-ttu-id="8d36c-170">如果 <see langword="true" /> 属性不是 <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />，则为 <see cref="F:System.Net.Security.ProtectionLevel.None" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d36c-170"><see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property is not <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d36c-171">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d36c-171">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36c-172"><xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A>属性指示是否为协定设置了以外的保护级别值 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8d36c-172">The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> property indicates whether a protection level value other than `false` has been set for the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d36c-173">获取或设置 Web 服务描述语言 (WSDL) 中的 <see langword="&lt;portType&gt;" /> 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="8d36c-173">Gets or sets the name for the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</span></span></summary>
        <value><span data-ttu-id="8d36c-174">默认值为应用了 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 的类或接口的名称。</span><span class="sxs-lookup"><span data-stu-id="8d36c-174">The default value is the name of the class or interface to which the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> is applied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36c-175">使用 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 和 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 属性控制 WSDL 中元素的名称和命名空间 `<portType>` 。</span><span class="sxs-lookup"><span data-stu-id="8d36c-175">Use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and the <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties to control the name and namespace of the `<portType>` element in WSDL.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d36c-176">下面的代码示例演示如何使用 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 的和属性在 <xref:System.ServiceModel.ServiceContractAttribute> WSDL 中设置相应的值。</span><span class="sxs-lookup"><span data-stu-id="8d36c-176">The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.</span></span>  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 <span data-ttu-id="8d36c-177">下面的代码示例演示了一个 Windows Communication Foundation (WCF) 客户端，该服务使用 [)  (Svcutil.exe ](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe)"</span><span class="sxs-lookup"><span data-stu-id="8d36c-177">The following code example shows an Windows Communication Foundation (WCF) client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe).</span></span> <span data-ttu-id="8d36c-178">此客户端使用 `HelloWorldProxy` 客户端，而不是 `SampleServiceProxy` 客户端 (，就像) 的 "示例" 部分中的示例那样 <xref:System.ServiceModel.ServiceContractAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="8d36c-178">This client uses a `HelloWorldProxy` client rather than a `SampleServiceProxy` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).</span></span>  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d36c-179">该值为 Null。</span><span class="sxs-lookup"><span data-stu-id="8d36c-179">The value is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d36c-180">该值是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="8d36c-180">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d36c-181">获取或设置 Web 服务描述语言 (WSDL) 中的 <see langword="&lt;portType&gt;" /> 元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="8d36c-181">Gets or sets the namespace of the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</span></span></summary>
        <value><span data-ttu-id="8d36c-182"><see langword="&lt;portType&gt;" /> 元素的 WSDL 命名空间。</span><span class="sxs-lookup"><span data-stu-id="8d36c-182">The WSDL namespace of the <see langword="&lt;portType&gt;" /> element.</span></span> <span data-ttu-id="8d36c-183">默认值为 <c>" http://tempuri.org "</c>。</span><span class="sxs-lookup"><span data-stu-id="8d36c-183">The default value is <c>"http://tempuri.org"</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d36c-184">下面的代码示例演示如何使用 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 的和属性在 <xref:System.ServiceModel.ServiceContractAttribute> WSDL 中设置相应的值。</span><span class="sxs-lookup"><span data-stu-id="8d36c-184">The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.</span></span>  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 <span data-ttu-id="8d36c-185">下面的代码示例演示了一个 Windows Communication Foundation (WCF) 客户端，该服务使用 [)  (Svcutil.exe ](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe)"</span><span class="sxs-lookup"><span data-stu-id="8d36c-185">The following code example shows an Windows Communication Foundation (WCF) client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe).</span></span> <span data-ttu-id="8d36c-186">此客户端使用 `HelloWorldClient` 客户端，而不是 `SampleServiceClient` 客户端 (，就像) 的 "示例" 部分中的示例那样 <xref:System.ServiceModel.ServiceContractAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="8d36c-186">This client uses a `HelloWorldClient` client rather than a `SampleServiceClient` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).</span></span>  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d36c-187">指定协定的绑定是否必须支持 <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="8d36c-187">Specifies whether the binding for the contract must support the value of the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property.</span></span></summary>
        <value><span data-ttu-id="8d36c-188"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8d36c-188">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="8d36c-189">默认值为 <see cref="F:System.Net.Security.ProtectionLevel.None" />。</span><span class="sxs-lookup"><span data-stu-id="8d36c-189">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36c-190">使用 " <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 属性" 指定协定绑定要求对公开协定的终结点进行加密和/或数字签名的程度。</span><span class="sxs-lookup"><span data-stu-id="8d36c-190">Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract.</span></span> <span data-ttu-id="8d36c-191">在此设置的值是为包括错误在内的所有操作消息提供的默认值。</span><span class="sxs-lookup"><span data-stu-id="8d36c-191">The value set here is the default value for all operation messages including faults.</span></span>  
  
 <span data-ttu-id="8d36c-192">请记住，运行时的保护行为是在下列属性中设置的保护级别值的组合，这一点很重要。</span><span class="sxs-lookup"><span data-stu-id="8d36c-192">It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="8d36c-193">这些属性具有层次结构。</span><span class="sxs-lookup"><span data-stu-id="8d36c-193">These properties have a hierarchical structure.</span></span> <span data-ttu-id="8d36c-194">除非已为较窄范围显式设置了某个不同的值，否则设置最外层的值将为所有较窄的范围确定默认设置。</span><span class="sxs-lookup"><span data-stu-id="8d36c-194">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="8d36c-195">在这种情况下，外层的值将保持所有较窄的范围的默认设置，但特定的设置除外。</span><span class="sxs-lookup"><span data-stu-id="8d36c-195">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="8d36c-196">例如，如果将 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 设置为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>，并且其他较窄范围都没有设置保护级别，则会对操作协定中的所有消息进行加密和签名。</span><span class="sxs-lookup"><span data-stu-id="8d36c-196">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="8d36c-197">但是，如果其中一个操作将 <xref:System.ServiceModel.OperationContractAttribute> 设置为 <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>，那么只会对此操作的消息进行签名，而对协定中的所有其他消息进行加密和签名。</span><span class="sxs-lookup"><span data-stu-id="8d36c-197">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="8d36c-198">有关保护级别及其假设和范围的详细信息，请参阅 [了解保护级别](/dotnet/framework/wcf/understanding-protection-level)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-198">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](/dotnet/framework/wcf/understanding-protection-level).</span></span>  
  
 <span data-ttu-id="8d36c-199">这些值的设置范围是：</span><span class="sxs-lookup"><span data-stu-id="8d36c-199">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="8d36c-200"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 上的 <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="8d36c-200">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8d36c-201"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 上的 <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="8d36c-201">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8d36c-202">当协定上没有显式指定保护级别并且基础绑定支持安全性时（无论处于传输级别还是处于消息级别），整个协定的有效保护级别将为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8d36c-202">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8d36c-203">如果绑定不支持安全性（如 <xref:System.ServiceModel.BasicHttpBinding>），则整个协定的有效 <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> 为 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8d36c-203">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="8d36c-204">因此，根据终结点绑定，即使协定指定了 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>，客户端也可以要求不同的消息或传输级别安全保护。</span><span class="sxs-lookup"><span data-stu-id="8d36c-204">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d36c-205">该值不是 <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8d36c-205">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SessionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.SessionMode SessionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.SessionMode SessionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionMode As SessionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::SessionMode SessionMode { System::ServiceModel::SessionMode get(); void set(System::ServiceModel::SessionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SessionMode : System.ServiceModel.SessionMode with get, set" Usage="System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SessionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d36c-206">获取或设置是否允许、不允许或要求会话。</span><span class="sxs-lookup"><span data-stu-id="8d36c-206">Gets or sets whether sessions are allowed, not allowed or required.</span></span></summary>
        <value><span data-ttu-id="8d36c-207">指示是否允许、不允许或要求会话的 <see cref="T:System.ServiceModel.SessionMode" />。</span><span class="sxs-lookup"><span data-stu-id="8d36c-207">A <see cref="T:System.ServiceModel.SessionMode" /> that indicates whether sessions are allowed, not allowed, or required.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36c-208">使用 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 属性来要求在终结点之间支持会话的绑定。</span><span class="sxs-lookup"><span data-stu-id="8d36c-208">Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints.</span></span> <span data-ttu-id="8d36c-209">会话就是将在两个或多个终结点之间交换的消息集相互关联的方式。</span><span class="sxs-lookup"><span data-stu-id="8d36c-209">A session is a way of correlating a set of messages exchanged between two or more endpoints.</span></span> <span data-ttu-id="8d36c-210">如果服务支持通道会话，则可以使用 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 属性指定服务协定实现实例与通道会话之间的关系。</span><span class="sxs-lookup"><span data-stu-id="8d36c-210">If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session.</span></span> <span data-ttu-id="8d36c-211">如果绑定不支持会话，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8d36c-211">If a binding does not support sessions, an exception is thrown.</span></span>  
  
 <span data-ttu-id="8d36c-212">例如，如果将 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 属性设置为， <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType> 并且 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 属性设置为 <xref:System.ServiceModel.InstanceContextMode.PerSession> ，则客户端可以使用相同的连接对同一服务对象进行重复调用。</span><span class="sxs-lookup"><span data-stu-id="8d36c-212">For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType> and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property is set to <xref:System.ServiceModel.InstanceContextMode.PerSession>, clients can use the same connection to make repeated calls to the same service object.</span></span>  
  
 <span data-ttu-id="8d36c-213">有关会话和服务实例的详细信息，请参阅 [使用会话](/dotnet/framework/wcf/using-sessions) 和 [会话、实例化和并发](/dotnet/framework/wcf/feature-details/sessions-instancing-and-concurrency)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-213">For more information about sessions and service instances, see [Using Sessions](/dotnet/framework/wcf/using-sessions) and [Sessions, Instancing, and Concurrency](/dotnet/framework/wcf/feature-details/sessions-instancing-and-concurrency).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d36c-214">支持会话的信道支持服务实例与特定会话的默认关联。</span><span class="sxs-lookup"><span data-stu-id="8d36c-214">A channel that supports sessions supports the default association of a service instance with a particular session.</span></span> <span data-ttu-id="8d36c-215">但是，除了基于会话的实例化控件外，不同的会话实现支持不同的功能。</span><span class="sxs-lookup"><span data-stu-id="8d36c-215">However, different session implementations support different features in addition to session-based instancing control.</span></span> <span data-ttu-id="8d36c-216">WCF 提供了四种类型的会话，您可以使用这些会话提供会话应用程序行为;每种类型的会话都提供特定于会话类型的其他行为。</span><span class="sxs-lookup"><span data-stu-id="8d36c-216">WCF provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.</span></span>  
  
1.  <span data-ttu-id="8d36c-217"><xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType>支持安全会话，在这种情况下，通信的两端都已与加密和/或数字签名过程一致; 所有消息都与该特定安全对话相关联。</span><span class="sxs-lookup"><span data-stu-id="8d36c-217">The <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation.</span></span> <span data-ttu-id="8d36c-218">有关详细信息，请参阅 [保护服务](/dotnet/framework/wcf/securing-services)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-218">For more information, see [Securing Services](/dotnet/framework/wcf/securing-services).</span></span> <span data-ttu-id="8d36c-219">例如，如果 <xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType> 包含对安全会话和可靠会话的支持，则默认情况下仅使用对消息进行加密和数字签名的安全会话。</span><span class="sxs-lookup"><span data-stu-id="8d36c-219">For example, the <xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.</span></span>  
  
2.  <span data-ttu-id="8d36c-220"><xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType>支持 tcp/ip 连接公开的会话，以确保所有消息都由套接字级别的连接会话关联。</span><span class="sxs-lookup"><span data-stu-id="8d36c-220">The <xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.</span></span>  
  
3.  <span data-ttu-id="8d36c-221">用于 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType> 实现 WS-ReliableMessaging 规范的，它提供对可靠会话的支持，在这些会话中，消息按顺序传递并且只传递一次，从而使消息在会话期间跨多个节点传输。</span><span class="sxs-lookup"><span data-stu-id="8d36c-221">The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation.</span></span> <span data-ttu-id="8d36c-222">有关详细信息，请参阅 [可靠会话](/dotnet/framework/wcf/feature-details/reliable-sessions)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-222">For more information, see [Reliable Sessions](/dotnet/framework/wcf/feature-details/reliable-sessions).</span></span>  
  
4.  <span data-ttu-id="8d36c-223"><xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType>提供 MSMQ 数据报会话。</span><span class="sxs-lookup"><span data-stu-id="8d36c-223">The <xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType> provides MSMQ datagram sessions.</span></span> <span data-ttu-id="8d36c-224">有关详细信息，请参阅 [WCF 中的队列](/dotnet/framework/wcf/feature-details/queues-in-wcf)。</span><span class="sxs-lookup"><span data-stu-id="8d36c-224">For more information, see [Queues in WCF](/dotnet/framework/wcf/feature-details/queues-in-wcf).</span></span>  
  
 <span data-ttu-id="8d36c-225">请记住，设置 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 属性并不指定协定需要的会话类型，而只指定协定需要一个会话。</span><span class="sxs-lookup"><span data-stu-id="8d36c-225">Remember that setting the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property does not specify the type of session the contract requires, only that it requires one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d36c-226">以下服务协定要求配置的绑定在与服务实现交互时使用会话 `SampleDuplexHello` 。</span><span class="sxs-lookup"><span data-stu-id="8d36c-226">The following service contract requires that configured bindings use sessions when interacting with `SampleDuplexHello` service implementations.</span></span>  
  
 [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]
 [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d36c-227">该值不是 <see cref="T:System.ServiceModel.SessionMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8d36c-227">The value is not one of the <see cref="T:System.ServiceModel.SessionMode" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
