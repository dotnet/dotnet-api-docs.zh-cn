<Type Name="MsmqBindingBase" FullName="System.ServiceModel.MsmqBindingBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4fdbb89486c882ba9dea37d321e1dea456f60a78" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89975908" /></Metadata><TypeSignature Language="C#" Value="public abstract class MsmqBindingBase : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqBindingBase extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqBindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqBindingBase&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqBindingBase abstract : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type MsmqBindingBase = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c8991-101"><see cref="T:System.ServiceModel.NetMsmqBinding" /> 和 <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> 的基类。</span><span class="sxs-lookup"><span data-stu-id="c8991-101">The base class for <see cref="T:System.ServiceModel.NetMsmqBinding" /> and <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-102">此抽象类包含 <xref:System.ServiceModel.NetMsmqBinding> 和 <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> 通用的属性。</span><span class="sxs-lookup"><span data-stu-id="c8991-102">This abstract class contains properties common to <xref:System.ServiceModel.NetMsmqBinding> and <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding>.</span></span> <span data-ttu-id="c8991-103">队列的所有基本概念都以属性形式显示。</span><span class="sxs-lookup"><span data-stu-id="c8991-103">All of the fundamental concepts in queuing are displayed in the form of properties.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqBindingBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqBindingBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqBindingBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8991-104">初始化 <see cref="T:System.ServiceModel.MsmqBindingBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c8991-104">Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqBindingBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomDeadLetterQueue : Uri with get, set" Usage="System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-105">获取或设置一个 URI，该 URI 包含每个应用程序的死信队列（该队列用于放置已过期的消息以及传输或传递失败的消息）的位置。</span><span class="sxs-lookup"><span data-stu-id="c8991-105">Gets or sets a URI that contains the location of the dead-letter queue for each application, where messages that have expired or that have failed transfer or delivery are placed.</span></span></summary>
        <value><span data-ttu-id="c8991-106"><see cref="T:System.Uri" />，其中包含每个应用程序的死信队列的位置。</span><span class="sxs-lookup"><span data-stu-id="c8991-106">The <see cref="T:System.Uri" /> that contains the location of the dead-letter queue for each application.</span></span> <span data-ttu-id="c8991-107">默认值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-107">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-108">死信队列是发送应用程序的队列管理器中的一个队列，用于放置传递失败的过期消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-108">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that failed to be delivered.</span></span>  
  
 <span data-ttu-id="c8991-109"><xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 指定的 URI 必须使用 net.msmq 方案。</span><span class="sxs-lookup"><span data-stu-id="c8991-109">The URI that is specified by <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must use the net.msmq scheme.</span></span>  
  
 <span data-ttu-id="c8991-110">如果 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 设置为 <xref:System.ServiceModel.DeadLetterQueue.None> 或 <xref:System.ServiceModel.DeadLetterQueue.System>，则 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 必须设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c8991-110">If <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue.None> or <xref:System.ServiceModel.DeadLetterQueue.System>, then <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must be set to `null`.</span></span> <span data-ttu-id="c8991-111">如果 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 不为 `null`，则 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 必须设置为 <xref:System.ServiceModel.DeadLetterQueue.Custom>。</span><span class="sxs-lookup"><span data-stu-id="c8991-111">If <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is not `null`, then <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue.Custom>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberSignature Language="F#" Value="member this.DeadLetterQueue : System.ServiceModel.DeadLetterQueue with get, set" Usage="System.ServiceModel.MsmqBindingBase.DeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-112">获取或设置一个枚举值，该值指示要使用的死信队列的类型。</span><span class="sxs-lookup"><span data-stu-id="c8991-112">Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</span></span></summary>
        <value><span data-ttu-id="c8991-113">一个 <see cref="T:System.ServiceModel.DeadLetterQueue" /> 枚举值，指示要使用的死信队列的类型。</span><span class="sxs-lookup"><span data-stu-id="c8991-113">A <see cref="T:System.ServiceModel.DeadLetterQueue" /> enumeration value that indicates the type of dead-letter queue to use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-114">死信队列是发送应用程序的队列管理器中的一个队列，用于放置传递失败的过期消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-114">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</span></span> <span data-ttu-id="c8991-115">死信队列枚举指定要使用的死信队列的类型。</span><span class="sxs-lookup"><span data-stu-id="c8991-115">The dead-letter queue enumeration specifies the type of dead-letter queue to use.</span></span> <span data-ttu-id="c8991-116">有效值为：</span><span class="sxs-lookup"><span data-stu-id="c8991-116">The values are:</span></span>  
  
-   <span data-ttu-id="c8991-117">`None`：不需要死信队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-117">`None`: No dead-letter queue is required.</span></span> <span data-ttu-id="c8991-118">如果消息传递失败，则不会在死信队列中保留该消息的任何记录。</span><span class="sxs-lookup"><span data-stu-id="c8991-118">If a message fails delivery, no record of it is maintained in the dead-letter queue.</span></span> <span data-ttu-id="c8991-119">这是当 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `false` 时的默认值。</span><span class="sxs-lookup"><span data-stu-id="c8991-119">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="c8991-120">`System`：系统级死信队列用于记录传递失败的消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-120">`System`: The system-wide dead-letter queue is used to record messages that fail delivery.</span></span> <span data-ttu-id="c8991-121">消息队列 (MSMQ) 具有一个事务性系统死信队列和一个非事务性系统死信队列，分别记录来自事务性队列和非事务性队列的传递失败的消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-121">Message Queuing (MSMQ) has a transactional, system, dead-letter queue and a non-transactional, system, dead-letter queue to record messages that fail delivery from transactional and non-transactional queues, respectively.</span></span> <span data-ttu-id="c8991-122">这是当 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `true` 时的默认值。</span><span class="sxs-lookup"><span data-stu-id="c8991-122">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="c8991-123">`Custom`：<xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 属性中指定的用于记录传递失败消息的队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-123">`Custom`: The queue specified in the <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> property that is used to record messages that fail delivery.</span></span>  
  
 <span data-ttu-id="c8991-124">造成消息未能到达接收应用程序的原因包括：</span><span class="sxs-lookup"><span data-stu-id="c8991-124">The reasons a message can fail to reach the receiving application include:</span></span>  
  
-   <span data-ttu-id="c8991-125">事务性消息被发送到非事务性队列中。</span><span class="sxs-lookup"><span data-stu-id="c8991-125">A transactional message is sent to a non-transactional queue.</span></span>  
  
-   <span data-ttu-id="c8991-126">非事务性消息被发送到事务性队列中。</span><span class="sxs-lookup"><span data-stu-id="c8991-126">A non-transactional message is sent to a transactional queue.</span></span>  
  
-   <span data-ttu-id="c8991-127">未经身份验证的消息被发送到仅接受经过身份验证的消息的队列中。</span><span class="sxs-lookup"><span data-stu-id="c8991-127">An unauthenticated message is sent to a queue that accepts only authenticated messages.</span></span>  
  
-   <span data-ttu-id="c8991-128">未加密的消息被发送到仅接受加密消息的队列中。</span><span class="sxs-lookup"><span data-stu-id="c8991-128">An unencrypted message is sent to a queue that accepts only encrypted messages.</span></span>  
  
-   <span data-ttu-id="c8991-129">消息在传递给接收方之前过期。</span><span class="sxs-lookup"><span data-stu-id="c8991-129">The message expires before the message is delivered to a receiver.</span></span>  
  
-   <span data-ttu-id="c8991-130">超出了目标计算机的消息存储配额或目标队列的存储配额，或者在消息到达时目标计算机上没有可用的存储空间。</span><span class="sxs-lookup"><span data-stu-id="c8991-130">The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</span></span>  
  
-   <span data-ttu-id="c8991-131">发送方没有将消息放入目标队列所需的 [访问权限](https://go.microsoft.com/fwlink/?LinkID=96167) 。</span><span class="sxs-lookup"><span data-stu-id="c8991-131">The sender does not have the [access rights](https://go.microsoft.com/fwlink/?LinkID=96167) required to place the message in the destination queue.</span></span>  
  
-   <span data-ttu-id="c8991-132">附加在消息上的数字签名无效。</span><span class="sxs-lookup"><span data-stu-id="c8991-132">The digital signature attached to the message is not valid.</span></span>  
  
-   <span data-ttu-id="c8991-133">加密的消息不能由目标队列管理器解密。</span><span class="sxs-lookup"><span data-stu-id="c8991-133">An encrypted message cannot be decrypted by the destination queue manager.</span></span>  
  
-   <span data-ttu-id="c8991-134">目标队列在检索消息之前被清除或删除。</span><span class="sxs-lookup"><span data-stu-id="c8991-134">The destination queue is purged or deleted before the message is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Durable : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.Durable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-135">获取或设置一个值，该值指定此绑定处理的消息是持久的还是可变的。</span><span class="sxs-lookup"><span data-stu-id="c8991-135">Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</span></span></summary>
        <value><span data-ttu-id="c8991-136">如果此绑定处理的消息是持久的，则为 <see langword="true" />；如果这些消息是可变的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-136"><see langword="true" /> if the messages processed by this binding are durable; <see langword="false" /> if they are volatile.</span></span> <span data-ttu-id="c8991-137">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-137">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-138">持久性消息能够在队列管理器停止响应时保留下来，而可变消息则不能。</span><span class="sxs-lookup"><span data-stu-id="c8991-138">A durable message survives when a queue manager stops responding, while a volatile message does not.</span></span> <span data-ttu-id="c8991-139">当应用程序可以容忍偶尔丢失消息时，可变消息是有用的。</span><span class="sxs-lookup"><span data-stu-id="c8991-139">Volatile messages are useful when applications can tolerate occasional lost messages.</span></span>  
  
 <span data-ttu-id="c8991-140">如果 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `true`，则消息必须为持久的。</span><span class="sxs-lookup"><span data-stu-id="c8991-140">If <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`, the messages must be durable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExactlyOnce : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.ExactlyOnce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-141">获取或设置一个值，该值指示是否只接收一次由此绑定处理的消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-141">Gets or sets a value that indicates whether messages processed by this binding are received exactly once.</span></span></summary>
        <value><span data-ttu-id="c8991-142">如果只接收一次由此绑定处理的消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-142"><see langword="true" /> if messages processed by this binding are received exactly once; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c8991-143">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-143">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-144">发送的消息可以包含保证，也可以不包含保证。</span><span class="sxs-lookup"><span data-stu-id="c8991-144">A message can be sent with or without assurances.</span></span> <span data-ttu-id="c8991-145">应用程序可以使用保证来确保发送的消息到达接收消息队列；如果消息未能到达，则应用程序可以通过读取死信队列进行确定。</span><span class="sxs-lookup"><span data-stu-id="c8991-145">An assurance enables an application to ensure that a sent message reached the receiving message queue, or if it did not, the application can determine this by reading the dead-letter queue.</span></span>  
  
 <span data-ttu-id="c8991-146">将 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `true` 时发送的消息必须只发送到事务性队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-146">Messages sent with <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> set to `true` must be sent to a transactional queue only.</span></span>  
  
 <span data-ttu-id="c8991-147">当 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `true` 时，指示消息队列 (MSMQ) 应确保将发送的消息传递到接收消息队列一次且只有一次。</span><span class="sxs-lookup"><span data-stu-id="c8991-147"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>, when set to `true`, indicates that Message Queuing (MSMQ) ensures that a sent message is delivered to the receiving message queue once and only once.</span></span> <span data-ttu-id="c8991-148">如果传递失败，则会将消息发送到死信队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-148">If delivery fails, the message is sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="c8991-149">对于要求将 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `false` 的消息，<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 属性默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c8991-149">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `false`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to `null`.</span></span>  
  
 <span data-ttu-id="c8991-150">对于要求将 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `true` 的消息，<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 属性默认为 MSMQ 中的事务性系统级死信队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-150">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `true`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to a transactional system-wide dead-letter queue in MSMQ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(65536)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(65536)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-151">获取或设置此绑定可处理消息的最大字节大小。</span><span class="sxs-lookup"><span data-stu-id="c8991-151">Gets or sets the maximum size, in bytes, for a message that is processed by this binding.</span></span></summary>
        <value><span data-ttu-id="c8991-152">此绑定可处理的最大消息大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="c8991-152">The maximum size (in bytes) for a message that is processed by this binding.</span></span> <span data-ttu-id="c8991-153">默认值为 65,536 字节。</span><span class="sxs-lookup"><span data-stu-id="c8991-153">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-154">对消息大小进行的此限制旨在降低遭受拒绝服务 (DoS) 攻击的可能性。</span><span class="sxs-lookup"><span data-stu-id="c8991-154">This bound on message size is intended to limit exposure to Denial of Service (DoS) attacks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRetryCycles : int with get, set" Usage="System.ServiceModel.MsmqBindingBase.MaxRetryCycles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-155">获取或设置尝试向接收应用程序传递消息的最大重试周期数。</span><span class="sxs-lookup"><span data-stu-id="c8991-155">Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</span></span></summary>
        <value><span data-ttu-id="c8991-156">尝试向应用程序传递消息的最大重试周期数。</span><span class="sxs-lookup"><span data-stu-id="c8991-156">The maximum number of retry cycles to attempt delivery of messages to the application.</span></span> <span data-ttu-id="c8991-157">默认值为 2。</span><span class="sxs-lookup"><span data-stu-id="c8991-157">The default value is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-158">单个重试周期按指定次数尝试向应用程序传递消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-158">A single retry cycle attempts to deliver a message to an application a specified number of times.</span></span> <span data-ttu-id="c8991-159">尝试次数由 <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="c8991-159">The number of attempts made is set by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="c8991-160">如果在连续重试了指定次数后，应用程序仍未能访问消息，则将消息发送到重试队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-160">If the application fails to access the message after the specified number of immediate retries, the message is sent to a retry queue.</span></span> <span data-ttu-id="c8991-161">后续的重试周期包括在经过由 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> 属性指定的延迟后，从重试队列返回应用程序队列以再次尝试传递给接收应用程序的消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-161">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property.</span></span> <span data-ttu-id="c8991-162"><xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 属性指定应用程序用于尝试传递消息的重试周期数。</span><span class="sxs-lookup"><span data-stu-id="c8991-162">The <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property specifies the number of retry cycles that the application uses to attempt to deliver the message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-163">获取或设置一个指示是否请求接收上下文行为的值。</span><span class="sxs-lookup"><span data-stu-id="c8991-163">Gets or sets a value that indicates whether the receive context behavior is requested.</span></span></summary>
        <value><span data-ttu-id="c8991-164">如果要求接收上下文行为，则为 <see langword="true" />；否则为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-164"><see langword="true" /> if the receive context behavior is requested; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveErrorHandling : System.ServiceModel.ReceiveErrorHandling with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-165">获取或设置一个枚举值，该值指定如何处理病毒消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-165">Gets or sets an enumeration value that specifies how poison messages are handled.</span></span></summary>
        <value><span data-ttu-id="c8991-166">一个 <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 值，指定如何处理病毒消息和其他无法调度的消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-166">A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and other messages that cannot be dispatched are handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-167">如果多次尝试传递队列中的某个消息都失败，则说明该消息已中毒。</span><span class="sxs-lookup"><span data-stu-id="c8991-167">A message in the queue becomes poisoned if repeated attempts to deliver the message failed.</span></span> <span data-ttu-id="c8991-168">此病毒消息将最终根据此属性的设置来处理。</span><span class="sxs-lookup"><span data-stu-id="c8991-168">This poison message is eventually handled based on the setting of this property.</span></span> <span data-ttu-id="c8991-169">当此属性设置为 <xref:System.ServiceModel.ReceiveErrorHandling.Fault> 时，侦听器会出错，并且会跟踪和引发一个 <xref:System.ServiceModel.MsmqPoisonMessageException>。</span><span class="sxs-lookup"><span data-stu-id="c8991-169">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, the listener is faulted and a <xref:System.ServiceModel.MsmqPoisonMessageException> is traced and thrown.</span></span> <span data-ttu-id="c8991-170">病毒消息会留在队列中，您必须先将其移除，才能访问队列中的其他消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-170">The poison message is left in the queue and must be removed before more messages can be accessed from the queue.</span></span> <span data-ttu-id="c8991-171"><xref:System.ServiceModel.MsmqPoisonMessageException> 包含一个 <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>，它可用于标识病毒消息并将其从队列中手动移除。</span><span class="sxs-lookup"><span data-stu-id="c8991-171">The <xref:System.ServiceModel.MsmqPoisonMessageException> contains a <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> that can be used to identify and manually remove the poison message from the queue.</span></span>  
  
 <span data-ttu-id="c8991-172">当此属性设置为 <xref:System.ServiceModel.ReceiveErrorHandling.Drop> 时，就会丢弃病毒消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-172">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, the poison message is dropped.</span></span>  
  
 <span data-ttu-id="c8991-173">当此属性设置为 <xref:System.ServiceModel.ReceiveErrorHandling.Reject> 时，会将一个否定确认发送到客户端，并从队列中移除病毒消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-173">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, a negative acknowledgement is sent to the client and the poison message is removed from the queue.</span></span> <span data-ttu-id="c8991-174">此选项仅在消息队列 4.0 中可用，且需要 [!INCLUDE[wv](~/includes/wv-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c8991-174">This option is available only on Message Queuing 4.0 and requires [!INCLUDE[wv](~/includes/wv-md.md)].</span></span>  
  
 <span data-ttu-id="c8991-175">当设置为 <xref:System.ServiceModel.ReceiveErrorHandling.Move> 时，会将病毒消息移动到最后一个病毒子队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-175">When set to <xref:System.ServiceModel.ReceiveErrorHandling.Move>, the poison message is moved to the final poison subqueue.</span></span> <span data-ttu-id="c8991-176">此选项仅在“消息队列 4.0”中可用，且需要 [!INCLUDE[wv](~/includes/wv-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c8991-176">This option is only available on Message Queuing 4.0 and requires [!INCLUDE[wv](~/includes/wv-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveRetryCount : int with get, set" Usage="System.ServiceModel.MsmqBindingBase.ReceiveRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(5)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(5)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-177">获取或设置从应用程序队列读取的消息的最大立即传递尝试次数。</span><span class="sxs-lookup"><span data-stu-id="c8991-177">Gets or sets the maximum number of immediate delivery attempts on a message that is read from the application queue.</span></span></summary>
        <value><span data-ttu-id="c8991-178">立即传递尝试的最大次数。</span><span class="sxs-lookup"><span data-stu-id="c8991-178">The maximum number of immediate delivery attempts.</span></span> <span data-ttu-id="c8991-179">默认值为 5。</span><span class="sxs-lookup"><span data-stu-id="c8991-179">The default is 5.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-180">如果达到消息的最大立即传递尝试次数且应用程序仍未访问消息，则会将消息发送到重试队列，以便在以后尝试传递。</span><span class="sxs-lookup"><span data-stu-id="c8991-180">If the maximum number of immediate delivery attempts for the message is made and the message is not accessed by the application, then the message is sent to a retry queue to attempt delivery at a later time.</span></span> <span data-ttu-id="c8991-181">如果未指定重试周期，则将消息发送到病毒消息队列，或将否定确认发送回发送方。</span><span class="sxs-lookup"><span data-stu-id="c8991-181">If no retry cycles are specified, then the messages is either sent to the poison-message queue, or a negative acknowledgement is sent back to the sender.</span></span>  
  
 <span data-ttu-id="c8991-182">有关详细信息，请参阅 <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 和 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>。</span><span class="sxs-lookup"><span data-stu-id="c8991-182">For more information, see <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RetryCycleDelay : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.RetryCycleDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:30:00")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:30:00")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-183">获取或设置一个值，该值指示尝试传递无法立即传递的消息时，各个重试周期之间的时间延迟。</span><span class="sxs-lookup"><span data-stu-id="c8991-183">Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that cannot be delivered immediately.</span></span></summary>
        <value><span data-ttu-id="c8991-184">一个 <see cref="T:System.TimeSpan" />，指定在开始下一个尝试传递到接收应用程序的周期前等待的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="c8991-184">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</span></span> <span data-ttu-id="c8991-185">默认值为 10 分钟。</span><span class="sxs-lookup"><span data-stu-id="c8991-185">The default value is 10 minutes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-186">单个重试周期尝试按指定次数向接收应用程序传递消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-186">A single retry cycle attempts to deliver a message to a receiving application a specified number of times.</span></span> <span data-ttu-id="c8991-187">尝试次数由 <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="c8991-187">The number of attempts made is specified by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="c8991-188">如果在连续重试了指定次数后，应用程序仍未能访问消息，则将消息发送到重试队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-188">If the application fails to access the message after the specified number of immediate retries, the message is sent to a retry queue.</span></span> <span data-ttu-id="c8991-189">后续的重试周期包括在经过由 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> 指定的延迟后，从重试队列返回应用程序队列以再次尝试传递给接收应用程序的消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-189">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A>.</span></span> <span data-ttu-id="c8991-190">重试周期数由 <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 指定。</span><span class="sxs-lookup"><span data-stu-id="c8991-190">The number of retry cycles is specified by <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.MsmqBindingBase.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-191">返回此绑定的方案。</span><span class="sxs-lookup"><span data-stu-id="c8991-191">Returns the scheme for this binding.</span></span></summary>
        <value><span data-ttu-id="c8991-192">此绑定的方案。</span><span class="sxs-lookup"><span data-stu-id="c8991-192">The scheme for this binding.</span></span> <span data-ttu-id="c8991-193">返回的方案取决于 <see cref="T:System.ServiceModel.MsmqBindingBase" /> 的实现。</span><span class="sxs-lookup"><span data-stu-id="c8991-193">The scheme returned depends on the implementation of <see cref="T:System.ServiceModel.MsmqBindingBase" />.</span></span> <span data-ttu-id="c8991-194"><see cref="T:System.ServiceModel.NetMsmqBinding" /> 实现返回“net.msmq”。</span><span class="sxs-lookup"><span data-stu-id="c8991-194">The <see cref="T:System.ServiceModel.NetMsmqBinding" /> implementation returns "net.msmq".</span></span> <span data-ttu-id="c8991-195"><see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> 实现返回“msmq.formatname”。</span><span class="sxs-lookup"><span data-stu-id="c8991-195">The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> implementation returns "msmq.formatname".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-196">消息队列 (MSMQ) 支持使用本机 MSMQ 协议和 SRMP 协议在队列管理器之间传输消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-196">Message Queuing (MSMQ) supports transporting messages between queue managers using both the native MSMQ protocol and the SRMP protocol.</span></span> <span data-ttu-id="c8991-197">使用队列传输绑定的应用程序可以同时使用这两种协议。</span><span class="sxs-lookup"><span data-stu-id="c8991-197">Applications that use the queued transport binding can use both of these protocols.</span></span> <span data-ttu-id="c8991-198">队列传输绑定所支持的协议方案为：net.msmq（本地协议）、net.srmp（SRMP 协议）和 net.srmps（基于 HTTPS 的 SRMP）。</span><span class="sxs-lookup"><span data-stu-id="c8991-198">The protocol schemes supported by the queued transport binding are net.msmq for the native protocol, net.srmp for the SRMP protocol, and net.srmps for SRMP over HTTPS.</span></span>  
  
 <span data-ttu-id="c8991-199"><xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> 支持单一方案 msmq.formatname，用户可以使用该方案直接在队列地址中指定队列的格式名称。</span><span class="sxs-lookup"><span data-stu-id="c8991-199">The <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding> supports a single scheme, msmq.formatname, with which the user can specify the format name of the queue directly in the queue address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-200">获取一个值，该值指示传入请求是由同步处理更加有效还是异步处理更加有效。</span><span class="sxs-lookup"><span data-stu-id="c8991-200">Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="c8991-201"><see langword="true" /> 如果可以同步地处理请求，则为;否则为 <see langword=" false" /> 。</span><span class="sxs-lookup"><span data-stu-id="c8991-201"><see langword="true" /> if requests can be handled more efficiently synchronously; otherwise <see langword=" false" />.</span></span> <span data-ttu-id="c8991-202">默认值为 <see langword="false" />，即异步处理请求。</span><span class="sxs-lookup"><span data-stu-id="c8991-202">The default is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-203">当 <xref:System.ServiceModel.MsmqBindingBase.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> 为 `true` 时，<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 属性将设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="c8991-203">The <xref:System.ServiceModel.MsmqBindingBase.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> property is set to `true` when the <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "1.00:00:00")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "1.00:00:00")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-204">获取或设置一个时间间隔，该时间间隔指示此绑定处理的消息在过期之前可以保留在队列中的时间长度。</span><span class="sxs-lookup"><span data-stu-id="c8991-204">Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</span></span></summary>
        <value><span data-ttu-id="c8991-205"><see cref="T:System.TimeSpan" />，指示消息在过期之前可以保留在队列中的时间长度。</span><span class="sxs-lookup"><span data-stu-id="c8991-205">The <see cref="T:System.TimeSpan" /> that indicates how long the messages can be in the queue before they expire.</span></span> <span data-ttu-id="c8991-206">默认值为 1 天。</span><span class="sxs-lookup"><span data-stu-id="c8991-206">The default value is 1 day.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-207">设置 <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> 属性可以确保具有时效性的消息不会在由接收应用程序进行处理之前过时。</span><span class="sxs-lookup"><span data-stu-id="c8991-207">The <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> property is set to ensure that time-sensitive messages do not become stale before they are processed by the receiving applications.</span></span> <span data-ttu-id="c8991-208">如果队列中的消息在指定时间间隔内未被接收应用程序访问，则该消息为过时消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-208">A message in a queue that is not accessed by the receiving application within the time interval specified is expired.</span></span> <span data-ttu-id="c8991-209">过期消息将发送到一个称为死信队列的特殊队列中。</span><span class="sxs-lookup"><span data-stu-id="c8991-209">Expired messages are sent to a special queue called the dead-letter queue.</span></span> <span data-ttu-id="c8991-210">死信队列的位置通过 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 属性进行设置，或基于保证设置为适当的默认值。</span><span class="sxs-lookup"><span data-stu-id="c8991-210">The location of the dead-letter queue is set with the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property or to the appropriate default, based on assurances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMsmqTracing : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.UseMsmqTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-211">获取或设置一个值，该值指示是否应跟踪由此绑定处理的消息。</span><span class="sxs-lookup"><span data-stu-id="c8991-211">Gets or sets a value that indicates whether messages processed by this binding should be traced.</span></span></summary>
        <value><span data-ttu-id="c8991-212">如果应跟踪由此绑定处理的消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-212"><see langword="true" /> if messages processed by this binding should be traced; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c8991-213">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-213">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-214">如果启用了跟踪，则每当消息离开或到达消息队列 (MSMQ) 计算机时，都会创建报告消息并将其发送到报告队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-214">When tracing is enabled, report messages are created and sent to the report queue each time the message leaves or arrives at a Message Queuing (MSMQ) computer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSourceJournal : bool with get, set" Usage="System.ServiceModel.MsmqBindingBase.UseSourceJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-215">获取或设置一个值，该值指示是否应将此绑定处理的消息副本存储到源日记队列中。</span><span class="sxs-lookup"><span data-stu-id="c8991-215">Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</span></span></summary>
        <value><span data-ttu-id="c8991-216">如果应将此绑定处理的消息副本存储在源日记队列中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-216"><see langword="true" /> if copies of messages processed by this binding should be stored in the source journal queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c8991-217">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8991-217">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8991-218">如果排队应用程序保留已离开计算机传出队列的消息的记录，则可以将这些消息复制到日记队列。</span><span class="sxs-lookup"><span data-stu-id="c8991-218">Queued applications that keep a record of messages that have left the computer's outgoing queue can copy the messages to a journal queue.</span></span> <span data-ttu-id="c8991-219">在消息离开传出队列，并且接收到目标计算机已接收该消息的确认后，该消息的副本就会保留在发送计算机的系统日志队列中。</span><span class="sxs-lookup"><span data-stu-id="c8991-219">Once a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqBindingBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ValidityDuration : TimeSpan with get, set" Usage="System.ServiceModel.MsmqBindingBase.ValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:05:00")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.TimeSpan), "00:05:00")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8991-220">获取或设置一个值，该值指定由接收上下文功能锁定消息的持续时间。</span><span class="sxs-lookup"><span data-stu-id="c8991-220">Gets or sets a value that specifies the duration a message will be locked by the receive context feature.</span></span></summary>
        <value><span data-ttu-id="c8991-221">一个 timespan 对象。</span><span class="sxs-lookup"><span data-stu-id="c8991-221">A timespan object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="c8991-222">当 <xref:System.ServiceModel.MsmqBindingBase.ValidityDuration%2A> 对某一消息过期时，如果过期是在事务处理期间发生的，则会随工作流实例一起中止用于其处理的任何事务。</span><span class="sxs-lookup"><span data-stu-id="c8991-222">If <xref:System.ServiceModel.MsmqBindingBase.ValidityDuration%2A> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
