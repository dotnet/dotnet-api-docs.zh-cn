<Type Name="OperationContractAttribute" FullName="System.ServiceModel.OperationContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c5148bb4d3c783694eb0588e60f55c2afca15d9" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83958448" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OperationContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ba3fa-101">指示方法定义一个操作，该操作是 Windows Communication Foundation (WCF) 应用程序中服务协定的一部分。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-101">Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-102">将 <xref:System.ServiceModel.OperationContractAttribute> 应用于方法，以指示该方法实现作为服务协定（由 <xref:System.ServiceModel.ServiceContractAttribute> 属性指定）一部分的服务操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-102">Apply the <xref:System.ServiceModel.OperationContractAttribute> to a method to indicate that the method implements a service operation as part of a service contract (specified by a <xref:System.ServiceModel.ServiceContractAttribute> attribute).</span></span>  
  
 <span data-ttu-id="ba3fa-103">使用 <xref:System.ServiceModel.OperationContractAttribute> 属性控制该操作的结构以及以元数据表示的值：</span><span class="sxs-lookup"><span data-stu-id="ba3fa-103">Use the <xref:System.ServiceModel.OperationContractAttribute> properties to control the structure of the operation and the values expressed in metadata:</span></span>  
  
-   <span data-ttu-id="ba3fa-104"><xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性指定唯一标识该操作的操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-104">The <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property specifies the action that uniquely identifies this operation.</span></span> <span data-ttu-id="ba3fa-105">WCF 基于其操作向方法发送请求消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-105">WCF dispatches request messages to methods based on their action.</span></span>  
  
-   <span data-ttu-id="ba3fa-106"><xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 属性指示使用 Begin/End 方法对可以实现或异步调用该操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-106">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property indicates that the operation is implemented or can be called asynchronously using a Begin/End method pair.</span></span>  
  
-   <span data-ttu-id="ba3fa-107"><xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> 属性指示是否已显式设置 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-107">The <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> property indicates whether the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property has been explicitly set.</span></span>  
  
-   <span data-ttu-id="ba3fa-108"><xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 属性指示该操作只包含单个输入消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-108">The <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property indicates that the operation only consists of a single input message.</span></span> <span data-ttu-id="ba3fa-109">该操作没有关联的输出消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-109">The operation has no associated output message.</span></span>  
  
-   <span data-ttu-id="ba3fa-110"><xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 属性指定该操作是否可以是会话中的初始操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-110">The <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property specifies whether this operation can be the initial operation in a session.</span></span>  
  
-   <span data-ttu-id="ba3fa-111"><xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> 属性指定 WCF 是否在操作完成后尝试终止当前会话。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-111">The <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property specifies whether WCF attempts to terminate the current session after the operation completes.</span></span>  
  
-   <span data-ttu-id="ba3fa-112"><xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 属性指定运行时操作要求的消息级安全性。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-112">The <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property specifies the message-level security that an operation requires at run time.</span></span>  
  
-   <span data-ttu-id="ba3fa-113"><xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 属性指定该操作答复消息的操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-113">The <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> property specifies the action of the reply message for the operation.</span></span>  
  
 <span data-ttu-id="ba3fa-114"><xref:System.ServiceModel.OperationContractAttribute> 属性声明方法是服务协定中的操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-114">The <xref:System.ServiceModel.OperationContractAttribute> attribute declares that a method is an operation in a service contract.</span></span> <span data-ttu-id="ba3fa-115">只有具有 <xref:System.ServiceModel.OperationContractAttribute> 属性的方法可作为服务操作公开。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-115">Only methods attributed with the <xref:System.ServiceModel.OperationContractAttribute> are exposed as service operations.</span></span> <span data-ttu-id="ba3fa-116">不含有 <xref:System.ServiceModel.OperationContractAttribute> 标记的所有方法的服务协定不公开任何操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-116">A service contract without any methods marked with the <xref:System.ServiceModel.OperationContractAttribute> exposes no operations.</span></span>  
  
 <span data-ttu-id="ba3fa-117"><xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 属性指示一对 `Begin`\<方法*名称*> 和 `End`\<方法*名称*> 方法形成异步实现的单个操作（无论是在客户端还是在服务上）。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-117">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property indicates that a pair of `Begin`\<*methodName*> and `End`\<*methodName*> methods form a single operation implemented asynchronously (whether on the client or the service).</span></span> <span data-ttu-id="ba3fa-118">异步实现操作的服务功能是服务实现详细信息，并且不会在元数据中（如 Web 服务描述语言 (WSDL)）公开。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-118">The ability of a service to implement operations asynchronously is a service implementation detail and is not exposed in metadata (such as Web Services Description Language (WSDL)).</span></span>  
  
 <span data-ttu-id="ba3fa-119">同样，客户端可选择异步调用与实现服务方法无关的操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-119">Similarly, clients can choose to invoke operations asynchronously independent of how the service method is implemented.</span></span> <span data-ttu-id="ba3fa-120">如果服务方法需要花些时间才可将信息直接返回至客户端但又必须这样做时，建议在客户端异步调用服务操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-120">Calling service operations asynchronously in the client is recommended when a service method takes some time but must return information directly to the client.</span></span> <span data-ttu-id="ba3fa-121">有关详细信息，请参阅 <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-121">For details, see <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>.</span></span>  
  
 <span data-ttu-id="ba3fa-122"><xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 属性指示方法根本不返回任何值，包括空基础响应消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-122">The <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property indicates that a method does not return any value at all, including an empty underlying response message.</span></span> <span data-ttu-id="ba3fa-123">这种类型的方法对通知或事件样式通信十分有用。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-123">This type of method is useful for notifications or event-style communication.</span></span> <span data-ttu-id="ba3fa-124">但这种方法不能返回答复消息，因此该方法的声明必须返回 `void`。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-124">Methods of this kind cannot return a reply message so the method's declaration must return `void`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ba3fa-125">以编程方式检索此特性中的信息存储时，请使用 <xref:System.ServiceModel.Description.ContractDescription> 类而不是反射。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-125">When programmatically retrieving the information store in this attribute, use the <xref:System.ServiceModel.Description.ContractDescription> class instead of reflection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba3fa-126">如果 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 属性设置为 `false`（默认值），即使返回 `void` 的方法也是基础消息级别的双向方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-126">If the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is set to `false`, (the default), even methods that return `void` are two-way methods at the underlying message level.</span></span> <span data-ttu-id="ba3fa-127">在这种情况下，基础结构将创建并发送一则空消息，向调用方指明该方法已返回。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-127">In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</span></span> <span data-ttu-id="ba3fa-128">使用此方法使应用程序和基础结构可以将错误信息（如 SOAP 错误）发送回客户端。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-128">Using this approach enables the application and the infrastructure to send error information (such as a SOAP fault) back to the client.</span></span> <span data-ttu-id="ba3fa-129">将 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 设置为 `true` 是阻止创建和调度答复消息的唯一方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-129">Setting <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> to `true` is the only way to prevent the creation and dispatch of a reply message.</span></span> <span data-ttu-id="ba3fa-130">有关详细信息，请参阅单向[服务](/dotnet/framework/wcf/feature-details/one-way-services)。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-130">For more information, see [One-Way Services](/dotnet/framework/wcf/feature-details/one-way-services).</span></span>  
  
 <span data-ttu-id="ba3fa-131"><xref:System.ServiceModel.OperationContractAttribute.Action%2A> 和 <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 属性不仅可用于修改 SOAP 消息的默认操作，也可用于为无法识别的消息创建处理程序，或为直接消息编程禁用添加操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-131">The <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties can be used not only to modify the default action of SOAP messages but also to create handlers for unrecognized messages or to disable adding actions for direct message programming.</span></span> <span data-ttu-id="ba3fa-132">使用 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 属性以防止客户端在进行其他操作前调用特定的服务操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-132">Use the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property to prevent clients from calling a particular service operation prior to other operations.</span></span> <span data-ttu-id="ba3fa-133">使用 <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> 属性，使 WCF 在客户端调用特定服务操作后关闭通道。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-133">Use the <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property to have WCF close the channel after clients call a particular service operation.</span></span> <span data-ttu-id="ba3fa-134">有关详细信息，请参阅[使用会话](/dotnet/framework/wcf/using-sessions)。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-134">For more information, see [Using Sessions](/dotnet/framework/wcf/using-sessions).</span></span>  
  
 <span data-ttu-id="ba3fa-135"><xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 属性使您可以在操作协定中指定该操作消息是否已签名和/或已加密。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-135">The <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property enables you to specify on the operation contract whether the operation messages are signed, encrypted, or signed and encrypted.</span></span> <span data-ttu-id="ba3fa-136">如果绑定无法提供协定中要求的安全级别，则运行时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-136">If a binding cannot provide the security level required by the contract, an exception is thrown at run time.</span></span> <span data-ttu-id="ba3fa-137">有关详细信息，请参阅 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 和[了解保护级别](/dotnet/framework/wcf/understanding-protection-level)。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-137">For more information, see <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> and [Understanding Protection Level](/dotnet/framework/wcf/understanding-protection-level).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3fa-138">下面的代码示例演示只有一个操作的简单服务协定。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-138">The following code example shows a simple service contract with one operation.</span></span>  
  
 [!code-csharp[OperationContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="ba3fa-139">下面的示例演示了一个服务，该服务实现指定三个操作的隐式服务协定。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-139">The following example is a service that implements an implicit service contract that specifies three operations.</span></span> <span data-ttu-id="ba3fa-140">其中两个操作是双向操作，即无论返回值是什么，它们都将基础响应消息返回至调用方。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-140">Two of the operations are two-way operations, which return underlying response messages to the caller no matter what the return value is.</span></span> <span data-ttu-id="ba3fa-141">第三个操作接收一个调用（基础入站消息），但不返回任何基础响应消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-141">The third operation receives a call, an underlying inbound message, but returns no underlying response message.</span></span>  
  
```csharp  
[ServiceContractAttribute]  
public class OneAndTwoWay  
{  
  // The client waits until a response message appears.  
  [OperationContractAttribute]  
  public int MethodOne (int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  // The client waits until an empty response message appears.  
  [OperationContractAttribute]  
  public void MethodTwo (int x)  
  {  
    return;  
  }  
  
  // The client returns as soon as an outbound message  
  // is dispatched to the service; no response  
  // message is generated or sent from the service.  
  [OperationContractAttribute(IsOneWay=true)]  
  public void MethodThree (int x)  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba3fa-142">初始化 <see cref="T:System.ServiceModel.OperationContractAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-142">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContractAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-143">获取或设置请求消息的 WS-Addressing 操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-143">Gets or sets the WS-Addressing action of the request message.</span></span></summary>
        <value><span data-ttu-id="ba3fa-144">生成 WS-Addressing Action 标头时要使用的操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-144">The action to use in generating the WS-Addressing Action header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-145">使用 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性可控制该方法的输入消息的操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-145">Use the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property to control the action of the method's input message.</span></span> <span data-ttu-id="ba3fa-146">由于 WCF 使用此操作将传入消息调度到相应的方法，因此协定操作中使用的消息必须具有唯一的操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-146">Because WCF uses this action to dispatch an incoming message to the appropriate method, messages used within a contract operation must have unique actions.</span></span> <span data-ttu-id="ba3fa-147">默认操作值为协定命名空间的组合（默认值为 `"http://tempuri.org/"`）、协定名称（如果未使用显式服务接口，则为接口名称或类名）、操作名称和其他字符串（"Response"）（如果该消息是关联响应）。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-147">The default action value is a combination of the contract namespace (the default value is `"http://tempuri.org/"`), the contract name (interface name or the class name, if no explicit service interface is used), the operation name, and an additional string ("Response") if the message is a correlated response.</span></span> <span data-ttu-id="ba3fa-148">您可以使用 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性重写该默认值。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-148">You can override this default with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span>  
  
 <span data-ttu-id="ba3fa-149">若要指示服务操作可处理该服务接收的所有消息，但又不能定向到服务操作，请指定值“\*”（星号）。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-149">To indicate that a service operation handles all messages that the service receives but cannot be directed to a service operation, specify the value "\*" (an asterisk).</span></span> <span data-ttu-id="ba3fa-150">这种类型的操作（称为不匹配的消息处理程序）必须具有下列方法签名之一，否则会引发 <xref:System.InvalidOperationException>：</span><span class="sxs-lookup"><span data-stu-id="ba3fa-150">This type of operation, called an unmatched message handler, must have one of following method signatures, or a <xref:System.InvalidOperationException> is thrown:</span></span>  
  
-   <span data-ttu-id="ba3fa-151">该服务操作只能接受一个 <xref:System.ServiceModel.Channels.Message> 对象，并且返回一个 <xref:System.ServiceModel.Channels.Message> 对象。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-151">The service operation can take only a <xref:System.ServiceModel.Channels.Message> object and return a <xref:System.ServiceModel.Channels.Message> object.</span></span>  
  
-   <span data-ttu-id="ba3fa-152">该服务操作只能接受一个 <xref:System.ServiceModel.Channels.Message> 对象，并且不返回任何内容（即返回 `void`）。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-152">The service operation can take only a <xref:System.ServiceModel.Channels.Message> object and return nothing (that is, return `void`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba3fa-153">服务协定只能有一个 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性设置为“\*”的服务操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-153">A service contract can have only one service operation with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*".</span></span> <span data-ttu-id="ba3fa-154">当 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 属性设置为 `false`时，服务类实现的与服务类实现的同一 listenUri 托管的任何服务协定组都可以具有许多与 "\*" <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性设置为 "" 的服务操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-154">Any group of service contracts hosted at the same listenUri that a service class implements can have many service operations with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" when the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property is set to `false`.</span></span> <span data-ttu-id="ba3fa-155">但是，其中只有一个服务操作可以将 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性设置为 "\*"，并将 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 属性设置为 true。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-155">However, only one of those service operations can have the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" and the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property set to true.</span></span> <span data-ttu-id="ba3fa-156">有关更详细信息，请参阅<xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-156">For more details, see <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3fa-157">下面的示例演示了一个服务，该服务使用 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 和 <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 属性显式控制输入和输出（或答复）消息的 SOAP 操作，并使用 <xref:System.ServiceModel.OperationContractAttribute.Name%2A> 属性控制元数据中操作的名称。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-157">The following example is a service that uses the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to explicitly control the SOAP actions of both the input and output (or reply) messages, and the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to control the name of the operation in metadata.</span></span> <span data-ttu-id="ba3fa-158">最后，应用程序还会使用值为“\*”的 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 指示处理无法识别的消息的方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-158">Finally, the application also uses an <xref:System.ServiceModel.OperationContractAttribute.Action%2A> value of "\*" to indicate a method that handles unrecognized messages.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 <span data-ttu-id="ba3fa-159">实现该协定的服务发送类似以下示例的消息：</span><span class="sxs-lookup"><span data-stu-id="ba3fa-159">A service that implements this contract sends messages that look like the following example:</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba3fa-160">该值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-160">The value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPattern">
      <MemberSignature Language="C#" Value="public bool AsyncPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsyncPattern" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.AsyncPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPattern As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsyncPattern { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPattern : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.AsyncPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-161">指示操作是使用服务协定中的 <see langword="Begin" />&lt;methodName&gt; 和 <see langword="End" />&lt;methodName&gt; 方法对异步实现的。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-161">Indicates that an operation is implemented asynchronously using a <see langword="Begin" />&lt;*methodName*&gt; and <see langword="End" />&lt;*methodName*&gt; method pair in a service contract.</span></span></summary>
        <value><span data-ttu-id="ba3fa-162"><see langword="true" /> 如果 <see langword="Begin" />&lt;方法*名称*&gt;方法通过*<see langword="End" />&lt;方法*匹配，并且基础结构可将其视为服务接口上作为异步方法对实现的操作，则为;否则，<see langword="false" />。&gt;</span><span class="sxs-lookup"><span data-stu-id="ba3fa-162"><see langword="true" /> if the <see langword="Begin" />&lt;*methodName*&gt;method is matched by an <see langword="End" />&lt;*methodName*&gt; method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba3fa-163">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-163">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-164">使用 <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 属性生成可在服务器和/或客户端异步调用的服务操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-164">Use the <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property to build service operations that can be called asynchronously on the server, the client, or both.</span></span> <span data-ttu-id="ba3fa-165"><xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 属性通知运行库 `Begin` 方法有一个符合 .NET Framework 异步方法设计模式的匹配的 `End` 方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-165">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property informs the runtime that a `Begin` method has a matched `End` method that conforms to the .NET Framework asynchronous method design pattern.</span></span> <span data-ttu-id="ba3fa-166">生成用以实现服务操作的服务器异步方法可增强服务器的可伸缩性和性能，而不会影响服务的客户端。如果服务操作在执行完可异步执行的较长操作后，必须将某些内容返回至客户端，建议使用此方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-166">Building server asynchronous methods that implement a service operation increases server scalability and performance without affecting the clients of the service, and is recommended when a service operation must return something to the client after performing a lengthy operation that can be performed asynchronously.</span></span>  
  
 <span data-ttu-id="ba3fa-167">这不会影响客户端，因为服务器上的异步方法对是实现详细信息，该信息不会影响操作的基础 Web 服务描述语言 (WSDL) 描述。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-167">Clients remain unaffected because the asynchronous method pair on the server is an implementation detail that does not affect the underlying Web Services Description Language (WSDL) description of the operation.</span></span> <span data-ttu-id="ba3fa-168">此类方法在客户端上显示为单个操作，并 `<input>` 和相关的 `<output>` 消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-168">Such methods appear to clients as a single operation with `<input>` and correlated `<output>` messages.</span></span> <span data-ttu-id="ba3fa-169">WCF 自动将入站消息路由到 `Begin`\<方法*名称*> 方法，并将 `End`\<*方法*> 调用的结果路由到出站消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-169">WCF automatically routes inbound messages to the `Begin`\<*methodName*> method and routes the results of the `End`\<*methodName*> call to the outbound message.</span></span> <span data-ttu-id="ba3fa-170">因此，客户端信道可将方法对表示为单个同步操作或一个异步操作对。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-170">Client channels, therefore, can represent the method pair as either a single synchronous operation or as an asynchronous operation pair.</span></span> <span data-ttu-id="ba3fa-171">客户端表示形式在任何情况下都不会以任何方式影响服务器上的异步实现。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-171">In no case does the client representation affect the asynchronous implementation on the server in any way.</span></span>  
  
 <span data-ttu-id="ba3fa-172">客户端协定可使用 <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 属性指示异步方法对，即客户端可使用该方法对异步调用操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-172">Client contracts can use the <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property to indicate an asynchronous method pair that the client can use to invoke the operation asynchronously.</span></span> <span data-ttu-id="ba3fa-173">通常情况下，客户端应用程序使用 " [svcutil.exe" 元数据实用工具（）](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe)工具和 "`/async`" 选项来生成 `Begin`\<方法*名称*>，*并 `End`\<> 方法*对，客户端可以使用该方法对异步调用操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-173">Typically, client applications use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool and the `/async` option to generate a `Begin`\<*methodName*> and `End`\<*methodName*> method pair that the client can use to invoke the operation asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba3fa-174">如果服务操作具有异步和同步两个版本，则服务上的默认行为是调用同步版本。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-174">If a service operation has both an asynchronous and a synchronous version, the default behavior on the service is to invoke the synchronous version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3fa-175">下面的代码示例演示服务协定的客户端信道，该协定包含 `Add` 的同步版本和异步版本。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-175">The following code example shows a client channel to a service contract that includes both a synchronous version of `Add` and an asynchronous version.</span></span> <span data-ttu-id="ba3fa-176">如果客户端使用协定接口，则 `BeginAdd` 和 `Add` 操作都会调用服务器上可能同步也可能不同步的方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-176">If the contract interface is used on the client, both the `BeginAdd` and the `Add` operation invoke a method on the server that may or may not be synchronous.</span></span> <span data-ttu-id="ba3fa-177">如果该协定用于实现服务，则默认将传入请求调度至同步方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-177">If the contract is used to implement the service, the default is that incoming requests are dispatched to the synchronous method.</span></span>  
  
```csharp  
[ServiceContract]  
public interface IAddTwoNumbers  
{  
    // If the asynchronous method pair  
    // appears on the client channel, the client can call   
    // them asynchronously to prevent blocking.  
    [OperationContract (AsyncPattern=true)]  
    IAsyncResult BeginAdd(int a, int b, AsyncCallback cb, AsyncState s);  
  
    [OperationContract]  
    int EndAdd(IAsyncResult r);  
  
    // This is a synchronous version of the BeginAdd/EndAdd pair.  
    // It appears in the client channel code by default.   
    [OperationContract]  
    int Add(int a, int b);  
   }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-178">获取一个值，该值指示是否必须对此操作的消息进行加密和/或签名。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-178">Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</span></span></summary>
        <value><span data-ttu-id="ba3fa-179">如果 <see langword="true" /> 属性设置为除 <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> 以外的任何值，则为 <see cref="F:System.Net.Security.ProtectionLevel.None" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-179"><see langword="true" /> if the <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> property is set to a value other than <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba3fa-180">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-180">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-181">使用 <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> 属性确定此操作的消息是否需要特定的保护级别。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-181">Use the <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> property to determine whether a specific protection level is required by the messages of this operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitiating">
      <MemberSignature Language="C#" Value="public bool IsInitiating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitiating" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsInitiating" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInitiating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitiating { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInitiating : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsInitiating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-182">获取或设置一个值，该值指示方法是否实现可在服务器上启动会话（如果存在会话）的操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-182">Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists).</span></span></summary>
        <value><span data-ttu-id="ba3fa-183">如果允许操作启动服务器上的会话，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-183"><see langword="true" /> if the operation is permitted to initiate a session on the server, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba3fa-184">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-184">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-185"><xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 属性控制操作是否可以是创建会话时调用的第一个操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-185">The <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property controls whether an operation can be the first operation called when a session is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba3fa-186"><xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> 的值必须为 <xref:System.ServiceModel.SessionMode.Allowed> 或 <xref:System.ServiceModel.SessionMode.Required> 且使用的绑定必须要求或允许会话，<xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 属性才能正常工作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-186">The value of <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> must be either <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> and the binding used must require or allow sessions for the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property to work properly.</span></span>  
  
 <span data-ttu-id="ba3fa-187">默认为 `true`，这意味着操作可以是通道上调用的第一个操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-187">The default is `true`, which means that an operation can be the first one called on a channel.</span></span> <span data-ttu-id="ba3fa-188">除了调用该方法之外，后续的调用对于启动方法无效。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-188">Subsequent calls to the initiating method have no effect, other than to call the method.</span></span> <span data-ttu-id="ba3fa-189">不会创建其他任何会话。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-189">No other sessions are created.</span></span> <span data-ttu-id="ba3fa-190">如果协定不使用会话，则将 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 设置为 `false` 会被忽略。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-190">If the contract does not make use of a session, setting <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `false` is ignored.</span></span>  
  
 <span data-ttu-id="ba3fa-191">通常，将 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 设置为 `false` 可强制客户端在调用此方法之前，调用服务上的另一个方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-191">Typically, you set <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `false` to force clients to call another method on the service before they can invoke this one.</span></span> <span data-ttu-id="ba3fa-192">例如，如果您的服务具有一系列取决于订单 ID 号的操作，可将一个 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 服务操作的 `true` 设置为 `GetOrderId`，并将所有其他的服务操作设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-192">For example, if your service has a series of operations that depend on an order ID number, you can set <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `true` for a `GetOrderId` service operation and set all remaining service operations to `false`.</span></span> <span data-ttu-id="ba3fa-193">这将确保使用由该服务公开的其他方法之前，每个新的客户端都获得一个订单 ID。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-193">This ensures that each new client obtains an order ID prior to using the other methods exposed by the service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba3fa-194"><xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 和 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性之间存在交互操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-194">There is an interaction between <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> and the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span> <span data-ttu-id="ba3fa-195">服务协定只能有一个 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性设置为“\*”的服务操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-195">A service contract can have only one service operation with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*".</span></span> <span data-ttu-id="ba3fa-196">当 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 属性设置为 `false`时，服务类实现的相同侦听 URI 所承载的任何服务协定组可具有多个 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性设置为 "\*" 的服务操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-196">Any group of service contracts hosted at the same listen URI that a service class implements can have many service operations with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" when the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property is set to `false`.</span></span> <span data-ttu-id="ba3fa-197">但是，其中只有一个服务方法可将 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 属性设置为 "\*"，并将 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-197">However, only one of those service methods can have the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" and the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property set to `true`.</span></span>  
  
 <span data-ttu-id="ba3fa-198">如果服务收到非启动操作的消息，则该服务返回 ActionNotSupported SOAP 错误。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-198">If a service receives a message for a non-initiating operation, the service returns an ActionNotSupported SOAP fault.</span></span> <span data-ttu-id="ba3fa-199">客户端将这种情况当作 <xref:System.ServiceModel.FaultException>。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-199">The client experiences this as an <xref:System.ServiceModel.FaultException>.</span></span> <span data-ttu-id="ba3fa-200">如果客户端首先调用非启动操作，则客户端运行库会引发 <xref:System.InvalidOperationException?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-200">If a client calls a non-initiating operation first, the client runtime throws an <xref:System.InvalidOperationException?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba3fa-201">有关详细信息，请参阅[使用会话](/dotnet/framework/wcf/using-sessions)。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-201">For more information, see [Using Sessions](/dotnet/framework/wcf/using-sessions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3fa-202">下面的示例演示了一个服务，该服务实现指定三种方法的服务协定。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-202">The following example is a service that implements a service contract that specifies three methods.</span></span> <span data-ttu-id="ba3fa-203">该服务需要会话。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-203">The service requires a session.</span></span> <span data-ttu-id="ba3fa-204">如果调用方第一次调用的是除 `MethodOne` 以外的任何操作，则会拒绝该信道并且会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-204">If a caller's first call is to any operation other than `MethodOne`, the channel is refused and an exception is thrown.</span></span> <span data-ttu-id="ba3fa-205">调用方通过调用 `MethodOne` 启动会话时，可通过调用 `MethodThree` 随时终止通信会话。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-205">When a caller initiates a session by calling `MethodOne`, that caller can terminate the communication session at any time by calling `MethodThree`.</span></span> <span data-ttu-id="ba3fa-206">在会话期间，可以多次调用 `MethodTwo`。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-206">`MethodTwo` can be called any number of times during a session.</span></span>  
  
```csharp  
[ServiceContract(SessionMode=SessionMode.Required)]  
public class InitializeAndTerminateService  
{  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=true,  
    IsTerminating=false  
  )]  
  public void MethodOne()  
  {  
    return;  
  }  
  
  [OperationContract(  
    IsInitiating=false,  
    IsTerminating=false  
  )]  
  public int MethodTwo(int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=false,  
    IsTerminating=true  
  )]  
  public void MethodThree()  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOneWay">
      <MemberSignature Language="C#" Value="public bool IsOneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOneWay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsOneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOneWay : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsOneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-207">获取或设置一个值，该值指示操作是否返回答复消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-207">Gets or sets a value that indicates whether an operation returns a reply message.</span></span></summary>
        <value><span data-ttu-id="ba3fa-208">如果此方法收到请求消息，但未返回任何答复消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-208"><see langword="true" /> if this method receives a request message and returns no reply message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba3fa-209">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-209">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-210">使用 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 属性指示操作不返回答复消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-210">Use the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property to indicate that an operation does not return a reply message.</span></span> <span data-ttu-id="ba3fa-211">这种类型的操作对通知或事件样式通信十分有用，特别是双向通信。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-211">This type of operation is useful for notifications or event-style communication, especially in two-way communication.</span></span> <span data-ttu-id="ba3fa-212">如果不等待基础响应消息，则单向操作的调用方在处理请求消息时无法直接检测错误。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-212">Without waiting for an underlying response message, callers of one-way operations have no direct way to detect a failure in processing the request message.</span></span> <span data-ttu-id="ba3fa-213">（使用可靠的信道和单向操作的服务应用程序可在信道级别检测消息传递失败。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-213">(Service applications that use reliable channels and one-way operations can detect a message delivery failure at the channel level.</span></span> <span data-ttu-id="ba3fa-214">有关详细信息，请参阅[可靠会话概述](/dotnet/framework/wcf/feature-details/reliable-sessions-overview)。）</span><span class="sxs-lookup"><span data-stu-id="ba3fa-214">For details, see [Reliable Sessions Overview](/dotnet/framework/wcf/feature-details/reliable-sessions-overview).)</span></span>  
  
 <span data-ttu-id="ba3fa-215">在面向双工（或双向）服务的应用程序中，客户端和服务器相互独立地通信，并且客户端信道可使用其方法中的 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 属性指示服务可单向调用客户端（该客户端可作为事件处理）。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-215">In duplex (or two-way) service-oriented applications in which the client and server communicate with each other independently, a client channel can use the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property on its methods to indicate that the service can make one-way calls to the client that the client can treat as events.</span></span> <span data-ttu-id="ba3fa-216">这不会返回调用或生成消息，因为该服务不需要任何响应消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-216">No return call or message is generated because the service does not expect any response message.</span></span>  
  
 <span data-ttu-id="ba3fa-217">如果 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 属性设置为 `false`（默认值），即使返回 `void` 的方法也会生成答复消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-217">If the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is set to `false` (the default), even methods that return `void` result in a reply message.</span></span> <span data-ttu-id="ba3fa-218">在这种情况下，基础结构将创建并发送一则空消息，向调用方指明该方法已返回。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-218">In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</span></span> <span data-ttu-id="ba3fa-219">（使用此方法可使基础结构将 SOAP 错误发送回客户端。）将 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 设置为 `true` 是取消创建和调度响应消息的唯一方法。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-219">(Using this approach enables the infrastructure to send SOAP faults back to the client.) Setting <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> to `true` is the only way to cancel the creation and dispatch of a response message.</span></span>  
  
 <span data-ttu-id="ba3fa-220">单向方法不得返回一个值或具有 `ref` 或 `out` 参数；否则将引发 <xref:System.InvalidOperationException?displayProperty=nameWithType> 异常。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-220">One-way methods must not return a value or have `ref` or `out` parameters; otherwise a <xref:System.InvalidOperationException?displayProperty=nameWithType> exception is thrown.</span></span>  
  
 <span data-ttu-id="ba3fa-221">指定操作是单向操作，只表示它没有响应消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-221">Specifying that an operation is a one-way operation means only that there is no response message.</span></span> <span data-ttu-id="ba3fa-222">如果无法建立连接、出站消息非常大或该服务无法足够快地读取入站信息，则可能会阻止。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-222">It is possible to block if a connection cannot be made, or the outbound message is very large, or if the service cannot read inbound information fast enough.</span></span> <span data-ttu-id="ba3fa-223">如果客户端要求非阻止调用，则会生成 <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-223">If a client requires a non-blocking call, generate <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> operations.</span></span> <span data-ttu-id="ba3fa-224">有关详细信息，请参阅单向[服务](/dotnet/framework/wcf/feature-details/one-way-services)和[使用 WCF 客户端访问服务](/dotnet/framework/wcf/feature-details/accessing-services-using-a-client)。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-224">For more information, see [One-Way Services](/dotnet/framework/wcf/feature-details/one-way-services) and [Accessing Services Using a WCF Client](/dotnet/framework/wcf/feature-details/accessing-services-using-a-client).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3fa-225">下面的示例演示了一个服务，该服务实现指定三个操作的服务协定。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-225">The following example is a service that implements a service contract that specifies three operations.</span></span> <span data-ttu-id="ba3fa-226">其中两种方法实现双向操作，即无论返回值是什么，它们都将基础响应消息返回至调用方。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-226">Two of the methods implement two-way operations, which return underlying response messages to the caller no matter what the return value is.</span></span> <span data-ttu-id="ba3fa-227">第三种方法实现一个操作，该操作接收一个调用（基础入站消息），但不返回任何基础响应消息。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-227">The third method implements an operation that receives a call (an underlying inbound message) but returns no underlying response message.</span></span>  
  
```csharp  
[ServiceContract]  
public class OneAndTwoWay  
{  
  // The client waits until a response message appears.  
  [OperationContract]  
  public int MethodOne (int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  // The client waits until an empty response message appears.  
  [OperationContract]  
  public void MethodTwo (int x)  
  {  
    return;  
  }  
  
  // The client returns as soon as an outbound message  
  // is queued for dispatch to the service; no response  
  // message is generated or sent.  
  [OperationContract(IsOneWay=true)]  
  public void MethodThree (int x)  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTerminating">
      <MemberSignature Language="C#" Value="public bool IsTerminating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTerminating" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsTerminating" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTerminating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTerminating { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTerminating : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsTerminating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-228">获取或设置一个值，该值指示服务操作在发送答复消息（如果存在）后，是否会导致服务器关闭会话。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-228">Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</span></span></summary>
        <value><span data-ttu-id="ba3fa-229">如果该操作会导致服务器关闭会话，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-229"><see langword="true" /> if the operation causes the server to close the session, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ba3fa-230">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-230">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-231">使用 <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> 属性指示调用服务操作可终止通信会话。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-231">Use the <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property to indicate that calling a service operation terminates the communication session.</span></span>  
  
 <span data-ttu-id="ba3fa-232">在客户端应用程序中，将 <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> 设置为 `true` 会指示 WCF 在答复到达后关闭通道。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-232">In a client application, a value of <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> set to `true` instructs WCF to close the channel after the reply arrives.</span></span>  
  
 <span data-ttu-id="ba3fa-233">在服务中，如果客户端在该期间内不关闭信道，则将会设置计时器并中止信道。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-233">In a service, a timer is set and the channel aborts if the client does not close the channel within that period.</span></span>  
  
 <span data-ttu-id="ba3fa-234">有关对会话使用此属性的详细信息，请参阅[使用会话](/dotnet/framework/wcf/using-sessions)。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-234">For more information about using this property with sessions, see [Using Sessions](/dotnet/framework/wcf/using-sessions).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba3fa-235">如果调用方侦听的是 <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> 操作的 <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> 事件，则在收到响应时可能会阻塞。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-235">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="ba3fa-236">处理这种情况的正确方法是，当引发 <xref:System.ServiceModel.OperationContext.OperationCompleted> 时在其他线程上调度工作，然后从该事件处理程序立即返回。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-236">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3fa-237">下面的示例演示了一个服务，该服务实现指定三个操作的服务协定。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-237">The following example is a service that implements a service contract that specifies three operations.</span></span> <span data-ttu-id="ba3fa-238">该服务需要有状态连接。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-238">The service requires a stateful connection.</span></span> <span data-ttu-id="ba3fa-239">如果调用方第一次调用的是除 `MethodOne` 以外的任何操作，则会拒绝该信道并且会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-239">If a caller's first call is to any operation other than `MethodOne`, the channel is refused and an exception is thrown.</span></span> <span data-ttu-id="ba3fa-240">调用方通过调用 `MethodOne` 启动会话时，可通过调用 `MethodThree` 随时终止通信会话。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-240">When a caller initiates a session by calling `MethodOne`, that caller can terminate the communication session at any time by calling `MethodThree`.</span></span> <span data-ttu-id="ba3fa-241">在会话期间，可以多次调用 `MethodTwo`。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-241">`MethodTwo` can be called any number of times during a session.</span></span>  
  
```csharp  
[ServiceContractAttribute(SessionMode=SessionMode.Required)]  
public class InitializeAndTerminateService  
{  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=true,  
    IsTerminating=false  
  )]  
  public void MethodOne()  
  {  
    return;  
  }  
  
  [OperationContract(  
    IsInitiating=false,  
    IsTerminating=false  
  )]  
  public int MethodTwo(int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=false  
    IsTerminating=true  
  )]  
  public void MethodThree()  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-242">获取或设置操作的名称。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-242">Gets or sets the name of the operation.</span></span></summary>
        <value><span data-ttu-id="ba3fa-243">操作的名称。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-243">The name of the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-244">使用 <xref:System.ServiceModel.OperationContractAttribute.Name%2A> 属性重写 WSDL 中的 `<operation>` 元素名称。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-244">Use the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to override the `<operation>` element name in WSDL.</span></span> <span data-ttu-id="ba3fa-245">默认的操作名称为实现方法的名称。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-245">The default operation name is the name of the implementing method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3fa-246">下面的代码示例使用 <xref:System.ServiceModel.OperationContractAttribute.Name%2A> 属性声明在元数据中公开的操作名称。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-246">The following code example uses the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to declare the name of the operation as exposed in metadata.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba3fa-247"><see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-247"><see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba3fa-248">该值是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-248">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-249">获取或设置一个值，该值指定是否必须对操作的消息进行加密和/或签名。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-249">Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both.</span></span></summary>
        <value><span data-ttu-id="ba3fa-250"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-250">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="ba3fa-251">默认为 <see cref="F:System.Net.Security.ProtectionLevel.None" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-251">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-252">使用 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 属性控制是否必须对操作消息进行加密和/或签名。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-252">Use the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property to control whether the messages of an operation must be encrypted, signed, or both.</span></span> <span data-ttu-id="ba3fa-253">除非较窄范围重写此处设置的值，否则此值是为此操作指定的所有消息的默认值。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-253">The value set here is the default value for all messages specified for this operation unless a narrower scope overrides this value.</span></span>  
  
 <span data-ttu-id="ba3fa-254">请记住，运行时的保护行为是在下列属性中设置的保护级别值的组合，这一点很重要。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-254">It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="ba3fa-255">这些属性具有层次结构。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-255">These properties have a hierarchical structure.</span></span> <span data-ttu-id="ba3fa-256">除非已为较窄范围显式设置了某个不同的值，否则设置最外层的值将为所有较窄的范围确定默认设置。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-256">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="ba3fa-257">在这种情况下，外层的值将保持所有较窄的范围的默认设置，但特定的设置除外。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-257">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="ba3fa-258">例如，如果将 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 设置为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>，并且其他较窄范围都没有设置保护级别，则会对操作协定中的所有消息进行加密和签名。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-258">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="ba3fa-259">但是，如果其中一个操作将 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 设置为 <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>，那么只会对此操作的消息进行签名，而对协定中的所有其他消息进行加密和签名。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-259">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="ba3fa-260">有关保护级别及其假设和范围的详细信息，请参阅[了解保护级别](/dotnet/framework/wcf/understanding-protection-level)。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-260">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](/dotnet/framework/wcf/understanding-protection-level).</span></span>  
  
 <span data-ttu-id="ba3fa-261">这些值的设置范围是：</span><span class="sxs-lookup"><span data-stu-id="ba3fa-261">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="ba3fa-262"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 上的 <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-262">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba3fa-263"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 上的 <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-263">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba3fa-264">当协定上没有显式指定保护级别并且基础绑定支持安全性时（无论处于传输级别还是处于消息级别），整个协定的有效保护级别将为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-264">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba3fa-265">如果绑定不支持安全性（如 <xref:System.ServiceModel.BasicHttpBinding>），则整个协定的有效 <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> 为 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-265">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="ba3fa-266">因此，根据终结点绑定，即使协定指定了 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>，客户端也可以要求不同的消息或传输级别安全保护。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-266">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ba3fa-267">该值不是 <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-267">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReplyAction">
      <MemberSignature Language="C#" Value="public string ReplyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReplyAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyAction : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.ReplyAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba3fa-268">获取或设置用于该操作答复消息的 SOAP 操作的值。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-268">Gets or sets the value of the SOAP action for the reply message of the operation.</span></span></summary>
        <value><span data-ttu-id="ba3fa-269">用于答复消息的 SOAP 操作的值。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-269">The value of the SOAP action for the reply message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3fa-270">除了为答复消息的操作头指定特定值以外，还可以指定字符串“\*”（星号）。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-270">In addition to specifying a particular value for the action header of the reply message, you can also specify the string "\*" (an asterisk).</span></span> <span data-ttu-id="ba3fa-271">如果在服务中指定星号，则指示 WCF 不要向消息添加答复操作，这对于直接对消息编程很有用。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-271">Specifying an asterisk in the service instructs WCF not to add a reply action to the message, which is useful if you are programming against messages directly.</span></span> <span data-ttu-id="ba3fa-272">在客户端应用程序中指定星号可指示 WCF 不验证答复操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-272">Specifying an asterisk in a client application instructs WCF not to validate the reply action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3fa-273">下面的示例演示了一个服务，该服务使用 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 和 <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 属性显式控制输入和输出（或答复）消息的 SOAP 操作。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-273">The following example is a service that uses the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to explicitly control the SOAP actions of both the input and output (or reply) messages.</span></span> <span data-ttu-id="ba3fa-274">它还使用 <xref:System.ServiceModel.OperationContractAttribute.Name%2A> 属性声明在元数据中公开的操作名称。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-274">It also uses the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to declare the name of the operation as exposed in metadata.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba3fa-275"><see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba3fa-275"><see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
