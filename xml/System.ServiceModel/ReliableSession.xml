<Type Name="ReliableSession" FullName="System.ServiceModel.ReliableSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62db035dfad7e39b79f85446c0fb581ca5313c7e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86591264" /></Metadata><TypeSignature Language="C#" Value="public class ReliableSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReliableSession extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReliableSession" />
  <TypeSignature Language="VB.NET" Value="Public Class ReliableSession" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReliableSession" />
  <TypeSignature Language="F#" Value="type ReliableSession = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc0d1-101">提供对可靠会话绑定元素属性的便捷访问，这些属性是在使用系统提供的绑定之一时提供的。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-101">Provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc0d1-102"><xref:System.ServiceModel.ReliableSession> 类所包含的属性是 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> 所包含的属性（可从预定义的绑定进行访问）的子集。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-102">The properties contained in the <xref:System.ServiceModel.ReliableSession> class are the subset of those contained in the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> that are accessible from a predefined binding.</span></span> <span data-ttu-id="fc0d1-103">这个子集由 <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> 和 <xref:System.ServiceModel.ReliableSession.Ordered%2A> 属性组成。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-103">This subset consists of the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> and <xref:System.ServiceModel.ReliableSession.Ordered%2A> properties.</span></span> <span data-ttu-id="fc0d1-104"><xref:System.ServiceModel.ReliableSession> 类与 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> 引用相同的对象。因此，更改其中一个的值也会更改另一个的值。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-104">The <xref:System.ServiceModel.ReliableSession> class references the same objects as does the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, so changing the value of one changes the value of the other too.</span></span> <span data-ttu-id="fc0d1-105">此类将可靠会话绑定元素的这两个属性集合在一起，以增强发现功能。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-105">This class gathers these two properties of reliable session binding element together for better discoverability.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc0d1-106">下面的代码演示如何创建新的可靠会话，以及访问和更改该会话的属性值。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-106">The following example shows how to create a new reliable session, and access and change the property values of that session.</span></span> <span data-ttu-id="fc0d1-107"><xref:System.ServiceModel.ReliableSession> 类允许写入：</span><span class="sxs-lookup"><span data-stu-id="fc0d1-107">The <xref:System.ServiceModel.ReliableSession> class allows you to write:</span></span>  
  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc0d1-108">初始化 <see cref="T:System.ServiceModel.ReliableSession" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-108">Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc0d1-109">初始化 <see cref="T:System.ServiceModel.ReliableSession" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-109">Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reliableSessionBindingElement As ReliableSessionBindingElement)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ reliableSessionBindingElement);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession reliableSessionBindingElement" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement binding) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession binding" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reliableSessionBindingElement" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reliableSessionBindingElement"><span data-ttu-id="fc0d1-110"><see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />，其属性值用于初始化可靠会话。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-110">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property values are used to initialize the reliable session.</span></span></param>
        <param name="binding"><span data-ttu-id="fc0d1-111"><see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />，其属性值用于初始化可靠会话。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-111">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property values are used to initialize the reliable session.</span></span></param>
        <summary><span data-ttu-id="fc0d1-112">从可靠会话绑定元素中初始化 <see cref="T:System.ServiceModel.ReliableSession" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-112">Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class from a reliable session binding element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fc0d1-113"><paramref name="reliableSessionBindingElement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-113">The <paramref name="reliableSessionBindingElement" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InactivityTimeout : TimeSpan with get, set" Usage="System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc0d1-114">获取或设置服务在关闭之前保持非活动状态的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-114">Gets or sets an interval of time that a service can remain inactive before closing.</span></span></summary>
        <value><span data-ttu-id="fc0d1-115"><see cref="T:System.TimeSpan" />，指定服务在关闭之前保持非活动状态的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-115">The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service remains inactive before closing.</span></span> <span data-ttu-id="fc0d1-116">默认值为 10 分钟。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-116">The default value is 10 minutes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc0d1-117">该属性会获取和设置 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-117">The property gets and sets the value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> property.</span></span>  
  
 <span data-ttu-id="fc0d1-118">通道上的活动被定义为接收应用程序或基础结构消息。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-118">Activity on a channel is defined as receiving an application or infrastructure message.</span></span> <span data-ttu-id="fc0d1-119">非活动超时属性会控制保持非活动会话存在的最长时间。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-119">The inactivity timeout property controls the maximum amount of time to keep an inactive session alive.</span></span> <span data-ttu-id="fc0d1-120">如果超过 <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> 指定的时间间隔后仍没有活动，则基础结构会中止会话，且通道会出错。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-120">If more than the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> specified time interval passes with no activity, the session is aborted by the infrastructure and the channel faults.</span></span> <span data-ttu-id="fc0d1-121">可靠会话会遭到单方面撤销。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-121">The reliable session is torn down unilaterally.</span></span>  
  
 <span data-ttu-id="fc0d1-122">如果发送应用程序没有要发送的消息，则可靠会话通常不会因处于非活动状态而出错，“保持活动状态”机制会让会话无限期地处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-122">If the sending application has no messages to send then the reliable session is normally not faulted because of inactivity; instead a keep-alive mechanism keeps the session active indefinitely.</span></span> <span data-ttu-id="fc0d1-123">请注意，如果未发送或接收任何应用程序消息，则调度程序可以单独中止可靠会话。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-123">Note that the dispatcher could independently abort the reliable session if no application messages are sent or received.</span></span> <span data-ttu-id="fc0d1-124">因此，如果网络状况为未收到任何类型的消息或发送方失败，则非活动超时通常会过期。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-124">Thus, the inactivity timeout typically expires if network conditions are such that no messages of any sort are received or if there is a failure on the sender.</span></span>  
  
 <span data-ttu-id="fc0d1-125">设置此超时可防止服务器在客户端关闭安全会话之前一直保持该会话。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-125">Setting this timeout prevents the server from holding onto a security session if the client does not close it.</span></span> <span data-ttu-id="fc0d1-126">如果安全会话在非活动时间间隔内未收到消息，则服务器会将其关闭。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-126">If the security session has not received a message for the inactivity interval of time, it is closed by the server.</span></span> <span data-ttu-id="fc0d1-127">这样可降低发生拒绝服务攻击的可能性。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-127">This mitigates a potential denial of service attack.</span></span>  
  
 <span data-ttu-id="fc0d1-128">使用可靠会话时，必须同时满足两个不同的非活动计时器，才能使连接处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-128">When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive.</span></span> <span data-ttu-id="fc0d1-129">如果任一非活动计时器结束计时，则将断开连接。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-129">If either of these inactivity timers goes off, then the connection is dropped.</span></span>  
  
-   <span data-ttu-id="fc0d1-130">第一个非活动计时器为可靠会话计时器，称为 <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-130">The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>.</span></span> <span data-ttu-id="fc0d1-131">如果在超时期限内没有收到任何应用程序消息或基础结构消息，此非活动计时器将激发。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-131">This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period.</span></span> <span data-ttu-id="fc0d1-132">基础结构消息是指为了通道堆栈中的协议之一（例如，保持活动状态或确认，而并非包含应用程序数据）而生成的消息。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-132">An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.</span></span>  
  
-   <span data-ttu-id="fc0d1-133">第二个非活动计时器为服务计时器，它使用绑定的 <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-133">The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding.</span></span> <span data-ttu-id="fc0d1-134">如果在超时期限内没有收到任何应用程序消息，此非活动计时器将激发。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-134">This inactivity timer fires if no application messages are received within the timeout period.</span></span>  
  
 <span data-ttu-id="fc0d1-135">由于任一非活动计时器激发都会断开连接，因此单纯增大 <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>（当其大于 <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> 时）不起任何作用。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-135">Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect.</span></span> <span data-ttu-id="fc0d1-136">这两个超时时间的默认值均为 10 分钟，因此在使用可靠会话时，必须同时增大这两个超时时间才会起作用。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-136">The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc0d1-137">设置的值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-137">The value set is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public bool Ordered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ordered" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public Property Ordered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ordered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Ordered : bool with get, set" Usage="System.ServiceModel.ReliableSession.Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc0d1-138">获取或设置一个值，该值指示消息传递是否必须保持与消息发送一致的顺序。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-138">Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.</span></span></summary>
        <value><span data-ttu-id="fc0d1-139">如果消息必须按照发送时的顺序传递，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-139"><see langword="true" /> if messages must be delivered in the order in which they are sent; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fc0d1-140">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-140">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc0d1-141">该属性会获取和设置 <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="fc0d1-141">The property gets and sets the value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A> property.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
