<Type Name="NetPeerTcpBinding" FullName="System.ServiceModel.NetPeerTcpBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7677576b089577a1584fd9857849128e9298505b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86827986" /></Metadata><TypeSignature Language="C#" Value="public class NetPeerTcpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetPeerTcpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetPeerTcpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class NetPeerTcpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetPeerTcpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type NetPeerTcpBinding = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ca321-101">为对等网络应用程序提供安全绑定。</span><span class="sxs-lookup"><span data-stu-id="ca321-101">Provides a secure binding for peer-to-peer network applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca321-102"><xref:System.ServiceModel.NetPeerTcpBinding> 绑定为创建使用 TCP 级别的对等网格基础结构的对等网络应用程序提供支持。</span><span class="sxs-lookup"><span data-stu-id="ca321-102">The <xref:System.ServiceModel.NetPeerTcpBinding> binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure.</span></span>  
  
 <span data-ttu-id="ca321-103">每个 <xref:System.ServiceModel.PeerNode> 实例均可承载使用此绑定类型定义的多个对等通道。</span><span class="sxs-lookup"><span data-stu-id="ca321-103">Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type.</span></span> <span data-ttu-id="ca321-104">如果通道工厂是用此类型的已配置实例生成的，则可使用这些通道工厂生成对等通道。</span><span class="sxs-lookup"><span data-stu-id="ca321-104">Channel factories produced using a configured instance of this type can be used to generate peer channels.</span></span> <span data-ttu-id="ca321-105">对等通道工厂可生成的对等通道包括只可输入通道（实现 <xref:System.ServiceModel.Channels.IInputChannel>）、只可输出通道（实现 <xref:System.ServiceModel.Channels.IOutputChannel>）和双工通道（实现 <xref:System.ServiceModel.Channels.IDuplexChannel>）。</span><span class="sxs-lookup"><span data-stu-id="ca321-105">A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>).</span></span>  
  
 <span data-ttu-id="ca321-106">这是 Windows Communication Framework (WCF) 提供的标准绑定之一。</span><span class="sxs-lookup"><span data-stu-id="ca321-106">This is one of the standard bindings provided by the Windows Communication Framework (WCF).</span></span> <span data-ttu-id="ca321-107">该绑定可以在命令性代码中使用，或在应用程序的相应 XML 配置文件中指定。</span><span class="sxs-lookup"><span data-stu-id="ca321-107">It can be used in imperative code or specified in the corresponding XML configuration file for the application.</span></span> <span data-ttu-id="ca321-108">建议的过程是使用配置值定义绑定而不是使用基于代码的方法，除了必须将配置值设为已初始化的服务的某些高级方案之外。</span><span class="sxs-lookup"><span data-stu-id="ca321-108">The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca321-109">初始化 <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ca321-109">Initializes a new instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetPeerTcpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetPeerTcpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca321-110">初始化 <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> 类的新默认实例。</span><span class="sxs-lookup"><span data-stu-id="ca321-110">Initializes a new default instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetPeerTcpBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetPeerTcpBinding(System::String ^ configurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.NetPeerTcpBinding : string -&gt; System.ServiceModel.NetPeerTcpBinding" Usage="new System.ServiceModel.NetPeerTcpBinding configurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName"><span data-ttu-id="ca321-111"><see langword="configurationName" /> 属性的值，该属性标识其设置用于初始化绑定的绑定元素。</span><span class="sxs-lookup"><span data-stu-id="ca321-111">The value of the <see langword="configurationName" /> attribute that identifies the binding element whose settings are used to initialize the binding.</span></span></param>
        <summary><span data-ttu-id="ca321-112">使用指定配置名称初始化 <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ca321-112">Initializes a new instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class with a specified configuration name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca321-113">此构造函数使用提供的名称创建一个新的 <xref:System.ServiceModel.NetPeerTcpBinding>。</span><span class="sxs-lookup"><span data-stu-id="ca321-113">This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name.</span></span> <span data-ttu-id="ca321-114">如果该名称的配置已存在，则将使用包含该名称的配置文件中的设置。</span><span class="sxs-lookup"><span data-stu-id="ca321-114">If a configuration for that name already exists, the settings in the configuration file that contains that name are used.</span></span> <span data-ttu-id="ca321-115">如果该名称尚不存在，则将使用默认配置设置。</span><span class="sxs-lookup"><span data-stu-id="ca321-115">If the name does not already exist, the default configuration settings are used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException"><span data-ttu-id="ca321-116">配置无效。</span><span class="sxs-lookup"><span data-stu-id="ca321-116">The configuration is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="netPeerTcpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca321-117">为绑定创建一个绑定元素集合。</span><span class="sxs-lookup"><span data-stu-id="ca321-117">Creates a collection with the binding elements for the binding.</span></span></summary>
        <returns><span data-ttu-id="ca321-118">组成绑定的 <see cref="T:System.Collections.Generic.ICollection`1" /> 类型的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="ca321-118">The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-119">获取与此绑定一起使用的 SOAP 版本。</span><span class="sxs-lookup"><span data-stu-id="ca321-119">Gets the SOAP version used with this binding.</span></span></summary>
        <value><span data-ttu-id="ca321-120">一个 <see cref="T:System.ServiceModel.EnvelopeVersion" />，指定要与此绑定一起使用的 SOAP 版本。</span><span class="sxs-lookup"><span data-stu-id="ca321-120"><see cref="T:System.ServiceModel.EnvelopeVersion" /> that specifies the version of SOAP to use with this binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPnrpAvailable">
      <MemberSignature Language="C#" Value="public static bool IsPnrpAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPnrpAvailable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsPnrpAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsPnrpAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPnrpAvailable : bool" Usage="System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-121">获取一个值，它指示 PNRP 服务是否已在计算机上安装并可用。</span><span class="sxs-lookup"><span data-stu-id="ca321-121">Gets a value that indicates whether the PNRP service is installed and available on the computer.</span></span></summary>
        <value><span data-ttu-id="ca321-122"><see langword="true" /> 如果安装并配置了 PNRP，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="ca321-122"><see langword="true" /> if PNRP is installed and configured; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenIPAddress">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress ListenIPAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress ListenIPAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenIPAddress As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ ListenIPAddress { System::Net::IPAddress ^ get(); void set(System::Net::IPAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListenIPAddress : System.Net.IPAddress with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.ListenIPAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.PeerTransportListenAddressConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.PeerTransportListenAddressConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-123">获取或设置本地对等节点用于侦听的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="ca321-123">Gets or sets the IP address used for listening by the local peer node.</span></span></summary>
        <value><span data-ttu-id="ca321-124">一个 <see cref="T:System.String" /> 值，包含格式正确的 IPv4 或 IPv6 地址，本地对等节点将在该地址上进行侦听。</span><span class="sxs-lookup"><span data-stu-id="ca321-124">A <see cref="T:System.String" /> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca321-125">如果未设置此属性，或将其设置为 `null` 或 <xref:System.String.Empty>，则关联的 <xref:System.ServiceModel.PeerNode> 将在为本地计算机配置的所有全局地址（IPv4 和 IPv6 地址）上进行侦听。</span><span class="sxs-lookup"><span data-stu-id="ca321-125">If this property is not set, or is set to `null` or <xref:System.String.Empty>, the associated <xref:System.ServiceModel.PeerNode> listens on all global addresses (both IPv4 and IPv6) configured for the local machine.</span></span>  
  
 <span data-ttu-id="ca321-126">如果为此属性指定了有效的单播 IP 地址，则关联的 <xref:System.ServiceModel.PeerNode> 对象将在该地址上进行侦听。</span><span class="sxs-lookup"><span data-stu-id="ca321-126">If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address.</span></span> <span data-ttu-id="ca321-127">IPv4 和 IPv6 通配符地址不被视为有效地址。</span><span class="sxs-lookup"><span data-stu-id="ca321-127">IPv4 and IPv6 wildcard addresses are not considered valid.</span></span>  
  
 <span data-ttu-id="ca321-128">如果为此属性指定了非 `null` IP 地址字符串，并且该属性与 <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement> 结合使用，则 IP 地址必须与物理接口而不是虚拟接口关联。</span><span class="sxs-lookup"><span data-stu-id="ca321-128">If a non-`null` IP address string is specified for this property in conjunction with <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>, then the IP address must be associated with a physical interface rather than a virtual one.</span></span>  
  
 <span data-ttu-id="ca321-129">必须为临时网络设置 ListenIPAddress，临时网络才能注册到默认对等解析程序 (PNRP)。</span><span class="sxs-lookup"><span data-stu-id="ca321-129">ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP).</span></span> <span data-ttu-id="ca321-130">如果此属性随 <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement>（默认对等解析程序）一起指定，则 IP 地址必须属于物理网络接口，而不属于虚拟网络接口（如隧道接口）。</span><span class="sxs-lookup"><span data-stu-id="ca321-130">If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface).</span></span> <span data-ttu-id="ca321-131">这是因为 PNRP 仅在对应于物理接口的 PNRP 云中发布。</span><span class="sxs-lookup"><span data-stu-id="ca321-131">This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces.</span></span> <span data-ttu-id="ca321-132">通过将此属性设置为 Null，可在全局 PNRP 群中发布所有全局地址。</span><span class="sxs-lookup"><span data-stu-id="ca321-132">By setting this property to null, all global addresses are published in the global PNRP cloud.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca321-133">提供的地址无效或其格式不正确。</span><span class="sxs-lookup"><span data-stu-id="ca321-133">The provided address is invalid or incorrectly formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(524288)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(524288)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-134">获取或设置用于对等 TCP 缓冲区的内存池的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="ca321-134">Gets or sets the maximum size, in bytes, of the memory pool used for the peer TCP buffer.</span></span></summary>
        <value><span data-ttu-id="ca321-135">一个 <see cref="T:System.Int32" /> 值，指定用于对内存中的传入消息进行缓冲的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ca321-135">A <see cref="T:System.Int32" /> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory.</span></span> <span data-ttu-id="ca321-136">默认值为 65,536 字节。</span><span class="sxs-lookup"><span data-stu-id="ca321-136">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca321-137"><xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> 的值不能小于 <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A>（其默认值为 65536 字节 (64 KB)）。</span><span class="sxs-lookup"><span data-stu-id="ca321-137">The value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> cannot be less than <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> whose default value is 65536 bytes (64 KB).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(65536)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(65536)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-138">获取或设置由此绑定创建的对等通道处理的 TCP 消息的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="ca321-138">Gets or sets the maximum size, in bytes, of TCP messages handled by peer channels created by this binding.</span></span></summary>
        <value><span data-ttu-id="ca321-139"><see cref="T:System.Int32" />，包含 TCP 消息的最大大小（以字节为单位），这些消息通过此绑定创建的对等通道发送。</span><span class="sxs-lookup"><span data-stu-id="ca321-139"><see cref="T:System.Int32" /> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding.</span></span> <span data-ttu-id="ca321-140">默认值为 65,536 (64 KB)。</span><span class="sxs-lookup"><span data-stu-id="ca321-140">The default value is 65,536 (64 KB).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-141">获取或设置要绑定的网络端口。</span><span class="sxs-lookup"><span data-stu-id="ca321-141">Gets or sets the network port on which to bind.</span></span></summary>
        <value><span data-ttu-id="ca321-142">一个 <see cref="T:System.Int32" /> 值，表示此绑定实例将用于处理对等特定 TCP 消息的网络端口。</span><span class="sxs-lookup"><span data-stu-id="ca321-142">A <see cref="T:System.Int32" /> value that represents the network port on which this binding instance will process peer-specific TCP messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca321-143">如果端口值无效，则会引发 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="ca321-143">If the port value is invalid, <xref:System.ArgumentException> is raised.</span></span> <span data-ttu-id="ca321-144">此属性的默认值是 0，指示侦听器端口是从所有未保留的端口中随机选择的。</span><span class="sxs-lookup"><span data-stu-id="ca321-144">The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-145">获取或设置与此绑定关联的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span><span class="sxs-lookup"><span data-stu-id="ca321-145">Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</span></span></summary>
        <value><span data-ttu-id="ca321-146">与此绑定相关联的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span><span class="sxs-lookup"><span data-stu-id="ca321-146">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca321-147">应用程序试图将此属性设置为 Null。</span><span class="sxs-lookup"><span data-stu-id="ca321-147">The application attempted to set this property to null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resolver As PeerResolverSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerResolvers::PeerResolverSettings ^ Resolver { System::ServiceModel::PeerResolvers::PeerResolverSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.ServiceModel.PeerResolvers.PeerResolverSettings" Usage="System.ServiceModel.NetPeerTcpBinding.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.PeerResolverSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-148">获取 <see cref="T:System.ServiceModel.PeerResolver" />，此绑定实例将使用它将对等网格 ID 解析为对等网格中节点的终结点 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="ca321-148">Gets the <see cref="T:System.ServiceModel.PeerResolver" /> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh.</span></span></summary>
        <value><span data-ttu-id="ca321-149">一个 <see cref="T:System.ServiceModel.PeerResolver" />，用于将对等网格 ID 解析为一组 <see cref="T:System.ServiceModel.PeerNodeAddress" /> 实例，这些实例表示参与网格的多个节点。</span><span class="sxs-lookup"><span data-stu-id="ca321-149">A <see cref="T:System.ServiceModel.PeerResolver" /> used to resolve a peer mesh ID to a set of <see cref="T:System.ServiceModel.PeerNodeAddress" /> instances representing several nodes participating in the mesh.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.NetPeerTcpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-150">获取用于传输协议（与此绑定关联）的 URI 方案。</span><span class="sxs-lookup"><span data-stu-id="ca321-150">Gets the URI scheme used for the transport protocol associated with this binding.</span></span></summary>
        <value><span data-ttu-id="ca321-151">一个 <see cref="T:System.String" />，指定用于此绑定的特定传输协议的 URI 方案。</span><span class="sxs-lookup"><span data-stu-id="ca321-151">A <see cref="T:System.String" /> that specifies the URI scheme for the specific transport protocol used for this binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca321-152">此值必须为“net.p2p”。</span><span class="sxs-lookup"><span data-stu-id="ca321-152">This value must be "net.p2p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerSecuritySettings Security { get; }" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerSecuritySettings Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Security As PeerSecuritySettings" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerSecuritySettings ^ Security { System::ServiceModel::PeerSecuritySettings ^ get(); };" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.PeerSecuritySettings" Usage="System.ServiceModel.NetPeerTcpBinding.Security" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerSecuritySettings Security { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As PeerSecuritySettings" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerSecuritySettings ^ Security { System::ServiceModel::PeerSecuritySettings ^ get(); void set(System::ServiceModel::PeerSecuritySettings ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.PeerSecuritySettings with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.Security" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerSecuritySettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-153">获取或设置要对此绑定创建的对等通道设置的安全性。</span><span class="sxs-lookup"><span data-stu-id="ca321-153">Gets or sets the security to set on peer channels created by this binding.</span></span></summary>
        <value><span data-ttu-id="ca321-154"><see cref="T:System.ServiceModel.PeerSecuritySettings" /> 枚举值，指示要对此绑定创建的对等通道设置的安全性。</span><span class="sxs-lookup"><span data-stu-id="ca321-154"><see cref="T:System.ServiceModel.PeerSecuritySettings" /> enumeration value that indicates the security to set on peer channels created by this binding.</span></span> <span data-ttu-id="ca321-155">安全性可以是特定于消息的，也可以是特定于传输的。</span><span class="sxs-lookup"><span data-stu-id="ca321-155">Security can be either message- or transport-specific.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="netPeerTcpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca321-156">获取一个值，该值指定是否应对绑定的读取器配额数据进行序列化。</span><span class="sxs-lookup"><span data-stu-id="ca321-156">Gets a value that specifies whether reader quota data for the binding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="ca321-157">返回一个<see cref="T:System.Boolean" />，如果应序列化读取器配额数据，则此布尔值为 <see langword="true" />；如果不应序列化，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca321-157">Returns <see cref="T:System.Boolean" /> that specifies <see langword="true" /> if reader quota data should be serialized, and <see langword="false" /> if it should not be serialized.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="netPeerTcpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca321-158">获取一个值，该值指定是否应序列化绑定的安全信息。</span><span class="sxs-lookup"><span data-stu-id="ca321-158">Gets a value that specifies whether security information for the binding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="ca321-159">返回一个 <see cref="T:System.Boolean" />，如果应序列化绑定的安全信息，则该布尔值为 <see langword="true" />；如果不应序列化绑定的安全信息，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca321-159">Returns <see cref="T:System.Boolean" /> that specifies <see langword="true" /> if the security information for the binding should be serialized, and <see langword="false" /> if it should not be serialized.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca321-160">获取一个值，它指示此绑定创建的对等通道上的传入请求是同步处理传入请求还是异步处理。</span><span class="sxs-lookup"><span data-stu-id="ca321-160">Gets a value that indicates whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="ca321-161"><see langword="true" /> 如果同步处理传入请求，则为; <see langword="false" /> 如果异步处理，则为。</span><span class="sxs-lookup"><span data-stu-id="ca321-161"><see langword="true" /> if incoming requests are handled synchronously; <see langword="false" /> if they are handled asynchronously.</span></span> <span data-ttu-id="ca321-162">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ca321-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
