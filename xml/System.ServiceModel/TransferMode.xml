<Type Name="TransferMode" FullName="System.ServiceModel.TransferMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7f0f69773b280599a65f32f043e322190e8345a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89964707" /></Metadata><TypeSignature Language="C#" Value="public enum TransferMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TransferMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.TransferMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum TransferMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class TransferMode" />
  <TypeSignature Language="F#" Value="type TransferMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="09139-101">指示通道是使用流处理模式还是缓冲模式来传输请求和响应消息。</span><span class="sxs-lookup"><span data-stu-id="09139-101">Indicates whether a channel uses streamed or buffered modes for the transfer of request and response messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09139-102">Windows Communication Foundation (WCF) 传输支持在每个方向传输消息的两种模式：</span><span class="sxs-lookup"><span data-stu-id="09139-102">Windows Communication Foundation (WCF) transports support two modes of transferring messages in each direction:</span></span>  
  
-   <span data-ttu-id="09139-103">缓冲传输将整个消息保留在内存缓冲区中，直到传输完成。</span><span class="sxs-lookup"><span data-stu-id="09139-103">Buffered transfers hold the entire message in a memory buffer until the transfer is complete.</span></span>  
  
-   <span data-ttu-id="09139-104">流传输仅会对消息头进行缓冲，并以流形式公开消息正文，也就是，一次只能读取一小部分消息。</span><span class="sxs-lookup"><span data-stu-id="09139-104">Streamed transfers only buffer the message headers and expose the message body as a stream, from which smaller portions can be read at a time.</span></span>  
  
 <span data-ttu-id="09139-105">将传输模式设置为 `Streamed` 将在两个方向上启用流通信。</span><span class="sxs-lookup"><span data-stu-id="09139-105">Setting the transfer mode to `Streamed` enables streaming communication in both directions.</span></span> <span data-ttu-id="09139-106">将传输模式设置为 `StreamedRequest` 或 `StreamedResponse` 将仅在指示的方向上启用流通信。</span><span class="sxs-lookup"><span data-stu-id="09139-106">Setting the transfer mode to `StreamedRequest` or `StreamedResponse` enables streaming communication only in the indicated direction.</span></span>  
  
 <span data-ttu-id="09139-107">流传输消除了对大型内存缓冲区的需要，从而提高了服务的可伸缩性。</span><span class="sxs-lookup"><span data-stu-id="09139-107">Streamed transfers can improve the scalability of a service by eliminating the need for large memory buffers.</span></span> <span data-ttu-id="09139-108">更改传输模式是否确实能够提高可伸缩性取决于所传输的消息大小。</span><span class="sxs-lookup"><span data-stu-id="09139-108">Whether changing the transfer mode actually improves scalability in practice depends on the size of the messages being transferred.</span></span> <span data-ttu-id="09139-109">当针对大型消息使用流传输而不是缓存传输时，可伸缩性的提高应最为明显。</span><span class="sxs-lookup"><span data-stu-id="09139-109">Improvements in scalability should be most evident when large messages use streamed instead of buffered transfers.</span></span>  
  
 <span data-ttu-id="09139-110">默认情况下，HTTP、TCP/IP 和命名管道传输协议使用缓冲消息传输。</span><span class="sxs-lookup"><span data-stu-id="09139-110">By default, the HTTP, TCP/IP and named pipe transports use buffered message transfers.</span></span> <span data-ttu-id="09139-111">您可以 `TransferMode` <xref:System.ServiceModel.BasicHttpBinding> 使用在、 <xref:System.ServiceModel.NetTcpBinding> 和 <xref:System.ServiceModel.NetNamedPipeBinding> 系统提供的绑定上公开的传输模式属性设置的值。</span><span class="sxs-lookup"><span data-stu-id="09139-111">You can set the values of `TransferMode` on the <xref:System.ServiceModel.BasicHttpBinding>, <xref:System.ServiceModel.NetTcpBinding>, and <xref:System.ServiceModel.NetNamedPipeBinding> system-provided bindings using the transfer mode properties exposed on them.</span></span> <span data-ttu-id="09139-112"><xref:System.ServiceModel.NetTcpBinding>通过使用属性，可以在类上设置模式 <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="09139-112">The mode can be set on the <xref:System.ServiceModel.NetTcpBinding> class, for example, by using the <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="09139-113">也可以在绑定的配置节中进行设置。</span><span class="sxs-lookup"><span data-stu-id="09139-113">It can also be set in the configuration section for the binding.</span></span>  
  
 <span data-ttu-id="09139-114">对于未公开传输模式属性的绑定，可以在传输的绑定元素上设置传输模式，此后可以将该元素添加到自定义绑定。</span><span class="sxs-lookup"><span data-stu-id="09139-114">For bindings that do not expose the transfer mode property, the transfer mode can be set on the binding element of the transport and this element can then be added to a custom binding.</span></span> <span data-ttu-id="09139-115">例如，创建 <xref:System.ServiceModel.Channels.HttpTransportBindingElement> 并在创建自定义绑定时利用 <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A> 属性设置传输模式。</span><span class="sxs-lookup"><span data-stu-id="09139-115">For example, create an <xref:System.ServiceModel.Channels.HttpTransportBindingElement> and use the <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A> property to set the transfer mode when creating a custom binding.</span></span> <span data-ttu-id="09139-116">也可以在自定义绑定的配置节中设置传输模式。</span><span class="sxs-lookup"><span data-stu-id="09139-116">The transfer mode can also be set in the configuration section for the custom binding.</span></span>  
  
 <span data-ttu-id="09139-117">对于 HTTP 传输，使用缓冲传输还是流传输是在终结点本地决定的。</span><span class="sxs-lookup"><span data-stu-id="09139-117">The decision to use either buffered or streamed transfers is a local decision of the endpoint for HTTP transports.</span></span> <span data-ttu-id="09139-118">对于 HTTP 传输，传输模式不会通过连接传播，也不会传播到代理服务器或其他中间方。</span><span class="sxs-lookup"><span data-stu-id="09139-118">For HTTP transports, the transfer mode does not propagate across a connection, or to proxy servers or other intermediaries.</span></span> <span data-ttu-id="09139-119">设置传输模式不会反映在服务协定的说明中。</span><span class="sxs-lookup"><span data-stu-id="09139-119">Setting the transfer mode is not reflected in the description of the service contract.</span></span> <span data-ttu-id="09139-120">在对服务生成一个代理后，可以但不强求为旨在与流传输一起使用的服务编辑配置文件，以设置传输模式。</span><span class="sxs-lookup"><span data-stu-id="09139-120">After generating a proxy to a service, you can (it is allowed but not required) edit the configuration file for services intended to be used with streamed transfers to set the transfer mode.</span></span> <span data-ttu-id="09139-121">对于 TCP 和命名管道传输协议，该传输模式将作为策略断言传播。</span><span class="sxs-lookup"><span data-stu-id="09139-121">For TCP and named pipe transports, the transfer mode is propagated as a policy assertion.</span></span>  
  
 <span data-ttu-id="09139-122">使用 `Streamed` 传输模式会导致 WCF 运行时强制实施某些限制。</span><span class="sxs-lookup"><span data-stu-id="09139-122">Using the `Streamed` transfer mode causes the WCF runtime to enforce some restrictions.</span></span>  
  
-   <span data-ttu-id="09139-123">在编程模型层，整个流传输中发生的操作最多只能与一个输入和/或输出参数之间具有协定。</span><span class="sxs-lookup"><span data-stu-id="09139-123">Operations that occur across a streamed transport can have a contract with at most one input and/or one output parameter at the programming model layer.</span></span> <span data-ttu-id="09139-124">该参数对应于整个消息正文，并且必须为 <xref:System.ServiceModel.Channels.Message>、<xref:System.IO.Stream> 的子类型或实现 <xref:System.Xml.Serialization.IXmlSerializable> 接口。</span><span class="sxs-lookup"><span data-stu-id="09139-124">That parameter corresponds to the entire body of the message and must be a <xref:System.ServiceModel.Channels.Message>, be a subtype of <xref:System.IO.Stream>, or implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span> <span data-ttu-id="09139-125">具有某个操作的返回值等效于具有一个输出参数。</span><span class="sxs-lookup"><span data-stu-id="09139-125">Having a return value for an operation is equivalent to having an output parameter.</span></span>  
  
-   <span data-ttu-id="09139-126">某些 WCF 功能（如可靠消息传递和 SOAP 消息级安全）依赖于缓冲消息以便进行传输。</span><span class="sxs-lookup"><span data-stu-id="09139-126">Some WCF features such as Reliable Messaging and SOAP message-level security rely on buffering messages for transmissions.</span></span> <span data-ttu-id="09139-127">使用这些功能可能减小或消除通过使用流获得的性能好处。</span><span class="sxs-lookup"><span data-stu-id="09139-127">Using these features may reduce or eliminate the performance benefits gained by using streaming.</span></span> <span data-ttu-id="09139-128">若要保证流传输的安全，请只使用传输级安全，或者使用 WS-Security 声明外加传输安全的混合模式安全。</span><span class="sxs-lookup"><span data-stu-id="09139-128">To secure a streamed transport, use transport level security only or use mixed-mode security, which combines WS-Security claims with transport security.</span></span>  
  
-   <span data-ttu-id="09139-129">即使传输模式设置为 `Streamed`，也总是会对 SOAP 标头进行缓冲。</span><span class="sxs-lookup"><span data-stu-id="09139-129">SOAP headers are always buffered, even when the transfer mode is set to `Streamed`.</span></span> <span data-ttu-id="09139-130">消息的标头不得超过在各种绑定和绑定元素上公开的 MaxBufferSize 传输配额大小。</span><span class="sxs-lookup"><span data-stu-id="09139-130">The headers for a message must not exceed the size of the MaxBufferSize transport quota which is exposed on the various bindings and binding elements.</span></span>  
  
 <span data-ttu-id="09139-131">将传输模式从 `Buffered` 更改为 `Streamed` 还会更改 TCP 和命名管道传输协议的本机通道形状。</span><span class="sxs-lookup"><span data-stu-id="09139-131">Changing the transfer mode from `Buffered` to `Streamed` also changes the native channel shape of the TCP and named pipe transports.</span></span> <span data-ttu-id="09139-132">对于缓冲传输模式，本机通道形状为 <xref:System.ServiceModel.Channels.IDuplexSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="09139-132">For buffered transfers, the native channel shape is <xref:System.ServiceModel.Channels.IDuplexSessionChannel>.</span></span> <span data-ttu-id="09139-133">对于流传输模式，本机通道为 <xref:System.ServiceModel.Channels.IRequestChannel> 和 <xref:System.ServiceModel.Channels.IReplyChannel>。</span><span class="sxs-lookup"><span data-stu-id="09139-133">For streamed transfers, the native channels are <xref:System.ServiceModel.Channels.IRequestChannel> and <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span> <span data-ttu-id="09139-134">因此，会话服务协定不能与传输流一起使用。</span><span class="sxs-lookup"><span data-stu-id="09139-134">A consequence of this is that sessionful service contracts cannot be used with transport streaming.</span></span>  
  
## Examples

<span data-ttu-id="09139-135">下面的示例通过代码将 [TcpTransportBindingElement. transfermode.buffered](xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode) 属性设置为 `Streamed` ：</span><span class="sxs-lookup"><span data-stu-id="09139-135">The following example sets the [TcpTransportBindingElement.TransferMode](xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode) property to `Streamed` through code:</span></span>  
  
```csharp  
TcpTransportBindingElement transport = new TcpTransportBindingElement();  
transport.TransferMode = TransferMode.Streamed;  
BinaryMessageEncodingBindingElement encoder = new BinaryMessageEncodingBindingElement();  
CustomBinding binding = new CustomBinding(encoder, transport);  
```  
  
<span data-ttu-id="09139-136">下面的示例通过配置将 [transfermode.buffered](xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode) 属性设置为 `Streamed` ：</span><span class="sxs-lookup"><span data-stu-id="09139-136">The following example sets the [TcpTransportBindingElement.TransferMode](xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode) property to `Streamed` through configuration:</span></span>  
  
```xml
<customBinding>  
    <binding name="streamingBinding">  
        <binaryMessageEncoding />  
            <tcpTransport transferMode="Streamed" />  
     </binding>  
</customBinding>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Buffered">
      <MemberSignature Language="C#" Value="Buffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode Buffered = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.Buffered" />
      <MemberSignature Language="VB.NET" Value="Buffered" />
      <MemberSignature Language="C++ CLI" Value="Buffered" />
      <MemberSignature Language="F#" Value="Buffered = 0" Usage="System.ServiceModel.TransferMode.Buffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09139-137">对请求和响应消息进行缓冲处理。</span><span class="sxs-lookup"><span data-stu-id="09139-137">The request and response messages are both buffered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Streamed">
      <MemberSignature Language="C#" Value="Streamed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode Streamed = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.Streamed" />
      <MemberSignature Language="VB.NET" Value="Streamed" />
      <MemberSignature Language="C++ CLI" Value="Streamed" />
      <MemberSignature Language="F#" Value="Streamed = 1" Usage="System.ServiceModel.TransferMode.Streamed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09139-138">对请求和响应消息进行流式处理。</span><span class="sxs-lookup"><span data-stu-id="09139-138">The request and response messages are both streamed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StreamedRequest">
      <MemberSignature Language="C#" Value="StreamedRequest" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode StreamedRequest = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.StreamedRequest" />
      <MemberSignature Language="VB.NET" Value="StreamedRequest" />
      <MemberSignature Language="C++ CLI" Value="StreamedRequest" />
      <MemberSignature Language="F#" Value="StreamedRequest = 2" Usage="System.ServiceModel.TransferMode.StreamedRequest" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09139-139">对请求消息进行流式处理，对响应消息进行缓冲处理。</span><span class="sxs-lookup"><span data-stu-id="09139-139">The request message is streamed and the response message is buffered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StreamedResponse">
      <MemberSignature Language="C#" Value="StreamedResponse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode StreamedResponse = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.StreamedResponse" />
      <MemberSignature Language="VB.NET" Value="StreamedResponse" />
      <MemberSignature Language="C++ CLI" Value="StreamedResponse" />
      <MemberSignature Language="F#" Value="StreamedResponse = 3" Usage="System.ServiceModel.TransferMode.StreamedResponse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09139-140">对请求消息进行缓冲处理，对响应消息进行流式处理。</span><span class="sxs-lookup"><span data-stu-id="09139-140">The request message is buffered and the response message is streamed.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
