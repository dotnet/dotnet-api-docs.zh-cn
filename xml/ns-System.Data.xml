<Namespace Name="System.Data">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db22860ab86b6615962ccf96d14b06f53dd8e7fb" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70646489" /></Metadata><Docs>
    <summary><span data-ttu-id="9baf4-101"><see cref="N:System.Data" /> 命名空间提供对表示 ADO.NET 结构的类的访问。</span><span class="sxs-lookup"><span data-stu-id="9baf4-101">The <see cref="N:System.Data" /> namespace provides access to classes that represent the ADO.NET architecture.</span></span> <span data-ttu-id="9baf4-102">通过 ADO.NET，可以生成可有效管理多个数据源的数据的组件。</span><span class="sxs-lookup"><span data-stu-id="9baf4-102">ADO.NET lets you build components that efficiently manage data from multiple data sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9baf4-103">在断开连接（如 Internet）的情况下，ADO.NET 提供请求、更新和对帐多层系统中的数据的工具。</span><span class="sxs-lookup"><span data-stu-id="9baf4-103">In a disconnected scenario such as the Internet, ADO.NET provides the tools to request, update, and reconcile data in multiple tier systems.</span></span> <span data-ttu-id="9baf4-104">ADO.NET 结构还实现在客户端应用程序中，如 Windows 窗体，或 ASP.NET 创建的 HTML 页。</span><span class="sxs-lookup"><span data-stu-id="9baf4-104">The ADO.NET architecture is also implemented in client applications, such as Windows Forms, or HTML pages created by ASP.NET.</span></span>  
  
 <span data-ttu-id="9baf4-105">ADO.NET 结构的核心是 <xref:System.Data.DataSet> 类。</span><span class="sxs-lookup"><span data-stu-id="9baf4-105">The centerpiece of the ADO.NET architecture is the <xref:System.Data.DataSet> class.</span></span> <span data-ttu-id="9baf4-106">每个 <xref:System.Data.DataSet> 都可以包含多个 <xref:System.Data.DataTable> 对象，而每个 <xref:System.Data.DataTable> 都包含单个数据源（如 SQL Server）的数据。</span><span class="sxs-lookup"><span data-stu-id="9baf4-106">Each <xref:System.Data.DataSet> can contain multiple <xref:System.Data.DataTable> objects, with each <xref:System.Data.DataTable> containing data from a single data source, such as SQL Server.</span></span>  
  
 <span data-ttu-id="9baf4-107">每个 <xref:System.Data.DataTable> 都包含一个 <xref:System.Data.DataColumnCollection>-- <xref:System.Data.DataColumn> 对象的集合，该集合确定每个 <xref:System.Data.DataTable> 的架构。</span><span class="sxs-lookup"><span data-stu-id="9baf4-107">Each <xref:System.Data.DataTable> contains a <xref:System.Data.DataColumnCollection>--a collection of <xref:System.Data.DataColumn> objects--that determines the schema of each <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9baf4-108"><xref:System.Data.DataColumn.DataType%2A> 属性确定 <xref:System.Data.DataColumn> 保存的数据的类型。</span><span class="sxs-lookup"><span data-stu-id="9baf4-108">The <xref:System.Data.DataColumn.DataType%2A> property determines the type of data held by the <xref:System.Data.DataColumn>.</span></span> <span data-ttu-id="9baf4-109">使用 <xref:System.Data.DataColumn.ReadOnly%2A> 和 <xref:System.Data.DataColumn.AllowDBNull%2A> 属性可以进一步确保数据完整性。</span><span class="sxs-lookup"><span data-stu-id="9baf4-109">The <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AllowDBNull%2A> properties let you further guarantee data integrity.</span></span> <span data-ttu-id="9baf4-110">使用 <xref:System.Data.DataColumn.Expression%2A> 属性可以构造计算列。</span><span class="sxs-lookup"><span data-stu-id="9baf4-110">The <xref:System.Data.DataColumn.Expression%2A> property lets you construct calculated columns.</span></span>  
  
 <span data-ttu-id="9baf4-111">如果 <xref:System.Data.DataTable> 参与同另一个 <xref:System.Data.DataTable> 的父/子关系，则通过将 <xref:System.Data.DataRelation> 添加到 <xref:System.Data.DataRelationCollection> 对象的 <xref:System.Data.DataSet> 来构造该关系。</span><span class="sxs-lookup"><span data-stu-id="9baf4-111">If a <xref:System.Data.DataTable> participates in a parent/child relationship with another <xref:System.Data.DataTable>, the relationship is constructed by adding a <xref:System.Data.DataRelation> to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet> object.</span></span> <span data-ttu-id="9baf4-112">添加此关系后，将根据构造函数的参数设置自动创建 <xref:System.Data.UniqueConstraint> 和 <xref:System.Data.ForeignKeyConstraint>。</span><span class="sxs-lookup"><span data-stu-id="9baf4-112">When such a relation is added, a <xref:System.Data.UniqueConstraint> and a <xref:System.Data.ForeignKeyConstraint> are both created automatically, depending on the parameter settings for the constructor.</span></span> <span data-ttu-id="9baf4-113"><xref:System.Data.UniqueConstraint> 确保列中包含的值唯一。</span><span class="sxs-lookup"><span data-stu-id="9baf4-113">The <xref:System.Data.UniqueConstraint> guarantees that values that are contained in a column are unique.</span></span> <span data-ttu-id="9baf4-114"><xref:System.Data.ForeignKeyConstraint> 确定更改或删除主键值时将对子行或子列执行的操作。</span><span class="sxs-lookup"><span data-stu-id="9baf4-114">The <xref:System.Data.ForeignKeyConstraint> determines what action will happen to the child row or column when a primary key value is changed or deleted.</span></span>  
  
 <span data-ttu-id="9baf4-115">通过使用 <xref:System.Data.SqlClient> 命名空间（用于 SQL Server 的 .NET Framework 数据提供程序）、<xref:System.Data.Odbc> 命名空间（用 ODBC 的 .NET Framework 数据提供程序）、<xref:System.Data.OleDb> 命名空间（用于 OLE DB 的 .NET Framework 数据提供程序）或 <xref:System.Data.OracleClient> 命名空间（用于 Oracle 的 .NET Framework 数据提供程序），可以访问数据源从而用于 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="9baf4-115">Using the <xref:System.Data.SqlClient> namespace (the.NET Framework Data Provider for SQL Server), the <xref:System.Data.Odbc> namespace (the.NET Framework Data Provider for ODBC), the <xref:System.Data.OleDb> namespace (the.NET Framework Data Provider for OLE DB), or the <xref:System.Data.OracleClient> namespace (the .NET Framework Data Provider for Oracle), you can access a data source to use together with a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9baf4-116">Each.NET Framework 数据提供程序有一个对应的 **DataAdapter** ，您可以将其用作数据源与之间的桥梁 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9baf4-116">Each.NET Framework data provider has a corresponding **DataAdapter** that you use as a bridge between a data source and a <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>