<Namespace Name="System.Data">
  <Metadata><Meta Name="ms.openlocfilehash" Value="309a0c8457539b9a29e9b4b931d02adfa86ad658" /><Meta Name="ms.sourcegitcommit" Value="02dd069b9696eb4eee675b6541f86b2602076448" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/20/2020" /><Meta Name="ms.locfileid" Value="92236235" /></Metadata><Docs>
    <summary>提供对表示 ADO.NET 体系结构的类的访问权限。 通过 ADO.NET，可以生成可有效管理多个数据源的数据的组件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 在断开连接（如 Internet）的情况下，ADO.NET 提供请求、更新和协调多层系统中的数据的工具。 ADO.NET 结构还实现在客户端应用程序中，如 Windows 窗体，或 ASP.NET 创建的 HTML 页。

 ADO.NET 结构的核心是 <xref:System.Data.DataSet> 类。 每个 <xref:System.Data.DataSet> 都可以包含多个 <xref:System.Data.DataTable> 对象，而每个 <xref:System.Data.DataTable> 都包含单个数据源（如 SQL Server）的数据。

 每个 <xref:System.Data.DataTable> 都包含一个 <xref:System.Data.DataColumnCollection>-- <xref:System.Data.DataColumn> 对象的集合，该集合确定每个 <xref:System.Data.DataTable> 的架构。 <xref:System.Data.DataColumn.DataType%2A> 属性确定 <xref:System.Data.DataColumn> 保存的数据的类型。 使用 <xref:System.Data.DataColumn.ReadOnly%2A> 和 <xref:System.Data.DataColumn.AllowDBNull%2A> 属性可以进一步确保数据完整性。 使用 <xref:System.Data.DataColumn.Expression%2A> 属性可以构造计算列。

 如果 <xref:System.Data.DataTable> 参与同另一个 <xref:System.Data.DataTable> 的父/子关系，则通过将 <xref:System.Data.DataRelation> 添加到 <xref:System.Data.DataRelationCollection> 对象的 <xref:System.Data.DataSet> 来构造该关系。 添加此关系后，将根据构造函数的参数设置自动创建 <xref:System.Data.UniqueConstraint> 和 <xref:System.Data.ForeignKeyConstraint>。 <xref:System.Data.UniqueConstraint> 确保列中包含的值唯一。 <xref:System.Data.ForeignKeyConstraint> 确定更改或删除主键值时将对子行或子列执行的操作。

 通过使用 <xref:System.Data.SqlClient> 命名空间（用于 SQL Server 的 .NET Framework 数据提供程序）、<xref:System.Data.Odbc> 命名空间（用 ODBC 的 .NET Framework 数据提供程序）、<xref:System.Data.OleDb> 命名空间（用于 OLE DB 的 .NET Framework 数据提供程序）或 <xref:System.Data.OracleClient> 命名空间（用于 Oracle 的 .NET Framework 数据提供程序），可以访问数据源从而用于 <xref:System.Data.DataSet>。 Each.NET Framework 数据提供程序有一个对应的 **DataAdapter** ，您可以将其用作数据源与之间的桥梁 <xref:System.Data.DataSet> 。

 ]]></format>
    </remarks>
  </Docs>
</Namespace>
