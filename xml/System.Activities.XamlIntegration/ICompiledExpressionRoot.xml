<Type Name="ICompiledExpressionRoot" FullName="System.Activities.XamlIntegration.ICompiledExpressionRoot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4a3db74d256936933a00c9f21e1f2a32a43fe25" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89958915" /></Metadata><TypeSignature Language="C#" Value="public interface ICompiledExpressionRoot" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICompiledExpressionRoot" />
  <TypeSignature Language="DocId" Value="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICompiledExpressionRoot" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICompiledExpressionRoot" />
  <TypeSignature Language="F#" Value="type ICompiledExpressionRoot = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d1c59-101">指定有关已编译的表达式根的信息。</span><span class="sxs-lookup"><span data-stu-id="d1c59-101">Specifies information about a compiled expression root.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecuteExpression">
      <MemberSignature Language="C#" Value="public bool CanExecuteExpression (string expressionText, bool isReference, System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; locations, out int expressionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecuteExpression(string expressionText, bool isReference, class System.Collections.Generic.IList`1&lt;class System.Activities.LocationReference&gt; locations, [out] int32&amp; expressionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecuteExpression (expressionText As String, isReference As Boolean, locations As IList(Of LocationReference), ByRef expressionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecuteExpression(System::String ^ expressionText, bool isReference, System::Collections::Generic::IList&lt;System::Activities::LocationReference ^&gt; ^ locations, [Runtime::InteropServices::Out] int % expressionId);" />
      <MemberSignature Language="F#" Value="abstract member CanExecuteExpression : string * bool * System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; * int -&gt; bool" Usage="iCompiledExpressionRoot.CanExecuteExpression (expressionText, isReference, locations, expressionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionText" Type="System.String" />
        <Parameter Name="isReference" Type="System.Boolean" />
        <Parameter Name="locations" Type="System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt;" />
        <Parameter Name="expressionId" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expressionText"><span data-ttu-id="d1c59-102">使用的表达式文本。</span><span class="sxs-lookup"><span data-stu-id="d1c59-102">The expression text used.</span></span></param>
        <param name="isReference"><span data-ttu-id="d1c59-103">如果引用则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1c59-103"><see langword="true" /> if reference; otherwise, <see langword="false" />.</span></span></param>
        <param name="locations"><span data-ttu-id="d1c59-104">位置的集合。</span><span class="sxs-lookup"><span data-stu-id="d1c59-104">The collection of locations.</span></span></param>
        <param name="expressionId"><span data-ttu-id="d1c59-105">表达式标识符。</span><span class="sxs-lookup"><span data-stu-id="d1c59-105">The expression identifier.</span></span></param>
        <summary><span data-ttu-id="d1c59-106">指示 <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> 是否可以执行查询。</span><span class="sxs-lookup"><span data-stu-id="d1c59-106">Indicates whether the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> can execute expression.</span></span></summary>
        <returns><span data-ttu-id="d1c59-107">如果 <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> 可执行表达式，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1c59-107"><see langword="true" /> if the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> can execute expression; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressionTreeForExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetExpressionTreeForExpression (int expressionId, System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; locationReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetExpressionTreeForExpression(int32 expressionId, class System.Collections.Generic.IList`1&lt;class System.Activities.LocationReference&gt; locationReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpressionTreeForExpression (expressionId As Integer, locationReferences As IList(Of LocationReference)) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetExpressionTreeForExpression(int expressionId, System::Collections::Generic::IList&lt;System::Activities::LocationReference ^&gt; ^ locationReferences);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionTreeForExpression : int * System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; -&gt; System.Linq.Expressions.Expression" Usage="iCompiledExpressionRoot.GetExpressionTreeForExpression (expressionId, locationReferences)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionId" Type="System.Int32" />
        <Parameter Name="locationReferences" Type="System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt;" />
      </Parameters>
      <Docs>
        <param name="expressionId"><span data-ttu-id="d1c59-108">表达式标识符。</span><span class="sxs-lookup"><span data-stu-id="d1c59-108">The expression identifier.</span></span></param>
        <param name="locationReferences"><span data-ttu-id="d1c59-109">位置引用。</span><span class="sxs-lookup"><span data-stu-id="d1c59-109">The location reference.</span></span></param>
        <summary><span data-ttu-id="d1c59-110">获取用于该表达式的表达式树。</span><span class="sxs-lookup"><span data-stu-id="d1c59-110">Gets the expression tree used for the expression.</span></span></summary>
        <returns><span data-ttu-id="d1c59-111">用于表达式的表达式树。</span><span class="sxs-lookup"><span data-stu-id="d1c59-111">The expression tree used for the expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLanguage">
      <MemberSignature Language="C#" Value="public string GetLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLanguage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguage () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLanguage();" />
      <MemberSignature Language="F#" Value="abstract member GetLanguage : unit -&gt; string" Usage="iCompiledExpressionRoot.GetLanguage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1c59-112">获取用于表达式的根的语言。</span><span class="sxs-lookup"><span data-stu-id="d1c59-112">Gets the language used in the expression root.</span></span></summary>
        <returns><span data-ttu-id="d1c59-113">使用的语言。</span><span class="sxs-lookup"><span data-stu-id="d1c59-113">The language used.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredLocations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; GetRequiredLocations (int expressionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetRequiredLocations(int32 expressionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredLocations (expressionId As Integer) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetRequiredLocations(int expressionId);" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredLocations : int -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="iCompiledExpressionRoot.GetRequiredLocations expressionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expressionId"><span data-ttu-id="d1c59-114">表达式标识符。</span><span class="sxs-lookup"><span data-stu-id="d1c59-114">The expression identifier.</span></span></param>
        <summary><span data-ttu-id="d1c59-115">获取表达式根所需位置的列表。</span><span class="sxs-lookup"><span data-stu-id="d1c59-115">Gets the list of required locations for the expression root.</span></span></summary>
        <returns><span data-ttu-id="d1c59-116">用于表达式的根的必须的位置列表。</span><span class="sxs-lookup"><span data-stu-id="d1c59-116">The list of required locations for the expression root.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeExpression">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1c59-117">调用 <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />。</span><span class="sxs-lookup"><span data-stu-id="d1c59-117">Invokes the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeExpression">
      <MemberSignature Language="C#" Value="public object InvokeExpression (int expressionId, System.Collections.Generic.IList&lt;System.Activities.Location&gt; locations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeExpression(int32 expressionId, class System.Collections.Generic.IList`1&lt;class System.Activities.Location&gt; locations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeExpression (expressionId As Integer, locations As IList(Of Location)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeExpression(int expressionId, System::Collections::Generic::IList&lt;System::Activities::Location ^&gt; ^ locations);" />
      <MemberSignature Language="F#" Value="abstract member InvokeExpression : int * System.Collections.Generic.IList&lt;System.Activities.Location&gt; -&gt; obj" Usage="iCompiledExpressionRoot.InvokeExpression (expressionId, locations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionId" Type="System.Int32" />
        <Parameter Name="locations" Type="System.Collections.Generic.IList&lt;System.Activities.Location&gt;" />
      </Parameters>
      <Docs>
        <param name="expressionId"><span data-ttu-id="d1c59-118">表达式标识符。</span><span class="sxs-lookup"><span data-stu-id="d1c59-118">The expression identifier.</span></span></param>
        <param name="locations"><span data-ttu-id="d1c59-119">使用的位置。</span><span class="sxs-lookup"><span data-stu-id="d1c59-119">The locations used.</span></span></param>
        <summary><span data-ttu-id="d1c59-120">调用 <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />, 使用指定的表达式标识符和位置。</span><span class="sxs-lookup"><span data-stu-id="d1c59-120">Invokes the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> using the specified expression identifier and locations.</span></span></summary>
        <returns><span data-ttu-id="d1c59-121">调用的表达式。</span><span class="sxs-lookup"><span data-stu-id="d1c59-121">The invoked expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeExpression">
      <MemberSignature Language="C#" Value="public object InvokeExpression (int expressionId, System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; locations, System.Activities.ActivityContext activityContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeExpression(int32 expressionId, class System.Collections.Generic.IList`1&lt;class System.Activities.LocationReference&gt; locations, class System.Activities.ActivityContext activityContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeExpression (expressionId As Integer, locations As IList(Of LocationReference), activityContext As ActivityContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeExpression(int expressionId, System::Collections::Generic::IList&lt;System::Activities::LocationReference ^&gt; ^ locations, System::Activities::ActivityContext ^ activityContext);" />
      <MemberSignature Language="F#" Value="abstract member InvokeExpression : int * System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; * System.Activities.ActivityContext -&gt; obj" Usage="iCompiledExpressionRoot.InvokeExpression (expressionId, locations, activityContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionId" Type="System.Int32" />
        <Parameter Name="locations" Type="System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt;" />
        <Parameter Name="activityContext" Type="System.Activities.ActivityContext" />
      </Parameters>
      <Docs>
        <param name="expressionId"><span data-ttu-id="d1c59-122">表达式标识符。</span><span class="sxs-lookup"><span data-stu-id="d1c59-122">The expression identifier.</span></span></param>
        <param name="locations"><span data-ttu-id="d1c59-123">位置。</span><span class="sxs-lookup"><span data-stu-id="d1c59-123">The locations.</span></span></param>
        <param name="activityContext"><span data-ttu-id="d1c59-124">活动上下文。</span><span class="sxs-lookup"><span data-stu-id="d1c59-124">The activity context.</span></span></param>
        <summary><span data-ttu-id="d1c59-125">调用 <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />, 使用指定的表达式标识符、位置和活动上下文。</span><span class="sxs-lookup"><span data-stu-id="d1c59-125">Invokes the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> using the specified expression identifier and locations and activity context.</span></span></summary>
        <returns><span data-ttu-id="d1c59-126">调用的表达式。</span><span class="sxs-lookup"><span data-stu-id="d1c59-126">The invoked expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
