<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c958125a867494d9f1207cc82f24e24a1b16d64" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83964940" /></Metadata><TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringReader extends System.IO.TextReader" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.IO" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.IO" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.IO" FromVersion="4.2.0.0" To="System.Runtime.Extensions" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.IO" FromVersion="4.2.1.0" To="System.Runtime.Extensions" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.IO" FromVersion="4.2.2.0" To="System.Runtime.Extensions" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="88875-101">实现从字符串进行读取的 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="88875-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-102"><xref:System.IO.StringReader> 使你能够同步或异步读取字符串。</span><span class="sxs-lookup"><span data-stu-id="88875-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="88875-103">您可以使用 <xref:System.IO.StringReader.Read%2A> 或 <xref:System.IO.StringReader.ReadAsync%2A> 方法一次读取一个字符，使用 <xref:System.IO.StringReader.ReadLine%2A> 或 <xref:System.IO.StringReader.ReadLineAsync%2A> 方法一次读取一个字符，使用 <xref:System.IO.StringReader.ReadToEnd%2A> 或 <xref:System.IO.StringReader.ReadToEndAsync%2A> 方法一次读取一个字符串。</span><span class="sxs-lookup"><span data-stu-id="88875-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="88875-104">下表列出了其他典型或相关 i/o 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="88875-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="88875-105">要执行以下操作...</span><span class="sxs-lookup"><span data-stu-id="88875-105">To do this...</span></span>|<span data-ttu-id="88875-106">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="88875-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="88875-107">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-107">Create a text file.</span></span>|[<span data-ttu-id="88875-108">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-108">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-109">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-109">Write to a text file.</span></span>|[<span data-ttu-id="88875-110">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-110">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-111">读取文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-111">Read from a text file.</span></span>|[<span data-ttu-id="88875-112">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-112">How to: Read Text from a File</span></span>](/dotnet/standard/io/how-to-read-text-from-a-file)|  
|<span data-ttu-id="88875-113">向文件追加文本。</span><span class="sxs-lookup"><span data-stu-id="88875-113">Append text to a file.</span></span>|[<span data-ttu-id="88875-114">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="88875-114">How to: Open and Append to a Log File</span></span>](/dotnet/standard/io/how-to-open-and-append-to-a-log-file)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-115">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="88875-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-116">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-117">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-118">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="88875-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-119">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="88875-119">Read from a binary file.</span></span>|[<span data-ttu-id="88875-120">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-120">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
|<span data-ttu-id="88875-121">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="88875-121">Write to a binary file.</span></span>|[<span data-ttu-id="88875-122">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-122">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
  
   
  
## Examples  
 <span data-ttu-id="88875-123">下面的示例演示如何以异步方式读取整个字符串。</span><span class="sxs-lookup"><span data-stu-id="88875-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
    <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-124">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-124">File and Stream I/O</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-125">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-125">How to: Read Text from a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-126">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-126">How to: Write Text to a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="88875-127">应将 <see cref="T:System.IO.StringReader" /> 初始化为的字符串。</span><span class="sxs-lookup"><span data-stu-id="88875-127">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span></span></param>
        <summary><span data-ttu-id="88875-128">初始化从指定字符串进行读取的 <see cref="T:System.IO.StringReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="88875-128">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-129">下表列出了其他典型或相关 i/o 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="88875-129">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="88875-130">要执行以下操作...</span><span class="sxs-lookup"><span data-stu-id="88875-130">To do this...</span></span>|<span data-ttu-id="88875-131">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="88875-131">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="88875-132">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-132">Create a text file.</span></span>|[<span data-ttu-id="88875-133">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-133">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-134">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-134">Write to a text file.</span></span>|[<span data-ttu-id="88875-135">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-135">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-136">读取文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-136">Read from a text file.</span></span>|[<span data-ttu-id="88875-137">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-137">How to: Read Text from a File</span></span>](/dotnet/standard/io/how-to-read-text-from-a-file)|  
|<span data-ttu-id="88875-138">向文件追加文本。</span><span class="sxs-lookup"><span data-stu-id="88875-138">Append text to a file.</span></span>|[<span data-ttu-id="88875-139">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="88875-139">How to: Open and Append to a Log File</span></span>](/dotnet/standard/io/how-to-open-and-append-to-a-log-file)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-140">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="88875-140">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-141">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-141">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-142">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-142">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-143">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="88875-143">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-144">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="88875-144">Read from a binary file.</span></span>|[<span data-ttu-id="88875-145">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-145">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
|<span data-ttu-id="88875-146">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="88875-146">Write to a binary file.</span></span>|[<span data-ttu-id="88875-147">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-147">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
  
   
  
## Examples  
 <span data-ttu-id="88875-148">此代码示例是为 <xref:System.IO.StringReader> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="88875-148">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88875-149">
          <paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="88875-149">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-150">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-150">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-151">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-151">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-152">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-152">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88875-153">关闭 <see cref="T:System.IO.StringReader" />。</span><span class="sxs-lookup"><span data-stu-id="88875-153">Closes the <see cref="T:System.IO.StringReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="88875-154">有关创建文件和将文本写入文件的示例，请参阅[如何：将文本写入文件](/dotnet/standard/io/how-to-write-text-to-a-file)。</span><span class="sxs-lookup"><span data-stu-id="88875-154">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](/dotnet/standard/io/how-to-write-text-to-a-file).</span></span> <span data-ttu-id="88875-155">有关从文件读取文本的示例，请参阅[如何：从文件读取文本](/dotnet/standard/io/how-to-read-text-from-a-file)。</span><span class="sxs-lookup"><span data-stu-id="88875-155">For an example of reading text from a file, see [How to: Read Text from a File](/dotnet/standard/io/how-to-read-text-from-a-file).</span></span> <span data-ttu-id="88875-156">有关从二进制文件读取和写入二进制文件的示例，请参阅[如何：读取和写入到新创建的数据文件](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)。</span><span class="sxs-lookup"><span data-stu-id="88875-156">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file).</span></span>  
  
<span data-ttu-id="88875-157">此方法将重写 <xref:System.IO.TextReader.Close%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="88875-157">This method overrides the <xref:System.IO.TextReader.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
<span data-ttu-id="88875-158">此 `Close` 实现调用 <xref:System.IO.StringReader.Dispose%2A>，方法传递 `true` 值。</span><span class="sxs-lookup"><span data-stu-id="88875-158">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A>, method passing a `true` value.</span></span> <span data-ttu-id="88875-159">调用 `Close`后，其他方法可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="88875-159">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-160">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-160">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-161">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-161">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-162">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-162">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="88875-163">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="88875-163"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="88875-164">释放 <see cref="T:System.IO.StringReader" /> 使用的非托管资源并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="88875-164">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-165">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.StringReader> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="88875-165">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="88875-166">此方法将调用每个被引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="88875-166">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="88875-167">
            <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="88875-167">
            <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="88875-168">重写 <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />时，请注意不要引用先前在调用 <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />之前已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="88875-168">When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</span></span></para></block>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-169">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-169">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-170">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-170">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-171">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-171">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88875-172">返回下一个可用字符，但不使用它。</span><span class="sxs-lookup"><span data-stu-id="88875-172">Returns the next available character but does not consume it.</span></span></summary>
        <returns><span data-ttu-id="88875-173">一个表示下一个要读取的字符的整数；如果没有更多可读取的字符或该流不支持查找，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="88875-173">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-174"><xref:System.IO.StringReader.Peek%2A> 方法返回一个整数值，以确定文件的末尾或发生了其他错误。</span><span class="sxs-lookup"><span data-stu-id="88875-174">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="88875-175">这允许用户首先检查返回值是否为-1，然后再将其强制转换为 <xref:System.Char> 类型。</span><span class="sxs-lookup"><span data-stu-id="88875-175">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="88875-176">此方法将重写 <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="88875-176">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="88875-177">此操作不会更改 `StringReader` 的当前位置。</span><span class="sxs-lookup"><span data-stu-id="88875-177">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="88875-178">下表列出了其他典型或相关 i/o 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="88875-178">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="88875-179">要执行以下操作...</span><span class="sxs-lookup"><span data-stu-id="88875-179">To do this...</span></span>|<span data-ttu-id="88875-180">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="88875-180">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="88875-181">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-181">Create a text file.</span></span>|[<span data-ttu-id="88875-182">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-182">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-183">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-183">Write to a text file.</span></span>|[<span data-ttu-id="88875-184">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-184">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-185">读取文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-185">Read from a text file.</span></span>|[<span data-ttu-id="88875-186">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-186">How to: Read Text from a File</span></span>](/dotnet/standard/io/how-to-read-text-from-a-file)|  
|<span data-ttu-id="88875-187">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="88875-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-188">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="88875-188">The current reader is closed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-189">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-189">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-190">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-190">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-191">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-191">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88875-192">读取输入字符串中的下一个字符或下一组字符。</span><span class="sxs-lookup"><span data-stu-id="88875-192">Reads the next character or next set of characters from the input string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88875-193">读取输入字符串中的下一个字符并将该字符的位置提升一个字符。</span><span class="sxs-lookup"><span data-stu-id="88875-193">Reads the next character from the input string and advances the character position by one character.</span></span></summary>
        <returns><span data-ttu-id="88875-194">基础字符串中的下一个字符，或者如果没有更多的可用字符，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="88875-194">The next character from the underlying string, or -1 if no more characters are available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-195">此方法将重写 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="88875-195">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="88875-196">下表列出了其他典型或相关 i/o 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="88875-196">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="88875-197">要执行以下操作...</span><span class="sxs-lookup"><span data-stu-id="88875-197">To do this...</span></span>|<span data-ttu-id="88875-198">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="88875-198">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="88875-199">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-199">Create a text file.</span></span>|[<span data-ttu-id="88875-200">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-200">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-201">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-201">Write to a text file.</span></span>|[<span data-ttu-id="88875-202">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-202">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-203">读取文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-203">Read from a text file.</span></span>|[<span data-ttu-id="88875-204">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-204">How to: Read Text from a File</span></span>](/dotnet/standard/io/how-to-read-text-from-a-file)|  
|<span data-ttu-id="88875-205">向文件追加文本。</span><span class="sxs-lookup"><span data-stu-id="88875-205">Append text to a file.</span></span>|[<span data-ttu-id="88875-206">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="88875-206">How to: Open and Append to a Log File</span></span>](/dotnet/standard/io/how-to-open-and-append-to-a-log-file)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-207">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="88875-207">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-208">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-208">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-209">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-209">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-210">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="88875-210">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-211">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="88875-211">Read from a binary file.</span></span>|[<span data-ttu-id="88875-212">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-212">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
|<span data-ttu-id="88875-213">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="88875-213">Write to a binary file.</span></span>|[<span data-ttu-id="88875-214">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-214">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
  
   
  
## Examples  
 <span data-ttu-id="88875-215">此代码示例是为 <xref:System.IO.StringReader> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="88875-215">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-216">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="88875-216">The current reader is closed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-217">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-217">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-218">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-218">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-219">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-219">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="88875-220">此方法返回时，包含从当前源中读取的字符。</span><span class="sxs-lookup"><span data-stu-id="88875-220">When this method returns, contains the characters read from the current source.</span></span> <span data-ttu-id="88875-221">如果读取的字符总数为零，则范围保持不变。</span><span class="sxs-lookup"><span data-stu-id="88875-221">If the total number of characters read is zero, the span remains unmodified.</span></span></param>
        <summary><span data-ttu-id="88875-222">从当前位置开始读取输入字符串中的所有字符，并将当前位置移到输入字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="88875-222">Reads all the characters from the input string, starting at the current position, and advances the current position to the end of the input string.</span></span></summary>
        <returns><span data-ttu-id="88875-223">读入缓冲区的总字符数。</span><span class="sxs-lookup"><span data-stu-id="88875-223">The total number of characters read into the buffer.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-224">当前字符串读取器实例已关闭。</span><span class="sxs-lookup"><span data-stu-id="88875-224">The current string reader instance is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(char[] buffer, int32 index, int32 count) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="88875-225">当此方法返回时，包含指定的字符数组，此数组中 <paramref name="index" /> 和 (<paramref name="index" /> + <paramref name="count" /> - 1) 之间的值被从当前源中读取的字符所替换。</span><span class="sxs-lookup"><span data-stu-id="88875-225">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="88875-226">缓存区中的起始索引。</span><span class="sxs-lookup"><span data-stu-id="88875-226">The starting index in the buffer.</span></span></param>
        <param name="count"><span data-ttu-id="88875-227">要读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="88875-227">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="88875-228">读取输入字符串中的字符块，并将字符位置提升 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="88875-228">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span></span></summary>
        <returns><span data-ttu-id="88875-229">读入缓冲区的总字符数。</span><span class="sxs-lookup"><span data-stu-id="88875-229">The total number of characters read into the buffer.</span></span> <span data-ttu-id="88875-230">如果当前没有那么多字符可用，则总字符数可能会少于所请求的字符数，或者如果已到达基础字符串的结尾，则总字符数为零。</span><span class="sxs-lookup"><span data-stu-id="88875-230">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-231">此方法重写 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="88875-231">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="88875-232">方法将从 <xref:System.IO.StringReader> 读取 `count` 个字符，直到从 `index`位置开始 `buffer` 字符数组。</span><span class="sxs-lookup"><span data-stu-id="88875-232">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="88875-233">返回读取的实际字符数，如果已到达字符串的末尾并且未读取任何字符，则返回零。</span><span class="sxs-lookup"><span data-stu-id="88875-233">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="88875-234">下表列出了其他典型或相关 i/o 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="88875-234">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="88875-235">要执行以下操作...</span><span class="sxs-lookup"><span data-stu-id="88875-235">To do this...</span></span>|<span data-ttu-id="88875-236">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="88875-236">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="88875-237">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-237">Create a text file.</span></span>|[<span data-ttu-id="88875-238">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-238">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-239">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-239">Write to a text file.</span></span>|[<span data-ttu-id="88875-240">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-240">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-241">读取文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-241">Read from a text file.</span></span>|[<span data-ttu-id="88875-242">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-242">How to: Read Text from a File</span></span>](/dotnet/standard/io/how-to-read-text-from-a-file)|  
|<span data-ttu-id="88875-243">向文件追加文本。</span><span class="sxs-lookup"><span data-stu-id="88875-243">Append text to a file.</span></span>|[<span data-ttu-id="88875-244">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="88875-244">How to: Open and Append to a Log File</span></span>](/dotnet/standard/io/how-to-open-and-append-to-a-log-file)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-245">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="88875-245">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-246">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-246">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-247">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-247">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-248">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="88875-248">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-249">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="88875-249">Read from a binary file.</span></span>|[<span data-ttu-id="88875-250">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-250">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
|<span data-ttu-id="88875-251">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="88875-251">Write to a binary file.</span></span>|[<span data-ttu-id="88875-252">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-252">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88875-253"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="88875-253"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88875-254">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="88875-254">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88875-255"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="88875-255"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-256">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="88875-256">The current reader is closed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-257">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-257">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-258">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-258">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-259">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-259">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Memory(Of Char), Optional cancellationToken As CancellationToken = null) As ValueTask(Of Integer)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="88875-260">此方法返回时，包含从当前源中读取的字符。</span><span class="sxs-lookup"><span data-stu-id="88875-260">When this method returns, contains the characters read from the current source.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88875-261">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="88875-261">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="88875-262">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="88875-262">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="88875-263">从当前位置开始异步读取输入字符串中的所有字符，并将当前位置移到输入字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="88875-263">Asynchronously reads all the characters from the input string, starting at the current position, and advances the current position to the end of the input string.</span></span></summary>
        <returns><span data-ttu-id="88875-264">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="88875-264">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="88875-265"><paramref name="TResult" /> 参数的值包含读入缓冲区的总字符数。</span><span class="sxs-lookup"><span data-stu-id="88875-265">The value of the <paramref name="TResult" /> parameter contains the total number of characters read into the buffer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="88875-266">当此方法返回时，包含指定的字符数组，此数组中 <paramref name="index" /> 和 (<paramref name="index" /> + <paramref name="count" /> - 1) 之间的值被从当前源中读取的字符所替换。</span><span class="sxs-lookup"><span data-stu-id="88875-266">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="88875-267">在 <paramref name="buffer" /> 中开始写入的位置。</span><span class="sxs-lookup"><span data-stu-id="88875-267">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="88875-268">要读取的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="88875-268">The maximum number of characters to read.</span></span> <span data-ttu-id="88875-269">如果在写入指定数目的字符到缓冲区之前，就已经达到字符串的末尾，则方法返回。</span><span class="sxs-lookup"><span data-stu-id="88875-269">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="88875-270">异步从当前字符串中读取指定数目的字符并从指定索引开始将该数据写入缓冲区。</span><span class="sxs-lookup"><span data-stu-id="88875-270">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="88875-271">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="88875-271">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="88875-272"><paramref name="TResult" /> 参数的值包含读入缓冲区的总字节数。</span><span class="sxs-lookup"><span data-stu-id="88875-272">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="88875-273">如果当前可用字节数少于所请求的字节数，则该结果值可能小于所请求的字节数，或者如果已到达字符串的末尾时，则为 0（零）。</span><span class="sxs-lookup"><span data-stu-id="88875-273">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-274">在读取 `count` 参数指定的字符数或到达字符串的末尾后，该任务完成。</span><span class="sxs-lookup"><span data-stu-id="88875-274">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88875-275">下面的示例演示如何以异步方式读取字符串的前23个字符。</span><span class="sxs-lookup"><span data-stu-id="88875-275">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88875-276"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="88875-276"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88875-277"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="88875-277"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88875-278"><paramref name="index" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。</span><span class="sxs-lookup"><span data-stu-id="88875-278">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-279">字符串读取器已被释放。</span><span class="sxs-lookup"><span data-stu-id="88875-279">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="88875-280">以前的读取操作当前正在使用读取器。</span><span class="sxs-lookup"><span data-stu-id="88875-280">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="88875-281">此方法返回时，包含从当前源中读取的字符。</span><span class="sxs-lookup"><span data-stu-id="88875-281">When this method returns, contains the characters read from the current source.</span></span> <span data-ttu-id="88875-282">如果读取的字符总数为零，则范围保持不变。</span><span class="sxs-lookup"><span data-stu-id="88875-282">If the total number of characters read is zero, the span remains unmodified.</span></span></param>
        <summary><span data-ttu-id="88875-283">从当前位置开始读取输入字符串中的所有字符，并将当前位置移到输入字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="88875-283">Reads all the characters from the input string starting at the current position and advances the current position to the end of the input string.</span></span></summary>
        <returns><span data-ttu-id="88875-284">读入缓冲区的总字符数。</span><span class="sxs-lookup"><span data-stu-id="88875-284">The total number of characters read into the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="88875-285"><xref:System.IO.StringReader.ReadBlock(System.Span{System.Char})> 在内部直接调用 <xref:System.IO.StringReader.Read(System.Span{System.Char})>。</span><span class="sxs-lookup"><span data-stu-id="88875-285"><xref:System.IO.StringReader.ReadBlock(System.Span{System.Char})> internally calls <xref:System.IO.StringReader.Read(System.Span{System.Char})> directly.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-286">当前字符串读取器实例已关闭。</span><span class="sxs-lookup"><span data-stu-id="88875-286">The current string reader instance is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Memory(Of Char), Optional cancellationToken As CancellationToken = null) As ValueTask(Of Integer)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="88875-287">此方法返回时，包含从当前源中读取的字符。</span><span class="sxs-lookup"><span data-stu-id="88875-287">When this method returns, contains the characters read from the current source.</span></span> <span data-ttu-id="88875-288">如果读取的字符总数为零，则范围保持不变。</span><span class="sxs-lookup"><span data-stu-id="88875-288">If the total number of characters read is zero, the span remains unmodified.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="88875-289">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="88875-289">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="88875-290">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="88875-290">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="88875-291">从当前位置开始异步读取输入字符串中的所有字符，并将当前位置移到输入字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="88875-291">Asynchronously reads all the characters from the input string starting at the current position and advances the current position to the end of the input string.</span></span></summary>
        <returns><span data-ttu-id="88875-292">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="88875-292">A task representing the asynchronous read operation.</span></span> <span data-ttu-id="88875-293"><paramref name="TResult" /> 参数的值包含读入缓冲区的总字符数。</span><span class="sxs-lookup"><span data-stu-id="88875-293">The value of the <paramref name="TResult" /> parameter contains the total number of characters read into the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="88875-294"><xref:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)> 异步调用 <xref:System.IO.StringReader.ReadBlock(System.Span{System.Char})>，这反过来又直接调用 <xref:System.IO.StringReader.Read(System.Span{System.Char})>。</span><span class="sxs-lookup"><span data-stu-id="88875-294"><xref:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)> calls <xref:System.IO.StringReader.ReadBlock(System.Span{System.Char})> asynchronously, which in turn calls <xref:System.IO.StringReader.Read(System.Span{System.Char})> directly.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="88875-295">当此方法返回时，包含指定的字符数组，此数组中 <paramref name="index" /> 和 (<paramref name="index" /> + <paramref name="count" /> - 1) 之间的值被从当前源中读取的字符所替换。</span><span class="sxs-lookup"><span data-stu-id="88875-295">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span></span></param>
        <param name="index"><span data-ttu-id="88875-296">在 <paramref name="buffer" /> 中开始写入的位置。</span><span class="sxs-lookup"><span data-stu-id="88875-296">The position in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="88875-297">要读取的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="88875-297">The maximum number of characters to read.</span></span> <span data-ttu-id="88875-298">如果在写入指定数目的字符到缓冲区之前，就已经达到字符串的末尾，则方法返回。</span><span class="sxs-lookup"><span data-stu-id="88875-298">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span></span></param>
        <summary><span data-ttu-id="88875-299">异步从当前字符串中读取指定数目的字符并从指定索引开始将该数据写入缓冲区。</span><span class="sxs-lookup"><span data-stu-id="88875-299">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span></span></summary>
        <returns><span data-ttu-id="88875-300">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="88875-300">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="88875-301"><paramref name="TResult" /> 参数的值包含读入缓冲区的总字节数。</span><span class="sxs-lookup"><span data-stu-id="88875-301">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="88875-302">如果当前可用字节数少于所请求的字节数，则该结果值可能小于所请求的字节数，或者如果已到达字符串的末尾时，则为 0（零）。</span><span class="sxs-lookup"><span data-stu-id="88875-302">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-303">直到读取 `count` 参数指定的字符数或已到达字符串的末尾，才能完成该任务。</span><span class="sxs-lookup"><span data-stu-id="88875-303">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88875-304"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="88875-304"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88875-305"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="88875-305"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88875-306"><paramref name="index" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。</span><span class="sxs-lookup"><span data-stu-id="88875-306">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-307">字符串读取器已被释放。</span><span class="sxs-lookup"><span data-stu-id="88875-307">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="88875-308">以前的读取操作当前正在使用读取器。</span><span class="sxs-lookup"><span data-stu-id="88875-308">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88875-309">从当前字符串中读取一行字符并将数据作为字符串返回。</span><span class="sxs-lookup"><span data-stu-id="88875-309">Reads a line of characters from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="88875-310">当前字符串中的下一行；或为 <see langword="null" /> （如果到达了字符串的末尾）。</span><span class="sxs-lookup"><span data-stu-id="88875-310">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-311">此方法将重写 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="88875-311">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="88875-312">行定义为字符序列，后跟换行符（"\n"）、回车符（"\r"）、后跟换行符的回车符（"\r\n"）或流结束标记。</span><span class="sxs-lookup"><span data-stu-id="88875-312">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), a carriage return immediately followed by a line feed ("\r\n"), or the end-of-stream marker.</span></span> <span data-ttu-id="88875-313">返回的字符串不包含终止回车符或换行符。</span><span class="sxs-lookup"><span data-stu-id="88875-313">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="88875-314">如果到达了流结束标记，则返回的值为 `null`。</span><span class="sxs-lookup"><span data-stu-id="88875-314">The returned value is `null` if the end-of-stream marker has been reached.</span></span> <span data-ttu-id="88875-315">也就是说，如果最后一行读取和流末尾标记之间没有任何内容，则该方法将返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="88875-315">That is to say, if there is nothing between the last line read and the end-of-stream marker, the method returns `null`.</span></span>  
  
 <span data-ttu-id="88875-316">如果当前方法引发 <xref:System.OutOfMemoryException>，则读取器在基础字符串中的位置将由该方法可以读取的字符数提前，但已读入内部 <xref:System.IO.StringReader.ReadLine%2A> 缓冲区的字符将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="88875-316">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="88875-317">因为在字符串中读取器的位置不能更改，所以已读的字符不可恢复，只能通过重新初始化 <xref:System.IO.StringReader>来访问。</span><span class="sxs-lookup"><span data-stu-id="88875-317">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="88875-318">若要避免这种情况，请使用 <xref:System.IO.StringReader.Read%2A> 方法，并在预分配的缓冲区中存储读取字符。</span><span class="sxs-lookup"><span data-stu-id="88875-318">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="88875-319">下表列出了其他典型或相关 i/o 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="88875-319">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="88875-320">要执行以下操作...</span><span class="sxs-lookup"><span data-stu-id="88875-320">To do this...</span></span>|<span data-ttu-id="88875-321">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="88875-321">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="88875-322">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-322">Create a text file.</span></span>|[<span data-ttu-id="88875-323">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-323">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-324">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-324">Write to a text file.</span></span>|[<span data-ttu-id="88875-325">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-325">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-326">读取文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-326">Read from a text file.</span></span>|[<span data-ttu-id="88875-327">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-327">How to: Read Text from a File</span></span>](/dotnet/standard/io/how-to-read-text-from-a-file)|  
|<span data-ttu-id="88875-328">向文件追加文本。</span><span class="sxs-lookup"><span data-stu-id="88875-328">Append text to a file.</span></span>|[<span data-ttu-id="88875-329">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="88875-329">How to: Open and Append to a Log File</span></span>](/dotnet/standard/io/how-to-open-and-append-to-a-log-file)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-330">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="88875-330">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-331">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-331">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-332">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-332">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-333">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="88875-333">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-334">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="88875-334">Read from a binary file.</span></span>|[<span data-ttu-id="88875-335">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-335">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
|<span data-ttu-id="88875-336">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="88875-336">Write to a binary file.</span></span>|[<span data-ttu-id="88875-337">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-337">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
  
   
  
## Examples  
 <span data-ttu-id="88875-338">此代码示例是为 <xref:System.IO.StringReader> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="88875-338">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-339">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="88875-339">The current reader is closed.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="88875-340">没有足够的内存来为返回的字符串分配缓冲区。</span><span class="sxs-lookup"><span data-stu-id="88875-340">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-341">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-341">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-342">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-342">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-343">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-343">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88875-344">从当前字符串中异步读取一行字符并将数据作为字符串返回。</span><span class="sxs-lookup"><span data-stu-id="88875-344">Reads a line of characters asynchronously from the current string and returns the data as a string.</span></span></summary>
        <returns><span data-ttu-id="88875-345">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="88875-345">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="88875-346"><paramref name="TResult" /> 参数的值包含来自字符串读取器的下一行或为 <see langword="null" /> 如果读取所有字符。</span><span class="sxs-lookup"><span data-stu-id="88875-346">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="88875-347">下面的示例演示如何以异步方式从字符串中一次读取一行。</span><span class="sxs-lookup"><span data-stu-id="88875-347">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88875-348">下一行中的字符数大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="88875-348">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-349">字符串读取器已被释放。</span><span class="sxs-lookup"><span data-stu-id="88875-349">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="88875-350">以前的读取操作当前正在使用读取器。</span><span class="sxs-lookup"><span data-stu-id="88875-350">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88875-351">读取从当前位置到字符串的结尾的所有字符并将它们作为单个字符串返回。</span><span class="sxs-lookup"><span data-stu-id="88875-351">Reads all characters from the current position to the end of the string and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="88875-352">从当前位置到基础字符串的结尾之间的内容。</span><span class="sxs-lookup"><span data-stu-id="88875-352">The content from the current position to the end of the underlying string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88875-353">此方法将重写 <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="88875-353">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="88875-354">如果当前方法引发 <xref:System.OutOfMemoryException>，则读取器在基础字符串中的位置将由该方法可以读取的字符数提前，但已读入内部 <xref:System.IO.StringReader.ReadToEnd%2A> 缓冲区的字符将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="88875-354">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="88875-355">因为在字符串中读取器的位置不能更改，所以已读的字符不可恢复，只能通过重新初始化 <xref:System.IO.StringReader>来访问。</span><span class="sxs-lookup"><span data-stu-id="88875-355">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="88875-356">若要避免这种情况，请使用 <xref:System.IO.StringReader.Read%2A> 方法，并在预分配的缓冲区中存储读取字符。</span><span class="sxs-lookup"><span data-stu-id="88875-356">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="88875-357">下表列出了其他典型或相关 i/o 任务的示例。</span><span class="sxs-lookup"><span data-stu-id="88875-357">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="88875-358">要执行以下操作...</span><span class="sxs-lookup"><span data-stu-id="88875-358">To do this...</span></span>|<span data-ttu-id="88875-359">请参见本主题中的示例...</span><span class="sxs-lookup"><span data-stu-id="88875-359">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="88875-360">创建文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-360">Create a text file.</span></span>|[<span data-ttu-id="88875-361">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-361">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-362">写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-362">Write to a text file.</span></span>|[<span data-ttu-id="88875-363">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-363">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)|  
|<span data-ttu-id="88875-364">读取文本文件。</span><span class="sxs-lookup"><span data-stu-id="88875-364">Read from a text file.</span></span>|[<span data-ttu-id="88875-365">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-365">How to: Read Text from a File</span></span>](/dotnet/standard/io/how-to-read-text-from-a-file)|  
|<span data-ttu-id="88875-366">向文件追加文本。</span><span class="sxs-lookup"><span data-stu-id="88875-366">Append text to a file.</span></span>|[<span data-ttu-id="88875-367">如何：打开并追加到日志文件</span><span class="sxs-lookup"><span data-stu-id="88875-367">How to: Open and Append to a Log File</span></span>](/dotnet/standard/io/how-to-open-and-append-to-a-log-file)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-368">获取文件的大小。</span><span class="sxs-lookup"><span data-stu-id="88875-368">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-369">获取文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-369">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-370">设置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="88875-370">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-371">确定文件是否存在。</span><span class="sxs-lookup"><span data-stu-id="88875-371">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="88875-372">从二进制文件中读取。</span><span class="sxs-lookup"><span data-stu-id="88875-372">Read from a binary file.</span></span>|[<span data-ttu-id="88875-373">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-373">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
|<span data-ttu-id="88875-374">写入二进制文件。</span><span class="sxs-lookup"><span data-stu-id="88875-374">Write to a binary file.</span></span>|[<span data-ttu-id="88875-375">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="88875-375">How to: Read and Write to a Newly Created Data File</span></span>](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)|  
  
   
  
## Examples  
 <span data-ttu-id="88875-376">此代码示例是为 <xref:System.IO.TextReader> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="88875-376">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="88875-377">没有足够的内存来为返回的字符串分配缓冲区。</span><span class="sxs-lookup"><span data-stu-id="88875-377">There is insufficient memory to allocate a buffer for the returned string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-378">当前读取器已关闭。</span><span class="sxs-lookup"><span data-stu-id="88875-378">The current reader is closed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="88875-379">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="88875-379">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="88875-380">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="88875-380">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="88875-381">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="88875-381">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88875-382">异步读取从当前位置到字符串的结尾的所有字符并将它们作为单个字符串返回。</span><span class="sxs-lookup"><span data-stu-id="88875-382">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span></span></summary>
        <returns><span data-ttu-id="88875-383">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="88875-383">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="88875-384"><paramref name="TResult" /> 参数值包括字符串来自当前位置到结束字符串字符。</span><span class="sxs-lookup"><span data-stu-id="88875-384">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="88875-385">下面的示例演示如何以异步方式读取整个字符串。</span><span class="sxs-lookup"><span data-stu-id="88875-385">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88875-386">字符数大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="88875-386">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="88875-387">字符串读取器已被释放。</span><span class="sxs-lookup"><span data-stu-id="88875-387">The string reader has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="88875-388">以前的读取操作当前正在使用读取器。</span><span class="sxs-lookup"><span data-stu-id="88875-388">The reader is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
