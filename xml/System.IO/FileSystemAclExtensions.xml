<Type Name="FileSystemAclExtensions" FullName="System.IO.FileSystemAclExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f3beda67aeb0492a99cb230868ee4613e5b53ef" /><Meta Name="ms.sourcegitcommit" Value="016b83bbe7c9939534269a7d98e7fe53f38e8396" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/21/2021" /><Meta Name="ms.locfileid" Value="98628419" /></Metadata><TypeSignature Language="C#" Value="public static class FileSystemAclExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FileSystemAclExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemAclExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FileSystemAclExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemAclExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type FileSystemAclExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供特定于 Windows 的静态扩展方法用来操作文件和目录的访问控制列表 (ACL) 安全属性。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static void Create (this System.IO.DirectoryInfo directoryInfo, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Create(class System.IO.DirectoryInfo directoryInfo, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Create (directoryInfo As DirectoryInfo, directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Create(System::IO::DirectoryInfo ^ directoryInfo, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.DirectoryInfo * System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="System.IO.FileSystemAclExtensions.Create (directoryInfo, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">一个尚不存在但将通过此方法创建的目录。</param>
        <param name="directorySecurity">目录的访问控制和审核安全。</param>
        <summary>创建一个新目录，确保使用指定的目录安全性创建该目录。 如果该目录已存在，则不执行任何操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

此扩展方法已添加到 .NET Core，以引入由 [DirectoryInfo (system.security.accesscontrol.directorysecurity) ](/dotnet/api/system.io.directoryinfo.create?view=netframework-4.8#System_IO_DirectoryInfo_Create_System_Security_AccessControl_DirectorySecurity_) .NET Framework 方法提供的功能。

## Examples

下面的代码示例使用指定的目录安全属性在用户的临时文件夹内创建一个新目录：

[!code-csharp[DirectoryInfoCreateDirectory](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileSystem.AccessControl/DirectoryInfoCreateDirectory.cs)]

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="directoryInfo" /> 或 <paramref name="directorySecurity" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">找不到路径的某一部分。</exception>
        <exception cref="T:System.UnauthorizedAccessException">对路径的访问被拒绝。</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.FileStream Create (this System.IO.FileInfo fileInfo, System.IO.FileMode mode, System.Security.AccessControl.FileSystemRights rights, System.IO.FileShare share, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.FileStream Create(class System.IO.FileInfo fileInfo, valuetype System.IO.FileMode mode, valuetype System.Security.AccessControl.FileSystemRights rights, valuetype System.IO.FileShare share, int32 bufferSize, valuetype System.IO.FileOptions options, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.Create(System.IO.FileInfo,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Create (fileInfo As FileInfo, mode As FileMode, rights As FileSystemRights, share As FileShare, bufferSize As Integer, options As FileOptions, fileSecurity As FileSecurity) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::FileStream ^ Create(System::IO::FileInfo ^ fileInfo, System::IO::FileMode mode, System::Security::AccessControl::FileSystemRights rights, System::IO::FileShare share, int bufferSize, System::IO::FileOptions options, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.FileInfo * System.IO.FileMode * System.Security.AccessControl.FileSystemRights * System.IO.FileShare * int * System.IO.FileOptions * System.Security.AccessControl.FileSecurity -&gt; System.IO.FileStream" Usage="System.IO.FileSystemAclExtensions.Create (fileInfo, mode, rights, share, bufferSize, options, fileSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileInfo" Type="System.IO.FileInfo" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.FileSystemRights" Index="2" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="3" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" Index="6" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="fileInfo">一个尚不存在但将通过此方法创建的文件。</param>
        <param name="mode">一个枚举值，用于指定操作系统应如何打开文件。</param>
        <param name="rights">一个枚举值，用于定义在创建访问和审核规则时要使用的访问权限。</param>
        <param name="share">一个枚举值，用于控制其他文件流对象可对同一文件进行哪种类型的访问。</param>
        <param name="bufferSize">用于读取和写入到文件的已放入缓冲区的字节数。</param>
        <param name="options">一个枚举值，用于描述如何创建或覆盖该文件。</param>
        <param name="fileSecurity">一个对象，用于确定文件的访问控制和审核安全性。</param>
        <summary>创建一个新的文件流，确保使用指定的属性和安全设置创建该文件流。</summary>
        <returns>新建文件的文件流。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

已将此扩展方法添加到 .NET Core，以引入由提供的功能：

- [FileStream (String、文件、FileSystemRights、文件共享、Int32、、FileSecurity) ](/dotnet/api/system.io.filestream.-ctor?view=netframework-4.8#System_IO_FileStream__ctor_System_String_System_IO_FileMode_System_Security_AccessControl_FileSystemRights_System_IO_FileShare_System_Int32_System_IO_FileOptions_System_Security_AccessControl_FileSecurity_) .NET Framework 构造函数。
- [文件. Create (String，Int32，文件，FileSecurity](/dotnet/api/system.io.file.create?view=netframework-4.8#System_IO_File_Create_System_String_System_Int32_System_IO_FileOptions_System_Security_AccessControl_FileSecurity_) .NET Framework 方法。

## Examples

下面的代码示例在用户的临时文件夹中创建一个新的文本文件，并显式指定所有安全特性：

[!code-csharp[FileInfoCreate](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileSystem.AccessControl/FileInfoCreate.cs)]

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rights" /> 和 <paramref name="mode" /> 组合无效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileInfo" /> 或 <paramref name="fileSecurity" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> 和 <paramref name="share" /> 超出其合法的枚举范围。

- 或 -

<paramref name="bufferSize" /> 不是正数。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">找不到路径的某一部分。</exception>
        <exception cref="T:System.IO.IOException">出现 I/O 错误。</exception>
        <exception cref="T:System.UnauthorizedAccessException">对路径的访问被拒绝。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public static System.IO.DirectoryInfo CreateDirectory (this System.Security.AccessControl.DirectorySecurity directorySecurity, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DirectoryInfo CreateDirectory(class System.Security.AccessControl.DirectorySecurity directorySecurity, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.CreateDirectory(System.Security.AccessControl.DirectorySecurity,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateDirectory (directorySecurity As DirectorySecurity, path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::DirectoryInfo ^ CreateDirectory(System::Security::AccessControl::DirectorySecurity ^ directorySecurity, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member CreateDirectory : System.Security.AccessControl.DirectorySecurity * string -&gt; System.IO.DirectoryInfo" Usage="System.IO.FileSystemAclExtensions.CreateDirectory (directorySecurity, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="path" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">一个对象，用于确定目录的访问控制和审核安全性。</param>
        <param name="path">要创建的目录的路径。</param>
        <summary>创建一个目录并返回该目录，确保使用指定的目录安全性创建该目录。 如果该目录已存在，则返回现有目录。</summary>
        <returns>表示已创建的目录（包含提供的安全属性）或现有目录的目录信息对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

此扩展方法已添加到 .NET Core，以引入 .NET Framework 方法提供的功能 `System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)` 。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="directorySecurity" /> 或 <paramref name="path" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">找不到路径的某一部分。</exception>
        <exception cref="T:System.UnauthorizedAccessException">对路径的访问被拒绝。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.DirectorySecurity GetAccessControl (this System.IO.DirectoryInfo directoryInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.DirectorySecurity GetAccessControl(class System.IO.DirectoryInfo directoryInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.DirectoryInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (directoryInfo As DirectoryInfo) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::IO::DirectoryInfo ^ directoryInfo);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.DirectoryInfo -&gt; System.Security.AccessControl.DirectorySecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl directoryInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">一个要从中获取安全信息的现有目录。</param>
        <summary>返回目录的安全信息。</summary>
        <returns>目录的所有访问控制部分的安全描述符。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.FileSecurity GetAccessControl (this System.IO.FileInfo fileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.FileSecurity GetAccessControl(class System.IO.FileInfo fileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (fileInfo As FileInfo) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::IO::FileInfo ^ fileInfo);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.FileInfo -&gt; System.Security.AccessControl.FileSecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl fileInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileInfo" Type="System.IO.FileInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="fileInfo">一个要从中获取安全信息的文件。</param>
        <summary>返回文件的安全信息。</summary>
        <returns>文件的所有访问控制部分的安全描述符。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.FileSecurity GetAccessControl (this System.IO.FileStream fileStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.FileSecurity GetAccessControl(class System.IO.FileStream fileStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (fileStream As FileStream) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::IO::FileStream ^ fileStream);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.FileStream -&gt; System.Security.AccessControl.FileSecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl fileStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="fileStream">一个要从中获取安全信息的现有文件。</param>
        <summary>返回文件的安全信息。</summary>
        <returns>文件的所有访问控制部分的安全描述符。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileStream" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">文件流已关闭。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.DirectorySecurity GetAccessControl (this System.IO.DirectoryInfo directoryInfo, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.DirectorySecurity GetAccessControl(class System.IO.DirectoryInfo directoryInfo, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.DirectoryInfo,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (directoryInfo As DirectoryInfo, includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::IO::DirectoryInfo ^ directoryInfo, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.DirectoryInfo * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl (directoryInfo, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" RefType="this" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">一个要从中获取安全信息的现有目录。</param>
        <param name="includeSections">要检索的必需访问控制部分。</param>
        <summary>返回目录的安全信息。</summary>
        <returns>目录的指定访问控制部分的安全描述符。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.FileSecurity GetAccessControl (this System.IO.FileInfo fileInfo, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.FileSecurity GetAccessControl(class System.IO.FileInfo fileInfo, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileInfo,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccessControl (fileInfo As FileInfo, includeSections As AccessControlSections) As FileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::AccessControl::FileSecurity ^ GetAccessControl(System::IO::FileInfo ^ fileInfo, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : System.IO.FileInfo * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.FileSecurity" Usage="System.IO.FileSystemAclExtensions.GetAccessControl (fileInfo, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileInfo" Type="System.IO.FileInfo" RefType="this" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileInfo">一个要从中获取安全信息的现有文件。</param>
        <param name="includeSections">要从文件中检索的必需访问控制部分。</param>
        <summary>返回文件的安全信息。</summary>
        <returns>文件的指定访问控制部分的安全描述符。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public static void SetAccessControl (this System.IO.DirectoryInfo directoryInfo, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessControl(class System.IO.DirectoryInfo directoryInfo, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.SetAccessControl(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetAccessControl (directoryInfo As DirectoryInfo, directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAccessControl(System::IO::DirectoryInfo ^ directoryInfo, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="static member SetAccessControl : System.IO.DirectoryInfo * System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="System.IO.FileSystemAclExtensions.SetAccessControl (directoryInfo, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryInfo" Type="System.IO.DirectoryInfo" RefType="this" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directoryInfo">一个现有目录。</param>
        <param name="directorySecurity">应用于目录的安全信息。</param>
        <summary>更改现有目录的安全属性。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="directorySecurity" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public static void SetAccessControl (this System.IO.FileInfo fileInfo, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessControl(class System.IO.FileInfo fileInfo, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.SetAccessControl(System.IO.FileInfo,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetAccessControl (fileInfo As FileInfo, fileSecurity As FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAccessControl(System::IO::FileInfo ^ fileInfo, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="static member SetAccessControl : System.IO.FileInfo * System.Security.AccessControl.FileSecurity -&gt; unit" Usage="System.IO.FileSystemAclExtensions.SetAccessControl (fileInfo, fileSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileInfo" Type="System.IO.FileInfo" RefType="this" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="fileInfo">一个现有文件。</param>
        <param name="fileSecurity">应用于文件的安全信息。</param>
        <summary>更改现有文件的安全属性。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileSecurity" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public static void SetAccessControl (this System.IO.FileStream fileStream, System.Security.AccessControl.FileSecurity fileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessControl(class System.IO.FileStream fileStream, class System.Security.AccessControl.FileSecurity fileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemAclExtensions.SetAccessControl(System.IO.FileStream,System.Security.AccessControl.FileSecurity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetAccessControl (fileStream As FileStream, fileSecurity As FileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAccessControl(System::IO::FileStream ^ fileStream, System::Security::AccessControl::FileSecurity ^ fileSecurity);" />
      <MemberSignature Language="F#" Value="static member SetAccessControl : System.IO.FileStream * System.Security.AccessControl.FileSecurity -&gt; unit" Usage="System.IO.FileSystemAclExtensions.SetAccessControl (fileStream, fileSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" RefType="this" />
        <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
      </Parameters>
      <Docs>
        <param name="fileStream">一个现有文件。</param>
        <param name="fileSecurity">应用于文件的安全信息。</param>
        <summary>更改现有文件的安全属性。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileStream" /> 或 <paramref name="fileSecurity" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">文件流已关闭。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
