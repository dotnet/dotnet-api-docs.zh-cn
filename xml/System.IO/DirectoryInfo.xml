<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9bdb0de9e87c454de3444dabe42f0223ca57d0fd" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959255" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.FileSystem" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c7ed0-101">公开用于通过目录和子目录进行创建、移动和枚举的实例方法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="c7ed0-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-103">使用 <xref:System.IO.DirectoryInfo> 类执行典型操作，例如复制、移动、重命名、创建和删除目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="c7ed0-104">如果要多次重用某个对象，请考虑使用 <xref:System.IO.DirectoryInfo> 的实例方法而不是 <xref:System.IO.Directory> 类的相应静态方法，因为不一定需要安全检查。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7ed0-105">在接受路径作为输入字符串的成员中，该路径必须格式正确，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="c7ed0-106">例如，如果路径是完全限定的，但以空格开头，则不会在类的方法中剪裁路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="c7ed0-107">因此，路径格式不正确，并引发异常。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="c7ed0-108">同样，路径或路径的组合不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="c7ed0-109">例如，在大多数情况下，"c：\temp c：\windows" 也会引发异常。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="c7ed0-110">使用接受路径字符串的方法时，请确保路径格式正确。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="c7ed0-111">在接受路径的成员中，路径可以引用文件或只引用目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="c7ed0-112">指定的路径还可以引用服务器和共享名称的相对路径或通用命名约定（UNC）路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="c7ed0-113">例如，以下所有内容都是可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="c7ed0-114">"c：\\\MyDir\\" 中C#的 "\MyFile.txt" 或 "c:\MyDir\MyFile.txt" 中的 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="c7ed0-115">Visual Basic 中的 "c：\\C#\MyDir" 或 "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="c7ed0-116">Visual Basic 中的 "MyDir\\C#\MySubdir" 或 "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="c7ed0-117">\\中的 "\\\\\\\MyServer\\C#\MyShare" 或 "Visual Basic \MyServer\MyShare"。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="c7ed0-118">默认情况下，将向所有用户授予对新目录的完全读/写访问权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="c7ed0-119">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-119">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-120">下面的示例演示了 `DirectoryInfo` 类的一些主要成员。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="c7ed0-121">下面的示例演示如何复制目录及其内容。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-122">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-122">File and Stream I/O</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-123">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-124">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file"><span data-ttu-id="c7ed0-125">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="c7ed0-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c7ed0-126">一个字符串，它指定要在其中创建 <see langword="DirectoryInfo" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="c7ed0-127">初始化指定路径上的 <see cref="T:System.IO.DirectoryInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-128">此构造函数不检查目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="c7ed0-129">此构造函数是用于在后续操作中访问磁盘的字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="c7ed0-130">`path` 参数可以是文件名，包括通用命名约定（UNC）共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c7ed0-131">使用特定的区域性设置编译一组字符并使用不同的区域性设置检索这些相同的字符时，这些字符可能不是可解释，并且可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="c7ed0-132">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-132">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-133">下面的示例使用此构造函数创建指定的目录和子目录，并演示不能删除包含子目录的目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-134"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-135">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-136"><paramref name="path" /> 包含无效字符，例如 "、&lt;、&gt; 或 |。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c7ed0-137">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-138">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-138">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-139">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-139">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-140">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-140">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-141">创建目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-141">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-142">创建目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-142">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="c7ed0-143">如果该目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-143">If the directory already exists, this method does nothing.</span></span>  

 <span data-ttu-id="c7ed0-144">如果在调用此方法之前目录不存在，则在创建成功的情况下，将刷新有关该目录的所有缓存属性信息。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-144">If the directory did not exist before calling this method, then any cached attribute information about the directory will be flushed if the creation is successful.</span></span>  
  
 <span data-ttu-id="c7ed0-145">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-145">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-146">下面的示例检查指定的目录是否存在，如果该目录不存在，则创建该目录，并删除该目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-146">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c7ed0-147">无法创建目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-147">The directory cannot be created.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-148">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-148">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-149">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-149">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-150">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-150">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="c7ed0-151">要应用于此目录的访问控制。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-151">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="c7ed0-152">使用 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象创建目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-152">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-153">使用此方法重载来创建具有访问控制的目录，因此在应用安全之前，无法访问该目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-153">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="c7ed0-154">如果该目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-154">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="c7ed0-155">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-155">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="c7ed0-156">此方法作为 `System.Security.AccessControl` 程序集的一部分，作为 `FileSystemAclExtensions` 类的扩展方法移植到 .NET Core 3.1： <xref:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)>。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-156">This method was ported to .NET Core 3.1 as an extension method of the `FileSystemAclExtensions` class as part of the `System.Security.AccessControl` assembly: <xref:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)>.</span></span>

## Examples

<span data-ttu-id="c7ed0-157">下面的代码示例使用指定的目录安全属性在用户的临时文件夹内创建一个新目录：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-157">The following code example creates a new directory inside the user's temporary folder with the specified directory security attributes:</span></span>

```csharp
using System.IO;
using System.Security.AccessControl;
using System.Security.Principal;
namespace ConsoleApp
{
    class Program
    {
        static void Main()
        {
            DirectorySecurity security = new DirectorySecurity();
            SecurityIdentifier identity = new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid, null);
            FileSystemAccessRule accessRule = new FileSystemAccessRule(identity, FileSystemRights.FullControl, AccessControlType.Allow);
            security.AddAccessRule(accessRule);
            string path = Path.Combine(Path.GetTempPath(), "directoryToCreate");
            DirectoryInfo dirInfo = new DirectoryInfo(path);
            dirInfo.Create(security);
        }
    }
}
```

 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c7ed0-158"><paramref name="path" /> 指定的目录为只读或为非空。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-158">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-159">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-159">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-160"><paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-160"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-161"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-161"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c7ed0-162">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-162">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-163">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-163">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c7ed0-164">试图创建只带冒号 (:) 字符的目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-164">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-165">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-165">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="c7ed0-166">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-166">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c7ed0-167">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-167">The specified path.</span></span> <span data-ttu-id="c7ed0-168">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-168">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="c7ed0-169">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="c7ed0-170">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-171">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-171">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-172">将创建 `path` 中指定的任何和所有目录，除非 `path` 的某个部分无效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-172">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="c7ed0-173">`path` 参数指定目录路径而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-173">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="c7ed0-174">如果子目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-174">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="c7ed0-175">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-175">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-176">下面的示例演示如何创建子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-176">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="c7ed0-177">在此示例中，创建的目录在创建后将被删除。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-177">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="c7ed0-178">因此，若要测试此示例，请在代码中注释掉删除行。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-178">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-179"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-179"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-180"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-180"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-181">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-181">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c7ed0-182">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-182">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="c7ed0-183">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-183">-or-</span></span> 
<span data-ttu-id="c7ed0-184">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-184">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c7ed0-185">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-185">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-186">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-186">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="c7ed0-187">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-187">-or-</span></span> 
<span data-ttu-id="c7ed0-188">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-188">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="c7ed0-189">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-189">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c7ed0-190"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-190"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-191">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-191">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-192">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-192">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-193">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-193">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String, directorySecurity As DirectorySecurity) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c7ed0-194">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-194">The specified path.</span></span> <span data-ttu-id="c7ed0-195">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-195">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="c7ed0-196">要应用的安全性。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-196">The security to apply.</span></span></param>
        <summary><span data-ttu-id="c7ed0-197">使用指定的安全性在指定的路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-197">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="c7ed0-198">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-198">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-199">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-199">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-200">将创建 `path` 中指定的任何和所有目录，除非 `path` 的某个部分无效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-200">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="c7ed0-201">`path` 参数指定目录路径而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-201">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="c7ed0-202">如果子目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-202">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="c7ed0-203">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-203">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-204"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-204"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-205"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-205"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-206">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-206">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c7ed0-207">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-207">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="c7ed0-208">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-208">-or-</span></span> 
<span data-ttu-id="c7ed0-209">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-209">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c7ed0-210">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-210">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-211">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-211">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="c7ed0-212">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-212">-or-</span></span> 
<span data-ttu-id="c7ed0-213">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-213">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="c7ed0-214">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-214">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c7ed0-215"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-215"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-216">从路径中删除 <see cref="T:System.IO.DirectoryInfo" /> 及其内容。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-216">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-217">如果此 <see cref="T:System.IO.DirectoryInfo" /> 为空则将其删除。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-217">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-218">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-218">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-219">如果尝试删除不为空的目录，下面的示例将引发异常。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-219">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-220">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-220">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-221">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-221">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c7ed0-222">目录不为空。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-222">The directory is not empty.</span></span>  
  
<span data-ttu-id="c7ed0-223">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-223">-or-</span></span> 
<span data-ttu-id="c7ed0-224">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-224">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="c7ed0-225">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-225">-or-</span></span> 
<span data-ttu-id="c7ed0-226">目录中存在开放句柄，并且操作系统是 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-226">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="c7ed0-227">开放句柄可能产生自枚举目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-227">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="c7ed0-228">有关详细信息，请参阅[如何：枚举目录和文件](/dotnet/standard/io/how-to-enumerate-directories-and-files)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-228">For more information, see [How to: Enumerate Directories and Files](/dotnet/standard/io/how-to-enumerate-directories-and-files).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-229">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-229">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-230">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-230">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-231">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-231">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-232">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-232">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="c7ed0-233">如果要删除此目录，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-233"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c7ed0-234">删除 <see cref="T:System.IO.DirectoryInfo" /> 的此实例，指定是否删除子目录和文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-234">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-235">如果 `DirectoryInfo` 没有文件或子目录，则即使 `recursive` `false`，此方法也会删除 `DirectoryInfo`。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-235">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="c7ed0-236">当 `recursive` `false` 时，尝试删除不为空的 `DirectoryInfo` 将引发 <xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-236">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="c7ed0-237">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-237">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-238">下面的示例演示如何删除目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-238">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="c7ed0-239">由于已删除该目录，因此请先注释掉 `Delete` 行，以测试该目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-239">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="c7ed0-240">然后取消注释同一代码行，以测试目录是否已成功删除。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-240">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-241">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-241">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-242">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-242">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c7ed0-243">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-243">The directory is read-only.</span></span>  
  
<span data-ttu-id="c7ed0-244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-244">-or-</span></span> 
<span data-ttu-id="c7ed0-245">该目录包含一个或多个文件或子目录，且 <paramref name="recursive" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-245">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="c7ed0-246">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-246">-or-</span></span> 
<span data-ttu-id="c7ed0-247">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-247">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="c7ed0-248">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-248">-or-</span></span> 
<span data-ttu-id="c7ed0-249">目录或目录的一个文件存在开放句柄，并且操作系统为 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-249">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="c7ed0-250">枚举目录和文件可能会导致此开放句柄出现。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-250">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="c7ed0-251">有关详细信息，请参阅[如何：枚举目录和文件](/dotnet/standard/io/how-to-enumerate-directories-and-files)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-251">For more information, see [How to: Enumerate Directories and Files](/dotnet/standard/io/how-to-enumerate-directories-and-files).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-252">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-252">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-253">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-253">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-254">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-254">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-255">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-255">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-256">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-256">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-257">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-257">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-258">当前目录中目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-258">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-259"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-259">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-260">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-260">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-261">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-261">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-262">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-262">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-263">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-263">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c7ed0-264">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-264">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-265">下面的示例枚举 C:\Program Files 目录下的子目录，并使用 LINQ 查询返回在2009之前创建的所有目录的名称，方法是检查 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-265">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="c7ed0-266">如果只需要子目录的名称，请使用静态 <xref:System.IO.Directory> 类以提高性能。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-266">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="c7ed0-267">有关示例，请参阅 <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-267">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-268">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-268">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-269">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-269">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-270">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-270">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c7ed0-271">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-271">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c7ed0-272">返回与指定的搜索模式匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-272">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-273">与 <paramref name="searchPattern" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-273">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-274">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-274">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-275">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-275">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-276">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-276">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-277">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-277">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-278">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-278">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-279">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-279">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-280">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-280">?</span></span> <span data-ttu-id="c7ed0-281">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-281">(question mark)</span></span>|<span data-ttu-id="c7ed0-282">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-282">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-283">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-283">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-284">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-284">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-285">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-285">".</span></span> <span data-ttu-id="c7ed0-286">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-286">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-287"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-287">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-288">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-288">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-289">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-289">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-290">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-290">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-291">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-291">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c7ed0-292">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-292">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-293"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-293"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-294">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-294">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-295">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-295">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-296">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-296">The search string to match against the names of directories.</span></span> <span data-ttu-id="c7ed0-297">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-297">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c7ed0-298">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-298">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c7ed0-299">返回与指定的搜索模式和枚举选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-299">Returns an enumerable collection of directory information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-300">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-300">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-301">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-301">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-302">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-302">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-303">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-303">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-304">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-304">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-305">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-305">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-306">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-306">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-307">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-307">?</span></span> <span data-ttu-id="c7ed0-308">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-308">(question mark)</span></span>|<span data-ttu-id="c7ed0-309">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-309">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-310">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-310">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-311">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-311">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-312">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-312">".</span></span> <span data-ttu-id="c7ed0-313">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-313">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-314"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-314">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-315">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-315">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-316">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-316">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-317">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-317">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-318">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-318">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c7ed0-319">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-319">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-320"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-320"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-321">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-321">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-322">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-322">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-323">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-323">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c7ed0-324">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-324">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c7ed0-325">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-325">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="c7ed0-326">默认值是 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-326">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="c7ed0-327">返回与指定的搜索模式和搜索子目录选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-327">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-328">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-328">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-329">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-329">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-330">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-330">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-331">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-331">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-332">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-332">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-333">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-333">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-334">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-334">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-335">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-335">?</span></span> <span data-ttu-id="c7ed0-336">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-336">(question mark)</span></span>|<span data-ttu-id="c7ed0-337">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-337">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-338">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-338">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-339">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-339">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-340">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-340">".</span></span> <span data-ttu-id="c7ed0-341">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-341">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-342"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-342">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-343">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-343">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-344">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-344">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-345">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-345">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-346">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-346">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c7ed0-347">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-347">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-348">下面的示例从指定目录开始，使用此方法和 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 方法来枚举开始目录内的文件和目录，并显示大小超过 10 MB 的任何文件的详细信息。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-348">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-349"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-349"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c7ed0-350"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-350"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-351">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-352">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-353">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-353">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-354">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-354">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-355">当前目录中的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-355">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-356"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-356">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-357">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-357">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-358">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-358">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-359">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-359">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-360">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-360">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="c7ed0-361">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-361">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-362">下面的示例将枚举指定目录下的文件，并使用 LINQ 查询返回在2009之前创建的所有文件的名称，方法是检查 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-362">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="c7ed0-363">如果只需要这些文件的名称，请使用静态 <xref:System.IO.Directory> 类以获得更好的性能。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-363">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="c7ed0-364">有关示例，请参阅 <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-364">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="c7ed0-365">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-365">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="c7ed0-366">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-366">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-367">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-367">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-368">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-368">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-369">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-369">The search string to match against the names of files.</span></span>  <span data-ttu-id="c7ed0-370">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-370">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c7ed0-371">返回与搜索模式匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-371">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-372">与 <paramref name="searchPattern" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-372">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-373">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-373">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-374">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-374">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-375">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-375">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-376">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-376">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-377">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-377">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-378">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-378">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-379">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-379">?</span></span> <span data-ttu-id="c7ed0-380">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-380">(question mark)</span></span>|<span data-ttu-id="c7ed0-381">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-381">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-382">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-382">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-383">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-383">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-384">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-384">".</span></span> <span data-ttu-id="c7ed0-385">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-385">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-386"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-386">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-387">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-387">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-388">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-388">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-389">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-389">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-390">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-390">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="c7ed0-391">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-391">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-392">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-392">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="c7ed0-393">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-393">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-394"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-394"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-395">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-395">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-396">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-396">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-397">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-397">The search string to match against the names of files.</span></span> <span data-ttu-id="c7ed0-398">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-398">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c7ed0-399">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-399">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c7ed0-400">返回与指定的搜索模式和枚举选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-400">Returns an enumerable collection of file information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-401">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-401">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-402">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-402">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-403">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-403">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-404">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-404">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-405">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-405">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-406">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-406">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-407">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-407">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-408">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-408">?</span></span> <span data-ttu-id="c7ed0-409">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-409">(question mark)</span></span>|<span data-ttu-id="c7ed0-410">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-410">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-411">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-411">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-412">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-412">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-413">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-413">".</span></span> <span data-ttu-id="c7ed0-414">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-414">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-415"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-415">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-416">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-416">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-417">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-417">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-418">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-418">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-419">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-419">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="c7ed0-420">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-420">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-421"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-421"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-422">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-422">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-423">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-423">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-424">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-424">The search string to match against the names of files.</span></span>  <span data-ttu-id="c7ed0-425">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-425">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c7ed0-426">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-426">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="c7ed0-427">默认值是 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-427">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="c7ed0-428">返回与指定的搜索模式和搜索子目录选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-428">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-429">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-429">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-430">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-430">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-431">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-431">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-432">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-432">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-433">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-433">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-434">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-434">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-435">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-435">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-436">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-436">?</span></span> <span data-ttu-id="c7ed0-437">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-437">(question mark)</span></span>|<span data-ttu-id="c7ed0-438">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-438">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-439">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-439">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-440">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-440">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-441">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-441">".</span></span> <span data-ttu-id="c7ed0-442">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-442">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-443"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-443">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-444">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-444">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-445">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-445">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-446">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-446">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-447">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-447">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="c7ed0-448">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-448">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-449">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-449">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="c7ed0-450">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-450">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-451"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-451"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c7ed0-452"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-452"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-453">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-453">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-454">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-454">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-455">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-455">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-456">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-456">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-457">当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-457">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-458"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-458">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-459">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-459">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-460">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-460">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-461">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-461">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-462">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-462">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c7ed0-463">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-463">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-464">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-464">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-465">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-465">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-466">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-466">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c7ed0-467">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-467">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c7ed0-468">返回与指定的搜索模式匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-468">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-469">与 <paramref name="searchPattern" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-469">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-470">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-470">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-471">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-471">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-472">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-472">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-473">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-473">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-474">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-474">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-475">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-475">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-476">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-476">?</span></span> <span data-ttu-id="c7ed0-477">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-477">(question mark)</span></span>|<span data-ttu-id="c7ed0-478">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-478">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-479">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-479">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-480">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-480">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-481">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-481">".</span></span> <span data-ttu-id="c7ed0-482">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-482">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-483"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-483">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-484">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-484">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-485">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-485">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-486">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-486">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-487">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-487">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c7ed0-488">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-488">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-489"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-489"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-490">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-490">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-491">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-491">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-492">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-492">The search string to match against the names of directories.</span></span> <span data-ttu-id="c7ed0-493">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-493">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c7ed0-494">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-494">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c7ed0-495">返回与指定的搜索模式和枚举选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-495">Returns an enumerable collection of file system information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-496">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-496">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-497">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-497">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-498">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-498">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-499">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-499">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-500">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-500">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-501">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-501">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-502">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-502">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-503">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-503">?</span></span> <span data-ttu-id="c7ed0-504">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-504">(question mark)</span></span>|<span data-ttu-id="c7ed0-505">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-505">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-506">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-506">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-507">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-507">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-508">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-508">".</span></span> <span data-ttu-id="c7ed0-509">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-509">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-510"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-510">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-511">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-511">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-512">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-512">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-513">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-513">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-514">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-514">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c7ed0-515">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-515">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-516"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-516"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-517">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-517">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-518">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-518">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-519">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-519">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c7ed0-520">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-520">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c7ed0-521">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-521">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="c7ed0-522">默认值是 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-522">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="c7ed0-523">返回与指定的搜索模式和搜索子目录选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-523">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-524">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-524">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-525">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-525">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-526">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-526">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-527">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-527">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-528">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-528">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-529">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-529">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-530">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-530">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-531">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-531">?</span></span> <span data-ttu-id="c7ed0-532">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-532">(question mark)</span></span>|<span data-ttu-id="c7ed0-533">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-533">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-534">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-534">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-535">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-535">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-536">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-536">".</span></span> <span data-ttu-id="c7ed0-537">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-537">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-538"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-538">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-539">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-539">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-540">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-540">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-541">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-541">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-542">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-542">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="c7ed0-543">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-543">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-544"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-544"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c7ed0-545"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-545"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-546">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-546">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-547">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-547">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7ed0-548">获取指示目录是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-548">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="c7ed0-549">如果目录存在，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-549"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-550">如果在尝试确定指定文件是否存在时出现任何错误，则 <xref:System.IO.DirectoryInfo.Exists%2A> 属性返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-550">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="c7ed0-551">这种情况可能发生在引发异常的情况，例如，传递包含无效字符或太多字符的文件名、出现故障或缺失的磁盘，或者如果调用方没有读取文件的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-551">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-552">下面的示例演示在将源目录复制到目标目录的上下文中 `Exists` 属性的用法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-552">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-553">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-553">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-554">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-554">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-555">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-555">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7ed0-556">获取目录的完整路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-556">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="c7ed0-557">包含完整目录的字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-557">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-558">获取当前目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-558">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-559">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-559">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="c7ed0-560">有关详细信息，请参阅[如何：添加或移除访问控制列表项](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-560">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-561">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-561">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-562">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装此目录的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-562">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-563">调用此方法重载等效于调用 <xref:System.IO.Directory.GetAccessControl%2A> 方法重载，并 <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> 中指定访问控制部分（<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-563">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="c7ed0-564">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-564">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="c7ed0-565">ACL 描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-565">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="c7ed0-566">有关详细信息，请参阅[如何：添加或移除访问控制列表项](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-566">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-567">下面的示例使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 和 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法在目录中添加并删除访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-567">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="c7ed0-568">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-568">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-569">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-569">The directory is read-only.</span></span>  
  
 <span data-ttu-id="c7ed0-570">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-570">-or-</span></span>  
  
 <span data-ttu-id="c7ed0-571">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-571">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="c7ed0-572">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-572">-or-</span></span>  
  
 <span data-ttu-id="c7ed0-573">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-573">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c7ed0-574">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-574">An I/O error occurred while opening the directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="c7ed0-575"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，它指定要接收的访问控制列表 (ACL) 信息的类型。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-575">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="c7ed0-576">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的指定类型的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-576">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-577">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，它封装由 <paramref name="path" /> 参数描述的文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-577">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="c7ed0-578">异常</span><span class="sxs-lookup"><span data-stu-id="c7ed0-578">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="c7ed0-579">例外狀況類型</span><span class="sxs-lookup"><span data-stu-id="c7ed0-579">Exception type</span></span> 
 </term><description> <span data-ttu-id="c7ed0-580">条件</span><span class="sxs-lookup"><span data-stu-id="c7ed0-580">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="c7ed0-581">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-581">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="c7ed0-582">当前进程不具有打开该目录的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-582">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="c7ed0-583">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-583">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="c7ed0-584">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-584">The directory is read-only.</span></span>  
  
<span data-ttu-id="c7ed0-585">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-585">-or-</span></span> 
<span data-ttu-id="c7ed0-586">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-586">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="c7ed0-587">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-587">-or-</span></span> 
<span data-ttu-id="c7ed0-588">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-588">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-589">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-589">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="c7ed0-590">ACL 描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-590">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="c7ed0-591">有关详细信息，请参阅[如何：添加或移除访问控制列表项](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-591">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-592">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-592">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-593">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-593">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-594">
          <see cref="T:System.IO.DirectoryInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-594">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-595">如果没有子目录，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-595">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="c7ed0-596">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-596">This method is not recursive.</span></span>  
  
 <span data-ttu-id="c7ed0-597">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-597">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-598">下面的示例检索根目录中的所有目录，并显示目录名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-598">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-599">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效，例如，在未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-599">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-600">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-600">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-601">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-601">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-602">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-602">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-603">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-603">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-604">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-604">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-605">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-605">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c7ed0-606">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-606">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c7ed0-607">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与给定搜索条件匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-607">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-608">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-608">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-609">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-609">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-610">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-610">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-611">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-611">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-612">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-612">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-613">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-613">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-614">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-614">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-615">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-615">?</span></span> <span data-ttu-id="c7ed0-616">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-616">(question mark)</span></span>|<span data-ttu-id="c7ed0-617">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-617">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-618">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-618">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-619">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-619">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-620">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-620">".</span></span> <span data-ttu-id="c7ed0-621">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-621">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-622">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-622">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-623">下面的示例统计包含指定字母的路径中的目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-623">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-624"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-624"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-625"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-625"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-626">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-626">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-627">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-627">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-628">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-628">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-629">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-629">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-630">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-630">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String, enumerationOptions As EnumerationOptions) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-631">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-631">The search string to match against the names of directories.</span></span> <span data-ttu-id="c7ed0-632">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-632">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c7ed0-633">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-633">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c7ed0-634">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与指定的搜索模式和枚举选项匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-634">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-635">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的 <see langword="DirectoryInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-635">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-636">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-636">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-637">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-637">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-638">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-638">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-639">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-639">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-640">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-640">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-641">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-641">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-642">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-642">?</span></span> <span data-ttu-id="c7ed0-643">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-643">(question mark)</span></span>|<span data-ttu-id="c7ed0-644">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-644">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-645">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-645">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-646">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-646">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-647">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-647">".</span></span> <span data-ttu-id="c7ed0-648">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-648">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-649">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-649">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-650"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-650"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-651"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-651"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-652">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-652">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-653">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-653">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String, searchOption As SearchOption) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-654">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-654">The search string to match against the names of directories.</span></span>  <span data-ttu-id="c7ed0-655">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-655">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c7ed0-656">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-656">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="c7ed0-657">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中目录的数组，该数组与给定的搜索条件匹配并使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-657">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-658">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-658">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-659">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-659">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-660">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-660">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-661">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-661">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-662">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-662">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-663">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-663">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-664">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-664">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-665">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-665">?</span></span> <span data-ttu-id="c7ed0-666">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-666">(question mark)</span></span>|<span data-ttu-id="c7ed0-667">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-667">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-668">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-668">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-669">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-669">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-670">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-670">".</span></span> <span data-ttu-id="c7ed0-671">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-671">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-672">如果没有子目录，或者没有与 `searchPattern` 参数匹配的子目录，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-672">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c7ed0-673">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-673">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-674">下面的示例列出了 "c：\\" 中以字母 "c" 开头的所有目录和文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-674">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-675"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-675"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-676"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-676"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c7ed0-677"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-677"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-678">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-678">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-679">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-679">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-680">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-680">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-681">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-681">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-682">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-682">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-683">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-683">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-684">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-684">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-685">一个类型为 <see cref="T:System.IO.FileInfo" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-685">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-686"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-686">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-687">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-687">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-688">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-688">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-689">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-689">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-690">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-690">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c7ed0-691">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-691">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="c7ed0-692">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-692">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-693">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-693">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="c7ed0-694">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-694">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-695">路径无效（例如，路径位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-695">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-696">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-696">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-697">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-697">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-698">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-698">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-699">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-699">The search string to match against the names of files.</span></span>  <span data-ttu-id="c7ed0-700">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-700">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c7ed0-701">返回当前目录中与给定的搜索模式匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-701">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-702">一个类型为 <see cref="T:System.IO.FileInfo" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-702">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-703">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-703">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-704">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-704">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-705">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-705">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-706">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-706">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-707">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-707">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-708">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-708">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-709">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-709">?</span></span> <span data-ttu-id="c7ed0-710">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-710">(question mark)</span></span>|<span data-ttu-id="c7ed0-711">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-711">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-712">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-712">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-713">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-713">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-714">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-714">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-715"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-715">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-716">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-716">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-717">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-717">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-718">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-718">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-719">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-719">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c7ed0-720">`searchPattern` 参数中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-720">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="c7ed0-721">通配符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-721">Wildcard character</span></span>|<span data-ttu-id="c7ed0-722">说明</span><span class="sxs-lookup"><span data-stu-id="c7ed0-722">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="c7ed0-723">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-723">Zero or more characters.</span></span>|  
|<span data-ttu-id="c7ed0-724">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-724">?</span></span>|<span data-ttu-id="c7ed0-725">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-725">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="c7ed0-726">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-726">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="c7ed0-727">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-727">Wildcards are permitted.</span></span> <span data-ttu-id="c7ed0-728">例如，`searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-728">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="c7ed0-729">`searchPattern` 字符串 "s\*" 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-729">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="c7ed0-730">如果没有文件，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-730">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7ed0-731">在 `searchPattern` 中使用星号通配符（例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-731">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="c7ed0-732">文件扩展名正好为三个字符的 `searchPattern` 返回扩展名为三个或更多字符的文件，其中前三个字符与 `searchPattern`中指定的文件扩展名相匹配。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-732">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c7ed0-733">文件扩展名为一个、两个或三个以上的字符的 `searchPattern` 仅返回扩展名正好与 `searchPattern`中指定的文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-733">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c7ed0-734">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-734">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="c7ed0-735">例如，如果一个目录中有两个文件，"file1" 和 "txtother"，则为 "file？" 的搜索模式。txt "仅返回第一个文件，而" file\*.txt "的搜索模式返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-735">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7ed0-736">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1\*.txt" 的搜索模式可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-736">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="c7ed0-737">例如，使用搜索模式 "\*1\*.txt" 将返回 "longfilename"，因为等效的8.3 文件名格式为 "longf ~ 1 .txt"。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-737">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="c7ed0-738">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-738">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-739">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-739">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="c7ed0-740">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-740">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-741"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-741"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-742"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-742"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-743">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-743">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-744">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-744">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-745">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-745">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-746">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-746">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-747">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-747">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String, enumerationOptions As EnumerationOptions) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-748">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-748">The search string to match against the names of files.</span></span> <span data-ttu-id="c7ed0-749">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-749">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c7ed0-750">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-750">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c7ed0-751">返回当前目录中与指定的搜索模式和枚举选项匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-751">Returns a file list from the current directory matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-752">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的强类型化 <see cref="T:System.IO.FileInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-752">An array of strongly typed <see cref="T:System.IO.FileInfo" /> objects that match <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-753">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-753">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-754">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-754">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-755">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-755">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-756">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-756">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-757">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-757">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-758">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-758">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-759">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-759">?</span></span> <span data-ttu-id="c7ed0-760">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-760">(question mark)</span></span>|<span data-ttu-id="c7ed0-761">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-761">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-762">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-762">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-763">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-763">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-764">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-764">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-765"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-765">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-766">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-766">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-767">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-767">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-768">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-768">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-769">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-769">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c7ed0-770">`searchPattern` 参数中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-770">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="c7ed0-771">通配符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-771">Wildcard character</span></span>|<span data-ttu-id="c7ed0-772">说明</span><span class="sxs-lookup"><span data-stu-id="c7ed0-772">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="c7ed0-773">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-773">Zero or more characters.</span></span>|  
|<span data-ttu-id="c7ed0-774">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-774">?</span></span>|<span data-ttu-id="c7ed0-775">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-775">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="c7ed0-776">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-776">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="c7ed0-777">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-777">Wildcards are permitted.</span></span> <span data-ttu-id="c7ed0-778">例如，`searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-778">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="c7ed0-779">`searchPattern` 字符串 "s\*" 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-779">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="c7ed0-780">如果没有文件，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-780">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7ed0-781">在 `searchPattern` 中使用星号通配符（例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-781">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="c7ed0-782">文件扩展名正好为三个字符的 `searchPattern` 返回扩展名为三个或更多字符的文件，其中前三个字符与 `searchPattern`中指定的文件扩展名相匹配。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-782">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c7ed0-783">文件扩展名为一个、两个或三个以上的字符的 `searchPattern` 仅返回扩展名正好与 `searchPattern`中指定的文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-783">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c7ed0-784">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-784">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="c7ed0-785">例如，如果一个目录中有两个文件，"file1" 和 "txtother"，则为 "file？" 的搜索模式。txt "仅返回第一个文件，而" file\*.txt "的搜索模式返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-785">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7ed0-786">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1\*.txt" 的搜索模式可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-786">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="c7ed0-787">例如，使用搜索模式 "\*1\*.txt" 将返回 "longfilename"，因为等效的8.3 文件名格式为 "longf ~ 1 .txt"。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-787">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="c7ed0-788">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-788">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-789"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-789"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-790"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-790"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-791">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-791">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-792">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-792">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String, searchOption As SearchOption) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-793">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-793">The search string to match against the names of files.</span></span>  <span data-ttu-id="c7ed0-794">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-794">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c7ed0-795">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-795">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="c7ed0-796">返回当前目录的文件列表，该列表与给定的搜索模式匹配并且使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-796">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-797">一个类型为 <see cref="T:System.IO.FileInfo" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-797">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-798"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-798">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="c7ed0-799">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-799">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="c7ed0-800">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-800">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="c7ed0-801">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-801">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="c7ed0-802">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-802">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c7ed0-803">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-803">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-804">通配符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-804">Wildcard character</span></span>|<span data-ttu-id="c7ed0-805">说明</span><span class="sxs-lookup"><span data-stu-id="c7ed0-805">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="c7ed0-806">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-806">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-807">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-807">Zero or more characters.</span></span>|  
|<span data-ttu-id="c7ed0-808">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-808">?</span></span> <span data-ttu-id="c7ed0-809">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-809">(question mark)</span></span>|<span data-ttu-id="c7ed0-810">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-810">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="c7ed0-811">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-811">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="c7ed0-812">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-812">Wildcards are permitted.</span></span> <span data-ttu-id="c7ed0-813">例如，`searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-813">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="c7ed0-814">`searchPattern` 字符串 "s\*" 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-814">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="c7ed0-815">如果没有文件，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-815">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7ed0-816">在 `searchPattern` 中使用星号通配符（例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-816">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="c7ed0-817">文件扩展名正好为三个字符的 `searchPattern` 返回扩展名为三个或更多字符的文件，其中前三个字符与 `searchPattern`中指定的文件扩展名相匹配。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-817">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c7ed0-818">文件扩展名为一个、两个或三个以上的字符的 `searchPattern` 仅返回扩展名正好与 `searchPattern`中指定的文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-818">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="c7ed0-819">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-819">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="c7ed0-820">例如，如果一个目录中有两个文件，"file1" 和 "txtother"，则为 "file？" 的搜索模式。txt "仅返回第一个文件，而" file\*.txt "的搜索模式返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-820">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="c7ed0-821">以下列表显示 `searchPattern` 参数的不同长度的行为：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-821">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="c7ed0-822">"\* abc" 返回扩展名为 abc、. abcd、. abcde...z、. abcdef 的文件，依此类推。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-822">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="c7ed0-823">"\* abcd" 仅返回扩展名为 abcd 的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-823">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="c7ed0-824">"\* abcde...z" 只返回扩展名为 abcde...z 的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-824">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="c7ed0-825">"\* abcdef" 只返回扩展名为 abcdef 的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-825">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7ed0-826">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1\*.txt" 的搜索模式可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-826">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="c7ed0-827">例如，使用搜索模式 "\*1\*.txt" 将返回 "longfilename"，因为等效的8.3 文件名格式为 "longf ~ 1 .txt"。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-827">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="c7ed0-828">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-828">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-829">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-829">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="c7ed0-830">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-830">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-831"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-831"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-832"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-832"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c7ed0-833"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-833"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-834">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-834">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-835">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-835">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-836">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-836">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-837">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-837">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-838">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-838">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7ed0-839">检索表示当前目录的文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-839">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-840">返回表示某个目录中所有文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-840">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-841">强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-841">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-842">如果 <xref:System.IO.DirectoryInfo>中没有文件或目录，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-842">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="c7ed0-843">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-843">This method is not recursive.</span></span>  
  
 <span data-ttu-id="c7ed0-844">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-844">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="c7ed0-845">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-845">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="c7ed0-846">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-846">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-847">下面的示例对指定目录下的文件和目录进行计数。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-847">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-848">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-848">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-849">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-849">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-850">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-850">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-851">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-851">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-852">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-852">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="c7ed0-853">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-853">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="c7ed0-854">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-854">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-855">与搜索条件匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-855">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-856">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-856">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-857">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-857">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-858">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-858">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-859">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-859">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-860">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-860">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-861">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-861">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-862">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-862">?</span></span> <span data-ttu-id="c7ed0-863">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-863">(question mark)</span></span>|<span data-ttu-id="c7ed0-864">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-864">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-865">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-865">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-866">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-866">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-867">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-867">".</span></span> <span data-ttu-id="c7ed0-868">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-868">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-869">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-869">This method is not recursive.</span></span>  
  
 <span data-ttu-id="c7ed0-870">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-870">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="c7ed0-871">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-871">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="c7ed0-872">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-872">Wild cards are permitted.</span></span> <span data-ttu-id="c7ed0-873">例如，`searchPattern` 字符串 "\*t" 搜索 `path` 以字母 "t" 结尾的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-873">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-874">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-874">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-875">如果将字符串 ".." 指定为有效目录名称的一部分（例如目录名称 "a."），则只能在 `searchPattern` 中使用该字符串。b "。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-875">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="c7ed0-876">它不能用来向上移动目录层次结构。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-876">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="c7ed0-877">如果没有文件或目录，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件或目录，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-877">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c7ed0-878">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-878">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-879">下面的示例计算与指定的搜索模式匹配的文件和目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-879">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-880"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-880"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-881"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-881"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-882">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-882">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-883">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-883">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-884">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-884">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-885">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-885">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-886">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-886">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String, enumerationOptions As EnumerationOptions) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-887">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-887">The search string to match against the names of directories and files.</span></span> <span data-ttu-id="c7ed0-888">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-888">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="c7ed0-889">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-889">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="c7ed0-890">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，这些对象表示与指定的搜索模式和枚举选项匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-890">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-891">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-891">An array of strongly typed <see langword="FileSystemInfo" /> objects matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-892">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-892">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-893">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-893">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-894">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-894">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-895">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-895">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-896">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-896">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-897">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-897">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-898">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-898">?</span></span> <span data-ttu-id="c7ed0-899">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-899">(question mark)</span></span>|<span data-ttu-id="c7ed0-900">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-900">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-901">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-901">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-902">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-902">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-903">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-903">".</span></span> <span data-ttu-id="c7ed0-904">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-904">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-905">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-905">This method is not recursive.</span></span>  
  
 <span data-ttu-id="c7ed0-906">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-906">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="c7ed0-907">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-907">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="c7ed0-908">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-908">Wild cards are permitted.</span></span> <span data-ttu-id="c7ed0-909">例如，`searchPattern` 字符串 "\*t" 搜索 `path` 以字母 "t" 结尾的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-909">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-910">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-910">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-911">如果将字符串 ".." 指定为有效目录名称的一部分（例如目录名称 "a."），则只能在 `searchPattern` 中使用该字符串。b "。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-911">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="c7ed0-912">它不能用来向上移动目录层次结构。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-912">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="c7ed0-913">如果没有文件或目录，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件或目录，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-913">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="c7ed0-914">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-914">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-915"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-915"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-916"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-916"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-917">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-917">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-918">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-918">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String, searchOption As SearchOption) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="c7ed0-919">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-919">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="c7ed0-920">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-920">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="c7ed0-921">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-921">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="c7ed0-922">默认值是 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-922">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="c7ed0-923">检索 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-923">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-924">与搜索条件匹配的文件系统项的数组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-924">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-925">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-925">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="c7ed0-926">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-926">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="c7ed0-927">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="c7ed0-927">Wildcard specifier</span></span>|<span data-ttu-id="c7ed0-928">匹配</span><span class="sxs-lookup"><span data-stu-id="c7ed0-928">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="c7ed0-929">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-929">\* (asterisk)</span></span>|<span data-ttu-id="c7ed0-930">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-930">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="c7ed0-931">?</span><span class="sxs-lookup"><span data-stu-id="c7ed0-931">?</span></span> <span data-ttu-id="c7ed0-932">（问号）</span><span class="sxs-lookup"><span data-stu-id="c7ed0-932">(question mark)</span></span>|<span data-ttu-id="c7ed0-933">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-933">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="c7ed0-934">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-934">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="c7ed0-935">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-935">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="c7ed0-936">也即“”。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-936">".</span></span> <span data-ttu-id="c7ed0-937">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-937">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="c7ed0-938">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-938">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="c7ed0-939">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-939">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="c7ed0-940">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-940">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-941"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-941"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-942"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-942"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c7ed0-943"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-943"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-944">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-944">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-945">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-945">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="c7ed0-946">要将此目录移动到的目标位置的名称和路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-946">The name and path to which to move this directory.</span></span> <span data-ttu-id="c7ed0-947">目标不能是另一个具有相同名称的磁盘卷或目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-947">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="c7ed0-948">它可以是你要将此目录作为子目录添加到某个现有目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-948">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="c7ed0-949">将 <see cref="T:System.IO.DirectoryInfo" /> 实例及其内容移动到新路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-949">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-950">例如，如果尝试将 c:\mydir 移动到 c:\public，并且 c:\public 已存在，则此方法会引发 <xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-950">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="c7ed0-951">必须将 "c：\\\ 公用\\\mydir" 指定为 `destDirName` 参数，或指定新目录名称，如 "c：\\\newdir"。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-951">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="c7ed0-952">此方法允许将目录移动到只读目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-952">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="c7ed0-953">不会影响两个目录的读/写属性。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-953">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="c7ed0-954">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-954">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-955">下面的示例演示如何移动目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-955">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-956"><paramref name="destDirName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-956"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7ed0-957"><paramref name="destDirName" /> 是一个空字符串 (''")。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-957"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="c7ed0-958">尝试将目录移动到不同的卷。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-958">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="c7ed0-959">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-959">-or-</span></span> 
 <span data-ttu-id="c7ed0-960"><paramref name="destDirName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-960"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="c7ed0-961">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-961">-or-</span></span> 
<span data-ttu-id="c7ed0-962">你没有访问此路径的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-962">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="c7ed0-963">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c7ed0-963">-or-</span></span> 
<span data-ttu-id="c7ed0-964">要移动的目录和目标目录具有相同的名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-964">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-965">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-965">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="c7ed0-966">找不到目标目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-966">The destination directory cannot be found.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-967">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-967">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-968">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-968">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-969">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-969">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7ed0-970">获取此 <see cref="T:System.IO.DirectoryInfo" /> 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-970">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="c7ed0-971">目录名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-971">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-972">此 <xref:System.IO.DirectoryInfo.Name%2A> 属性仅返回目录的名称，如 "Bin"。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-972">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="c7ed0-973">若要获取完整路径（例如 "c:\public\Bin"），请使用 <xref:System.IO.FileSystemInfo.FullName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-973">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="c7ed0-974"><xref:System.IO.DirectoryInfo> 的 <xref:System.IO.DirectoryInfo.Name%2A> 属性无需权限（除了对构造 <xref:System.IO.DirectoryInfo.Exists%2A>所需的目录的读取权限），但可以指定目录名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-974">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="c7ed0-975">如果需要使用加密的安全名称将 <xref:System.IO.DirectoryInfo> 分发到受保护的目录，请为不受信任的代码使用创建虚拟目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-975">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="c7ed0-976">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-976">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-977">下面的示例仅显示当前 `DirectoryInfo` 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-977">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-978">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-978">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-979">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-979">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-980">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-980">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7ed0-981">获取指定的子目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-981">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="c7ed0-982">父目录; 如果路径为 null 或文件路径表示根（如 `\`、`C:\`或 `\\server\share`，则 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-982">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as `\`, `C:\`, or `\\server\share`).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="c7ed0-983">在 .NET Framework 中，`Parent` 返回相对路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-983">In .NET Framework, `Parent` returns a relative path.</span></span>
> <span data-ttu-id="c7ed0-984">在 .NET Core 中，`Parent` 返回完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-984">In .NET Core, `Parent` returns a fully qualified path.</span></span>

<span data-ttu-id="c7ed0-985">若要确保各个版本之间的行为一致，并使意向明确，请在 `Parent`返回的 <xref:System.IO.DirectoryInfo> 实例上检索以下某个属性的值。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-985">To ensure consistent behavior across versions and to make your intent explicit, retrieve the value of one of the following properties on the <xref:System.IO.DirectoryInfo> instance returned by `Parent`.</span></span>
- <span data-ttu-id="c7ed0-986"><xref:System.IO.DirectoryInfo.Name>，它返回目录的简单名称（如 `bin`）。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-986"><xref:System.IO.DirectoryInfo.Name>, which returns the simple name of the directory (such as `bin`).</span></span>
- <span data-ttu-id="c7ed0-987"><xref:System.IO.DirectoryInfo.FullName>，它返回目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-987"><xref:System.IO.DirectoryInfo.FullName>, which returns the absolute path of the directory.</span></span> 


<span data-ttu-id="c7ed0-988">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-988">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>


## Examples

<span data-ttu-id="c7ed0-989">下面的示例引用指定目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-989">The following example refers to the parent directory of a specified directory.</span></span>

[!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
[!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
[!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-990">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-990">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-991">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-991">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-992">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-992">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-993">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-993">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7ed0-994">获取目录的根部分。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-994">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="c7ed0-995">一个表示目录的根目录的对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-995">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c7ed0-996">下面的示例显示指定目录的根位置。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-996">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7ed0-997">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-997">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-998">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-998">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-999">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-999">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-1000">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1000">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="c7ed0-1001">一个对象，描述要应用于 <paramref name="path" /> 参数所描述的目录的 ACL 项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1001">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="c7ed0-1002">将 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1002">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7ed0-1003">访问控制列表（ACL）描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1003">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="c7ed0-1004">有关详细信息，请参阅[如何：添加或移除访问控制列表项](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1004">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 <span data-ttu-id="c7ed0-1005"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法将 ACL 项应用于表示 noninherited ACL 列表的文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1005">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c7ed0-1006">为 `directorySecurity` 指定的 ACL 将替换目录的现有 ACL。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1006">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="c7ed0-1007">若要为新用户添加权限，请使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法获取现有 ACL，并修改该 ACL。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1007">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="c7ed0-1008"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法仅保留在对象创建后修改的 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1008">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="c7ed0-1009">如果 <xref:System.Security.AccessControl.DirectorySecurity> 对象尚未修改，则不会将其保存到文件中。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1009">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="c7ed0-1010">因此，无法从一个文件中检索 <xref:System.Security.AccessControl.DirectorySecurity> 的对象，并将相同的对象重新应用到另一个文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1010">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="c7ed0-1011">若要将 ACL 信息从一个文件复制到另一个文件：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1011">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="c7ed0-1012">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法可以从源文件中检索 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1012">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="c7ed0-1013">为目标文件创建新的 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1013">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="c7ed0-1014">使用源 <xref:System.Security.AccessControl.DirectorySecurity> 对象的 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> 或 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> 方法来检索 ACL 信息。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1014">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="c7ed0-1015">使用 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> 或 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> 方法将在步骤3中检索到的信息复制到目标 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1015">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="c7ed0-1016">使用 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法将目标 <xref:System.Security.AccessControl.DirectorySecurity> 对象设置为目标文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1016">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7ed0-1017">下面的示例使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 和 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法在目录中添加并删除访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1017">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7ed0-1018">
          <paramref name="directorySecurity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1018">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="c7ed0-1019">未能找到或修改该文件。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1019">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c7ed0-1020">当前进程不具有打开该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1020">The current process does not have access to open the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7ed0-1021">返回传递给 <see cref="T:System.IO.DirectoryInfo" /> 构造函数的原始路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1021">Returns the original path that was passed to the <see cref="T:System.IO.DirectoryInfo" /> constructor.</span></span> <span data-ttu-id="c7ed0-1022">使用 <see cref="P:System.IO.DirectoryInfo.FullName" /> 或 <see cref="P:System.IO.DirectoryInfo.Name" /> 属性作为完整路径或文件/目录名，而不是此方法。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1022">Use the <see cref="P:System.IO.DirectoryInfo.FullName" /> or <see cref="P:System.IO.DirectoryInfo.Name" /> properties for the full path or file/directory name instead of this method.</span></span></summary>
        <returns><span data-ttu-id="c7ed0-1023">用户所传递的原始路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1023">The original path that was passed by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="c7ed0-1024"><xref:System.IO.DirectoryInfo.ToString%2A> 方法返回的字符串表示传递到 <xref:System.IO.DirectoryInfo> 构造函数的路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1024">The string returned by the <xref:System.IO.DirectoryInfo.ToString%2A> method represents the path that was passed to the <xref:System.IO.DirectoryInfo> constructor.</span></span> <span data-ttu-id="c7ed0-1025">你应根据你的意图检索以下任一属性的值，而不是调用 `ToString` 方法：</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1025">Instead of calling the `ToString` method, you should retrieve the value of either of the following properties, depending on your intent:</span></span>
> - <span data-ttu-id="c7ed0-1026"><xref:System.IO.DirectoryInfo.Name>，获取目录的名称，而不包含任何父路径信息。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1026"><xref:System.IO.DirectoryInfo.Name>, to get the name of the directory, without any parent path information.</span></span>
> - <span data-ttu-id="c7ed0-1027"><xref:System.IO.DirectoryInfo.FullName>，获取目录的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1027"><xref:System.IO.DirectoryInfo.FullName>, to get the fully qualified path of the directory.</span></span>

          ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="c7ed0-1028">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1028">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="c7ed0-1029">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1029">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="c7ed0-1030">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="c7ed0-1030">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
