<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5b3094d7498e912539743c1e304e7d7f5bf77c4" /><Meta Name="ms.sourcegitcommit" Value="3001e6bfbacb09c47be86e2ade5b0c2bd91bb0cb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/31/2020" /><Meta Name="ms.locfileid" Value="87467000" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.FileSystem" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="734b3-101">公开用于创建、移动和枚举目录和子目录的实例方法。</span><span class="sxs-lookup"><span data-stu-id="734b3-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="734b3-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="734b3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-103">使用 <xref:System.IO.DirectoryInfo> 类执行典型操作，例如复制、移动、重命名、创建和删除目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="734b3-104">如果要多次重用某个对象，请考虑使用的实例方法（而不是 <xref:System.IO.DirectoryInfo> 类的相应静态方法 <xref:System.IO.Directory> ），因为安全检查并不总是必需的。</span><span class="sxs-lookup"><span data-stu-id="734b3-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="734b3-105">在接受路径作为输入字符串的成员中，该路径必须格式正确，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="734b3-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="734b3-106">例如，如果路径是完全限定的，但以空格开头，则不会在类的方法中剪裁路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="734b3-107">因此，路径格式不正确，并引发异常。</span><span class="sxs-lookup"><span data-stu-id="734b3-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="734b3-108">同样，路径或路径的组合不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="734b3-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="734b3-109">例如，在大多数情况下，"c：\temp c：\windows" 也会引发异常。</span><span class="sxs-lookup"><span data-stu-id="734b3-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="734b3-110">使用接受路径字符串的方法时，请确保路径格式正确。</span><span class="sxs-lookup"><span data-stu-id="734b3-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="734b3-111">在接受路径的成员中，路径可以引用文件或只引用目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="734b3-112">指定的路径还可以引用服务器和共享名称的相对路径或通用命名约定（UNC）路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="734b3-113">例如，以下所有内容都是可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="734b3-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="734b3-114">c # 中的 "c： \\ \MyDir \\\MyFile.txt" 或 Visual Basic 中的 "c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="734b3-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="734b3-115">c # 中的 "c： \\ \MyDir" 或 Visual Basic 中的 "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="734b3-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="734b3-116">Visual Basic 中的 "MyDir \\ \MySubdir" 或 "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="734b3-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="734b3-117">\\ \\ \\ Visual Basic 中的 "\MyServer \\ \MyShare" 或 " \\ \MyServer\MyShare"。</span><span class="sxs-lookup"><span data-stu-id="734b3-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="734b3-118">默认情况下，将向所有用户授予对新目录的完全读/写访问权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="734b3-119">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-119">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-120">下面的示例演示了类的一些主要成员 `DirectoryInfo` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="734b3-121">下面的示例演示如何复制目录及其内容。</span><span class="sxs-lookup"><span data-stu-id="734b3-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-122">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-122">File and Stream I/O</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-123">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-124">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file"><span data-ttu-id="734b3-125">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="734b3-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="734b3-126">一个字符串，它指定要在其中创建 <see langword="DirectoryInfo" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="734b3-127">初始化指定路径上的 <see cref="T:System.IO.DirectoryInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="734b3-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-128">此构造函数不检查目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="734b3-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="734b3-129">此构造函数是用于在后续操作中访问磁盘的字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="734b3-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="734b3-130">`path`参数可以是文件名，包括通用命名约定（UNC）共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="734b3-131">使用特定的区域性设置编译一组字符并使用不同的区域性设置检索这些相同的字符时，这些字符可能不是可解释，并且可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="734b3-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="734b3-132">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-132">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-133">下面的示例使用此构造函数创建指定的目录和子目录，并演示不能删除包含子目录的目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-134"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-135">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-136"><paramref name="path" /> 包含无效字符，例如 "、&lt;、&gt; 或 |。</span><span class="sxs-lookup"><span data-stu-id="734b3-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="734b3-137">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="734b3-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-138">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-138">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-139">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-139">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-140">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-140">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-141">创建目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-141">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-142">创建目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-142">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="734b3-143">如果该目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="734b3-143">If the directory already exists, this method does nothing.</span></span>  

 <span data-ttu-id="734b3-144">如果在调用此方法之前目录不存在，则在创建成功的情况下，将刷新有关该目录的所有缓存属性信息。</span><span class="sxs-lookup"><span data-stu-id="734b3-144">If the directory did not exist before calling this method, then any cached attribute information about the directory will be flushed if the creation is successful.</span></span>  
  
 <span data-ttu-id="734b3-145">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-145">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>
  
## Examples  
 <span data-ttu-id="734b3-146">下面的示例检查指定的目录是否存在，如果该目录不存在，则创建该目录，并删除该目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-146">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-147">无法创建目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-147">The directory cannot be created.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-148">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-148">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-149">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-149">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-150">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-150">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="734b3-151">要应用于此目录的访问控制。</span><span class="sxs-lookup"><span data-stu-id="734b3-151">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="734b3-152">使用 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象创建目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-152">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-153">使用此方法重载来创建具有访问控制的目录，因此在应用安全之前，无法访问该目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-153">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="734b3-154">如果该目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="734b3-154">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="734b3-155">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-155">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="734b3-156">此方法作为程序集的一部分，作为类的扩展方法移植到 .NET Core 3.1 `FileSystemAclExtensions` `System.Security.AccessControl` ： <xref:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-156">This method was ported to .NET Core 3.1 as an extension method of the `FileSystemAclExtensions` class as part of the `System.Security.AccessControl` assembly: <xref:System.IO.FileSystemAclExtensions.Create(System.IO.DirectoryInfo,System.Security.AccessControl.DirectorySecurity)>.</span></span>

## Examples

<span data-ttu-id="734b3-157">下面的代码示例使用指定的目录安全属性在用户的临时文件夹内创建一个新目录：</span><span class="sxs-lookup"><span data-stu-id="734b3-157">The following code example creates a new directory inside the user's temporary folder with the specified directory security attributes:</span></span>

```csharp
using System.IO;
using System.Security.AccessControl;
using System.Security.Principal;
namespace ConsoleApp
{
    class Program
    {
        static void Main()
        {
            DirectorySecurity security = new DirectorySecurity();
            SecurityIdentifier identity = new SecurityIdentifier(WellKnownSidType.BuiltinUsersSid, null);
            FileSystemAccessRule accessRule = new FileSystemAccessRule(identity, FileSystemRights.FullControl, AccessControlType.Allow);
            security.AddAccessRule(accessRule);
            string path = Path.Combine(Path.GetTempPath(), "directoryToCreate");
            DirectoryInfo dirInfo = new DirectoryInfo(path);
            dirInfo.Create(security);
        }
    }
}
```

 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-158"><paramref name="path" /> 指定的目录为只读或为非空。</span><span class="sxs-lookup"><span data-stu-id="734b3-158">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-159">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-159">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-160"><paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-160"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-161"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-161"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="734b3-162">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="734b3-162">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-163">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="734b3-163">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="734b3-164">试图创建只带冒号 (:) 字符的目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-164">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-165">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-165">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="734b3-166">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-166">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="734b3-167">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-167">The specified path.</span></span> <span data-ttu-id="734b3-168">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-168">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="734b3-169">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="734b3-170">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="734b3-171">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-171">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-172">创建中指定的任何和所有目录 `path` ，除非的某些部分 `path` 无效。</span><span class="sxs-lookup"><span data-stu-id="734b3-172">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="734b3-173">`path`参数指定目录路径而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-173">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="734b3-174">如果子目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="734b3-174">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="734b3-175">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-175">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-176">下面的示例演示如何创建子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-176">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="734b3-177">在此示例中，创建的目录在创建后将被删除。</span><span class="sxs-lookup"><span data-stu-id="734b3-177">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="734b3-178">因此，若要测试此示例，请在代码中注释掉删除行。</span><span class="sxs-lookup"><span data-stu-id="734b3-178">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-179"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-179"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-180"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-180"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-181">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="734b3-181">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-182">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-182">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="734b3-183">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-183">-or-</span></span> 
<span data-ttu-id="734b3-184">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-184">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="734b3-185">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="734b3-185">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-186">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-186">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="734b3-187">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-187">-or-</span></span> 
<span data-ttu-id="734b3-188">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-188">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="734b3-189">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="734b3-189">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="734b3-190"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="734b3-190"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-191">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-191">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-192">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-192">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-193">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-193">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String, directorySecurity As DirectorySecurity) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="734b3-194">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-194">The specified path.</span></span> <span data-ttu-id="734b3-195">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-195">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="734b3-196">要应用的安全性。</span><span class="sxs-lookup"><span data-stu-id="734b3-196">The security to apply.</span></span></param>
        <summary><span data-ttu-id="734b3-197">使用指定的安全性在指定的路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-197">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="734b3-198">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-198">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="734b3-199">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-199">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-200">创建中指定的任何和所有目录 `path` ，除非的某些部分 `path` 无效。</span><span class="sxs-lookup"><span data-stu-id="734b3-200">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="734b3-201">`path`参数指定目录路径而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-201">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="734b3-202">如果子目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="734b3-202">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="734b3-203">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-203">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-204"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-204"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-205"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-205"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-206">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="734b3-206">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-207">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-207">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="734b3-208">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-208">-or-</span></span> 
<span data-ttu-id="734b3-209">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-209">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="734b3-210">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="734b3-210">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-211">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-211">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="734b3-212">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-212">-or-</span></span> 
<span data-ttu-id="734b3-213">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-213">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="734b3-214">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="734b3-214">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="734b3-215"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="734b3-215"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-216">从路径中删除 <see cref="T:System.IO.DirectoryInfo" /> 及其内容。</span><span class="sxs-lookup"><span data-stu-id="734b3-216">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-217">如果此 <see cref="T:System.IO.DirectoryInfo" /> 为空则将其删除。</span><span class="sxs-lookup"><span data-stu-id="734b3-217">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-218">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-218">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-219">如果尝试删除不为空的目录，下面的示例将引发异常。</span><span class="sxs-lookup"><span data-stu-id="734b3-219">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-220">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-220">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-221">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="734b3-221">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-222">目录不为空。</span><span class="sxs-lookup"><span data-stu-id="734b3-222">The directory is not empty.</span></span>  
  
<span data-ttu-id="734b3-223">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-223">-or-</span></span> 
<span data-ttu-id="734b3-224">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-224">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="734b3-225">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-225">-or-</span></span> 
<span data-ttu-id="734b3-226">对于目录有打开句柄，并且操作系统是 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="734b3-226">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="734b3-227">开放句柄可能产生自枚举目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-227">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="734b3-228">有关详细信息，请参阅[如何：枚举目录和文件](/dotnet/standard/io/how-to-enumerate-directories-and-files)。</span><span class="sxs-lookup"><span data-stu-id="734b3-228">For more information, see [How to: Enumerate Directories and Files](/dotnet/standard/io/how-to-enumerate-directories-and-files).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-229">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-229">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-230">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-230">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-231">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-231">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-232">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-232">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="734b3-233">如果要删除此目录，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-233"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="734b3-234">删除 <see cref="T:System.IO.DirectoryInfo" /> 的此实例，指定是否删除子目录和文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-234">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-235">如果没有 `DirectoryInfo` 任何文件或子目录，则此方法会删除， `DirectoryInfo` 即使 `recursive` 为时也是如此 `false` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-235">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="734b3-236">`DirectoryInfo`当引发时，尝试删除不为空 `recursive` 的 `false` <xref:System.IO.IOException> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-236">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="734b3-237">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-237">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-238">下面的示例演示如何删除目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-238">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="734b3-239">由于已删除该目录，因此先注释掉 `Delete` 该行以测试该目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="734b3-239">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="734b3-240">然后取消注释同一代码行，以测试目录是否已成功删除。</span><span class="sxs-lookup"><span data-stu-id="734b3-240">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-241">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-241">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-242">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="734b3-242">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-243">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="734b3-243">The directory is read-only.</span></span>  
  
<span data-ttu-id="734b3-244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-244">-or-</span></span> 
<span data-ttu-id="734b3-245">此目录包含一个或多个文件或子目录，且 <paramref name="recursive" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-245">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="734b3-246">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-246">-or-</span></span> 
<span data-ttu-id="734b3-247">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-247">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="734b3-248">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-248">-or-</span></span> 
<span data-ttu-id="734b3-249">对于目录或其文件之一有打开句柄，并且操作系统是 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="734b3-249">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="734b3-250">枚举目录和文件可能会导致此开放句柄出现。</span><span class="sxs-lookup"><span data-stu-id="734b3-250">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="734b3-251">有关详细信息，请参阅[如何：枚举目录和文件](/dotnet/standard/io/how-to-enumerate-directories-and-files)。</span><span class="sxs-lookup"><span data-stu-id="734b3-251">For more information, see [How to: Enumerate Directories and Files](/dotnet/standard/io/how-to-enumerate-directories-and-files).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-252">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-252">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-253">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-253">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-254">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-254">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-255">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-255">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-256">返回当前目录中的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-256">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-257">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-257">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="734b3-258">当前目录中目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-258">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-259"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-259">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-260">使用时 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> ，你可以在 <xref:System.IO.DirectoryInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-260">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-261">使用时 <xref:System.IO.DirectoryInfo.GetDirectories%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.DirectoryInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-261">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-262">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-262">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-263">此方法预先填充以下属性的值 <xref:System.IO.DirectoryInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-263">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="734b3-264">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-264">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-265">下面的示例枚举 C:\Program Files 目录下的子目录，并使用 LINQ 查询返回在2009之前创建的所有目录的名称，方法是检查属性的值 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-265">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="734b3-266">如果只需要子目录的名称，请使用静态类 <xref:System.IO.Directory> 以提高性能。</span><span class="sxs-lookup"><span data-stu-id="734b3-266">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="734b3-267">有关示例，请参见 <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="734b3-267">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-268">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-268">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-269">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-269">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-270">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-270">The search string to match against the names of directories.</span></span>  <span data-ttu-id="734b3-271">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-271">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="734b3-272">返回与指定的搜索模式匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-272">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="734b3-273">与 <paramref name="searchPattern" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-273">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-274">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-274">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-275">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-275">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-276">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-276">Wildcard specifier</span></span>|<span data-ttu-id="734b3-277">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-277">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-278">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-278">\* (asterisk)</span></span>|<span data-ttu-id="734b3-279">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-279">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-280">?</span><span class="sxs-lookup"><span data-stu-id="734b3-280">?</span></span> <span data-ttu-id="734b3-281">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-281">(question mark)</span></span>|<span data-ttu-id="734b3-282">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-282">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-283">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-283">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-284">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-284">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-285">".</span><span class="sxs-lookup"><span data-stu-id="734b3-285">".</span></span> <span data-ttu-id="734b3-286">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-286">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-287"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-287">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-288">使用时 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> ，你可以在 <xref:System.IO.DirectoryInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-288">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-289">使用时 <xref:System.IO.DirectoryInfo.GetDirectories%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.DirectoryInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-289">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-290">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-290">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-291">此方法预先填充以下属性的值 <xref:System.IO.DirectoryInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-291">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="734b3-292">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-292">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-293"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-293"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-294">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-294">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-295">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-295">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-296">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-296">The search string to match against the names of directories.</span></span> <span data-ttu-id="734b3-297">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-297">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="734b3-298">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-298">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="734b3-299">返回与指定的搜索模式和枚举选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-299">Returns an enumerable collection of directory information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="734b3-300">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-300">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-301">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-301">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-302">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-302">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-303">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-303">Wildcard specifier</span></span>|<span data-ttu-id="734b3-304">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-304">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-305">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-305">\* (asterisk)</span></span>|<span data-ttu-id="734b3-306">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-306">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-307">?</span><span class="sxs-lookup"><span data-stu-id="734b3-307">?</span></span> <span data-ttu-id="734b3-308">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-308">(question mark)</span></span>|<span data-ttu-id="734b3-309">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-309">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-310">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-310">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-311">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-311">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-312">".</span><span class="sxs-lookup"><span data-stu-id="734b3-312">".</span></span> <span data-ttu-id="734b3-313">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-313">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-314"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-314">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-315">使用时 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> ，你可以在 <xref:System.IO.DirectoryInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-315">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-316">使用时 <xref:System.IO.DirectoryInfo.GetDirectories%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.DirectoryInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-316">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-317">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-317">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-318">此方法预先填充以下属性的值 <xref:System.IO.DirectoryInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-318">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="734b3-319">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-319">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-320"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-320"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-321">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-321">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-322">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-322">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-323">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-323">The search string to match against the names of directories.</span></span>  <span data-ttu-id="734b3-324">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-324">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="734b3-325">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="734b3-325">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="734b3-326">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-326">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="734b3-327">返回与指定的搜索模式和搜索子目录选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-327">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="734b3-328">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-328">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-329">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-329">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-330">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-330">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-331">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-331">Wildcard specifier</span></span>|<span data-ttu-id="734b3-332">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-332">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-333">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-333">\* (asterisk)</span></span>|<span data-ttu-id="734b3-334">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-334">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-335">?</span><span class="sxs-lookup"><span data-stu-id="734b3-335">?</span></span> <span data-ttu-id="734b3-336">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-336">(question mark)</span></span>|<span data-ttu-id="734b3-337">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-337">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-338">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-338">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-339">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-339">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-340">".</span><span class="sxs-lookup"><span data-stu-id="734b3-340">".</span></span> <span data-ttu-id="734b3-341">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-341">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-342"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-342">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-343">使用时 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> ，你可以在 <xref:System.IO.DirectoryInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-343">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-344">使用时 <xref:System.IO.DirectoryInfo.GetDirectories%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.DirectoryInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-344">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-345">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-345">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-346">此方法预先填充以下属性的值 <xref:System.IO.DirectoryInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-346">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="734b3-347">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-347">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-348">下面的示例使用此方法和 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 方法来枚举开始目录内的文件和目录，并显示 10 MB 以上的所有文件的名称和大小。</span><span class="sxs-lookup"><span data-stu-id="734b3-348">The following example uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display the name and size of any files over 10 MB.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-349"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-349"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="734b3-350"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="734b3-350"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-351">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-352">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-353">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-353">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-354">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-354">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="734b3-355">当前目录中的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-355">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-356"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-356">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-357">使用时 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> ，你可以在 <xref:System.IO.FileInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-357">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-358">使用时 <xref:System.IO.DirectoryInfo.GetFiles%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-358">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-359">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-359">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-360">此方法预先填充以下属性的值 <xref:System.IO.FileInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-360">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="734b3-361">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-361">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-362">下面的示例将枚举指定目录下的文件，并使用 LINQ 查询返回在2009之前创建的所有文件的名称，方法是检查属性的值 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-362">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="734b3-363">如果只需要这些文件的名称，请使用静态类 <xref:System.IO.Directory> 以提高性能。</span><span class="sxs-lookup"><span data-stu-id="734b3-363">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="734b3-364">有关示例，请参见 <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="734b3-364">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="734b3-365">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-365">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="734b3-366">该示例假设有一个目录，其中包含名为 log1.txt、log2.txt、test1.txt、test2.txt、test3.txt 的文件，以及一个包含名为 SubFile.txt 的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-366">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-367">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-367">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-368">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-368">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-369">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-369">The search string to match against the names of files.</span></span>  <span data-ttu-id="734b3-370">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-370">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="734b3-371">返回与搜索模式匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-371">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="734b3-372">与 <paramref name="searchPattern" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-372">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-373">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-373">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-374">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-374">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-375">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-375">Wildcard specifier</span></span>|<span data-ttu-id="734b3-376">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-376">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-377">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-377">\* (asterisk)</span></span>|<span data-ttu-id="734b3-378">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-378">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-379">?</span><span class="sxs-lookup"><span data-stu-id="734b3-379">?</span></span> <span data-ttu-id="734b3-380">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-380">(question mark)</span></span>|<span data-ttu-id="734b3-381">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-381">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-382">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-382">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-383">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-383">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-384">".</span><span class="sxs-lookup"><span data-stu-id="734b3-384">".</span></span> <span data-ttu-id="734b3-385">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-385">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-386"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-386">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-387">使用时 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> ，你可以在 <xref:System.IO.FileInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-387">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-388">使用时 <xref:System.IO.DirectoryInfo.GetFiles%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-388">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-389">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-389">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-390">此方法预先填充以下属性的值 <xref:System.IO.FileInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-390">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="734b3-391">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-391">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-392">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-392">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="734b3-393">该示例假设有一个目录，其中包含名为 log1.txt、log2.txt、test1.txt、test2.txt、test3.txt 的文件，以及一个包含名为 SubFile.txt 的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-393">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-394"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-394"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-395">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-395">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-396">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-396">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-397">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-397">The search string to match against the names of files.</span></span> <span data-ttu-id="734b3-398">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-398">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="734b3-399">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-399">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="734b3-400">返回与指定的搜索模式和枚举选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-400">Returns an enumerable collection of file information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="734b3-401">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-401">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-402">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-402">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-403">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-403">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-404">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-404">Wildcard specifier</span></span>|<span data-ttu-id="734b3-405">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-405">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-406">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-406">\* (asterisk)</span></span>|<span data-ttu-id="734b3-407">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-407">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-408">?</span><span class="sxs-lookup"><span data-stu-id="734b3-408">?</span></span> <span data-ttu-id="734b3-409">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-409">(question mark)</span></span>|<span data-ttu-id="734b3-410">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-410">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-411">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-411">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-412">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-412">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-413">".</span><span class="sxs-lookup"><span data-stu-id="734b3-413">".</span></span> <span data-ttu-id="734b3-414">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-414">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-415"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-415">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-416">使用时 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> ，你可以在 <xref:System.IO.FileInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-416">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-417">使用时 <xref:System.IO.DirectoryInfo.GetFiles%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-417">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-418">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-418">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-419">此方法预先填充以下属性的值 <xref:System.IO.FileInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-419">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="734b3-420">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-420">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-421"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-421"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-422">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-422">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-423">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-423">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-424">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-424">The search string to match against the names of files.</span></span>  <span data-ttu-id="734b3-425">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-425">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="734b3-426">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="734b3-426">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="734b3-427">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-427">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="734b3-428">返回与指定的搜索模式和搜索子目录选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-428">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="734b3-429">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-429">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-430">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-430">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-431">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-431">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-432">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-432">Wildcard specifier</span></span>|<span data-ttu-id="734b3-433">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-433">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-434">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-434">\* (asterisk)</span></span>|<span data-ttu-id="734b3-435">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-435">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-436">?</span><span class="sxs-lookup"><span data-stu-id="734b3-436">?</span></span> <span data-ttu-id="734b3-437">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-437">(question mark)</span></span>|<span data-ttu-id="734b3-438">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-438">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-439">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-439">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-440">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-440">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-441">".</span><span class="sxs-lookup"><span data-stu-id="734b3-441">".</span></span> <span data-ttu-id="734b3-442">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-442">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-443"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-443">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-444">使用时 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> ，你可以在 <xref:System.IO.FileInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-444">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-445">使用时 <xref:System.IO.DirectoryInfo.GetFiles%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-445">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-446">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-446">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-447">此方法预先填充以下属性的值 <xref:System.IO.FileInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-447">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="734b3-448">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-448">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-449">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-449">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="734b3-450">该示例假设有一个目录，其中包含名为 log1.txt、log2.txt、test1.txt、test2.txt、test3.txt 的文件，以及一个包含名为 SubFile.txt 的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-450">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-451"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-451"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="734b3-452"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="734b3-452"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-453">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-453">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-454">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-454">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-455">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-455">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-456">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-456">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="734b3-457">当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-457">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-458"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-458">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-459">使用时 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> ，你可以在 <xref:System.IO.FileSystemInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-459">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-460">使用时 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileSystemInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-460">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-461">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-461">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-462">此方法预先填充以下属性的值 <xref:System.IO.FileSystemInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-462">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="734b3-463">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-463">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-464">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-464">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-465">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-465">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-466">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-466">The search string to match against the names of directories.</span></span>  <span data-ttu-id="734b3-467">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-467">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="734b3-468">返回与指定的搜索模式匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-468">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="734b3-469">与 <paramref name="searchPattern" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-469">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-470">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-470">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-471">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-471">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-472">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-472">Wildcard specifier</span></span>|<span data-ttu-id="734b3-473">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-473">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-474">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-474">\* (asterisk)</span></span>|<span data-ttu-id="734b3-475">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-475">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-476">?</span><span class="sxs-lookup"><span data-stu-id="734b3-476">?</span></span> <span data-ttu-id="734b3-477">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-477">(question mark)</span></span>|<span data-ttu-id="734b3-478">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-478">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-479">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-479">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-480">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-480">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-481">".</span><span class="sxs-lookup"><span data-stu-id="734b3-481">".</span></span> <span data-ttu-id="734b3-482">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-482">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-483"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-483">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-484">使用时 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> ，你可以在 <xref:System.IO.FileSystemInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-484">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-485">使用时 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileSystemInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-485">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-486">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-486">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-487">此方法预先填充以下属性的值 <xref:System.IO.FileSystemInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-487">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="734b3-488">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-488">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-489"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-489"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-490">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-490">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-491">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-491">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String, enumerationOptions As EnumerationOptions) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-492">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-492">The search string to match against the names of directories.</span></span> <span data-ttu-id="734b3-493">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-493">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="734b3-494">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-494">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="734b3-495">返回与指定的搜索模式和枚举选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-495">Returns an enumerable collection of file system information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="734b3-496">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-496">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-497">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-497">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-498">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-498">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-499">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-499">Wildcard specifier</span></span>|<span data-ttu-id="734b3-500">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-500">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-501">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-501">\* (asterisk)</span></span>|<span data-ttu-id="734b3-502">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-502">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-503">?</span><span class="sxs-lookup"><span data-stu-id="734b3-503">?</span></span> <span data-ttu-id="734b3-504">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-504">(question mark)</span></span>|<span data-ttu-id="734b3-505">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-505">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-506">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-506">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-507">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-507">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-508">".</span><span class="sxs-lookup"><span data-stu-id="734b3-508">".</span></span> <span data-ttu-id="734b3-509">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-509">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-510"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-510">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-511">使用时 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> ，你可以在 <xref:System.IO.FileSystemInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-511">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-512">使用时 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileSystemInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-512">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-513">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-513">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-514">此方法预先填充以下属性的值 <xref:System.IO.FileSystemInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-514">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="734b3-515">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-515">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-516"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-516"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-517">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-517">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-518">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-518">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String, searchOption As SearchOption) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-519">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-519">The search string to match against the names of directories.</span></span>  <span data-ttu-id="734b3-520">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-520">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="734b3-521">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="734b3-521">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="734b3-522">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-522">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="734b3-523">返回与指定的搜索模式和搜索子目录选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-523">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="734b3-524">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-524">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-525">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-525">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-526">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-526">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-527">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-527">Wildcard specifier</span></span>|<span data-ttu-id="734b3-528">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-528">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-529">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-529">\* (asterisk)</span></span>|<span data-ttu-id="734b3-530">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-530">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-531">?</span><span class="sxs-lookup"><span data-stu-id="734b3-531">?</span></span> <span data-ttu-id="734b3-532">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-532">(question mark)</span></span>|<span data-ttu-id="734b3-533">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-533">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-534">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-534">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-535">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-535">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-536">".</span><span class="sxs-lookup"><span data-stu-id="734b3-536">".</span></span> <span data-ttu-id="734b3-537">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-537">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-538"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-538">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-539">使用时 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> ，你可以在 <xref:System.IO.FileSystemInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-539">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-540">使用时 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileSystemInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-540">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-541">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-541">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-542">此方法预先填充以下属性的值 <xref:System.IO.FileSystemInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-542">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="734b3-543">未缓存返回的集合;对集合中的方法的每个调用 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="734b3-543">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-544"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-544"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="734b3-545"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="734b3-545"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-546">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-546">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-547">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-547">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="734b3-548">获取指示目录是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="734b3-548">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="734b3-549">如果目录存在，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-549"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-550"><xref:System.IO.DirectoryInfo.Exists%2A> `false` 如果在尝试确定指定文件是否存在时出现任何错误，则属性将返回。</span><span class="sxs-lookup"><span data-stu-id="734b3-550">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="734b3-551">这种情况可能发生在引发异常的情况，例如，传递包含无效字符或太多字符的文件名、出现故障或缺失的磁盘，或者如果调用方没有读取文件的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-551">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-552">下面的示例演示 `Exists` 在将源目录复制到目标目录的上下文中属性的用法。</span><span class="sxs-lookup"><span data-stu-id="734b3-552">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-553">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-553">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-554">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-554">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-555">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-555">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="734b3-556">获取目录的完整路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-556">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="734b3-557">包含完整目录的字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-557">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-558">获取当前目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="734b3-558">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-559">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="734b3-559">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="734b3-560">有关详细信息，请参阅[如何：添加或移除访问控制列表项](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)。</span><span class="sxs-lookup"><span data-stu-id="734b3-560">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-561">获取 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="734b3-561">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="734b3-562">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装此目录的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="734b3-562">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-563">调用此方法重载等效于调用 <xref:System.IO.Directory.GetAccessControl%2A> 方法重载并指定 &#124; &#124; 的访问控制部分 <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> （ <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> Visual Basic）。</span><span class="sxs-lookup"><span data-stu-id="734b3-563">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="734b3-564">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="734b3-564">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="734b3-565">ACL 描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="734b3-565">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="734b3-566">有关详细信息，请参阅[如何：添加或移除访问控制列表项](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)。</span><span class="sxs-lookup"><span data-stu-id="734b3-566">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>
  
## Examples  
 <span data-ttu-id="734b3-567">下面的示例使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 和 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法来添加并删除目录中的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="734b3-567">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="734b3-568">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-568">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-569">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="734b3-569">The directory is read-only.</span></span>  
  
 <span data-ttu-id="734b3-570">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-570">-or-</span></span>  
  
 <span data-ttu-id="734b3-571">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="734b3-571">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="734b3-572">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-572">-or-</span></span>  
  
 <span data-ttu-id="734b3-573">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-573">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-574">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="734b3-574">An I/O error occurred while opening the directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="734b3-575"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，它指定要接收的访问控制列表 (ACL) 信息的类型。</span><span class="sxs-lookup"><span data-stu-id="734b3-575">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="734b3-576">获取 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的指定类型的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="734b3-576">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="734b3-577">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，它封装由 <paramref name="path" /> 参数描述的文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="734b3-577">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-578">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="734b3-578">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="734b3-579">ACL 描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="734b3-579">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="734b3-580">有关详细信息，请参阅[如何：添加或移除访问控制列表项](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)。</span><span class="sxs-lookup"><span data-stu-id="734b3-580">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="734b3-581">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-581">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-582">当前进程不具有打开该目录的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-582">The current process does not have access to open the directory.</span></span><br /><span data-ttu-id="734b3-583">或</span><span class="sxs-lookup"><span data-stu-id="734b3-583">OR</span></span><br /><span data-ttu-id="734b3-584">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="734b3-584">The directory is read-only.</span></span><br /><span data-ttu-id="734b3-585">或</span><span class="sxs-lookup"><span data-stu-id="734b3-585">OR</span></span><br /><span data-ttu-id="734b3-586">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="734b3-586">This operation is not supported on the current platform.</span></span><br /><span data-ttu-id="734b3-587">或</span><span class="sxs-lookup"><span data-stu-id="734b3-587">OR</span></span><br /><span data-ttu-id="734b3-588">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-588">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-589">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="734b3-589">An I/O error occurred while opening the directory.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-590">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-590">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-591">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-591">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="734b3-592">一个 <see cref="T:System.IO.DirectoryInfo" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-592">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-593">如果没有子目录，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-593">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="734b3-594">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="734b3-594">This method is not recursive.</span></span>  
  
 <span data-ttu-id="734b3-595">此方法预先填充以下属性的值 <xref:System.IO.DirectoryInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-595">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-596">下面的示例检索根目录中的所有目录，并显示目录名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-596">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-597">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效，例如，在未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="734b3-597">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-598">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-598">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-599">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-599">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-600">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-600">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-601">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-601">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-602">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-602">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-603">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-603">The search string to match against the names of directories.</span></span>  <span data-ttu-id="734b3-604">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-604">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="734b3-605">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中、与给定搜索条件匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-605">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="734b3-606">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-606">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-607">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-607">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-608">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-608">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-609">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-609">Wildcard specifier</span></span>|<span data-ttu-id="734b3-610">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-610">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-611">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-611">\* (asterisk)</span></span>|<span data-ttu-id="734b3-612">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-612">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-613">?</span><span class="sxs-lookup"><span data-stu-id="734b3-613">?</span></span> <span data-ttu-id="734b3-614">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-614">(question mark)</span></span>|<span data-ttu-id="734b3-615">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-615">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-616">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-616">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-617">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-617">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-618">".</span><span class="sxs-lookup"><span data-stu-id="734b3-618">".</span></span> <span data-ttu-id="734b3-619">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-619">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-620">此方法预先填充以下属性的值 <xref:System.IO.DirectoryInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-620">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-621">下面的示例统计包含指定字母的路径中的目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-621">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-622"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-622"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-623"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-623"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-624">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-624">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-625">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-625">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-626">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-626">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-627">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-627">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-628">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-628">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String, enumerationOptions As EnumerationOptions) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-629">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-629">The search string to match against the names of directories.</span></span> <span data-ttu-id="734b3-630">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-630">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="734b3-631">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-631">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="734b3-632">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与指定的搜索模式和枚举选项匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-632">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="734b3-633">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的 <see langword="DirectoryInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-633">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-634">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-634">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-635">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-635">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-636">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-636">Wildcard specifier</span></span>|<span data-ttu-id="734b3-637">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-637">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-638">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-638">\* (asterisk)</span></span>|<span data-ttu-id="734b3-639">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-639">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-640">?</span><span class="sxs-lookup"><span data-stu-id="734b3-640">?</span></span> <span data-ttu-id="734b3-641">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-641">(question mark)</span></span>|<span data-ttu-id="734b3-642">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-642">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-643">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-643">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-644">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-644">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-645">".</span><span class="sxs-lookup"><span data-stu-id="734b3-645">".</span></span> <span data-ttu-id="734b3-646">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-646">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-647">此方法预先填充以下属性的值 <xref:System.IO.DirectoryInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-647">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-648"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-648"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-649"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-649"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-650">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-650">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-651">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-651">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String, searchOption As SearchOption) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-652">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-652">The search string to match against the names of directories.</span></span>  <span data-ttu-id="734b3-653">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-653">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="734b3-654">用于指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="734b3-654">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="734b3-655">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与给定的搜索条件匹配并使用某个值确定是否在子目录中搜索的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-655">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="734b3-656">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-656">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-657">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-657">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-658">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-658">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-659">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-659">Wildcard specifier</span></span>|<span data-ttu-id="734b3-660">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-660">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-661">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-661">\* (asterisk)</span></span>|<span data-ttu-id="734b3-662">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-662">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-663">?</span><span class="sxs-lookup"><span data-stu-id="734b3-663">?</span></span> <span data-ttu-id="734b3-664">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-664">(question mark)</span></span>|<span data-ttu-id="734b3-665">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-665">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-666">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-666">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-667">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-667">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-668">".</span><span class="sxs-lookup"><span data-stu-id="734b3-668">".</span></span> <span data-ttu-id="734b3-669">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-669">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-670">如果没有子目录，或者没有任何子目录与参数匹配 `searchPattern` ，此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-670">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="734b3-671">此方法预先填充以下属性的值 <xref:System.IO.DirectoryInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-671">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-672">下面的示例列出了在 "c：" 中以字母 "c" 开头的所有目录和文件 \\ 。</span><span class="sxs-lookup"><span data-stu-id="734b3-672">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-673"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-673"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-674"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-674"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="734b3-675"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="734b3-675"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-676">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-676">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-677">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-677">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-678">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-678">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-679">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-679">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-680">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-680">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-681">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="734b3-681">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-682">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="734b3-682">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="734b3-683"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-683">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-684"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-684">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-685">使用时 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> ，你可以在 <xref:System.IO.FileInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-685">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-686">使用时 <xref:System.IO.DirectoryInfo.GetFiles%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-686">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-687">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-687">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-688">如果中没有任何文件，则 <xref:System.IO.DirectoryInfo> 此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-688">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="734b3-689">不保证返回的文件名的顺序;<xref:System.Array.Sort%2A>如果需要特定的排序顺序，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="734b3-689">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="734b3-690">此方法预先填充以下属性的值 <xref:System.IO.FileInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-690">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-691">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="734b3-691">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="734b3-692">该示例假设有一个目录，其中包含名为 log1.txt、log2.txt、test1.txt、test2.txt、test3.txt 的文件，以及一个包含名为 SubFile.txt 的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-692">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-693">路径无效（例如，路径位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-693">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-694">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-694">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-695">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-695">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-696">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-696">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-697">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-697">The search string to match against the names of files.</span></span>  <span data-ttu-id="734b3-698">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-698">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="734b3-699">返回当前目录中与给定的搜索模式匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="734b3-699">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="734b3-700"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-700">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-701">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-701">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-702">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-702">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-703">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-703">Wildcard specifier</span></span>|<span data-ttu-id="734b3-704">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-704">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-705">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-705">\* (asterisk)</span></span>|<span data-ttu-id="734b3-706">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-706">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-707">?</span><span class="sxs-lookup"><span data-stu-id="734b3-707">?</span></span> <span data-ttu-id="734b3-708">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-708">(question mark)</span></span>|<span data-ttu-id="734b3-709">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-709">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-710">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-710">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-711">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-711">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-712">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-712">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-713"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-713">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-714">使用时 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> ，你可以在 <xref:System.IO.FileInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-714">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-715">使用时 <xref:System.IO.DirectoryInfo.GetFiles%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-715">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-716">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-716">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-717">如果中没有任何文件，则 <xref:System.IO.DirectoryInfo> 此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-717">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="734b3-718">参数中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-718">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="734b3-719">通配符</span><span class="sxs-lookup"><span data-stu-id="734b3-719">Wildcard character</span></span>|<span data-ttu-id="734b3-720">描述</span><span class="sxs-lookup"><span data-stu-id="734b3-720">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="734b3-721">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-721">Zero or more characters.</span></span>|  
|<span data-ttu-id="734b3-722">?</span><span class="sxs-lookup"><span data-stu-id="734b3-722">?</span></span>|<span data-ttu-id="734b3-723">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-723">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="734b3-724">不保证返回的文件名的顺序;<xref:System.Array.Sort%2A>如果需要特定的排序顺序，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="734b3-724">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="734b3-725">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="734b3-725">Wildcards are permitted.</span></span> <span data-ttu-id="734b3-726">例如， `searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="734b3-726">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="734b3-727">`searchPattern`字符串 "s \* " 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-727">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="734b3-728">如果没有任何文件或与中的字符串不匹配的文件， `searchPattern` <xref:System.IO.DirectoryInfo> 此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-728">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="734b3-729">当使用中的星号通配符 `searchPattern` （例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="734b3-729">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="734b3-730">`searchPattern`如果文件扩展名恰好为三个字符，则将返回扩展名为三个或更多字符的文件，其中前三个字符匹配中指定的文件扩展名 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-730">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="734b3-731">如果 `searchPattern` 文件扩展名为1、2或3个以上的字符，则仅返回扩展名正好与中指定的文件扩展名相匹配的文件 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-731">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="734b3-732">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-732">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="734b3-733">例如，如果目录中有两个文件，"file1.txt" 和 "file1.txt其他"，则搜索模式为 "file？"。txt "仅返回第一个文件，而" file .txt "的搜索模式 \* 返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-733">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="734b3-734">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1 .txt" 的搜索模式 \* 可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="734b3-734">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="734b3-735">例如，使用搜索模式 " \* 1 \* .txt" 将返回 "longfilename.txt"，因为等效的8.3 文件名格式为 "longf ~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="734b3-735">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="734b3-736">此方法预先填充以下属性的值 <xref:System.IO.FileInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-736">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-737">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="734b3-737">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="734b3-738">该示例假设有一个目录，其中包含名为 log1.txt、log2.txt、test1.txt、test2.txt、test3.txt 的文件，以及一个包含名为 SubFile.txt 的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-738">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-739"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-739"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-740"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-740"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-741">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-741">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-742">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-742">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-743">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-743">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-744">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-744">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-745">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-745">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String, enumerationOptions As EnumerationOptions) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-746">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-746">The search string to match against the names of files.</span></span> <span data-ttu-id="734b3-747">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-747">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="734b3-748">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-748">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="734b3-749">返回当前目录中与指定的搜索模式和枚举选项匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="734b3-749">Returns a file list from the current directory matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="734b3-750">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的强类型化 <see cref="T:System.IO.FileInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-750">An array of strongly typed <see cref="T:System.IO.FileInfo" /> objects that match <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-751">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-751">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-752">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-752">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-753">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-753">Wildcard specifier</span></span>|<span data-ttu-id="734b3-754">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-754">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-755">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-755">\* (asterisk)</span></span>|<span data-ttu-id="734b3-756">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-756">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-757">?</span><span class="sxs-lookup"><span data-stu-id="734b3-757">?</span></span> <span data-ttu-id="734b3-758">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-758">(question mark)</span></span>|<span data-ttu-id="734b3-759">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-759">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-760">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-760">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-761">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-761">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-762">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-762">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-763"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-763">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-764">使用时 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> ，你可以在 <xref:System.IO.FileInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-764">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-765">使用时 <xref:System.IO.DirectoryInfo.GetFiles%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-765">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-766">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-766">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-767">如果中没有任何文件，则 <xref:System.IO.DirectoryInfo> 此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-767">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="734b3-768">参数中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-768">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="734b3-769">通配符</span><span class="sxs-lookup"><span data-stu-id="734b3-769">Wildcard character</span></span>|<span data-ttu-id="734b3-770">描述</span><span class="sxs-lookup"><span data-stu-id="734b3-770">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="734b3-771">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-771">Zero or more characters.</span></span>|  
|<span data-ttu-id="734b3-772">?</span><span class="sxs-lookup"><span data-stu-id="734b3-772">?</span></span>|<span data-ttu-id="734b3-773">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-773">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="734b3-774">不保证返回的文件名的顺序;<xref:System.Array.Sort%2A>如果需要特定的排序顺序，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="734b3-774">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="734b3-775">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="734b3-775">Wildcards are permitted.</span></span> <span data-ttu-id="734b3-776">例如， `searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="734b3-776">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="734b3-777">`searchPattern`字符串 "s \* " 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-777">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="734b3-778">如果没有任何文件或与中的字符串不匹配的文件， `searchPattern` <xref:System.IO.DirectoryInfo> 此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-778">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="734b3-779">当使用中的星号通配符 `searchPattern` （例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="734b3-779">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="734b3-780">`searchPattern`如果文件扩展名恰好为三个字符，则将返回扩展名为三个或更多字符的文件，其中前三个字符匹配中指定的文件扩展名 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-780">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="734b3-781">如果 `searchPattern` 文件扩展名为1、2或3个以上的字符，则仅返回扩展名正好与中指定的文件扩展名相匹配的文件 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-781">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="734b3-782">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-782">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="734b3-783">例如，如果目录中有两个文件，"file1.txt" 和 "file1.txt其他"，则搜索模式为 "file？"。txt "仅返回第一个文件，而" file .txt "的搜索模式 \* 返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-783">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="734b3-784">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1 .txt" 的搜索模式 \* 可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="734b3-784">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="734b3-785">例如，使用搜索模式 " \* 1 \* .txt" 将返回 "longfilename.txt"，因为等效的8.3 文件名格式为 "longf ~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="734b3-785">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="734b3-786">此方法预先填充以下属性的值 <xref:System.IO.FileInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-786">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-787"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-787"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-788"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-788"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-789">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-789">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-790">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-790">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String, searchOption As SearchOption) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-791">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-791">The search string to match against the names of files.</span></span>  <span data-ttu-id="734b3-792">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-792">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="734b3-793">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="734b3-793">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="734b3-794">返回与给定的搜索模式匹配并且使用某个值确定是否在子目录中进行搜索的当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="734b3-794">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="734b3-795"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-795">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-796"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A>和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="734b3-796">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="734b3-797">使用时 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> ，你可以在 <xref:System.IO.FileInfo> 返回整个集合之前开始枚举对象的集合。</span><span class="sxs-lookup"><span data-stu-id="734b3-797">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="734b3-798">使用时 <xref:System.IO.DirectoryInfo.GetFiles%2A> ，必须等待返回整个对象数组，然后才能 <xref:System.IO.FileInfo> 访问数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-798">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="734b3-799">因此，在处理多个文件和目录时， <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="734b3-799">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="734b3-800">如果中没有任何文件，则 <xref:System.IO.DirectoryInfo> 此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-800">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="734b3-801">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-801">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-802">通配符</span><span class="sxs-lookup"><span data-stu-id="734b3-802">Wildcard character</span></span>|<span data-ttu-id="734b3-803">描述</span><span class="sxs-lookup"><span data-stu-id="734b3-803">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="734b3-804">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-804">\* (asterisk)</span></span>|<span data-ttu-id="734b3-805">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-805">Zero or more characters.</span></span>|  
|<span data-ttu-id="734b3-806">?</span><span class="sxs-lookup"><span data-stu-id="734b3-806">?</span></span> <span data-ttu-id="734b3-807">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-807">(question mark)</span></span>|<span data-ttu-id="734b3-808">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-808">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="734b3-809">不保证返回的文件名的顺序;<xref:System.Array.Sort%2A>如果需要特定的排序顺序，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="734b3-809">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="734b3-810">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="734b3-810">Wildcards are permitted.</span></span> <span data-ttu-id="734b3-811">例如， `searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="734b3-811">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="734b3-812">`searchPattern`字符串 "s \* " 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-812">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="734b3-813">如果没有任何文件或与中的字符串不匹配的文件， `searchPattern` <xref:System.IO.DirectoryInfo> 此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-813">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="734b3-814">当使用中的星号通配符 `searchPattern` （例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="734b3-814">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="734b3-815">`searchPattern`如果文件扩展名恰好为三个字符，则将返回扩展名为三个或更多字符的文件，其中前三个字符匹配中指定的文件扩展名 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-815">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="734b3-816">如果 `searchPattern` 文件扩展名为1、2或3个以上的字符，则仅返回扩展名正好与中指定的文件扩展名相匹配的文件 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-816">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="734b3-817">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-817">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="734b3-818">例如，如果目录中有两个文件，"file1.txt" 和 "file1.txt其他"，则搜索模式为 "file？"。txt "仅返回第一个文件，而" file .txt "的搜索模式 \* 返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-818">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="734b3-819">以下列表显示了参数的不同长度的行为 `searchPattern` ：</span><span class="sxs-lookup"><span data-stu-id="734b3-819">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="734b3-820">"\* abc" 返回扩展名为 abc、. abcd、. abcde...z、. abcdef 的文件，依此类推。</span><span class="sxs-lookup"><span data-stu-id="734b3-820">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="734b3-821">"\* abcd" 仅返回扩展名为 abcd 的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-821">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="734b3-822">"\* abcde...z" 只返回扩展名为 abcde...z 的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-822">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="734b3-823">"\* abcdef" 只返回扩展名为 abcdef 的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-823">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="734b3-824">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1 .txt" 的搜索模式 \* 可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="734b3-824">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="734b3-825">例如，使用搜索模式 " \* 1 \* .txt" 将返回 "longfilename.txt"，因为等效的8.3 文件名格式为 "longf ~1.txt"。</span><span class="sxs-lookup"><span data-stu-id="734b3-825">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="734b3-826">此方法预先填充以下属性的值 <xref:System.IO.FileInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-826">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-827">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="734b3-827">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="734b3-828">该示例假设有一个目录，其中包含名为 log1.txt、log2.txt、test1.txt、test2.txt、test3.txt 的文件，以及一个包含名为 SubFile.txt 的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-828">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-829"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-829"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-830"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-830"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="734b3-831"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="734b3-831"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-832">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-832">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-833">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-833">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-834">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-834">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-835">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-835">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-836">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-836">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="734b3-837">检索表示当前目录的文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-837">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-838">返回表示某个目录中所有文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-838">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="734b3-839">强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-839">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-840">如果中没有任何文件或目录，则 <xref:System.IO.DirectoryInfo> 此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-840">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="734b3-841">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="734b3-841">This method is not recursive.</span></span>  
  
 <span data-ttu-id="734b3-842">对于子目录， <xref:System.IO.FileSystemInfo> 此方法返回的对象可以转换为派生类 <xref:System.IO.DirectoryInfo> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-842">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="734b3-843">使用 <xref:System.IO.FileAttributes> 由属性返回的值 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 来确定是 <xref:System.IO.FileSystemInfo> 表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-843">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="734b3-844">此方法预先填充以下属性的值 <xref:System.IO.FileSystemInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-844">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-845">下面的示例对指定目录下的文件和目录进行计数。</span><span class="sxs-lookup"><span data-stu-id="734b3-845">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-846">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-846">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-847">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-847">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-848">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-848">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-849">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-849">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-850">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-850">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="734b3-851">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-851">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="734b3-852">检索表示与指定的搜索条件匹配的文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-852">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="734b3-853">与搜索条件匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-853">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-854">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-854">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-855">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-855">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-856">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-856">Wildcard specifier</span></span>|<span data-ttu-id="734b3-857">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-857">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-858">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-858">\* (asterisk)</span></span>|<span data-ttu-id="734b3-859">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-859">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-860">?</span><span class="sxs-lookup"><span data-stu-id="734b3-860">?</span></span> <span data-ttu-id="734b3-861">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-861">(question mark)</span></span>|<span data-ttu-id="734b3-862">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-862">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-863">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-863">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-864">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-864">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-865">".</span><span class="sxs-lookup"><span data-stu-id="734b3-865">".</span></span> <span data-ttu-id="734b3-866">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-866">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-867">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="734b3-867">This method is not recursive.</span></span>  
  
 <span data-ttu-id="734b3-868">对于子目录， <xref:System.IO.FileSystemInfo> 此方法返回的对象可以转换为派生类 <xref:System.IO.DirectoryInfo> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-868">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="734b3-869">使用 <xref:System.IO.FileAttributes> 由属性返回的值 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 来确定是 <xref:System.IO.FileSystemInfo> 表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-869">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="734b3-870">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="734b3-870">Wild cards are permitted.</span></span> <span data-ttu-id="734b3-871">例如， `searchPattern` 字符串 " \* t" 搜索以 `path` 字母 "t" 结尾的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-871">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="734b3-872">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-872">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-873">如果将字符串 ".." `searchPattern` 指定为有效目录名称的一部分，则只能在中使用字符串 "..."。b "。</span><span class="sxs-lookup"><span data-stu-id="734b3-873">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="734b3-874">它不能用来向上移动目录层次结构。</span><span class="sxs-lookup"><span data-stu-id="734b3-874">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="734b3-875">如果没有文件或目录，或者没有与中的字符串匹配的文件或目录，则 `searchPattern` <xref:System.IO.DirectoryInfo> 此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-875">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="734b3-876">此方法预先填充以下属性的值 <xref:System.IO.FileSystemInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-876">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-877">下面的示例计算与指定的搜索模式匹配的文件和目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-877">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-878"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-878"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-879"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-879"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-880">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-880">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-881">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-881">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-882">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-882">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-883">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-883">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-884">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-884">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String, enumerationOptions As EnumerationOptions) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-885">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-885">The search string to match against the names of directories and files.</span></span> <span data-ttu-id="734b3-886">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-886">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="734b3-887">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-887">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="734b3-888">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，这些对象表示与指定的搜索模式和枚举选项匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-888">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="734b3-889">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-889">An array of strongly typed <see langword="FileSystemInfo" /> objects matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-890">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-890">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-891">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-891">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-892">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-892">Wildcard specifier</span></span>|<span data-ttu-id="734b3-893">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-893">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-894">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-894">\* (asterisk)</span></span>|<span data-ttu-id="734b3-895">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-895">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-896">?</span><span class="sxs-lookup"><span data-stu-id="734b3-896">?</span></span> <span data-ttu-id="734b3-897">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-897">(question mark)</span></span>|<span data-ttu-id="734b3-898">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-898">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-899">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-899">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-900">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-900">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-901">".</span><span class="sxs-lookup"><span data-stu-id="734b3-901">".</span></span> <span data-ttu-id="734b3-902">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-902">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-903">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="734b3-903">This method is not recursive.</span></span>  
  
 <span data-ttu-id="734b3-904">对于子目录， <xref:System.IO.FileSystemInfo> 此方法返回的对象可以转换为派生类 <xref:System.IO.DirectoryInfo> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-904">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="734b3-905">使用 <xref:System.IO.FileAttributes> 由属性返回的值 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 来确定是 <xref:System.IO.FileSystemInfo> 表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-905">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="734b3-906">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="734b3-906">Wild cards are permitted.</span></span> <span data-ttu-id="734b3-907">例如， `searchPattern` 字符串 " \* t" 搜索以 `path` 字母 "t" 结尾的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-907">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="734b3-908">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-908">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-909">如果将字符串 ".." `searchPattern` 指定为有效目录名称的一部分，则只能在中使用字符串 "..."。b "。</span><span class="sxs-lookup"><span data-stu-id="734b3-909">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="734b3-910">它不能用来向上移动目录层次结构。</span><span class="sxs-lookup"><span data-stu-id="734b3-910">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="734b3-911">如果没有文件或目录，或者没有与中的字符串匹配的文件或目录，则 `searchPattern` <xref:System.IO.DirectoryInfo> 此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-911">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="734b3-912">此方法预先填充以下属性的值 <xref:System.IO.FileSystemInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-912">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-913"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-913"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-914"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-914"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-915">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-915">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-916">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-916">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String, searchOption As SearchOption) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="734b3-917">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="734b3-917">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="734b3-918">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-918">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="734b3-919">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="734b3-919">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="734b3-920">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-920">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="734b3-921">检索表示与指定的搜索条件匹配的文件和子目录的 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-921">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="734b3-922">与搜索条件匹配的文件系统项的数组。</span><span class="sxs-lookup"><span data-stu-id="734b3-922">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-923">`searchPattern`可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="734b3-923">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="734b3-924">中允许使用以下通配符说明符 `searchPattern` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-924">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="734b3-925">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="734b3-925">Wildcard specifier</span></span>|<span data-ttu-id="734b3-926">匹配</span><span class="sxs-lookup"><span data-stu-id="734b3-926">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="734b3-927">\*红星</span><span class="sxs-lookup"><span data-stu-id="734b3-927">\* (asterisk)</span></span>|<span data-ttu-id="734b3-928">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-928">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="734b3-929">?</span><span class="sxs-lookup"><span data-stu-id="734b3-929">?</span></span> <span data-ttu-id="734b3-930">（问号）</span><span class="sxs-lookup"><span data-stu-id="734b3-930">(question mark)</span></span>|<span data-ttu-id="734b3-931">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-931">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="734b3-932">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-932">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="734b3-933">例如，字符串 " \* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-933">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="734b3-934">".</span><span class="sxs-lookup"><span data-stu-id="734b3-934">".</span></span> <span data-ttu-id="734b3-935">`searchPattern`字符串 "s \* " 搜索以 `path` 字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-935">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="734b3-936">对于子目录， <xref:System.IO.FileSystemInfo> 此方法返回的对象可以转换为派生类 <xref:System.IO.DirectoryInfo> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-936">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="734b3-937">使用 <xref:System.IO.FileAttributes> 由属性返回的值 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 来确定是 <xref:System.IO.FileSystemInfo> 表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-937">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="734b3-938">此方法预先填充以下属性的值 <xref:System.IO.FileSystemInfo> ：</span><span class="sxs-lookup"><span data-stu-id="734b3-938">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-939"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="734b3-939"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-940"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-940"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="734b3-941"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="734b3-941"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-942">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="734b3-942">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-943">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-943">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="734b3-944">要将此目录移动到的目标位置的名称和路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-944">The name and path to which to move this directory.</span></span> <span data-ttu-id="734b3-945">目标不能是另一个具有相同名称的磁盘卷或目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-945">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="734b3-946">它可以是您要将此目录作为子目录添加到其中的一个现有目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-946">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="734b3-947">将 <see cref="T:System.IO.DirectoryInfo" /> 实例及其内容移动到新路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-947">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-948"><xref:System.IO.IOException>例如，如果尝试将 c:\mydir 移动到 c:\public，并且 c:\public 已存在，则此方法将引发。</span><span class="sxs-lookup"><span data-stu-id="734b3-948">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="734b3-949">必须将 "c： \\ \ 公用 \\ \mydir" 指定为 `destDirName` 参数，或指定新目录名称（如 "c： \\ \newdir"）。</span><span class="sxs-lookup"><span data-stu-id="734b3-949">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="734b3-950">此方法允许将目录移动到只读目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-950">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="734b3-951">不会影响两个目录的读/写属性。</span><span class="sxs-lookup"><span data-stu-id="734b3-951">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="734b3-952">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-952">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-953">下面的示例演示如何移动目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-953">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-954"><paramref name="destDirName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-954"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="734b3-955"><paramref name="destDirName" /> 是一个空字符串 (''")。</span><span class="sxs-lookup"><span data-stu-id="734b3-955"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="734b3-956">尝试将目录移动到不同的卷。</span><span class="sxs-lookup"><span data-stu-id="734b3-956">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="734b3-957">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-957">-or-</span></span> 
 <span data-ttu-id="734b3-958"><paramref name="destDirName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="734b3-958"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="734b3-959">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-959">-or-</span></span> 
<span data-ttu-id="734b3-960">您无权访问此路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-960">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="734b3-961">- 或 -</span><span class="sxs-lookup"><span data-stu-id="734b3-961">-or-</span></span> 
<span data-ttu-id="734b3-962">被移动的目录与目标目录同名。</span><span class="sxs-lookup"><span data-stu-id="734b3-962">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-963">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-963">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="734b3-964">找不到此目标目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-964">The destination directory cannot be found.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-965">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-965">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-966">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-966">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-967">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-967">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="734b3-968">获取此 <see cref="T:System.IO.DirectoryInfo" /> 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-968">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="734b3-969">目录名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-969">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-970">此 <xref:System.IO.DirectoryInfo.Name%2A> 属性仅返回目录的名称，如 "Bin"。</span><span class="sxs-lookup"><span data-stu-id="734b3-970">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="734b3-971">若要获取完整路径（例如 "c:\public\Bin"），请使用 <xref:System.IO.FileSystemInfo.FullName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="734b3-971">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="734b3-972">的 <xref:System.IO.DirectoryInfo.Name%2A> 属性 <xref:System.IO.DirectoryInfo> 不需要任何权限（超出构造所需的目录的读取权限 <xref:System.IO.DirectoryInfo.Exists%2A> ），但可以指定目录名称。</span><span class="sxs-lookup"><span data-stu-id="734b3-972">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="734b3-973">如果需要将 <xref:System.IO.DirectoryInfo> 加密的安全名称分发到受保护的目录，请为不受信任的代码使用创建虚拟目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-973">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="734b3-974">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-974">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-975">下面的示例仅显示当前实例的名称 `DirectoryInfo` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-975">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-976">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-976">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-977">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-977">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-978">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-978">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo? Parent { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="734b3-979">获取指定的子目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-979">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="734b3-980">父目录; <see langword="null" /> 如果路径为 null 或文件路径表示根（如 `\` 、 `C:\` 或），则为 `\\server\share` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-980">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as `\`, `C:\`, or `\\server\share`).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="734b3-981">在 .NET Framework 中， `Parent` 返回相对路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-981">In .NET Framework, `Parent` returns a relative path.</span></span>
> <span data-ttu-id="734b3-982">在 .NET Core 中， `Parent` 返回完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-982">In .NET Core, `Parent` returns a fully qualified path.</span></span>

<span data-ttu-id="734b3-983">若要确保各个版本之间的行为一致并使意向明确，请在返回的实例上检索以下属性之一的值 <xref:System.IO.DirectoryInfo> `Parent` 。</span><span class="sxs-lookup"><span data-stu-id="734b3-983">To ensure consistent behavior across versions and to make your intent explicit, retrieve the value of one of the following properties on the <xref:System.IO.DirectoryInfo> instance returned by `Parent`.</span></span>
- <span data-ttu-id="734b3-984"><xref:System.IO.DirectoryInfo.Name>，它返回目录的简单名称（如 `bin` ）。</span><span class="sxs-lookup"><span data-stu-id="734b3-984"><xref:System.IO.DirectoryInfo.Name>, which returns the simple name of the directory (such as `bin`).</span></span>
- <span data-ttu-id="734b3-985"><xref:System.IO.DirectoryInfo.FullName>，它返回目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-985"><xref:System.IO.DirectoryInfo.FullName>, which returns the absolute path of the directory.</span></span> 


<span data-ttu-id="734b3-986">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="734b3-986">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>


## Examples

<span data-ttu-id="734b3-987">下面的示例引用指定目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-987">The following example refers to the parent directory of a specified directory.</span></span>

[!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
[!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
[!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-988">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-988">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-989">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-989">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-990">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-990">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-991">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-991">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="734b3-992">获取目录的根部分。</span><span class="sxs-lookup"><span data-stu-id="734b3-992">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="734b3-993">一个表示目录的根目录的对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-993">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="734b3-994">下面的示例显示指定目录的根位置。</span><span class="sxs-lookup"><span data-stu-id="734b3-994">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="734b3-995">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-995">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-996">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-996">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-997">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-997">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-998">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-998">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (directorySecurity As DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="734b3-999">一个对象，描述要应用于 <paramref name="path" /> 参数所描述的目录的 ACL 项。</span><span class="sxs-lookup"><span data-stu-id="734b3-999">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="734b3-1000">将 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="734b3-1000">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="734b3-1001">访问控制列表（ACL）描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="734b3-1001">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="734b3-1002">有关详细信息，请参阅[如何：添加或移除访问控制列表项](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries)。</span><span class="sxs-lookup"><span data-stu-id="734b3-1002">For more information, see [How to: Add or Remove Access Control List Entries](/dotnet/standard/io/how-to-add-or-remove-access-control-list-entries).</span></span>  
  
 <span data-ttu-id="734b3-1003"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法将 acl 项应用于表示 NONINHERITED ACL 列表的文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-1003">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="734b3-1004">为指定的 ACL 将 `directorySecurity` 替换目录的现有 acl。</span><span class="sxs-lookup"><span data-stu-id="734b3-1004">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="734b3-1005">若要为新用户添加权限，请使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法获取现有 ACL 并进行修改。</span><span class="sxs-lookup"><span data-stu-id="734b3-1005">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="734b3-1006"><xref:System.IO.DirectoryInfo.SetAccessControl%2A>方法仅保留 <xref:System.Security.AccessControl.DirectorySecurity> 在对象创建后修改的对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-1006">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="734b3-1007">如果尚未 <xref:System.Security.AccessControl.DirectorySecurity> 修改对象，则不会将其保存到文件中。</span><span class="sxs-lookup"><span data-stu-id="734b3-1007">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="734b3-1008">因此，无法 <xref:System.Security.AccessControl.DirectorySecurity> 从一个文件中检索对象，并将相同的对象重新应用到另一个文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-1008">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="734b3-1009">若要将 ACL 信息从一个文件复制到另一个文件：</span><span class="sxs-lookup"><span data-stu-id="734b3-1009">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="734b3-1010">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法可以 <xref:System.Security.AccessControl.DirectorySecurity> 从源文件中检索对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-1010">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="734b3-1011">为目标文件创建一个新的 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-1011">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="734b3-1012">使用 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> 源对象的或方法 <xref:System.Security.AccessControl.DirectorySecurity> 来检索 ACL 信息。</span><span class="sxs-lookup"><span data-stu-id="734b3-1012">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="734b3-1013">使用 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> 或 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> 方法将在步骤3中检索到的信息复制到目标 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="734b3-1013">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="734b3-1014"><xref:System.Security.AccessControl.DirectorySecurity>使用方法将目标对象设置为目标文件 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 。</span><span class="sxs-lookup"><span data-stu-id="734b3-1014">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="734b3-1015">下面的示例使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 和 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法来添加并删除目录中的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="734b3-1015">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="734b3-1016"><paramref name="directorySecurity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="734b3-1016">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="734b3-1017">未能找到或修改该文件。</span><span class="sxs-lookup"><span data-stu-id="734b3-1017">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="734b3-1018">当前进程不具有打开该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="734b3-1018">The current process does not have access to open the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="734b3-1019">返回传递给 <see cref="T:System.IO.DirectoryInfo" /> 构造函数的原始路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-1019">Returns the original path that was passed to the <see cref="T:System.IO.DirectoryInfo" /> constructor.</span></span> <span data-ttu-id="734b3-1020">使用 <see cref="P:System.IO.DirectoryInfo.FullName" /> 或 <see cref="P:System.IO.DirectoryInfo.Name" /> 属性作为完整路径或文件/目录名，而不是此方法。</span><span class="sxs-lookup"><span data-stu-id="734b3-1020">Use the <see cref="P:System.IO.DirectoryInfo.FullName" /> or <see cref="P:System.IO.DirectoryInfo.Name" /> properties for the full path or file/directory name instead of this method.</span></span></summary>
        <returns><span data-ttu-id="734b3-1021">用户所传递的原始路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-1021">The original path that was passed by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="734b3-1022">方法返回的字符串 <xref:System.IO.DirectoryInfo.ToString%2A> 表示传递给 <xref:System.IO.DirectoryInfo> 构造函数的路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-1022">The string returned by the <xref:System.IO.DirectoryInfo.ToString%2A> method represents the path that was passed to the <xref:System.IO.DirectoryInfo> constructor.</span></span> <span data-ttu-id="734b3-1023">`ToString`你应根据你的意图检索以下任一属性的值，而不是调用方法：</span><span class="sxs-lookup"><span data-stu-id="734b3-1023">Instead of calling the `ToString` method, you should retrieve the value of either of the following properties, depending on your intent:</span></span>
> - <span data-ttu-id="734b3-1024"><xref:System.IO.DirectoryInfo.Name>，获取目录的名称，而不包含任何父路径信息。</span><span class="sxs-lookup"><span data-stu-id="734b3-1024"><xref:System.IO.DirectoryInfo.Name>, to get the name of the directory, without any parent path information.</span></span>
> - <span data-ttu-id="734b3-1025"><xref:System.IO.DirectoryInfo.FullName>，用于获取目录的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="734b3-1025"><xref:System.IO.DirectoryInfo.FullName>, to get the fully qualified path of the directory.</span></span>

          ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="734b3-1026">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="734b3-1026">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="734b3-1027">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="734b3-1027">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="734b3-1028">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="734b3-1028">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
