<Type Name="TextWriter" FullName="System.IO.TextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f192c222380febcc7f71d2a9fd90f918dac08f51" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83964924" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextWriter : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextWriter extends System.Object implements class System.IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextWriter&#xA;Implements IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriter abstract : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type TextWriter = class&#xA;    interface IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public abstract class TextWriter : MarshalByRefObject, IAsyncDisposable, IDisposable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextWriter extends System.MarshalByRefObject implements class System.IAsyncDisposable, class System.IDisposable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextWriter&#xA;Inherits MarshalByRefObject&#xA;Implements IAsyncDisposable, IDisposable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriter abstract : MarshalByRefObject, IAsyncDisposable, IDisposable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type TextWriter = class&#xA;    inherit MarshalByRefObject&#xA;    interface IAsyncDisposable&#xA;    interface IDisposable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public abstract class TextWriter : MarshalByRefObject, IDisposable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextWriter extends System.MarshalByRefObject implements class System.IDisposable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextWriter&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriter abstract : MarshalByRefObject, IDisposable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type TextWriter = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextWriter extends System.MarshalByRefObject implements class System.IDisposable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.IO" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.IO" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.IO" FromVersion="4.2.0.0" To="System.Runtime.Extensions" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.IO" FromVersion="4.2.1.0" To="System.Runtime.Extensions" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.IO" FromVersion="4.2.2.0" To="System.Runtime.Extensions" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0b0f3-101">表示可以编写一个有序字符系列的编写器。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-101">Represents a writer that can write a sequential series of characters.</span></span> <span data-ttu-id="0b0f3-102">此类是抽象类。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-103"><xref:System.IO.TextWriter> 是 <xref:System.IO.StreamWriter> 和 <xref:System.IO.StringWriter>的抽象基类，它们分别向流和字符串写入字符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-103"><xref:System.IO.TextWriter> is the abstract base class of <xref:System.IO.StreamWriter> and <xref:System.IO.StringWriter>, which write characters to streams and strings, respectively.</span></span> <span data-ttu-id="0b0f3-104">创建 <xref:System.IO.TextWriter> 的实例，以将对象写入字符串、向文件写入字符串或序列化 XML。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-104">Create an instance of <xref:System.IO.TextWriter> to write an object to a string, write strings to a file, or to serialize XML.</span></span> <span data-ttu-id="0b0f3-105">你还可以使用 <xref:System.IO.TextWriter> 的实例将文本写入自定义后备存储，方法是使用用于字符串或流的相同 Api，或添加对文本格式的支持。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-105">You can also use an instance of <xref:System.IO.TextWriter> to write text to a custom backing store using the same APIs you would use for a string or a stream, or to add support for text formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-106"><xref:System.IO.TextWriter> 将基元数据类型作为参数的所有 `Write` 方法将值作为字符串写入。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-106">All the `Write` methods of <xref:System.IO.TextWriter> having primitive data types as parameters write out the values as strings.</span></span>  
  
 <span data-ttu-id="0b0f3-107">默认情况下，<xref:System.IO.TextWriter> 不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-107">By default, a <xref:System.IO.TextWriter> is not thread safe.</span></span> <span data-ttu-id="0b0f3-108">有关线程安全包装，请参阅 <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-108">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0b0f3-109">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="0b0f3-110">当你完成使用从此类型派生的任何类型时，应直接或间接释放它。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-110">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="0b0f3-111">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IO.TextWriter.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-111">To dispose of the type directly, call its <xref:System.IO.TextWriter.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="0b0f3-112">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="0b0f3-113">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的 Dispose 和 "使用实现 IDisposable 的对象" 一节。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-113">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="0b0f3-114">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-114">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b0f3-115"><xref:System.IO.TextWriter> 类是一个抽象类。{2}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-115">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0b0f3-116">因此，不要在代码中对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-116">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0b0f3-117"><xref:System.IO.StreamWriter> 类派生自 <xref:System.IO.TextWriter>，并提供成员的实现以写入流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-117">The <xref:System.IO.StreamWriter> class derives from <xref:System.IO.TextWriter> and provides implementations of the members for writing to a stream.</span></span> <span data-ttu-id="0b0f3-118">下面的示例演示如何使用 <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> 方法将包含字符串值的两行写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-118">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="0b0f3-119">重写派生类中的 Dispose 以提供</span><span class="sxs-lookup"><span data-stu-id="0b0f3-119">Override Dispose in a derived class to provide</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="0b0f3-120">派生类必须至少实现 <see cref="M:System.IO.TextWriter.Write(System.Char)" /> 方法才能 <see cref="T:System.IO.TextWriter" />的有用实例。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-120">A derived class must minimally implement the <see cref="M:System.IO.TextWriter.Write(System.Char)" /> method to make a useful instance of <see cref="T:System.IO.TextWriter" />.</span></span></para></block>
    <altmember cref="T:System.IO.StreamWriter" />
    <altmember cref="T:System.IO.StringWriter" />
    <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-121">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-121">File and Stream I/O</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-122">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-122">How to: Read Text from a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-123">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-123">How to: Write Text to a File</span></span></related>
    <related type="Article" href="/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file"><span data-ttu-id="0b0f3-124">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="0b0f3-124">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b0f3-125">初始化 <see cref="T:System.IO.TextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-125">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-126">初始化 <see cref="T:System.IO.TextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-126">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-127">当您不希望为 <xref:System.IO.TextWriter.FormatProvider%2A> 属性提供值时，请使用此构造函数重载。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-127">Use this constructor overload when you do not want to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property.</span></span> <span data-ttu-id="0b0f3-128">当 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性时，当前线程的区域性用于格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-128">When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-129">将此构造函数用于派生类。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-129">Use this constructor for derived classes.</span></span>  
  
 <span data-ttu-id="0b0f3-130">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-130">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="0b0f3-131">复合格式</span><span class="sxs-lookup"><span data-stu-id="0b0f3-131">Composite Formatting</span></span></related>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-132">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-132">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-133">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-133">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-134">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-134">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.TextWriter : IFormatProvider -&gt; System.IO.TextWriter" Usage="new System.IO.TextWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><span data-ttu-id="0b0f3-135">控制格式设置的 <see cref="T:System.IFormatProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-135">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="0b0f3-136">使用指定的格式提供程序初始化 <see cref="T:System.IO.TextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-136">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class with the specified format provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-137">使用此构造函数重载为 <xref:System.IO.TextWriter.FormatProvider%2A> 属性提供一个值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-137">Use this constructor overload to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property.</span></span> <span data-ttu-id="0b0f3-138"><xref:System.IO.TextWriter.FormatProvider%2A> 属性的值指定调用 <xref:System.IO.TextWriter.Write%2A> 和 <xref:System.IO.TextWriter.WriteLine%2A> 方法时使用的特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-138">The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods.</span></span> <span data-ttu-id="0b0f3-139">如果你不希望提供格式提供程序，则可以使用 <xref:System.IO.TextWriter.%23ctor> 构造函数创建一个实例，该构造函数将 <xref:System.IO.TextWriter.FormatProvider%2A> 属性设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-139">If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`.</span></span> <span data-ttu-id="0b0f3-140">当 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性时，当前线程的区域性用于格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-140">When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-141">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-141">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/base-types/composite-formatting"><span data-ttu-id="0b0f3-142">复合格式</span><span class="sxs-lookup"><span data-stu-id="0b0f3-142">Composite Formatting</span></span></related>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-143">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-143">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-144">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-144">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-145">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-145">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-146">关闭当前编写器并释放任何与该编写器关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-146">Closes the current writer and releases any system resources associated with the writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-147">此实现 `Close` 调用 <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> 方法并向其传递一个 `true` 值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-147">This implementation of `Close` calls the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="0b0f3-148">除非显式调用 <xref:System.IO.TextWriter.Flush%2A> 或 `Close`，否则刷新流将不会刷新其基础编码器。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-148">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.TextWriter.Flush%2A> or `Close`.</span></span> <span data-ttu-id="0b0f3-149">将 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> 属性设置为 "`true` 表示将数据从缓冲区刷新到流，但编码器状态不会被刷新。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-149">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="0b0f3-150">这允许编码器保留其状态（部分字符），以使其能够正确编码下一个字符块。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-150">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="0b0f3-151">此方案影响 UTF8 和 UTF7，其中某些字符只能在编码器接收到相邻字符后进行编码。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-151">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0b0f3-152">在派生类中，不要重写 <xref:System.IO.TextWriter.Close%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-152">In derived classes, do not override the <xref:System.IO.TextWriter.Close%2A> method.</span></span> <span data-ttu-id="0b0f3-153">相反，重写 <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> 方法，以添加用于释放资源的代码。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-153">Instead, override the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-154">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-154">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-155">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-155">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-156">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-156">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CoreNewLine">
      <MemberSignature Language="C#" Value="protected char[] CoreNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field family char[] CoreNewLine" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextWriter.CoreNewLine" />
      <MemberSignature Language="VB.NET" Value="Protected CoreNewLine As Char() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;char&gt; ^ CoreNewLine;" />
      <MemberSignature Language="F#" Value="val mutable CoreNewLine : char[]" Usage="System.IO.TextWriter.CoreNewLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b0f3-157">存储用于此 <see langword="TextWriter" /> 的换行符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-157">Stores the newline characters used for this <see langword="TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-158">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-158">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-159">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-159">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-160">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-160">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-161">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-161">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b0f3-162">释放 <see cref="T:System.IO.TextWriter" /> 对象使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-162">Releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-163">释放 <see cref="T:System.IO.TextWriter" /> 对象使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-163">Releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-164">在完成使用 <xref:System.IO.TextWriter.Dispose%2A> 后，应调用 <xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-164">Call <xref:System.IO.TextWriter.Dispose%2A> when you are finished using the <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0b0f3-165"><xref:System.IO.TextWriter.Dispose%2A> 方法使 <xref:System.IO.TextWriter> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-165">The <xref:System.IO.TextWriter.Dispose%2A> method leaves the <xref:System.IO.TextWriter> in an unusable state.</span></span> <span data-ttu-id="0b0f3-166">调用 <xref:System.IO.TextWriter.Dispose%2A>后，必须释放对 <xref:System.IO.TextWriter> 的所有引用，以便垃圾回收器可以回收 <xref:System.IO.TextWriter> 占用的内存。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-166">After calling <xref:System.IO.TextWriter.Dispose%2A>, you must release all references to the <xref:System.IO.TextWriter> so the garbage collector can reclaim the memory that the <xref:System.IO.TextWriter> was occupying.</span></span>  
  
 <span data-ttu-id="0b0f3-167">有关详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)和[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-167">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
 <span data-ttu-id="0b0f3-168">**注意**在释放对 <xref:System.IO.TextWriter>的最后一个引用之前，请始终调用 <xref:System.IO.TextWriter.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-168">**Note** Always call <xref:System.IO.TextWriter.Dispose%2A> before you release your last reference to the <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0b0f3-169">否则，在垃圾回收器调用 <xref:System.IO.TextWriter> 对象的 <xref:System.Object.Finalize%2A> 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-169">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextWriter> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="0b0f3-170">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-170"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0b0f3-171">释放 <see cref="T:System.IO.TextWriter" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-171">Releases the unmanaged resources used by the <see cref="T:System.IO.TextWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-172">此方法由 `Dispose` 和 <xref:System.Object.Finalize%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-172">This method is called by `Dispose` and <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="0b0f3-173">默认情况下，此方法将 `disposing` 参数指定为 `true`。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-173">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="0b0f3-174"><xref:System.Object.Finalize%2A> 将 `disposing` 参数指定为 `false`。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-174"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="0b0f3-175">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.TextWriter> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-175">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextWriter> references.</span></span> <span data-ttu-id="0b0f3-176">此方法将调用每个被引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-176">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0b0f3-177">
            <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-177">
            <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="0b0f3-178">重写此方法时，请注意不要引用先前在中调用 <see langword="Dispose" />的对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-178">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="0b0f3-179">有关如何实现此方法的详细信息，请参阅[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-179">For more information about how to implement this method, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="0b0f3-180">有关 <see cref="M:System.IDisposable.Dispose" /> 和 <see cref="M:System.Object.Finalize" />的详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-180">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span></para></block>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-181">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-181">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-182">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-182">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-183">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-183">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="textWriter.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-184">异步释放由 <see cref="T:System.IO.TextWriter" /> 对象使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-184">Asynchronously releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-185">一个表示异步释放操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-185">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.TextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b0f3-186">当在派生类中重写时，返回用来写输出的该字符编码。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-186">When overridden in a derived class, returns the character encoding in which the output is written.</span></span></summary>
        <value><span data-ttu-id="0b0f3-187">用来写入输出的字符编码。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-187">The character encoding in which the output is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-188">对于必须写入标头的某些 XML 方案，必须包含 `TextWriter`所使用的编码，此属性是必需的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-188">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `TextWriter`.</span></span> <span data-ttu-id="0b0f3-189">这使得 XML 代码可以使用任意 `TextWriter` 并生成正确的 XML 标头。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-189">This enables the XML code to consume an arbitrary `TextWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="0b0f3-190">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-190">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-191">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-191">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-192">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-192">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-193">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-193">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="textWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-194">清理当前编写器的所有缓冲区，使所有缓冲数据写入基础设备。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-194">Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-195">此默认方法不执行任何操作，但派生的类可以重写方法以提供相应的功能。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-195">This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</span></span>  
  
 <span data-ttu-id="0b0f3-196">除非显式调用 `Flush` 或 <xref:System.IO.TextWriter.Close%2A>，否则刷新流将不会刷新其基础编码器。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-196">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.TextWriter.Close%2A>.</span></span> <span data-ttu-id="0b0f3-197">将 <xref:System.IO.StreamWriter.AutoFlush%2A> 设置为 `true` 表示将数据从缓冲区刷新到流，但编码器状态不会被刷新。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-197">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="0b0f3-198">这允许编码器保留其状态（部分字符），以使其能够正确编码下一个字符块。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-198">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="0b0f3-199">此方案影响 UTF8 和 UTF7，其中某些字符只能在编码器接收到相邻字符后编码。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-199">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-200">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-200">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-201">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-201">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-202">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-202">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="textWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-203">异步清理当前编写器的所有缓冲区，使所有缓冲数据写入基础设备。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-203">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-204">表示异步刷新操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-204">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-205">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-205">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-206">编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-206">The writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public virtual IFormatProvider FormatProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.FormatProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FormatProvider As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IFormatProvider ^ FormatProvider { IFormatProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormatProvider : IFormatProvider" Usage="System.IO.TextWriter.FormatProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b0f3-207">获取控制格式设置的对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-207">Gets an object that controls formatting.</span></span></summary>
        <value><span data-ttu-id="0b0f3-208">特定区域性的 <see cref="T:System.IFormatProvider" /> 对象，或者如果未指定任何其他区域性，则为当前区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-208">An <see cref="T:System.IFormatProvider" /> object for a specific culture, or the formatting of the current culture if no other culture is specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-209"><xref:System.IO.TextWriter.FormatProvider%2A> 属性的值指定调用 <xref:System.IO.TextWriter.Write%2A> 和 <xref:System.IO.TextWriter.WriteLine%2A> 方法时使用的特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-209">The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods.</span></span> <span data-ttu-id="0b0f3-210">如果你不希望提供格式提供程序，则可以使用 <xref:System.IO.TextWriter.%23ctor> 构造函数创建一个实例，该构造函数将 <xref:System.IO.TextWriter.FormatProvider%2A> 属性设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-210">If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`.</span></span> <span data-ttu-id="0b0f3-211">当 <xref:System.IO.TextWriter.FormatProvider%2A> 属性包含 `null`时，当前线程的区域性用于格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-211">When the <xref:System.IO.TextWriter.FormatProvider%2A> property contains `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-212">有关创建文件和将文本写入文件的示例，请参阅[如何：将文本写入文件](/dotnet/standard/io/how-to-write-text-to-a-file)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-212">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](/dotnet/standard/io/how-to-write-text-to-a-file).</span></span> <span data-ttu-id="0b0f3-213">有关从文件读取文本的示例，请参阅[如何：从文件读取文本](/dotnet/standard/io/how-to-read-text-from-a-file)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-213">For an example of reading text from a file, see [How to: Read Text from a File](/dotnet/standard/io/how-to-read-text-from-a-file).</span></span> <span data-ttu-id="0b0f3-214">有关从二进制文件读取和写入二进制文件的示例，请参阅[如何：读取和写入到新创建的数据文件](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-214">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file).</span></span>  
  
 <span data-ttu-id="0b0f3-215">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-215">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-216">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-216">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-217">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-217">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-218">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-218">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public virtual string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.IO.TextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b0f3-219">获取或设置由当前 <see langword="TextWriter" /> 使用的行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-219">Gets or sets the line terminator string used by the current <see langword="TextWriter" />.</span></span></summary>
        <value><span data-ttu-id="0b0f3-220">当前 <see langword="TextWriter" /> 的行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-220">The line terminator string for the current <see langword="TextWriter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-221">默认行终止符字符串是一个回车符后跟一个换行符（"\r\n"）。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-221">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="0b0f3-222">调用 `WriteLine` 方法之一时，将行终止符字符串写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-222">The line terminator string is written to the text stream whenever one of the `WriteLine` methods is called.</span></span> <span data-ttu-id="0b0f3-223">为了使 `TextWriter` 写入的文本可供 <xref:System.IO.TextReader>读取，只应将 "\n" 或 "\r\n" 用作终止符字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-223">In order for text written by the `TextWriter` to be readable by a <xref:System.IO.TextReader>, only "\n" or "\r\n" should be used as terminator strings.</span></span> <span data-ttu-id="0b0f3-224">如果 `NewLine` 设置为 `null`，则改为使用默认换行字符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-224">If `NewLine` is set to `null`, the default newline character is used instead.</span></span>  
  
 <span data-ttu-id="0b0f3-225">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-225">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-226">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-226">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-227">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-227">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-228">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-228">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextWriter ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextWriter" Usage="System.IO.TextWriter.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b0f3-229">提供 <see langword="TextWriter" />，它不带任何可写入但无法从中读取的后备存储。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-229">Provides a <see langword="TextWriter" /> with no backing store that can be written to, but not read from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-230">使用 `Null` 将输出重定向到不会使用任何操作系统资源的流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-230">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="0b0f3-231">当对 `Null`调用 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> 方法时，调用只会返回，而不会向任何后备存储写入任何数据。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-231">When the <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="0b0f3-232">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-232">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-233">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-233">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-234">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-234">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-235">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-235">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Synchronized (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextWriter Synchronized(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (writer As TextWriter) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextWriter ^ Synchronized(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextWriter -&gt; System.IO.TextWriter" Usage="System.IO.TextWriter.Synchronized writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="0b0f3-236">要同步的 <see langword="TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-236">The <see langword="TextWriter" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="0b0f3-237">在指定的 <see langword="TextWriter" /> 周围创建线程安全包装。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-237">Creates a thread-safe wrapper around the specified <see langword="TextWriter" />.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-238">线程安全包装。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-238">A thread-safe wrapper.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-239">对返回的包装的所有写入操作都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-239">All write operations to the returned wrapper will be thread safe.</span></span> <span data-ttu-id="0b0f3-240">调用此方法可以确保一次只有一个线程可以在返回的 <xref:System.IO.TextWriter> 实例上执行方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-240">You call this method to ensure that only one thread at a time can execute the methods on the <xref:System.IO.TextWriter> instance that is returned.</span></span> <span data-ttu-id="0b0f3-241">有关同步和线程处理的详细信息，请参阅为[多线程处理同步数据](/dotnet/standard/threading/synchronizing-data-for-multithreading)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-241">For more information about synchronization and threading, see [Synchronizing Data for Multithreading](/dotnet/standard/threading/synchronizing-data-for-multithreading).</span></span>  
  
 <span data-ttu-id="0b0f3-242">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-242">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-243"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-243"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-244">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-244">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-245">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-245">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-246">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-246">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="textWriter.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-247">有关此成员的说明，请参见 <see cref="M:System.IDisposable.Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-247">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="0b0f3-248">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-248">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0b0f3-249">它只能在 <xref:System.IO.TextWriter> 实例被强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-249">It can be used only when the <xref:System.IO.TextWriter> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b0f3-250">将数据写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-250">Writes data to a text stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-251">要写入的 <see langword="Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-251">The <see langword="Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-252">将 <see langword="Boolean" /> 值的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-252">Writes the text representation of a <see langword="Boolean" /> value to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-253">指定值的文本表示形式是通过调用 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-253">The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0b0f3-254">此方法输出 <xref:System.Boolean.TrueString?displayProperty=nameWithType> 或 <xref:System.Boolean.FalseString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-254">This method outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b0f3-255">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-255">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-256"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-256">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-257">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-257">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-258">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-258">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-259">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-259">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-260">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-260">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (char value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (value As Char)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(char value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit" Usage="textWriter.Write value" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="C#" Value="public virtual void Write (char value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Char)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(char value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="textWriter.Write value" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-261">要写入文本流中的字符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-261">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-262">将字符写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-262">Writes a character to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-263">此默认方法不执行任何操作，但派生的类可以重写方法以提供相应的功能。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-263">This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</span></span>  
  
 <span data-ttu-id="0b0f3-264">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-264">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-265"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-265">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-266">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-266">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.Char)" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-267">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-267">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-268">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-268">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-269">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-269">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="textWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-270">要写入文本流中的字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-270">The character array to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-271">将字符数组写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-271">Writes a character array to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-272">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-272">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0b0f3-273">此默认方法调用 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 方法，并传递整个字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-273">This default method calls the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method and passes the entire character array.</span></span> <span data-ttu-id="0b0f3-274">如果 `null`字符数组，则不写入任何内容。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-274">If the character array is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="0b0f3-275">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-275">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-276"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-276">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-277">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-277">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char[])" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-278">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-278">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-279">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-279">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-280">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-280">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member Write : decimal -&gt; unit&#xA;override this.Write : decimal -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-281">要写入的十进制值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-281">The decimal value to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-282">将小数值的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-282">Writes the text representation of a decimal value to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-283">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-283">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-284"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-284">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-285">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-285">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-286">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-286">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-287">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-287">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-288">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-288">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-289">要写入的 8 字节浮点值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-289">The 8-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-290">将 8 字节浮点值的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-290">Writes the text representation of an 8-byte floating-point value to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-291">指定值的文本表示形式是通过调用 <xref:System.Double.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-291">The text representation of the specified value is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-292">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-292">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-293">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-293">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-294"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-294">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-295">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-295">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-296">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-296">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-297">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-297">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-298">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-298">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-299">要写入的 4 字节有符号整数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-299">The 4-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-300">将 4 字节带符号整数的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-300">Writes the text representation of a 4-byte signed integer to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-301">指定值的文本表示形式是通过调用 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-301">The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-302">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-302">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-303">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-303">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-304"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-304">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-305">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-305">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-306">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-306">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-307">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-307">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-308">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-308">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-309">要写入的 8 字节有符号整数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-309">The 8-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-310">将 8 字节带符号整数的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-310">Writes the text representation of an 8-byte signed integer to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-311">指定值的文本表示形式是通过调用 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-311">The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-312">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-312">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-313">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-313">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 [<span data-ttu-id="0b0f3-314">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-314">How to: Write Text to a File</span></span>](/dotnet/standard/io/how-to-write-text-to-a-file)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-315"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-315">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-316">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-316">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-317">要写入的对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-317">The object to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-318">通过在对象上调用 <see langword="ToString" /> 方法将此对象的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-318">Writes the text representation of an object to the text stream by calling the <see langword="ToString" /> method on that object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-319">此重载等效于 <xref:System.IO.TextWriter.Write%28System.String%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-319">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%29> overload.</span></span>  
  
 <span data-ttu-id="0b0f3-320">如果 `null`指定的对象，则不会执行任何操作，也不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-320">If the specified object is `null`, no action is taken and no exception is thrown.</span></span> <span data-ttu-id="0b0f3-321">否则，将调用对象的 `ToString` 方法来生成字符串表示形式，然后将生成的字符串写入输出流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-321">Otherwise, the object's `ToString` method is called to produce the string representation, and the resulting string is then written to the output stream.</span></span> <span data-ttu-id="0b0f3-322">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-322">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-323">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-323">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-324"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-324">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-325">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-325">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-326">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-326">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-327">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-327">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-328">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-328">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="textWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-329">要写入的字符范围。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-329">The character span to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-330">将字符范围写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-330">Writes a character span to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0b0f3-331">通过调用 ReadOnlySpan<Char>生成指定值的文本表示形式[。ToString](xref:System.ReadOnlySpan%601.ToString%2A)方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-331">The text representation of the specified value is produced by calling the [ReadOnlySpan<Char>.ToString](xref:System.ReadOnlySpan%601.ToString%2A) method.</span></span>

<span data-ttu-id="0b0f3-332">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-332">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-333">要写入的 4 字节浮点值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-333">The 4-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-334">将 4 字节浮点值的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-334">Writes the text representation of a 4-byte floating-point value to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-335">指定值的文本表示形式是通过调用 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-335">The text representation of the specified value is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-336">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-336">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-337">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-337">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-338"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-338">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-339">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-339">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-340">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-340">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-341">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-341">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-342">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-342">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-343">要写入的字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-343">The string to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-344">将字符串写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-344">Writes a string to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-345">此重载等效于 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-345">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="0b0f3-346">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-346">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b0f3-347">如果 `value` 为 `null`，则不会将任何内容写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-347">If `value` is `null`, nothing is written to the text stream.</span></span>  
  
 <span data-ttu-id="0b0f3-348">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-348">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-349"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-349">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-350">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-350">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.String)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.String)" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-351">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-351">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-352">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-352">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-353">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-353">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Text.StringBuilder -&gt; unit&#xA;override this.Write : System.Text.StringBuilder -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-354">要作为字符串生成器写入文本流的字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-354">The string, as a string builder, to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-355">将字符串生成器写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-355">Writes a string builder to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0b0f3-356">此方法等效于 `Write(stringBuilder.ToString())`，但它使用 <xref:System.Text.StringBuilder.GetChunks%2A?displayProperty=nameWithType> 方法来避免创建中间字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-356">This method is equivalent to `Write(stringBuilder.ToString())`, but it uses the <xref:System.Text.StringBuilder.GetChunks%2A?displayProperty=nameWithType>  method to avoid creating the intermediate string.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint32 -&gt; unit&#xA;override this.Write : uint32 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-357">要写入的 4 字节无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-357">The 4-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-358">将 4 字节无符号整数的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-358">Writes the text representation of a 4-byte unsigned integer to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-359">指定值的文本表示形式是通过调用 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-359">The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-360">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-360">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-361">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-361">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-362"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-362">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-363">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-363">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-364">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-364">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-365">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-365">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-366">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-366">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint64 -&gt; unit&#xA;override this.Write : uint64 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-367">要写入的 8 字节无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-367">The 8-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-368">将 8 字节无符号整数的文本表示形式写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-368">Writes the text representation of an 8-byte unsigned integer to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-369">指定值的文本表示形式是通过调用 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-369">The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-370">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-370">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-371">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-371">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-372"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-372">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-373">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-373">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-374">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-374">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-375">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-375">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-376">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-376">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="textWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0b0f3-377">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-377">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="0b0f3-378">要格式化和写入的对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-378">The object to format and write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-379">使用与 <see cref="M:System.String.Format(System.String,System.Object)" /> 方法相同的语义将格式化字符串写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-379">Writes a formatted string to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-380">此方法使用复合格式设置将对象的值转换为其字符串表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-380">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0b0f3-381">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-381">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0b0f3-382">有关复合格式设置功能的详细信息，请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-382">For more information about the composite formatting feature, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="0b0f3-383">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-383">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-384">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)和[自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-384">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-385">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-385">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-386">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-386">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="0b0f3-387">`format` 参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-387">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0b0f3-388">格式设置过程将每个格式项替换为相应对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-388">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0b0f3-389">格式项的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-389">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0b0f3-390">{*index*[，*length*] [：*格式字符串*]}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-390">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0b0f3-391">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-391">Elements in square brackets are optional.</span></span> <span data-ttu-id="0b0f3-392">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-392">The following table describes each element.</span></span> <span data-ttu-id="0b0f3-393">有关复合格式设置功能的详细信息（包括格式项的语法），请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-393">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
|<span data-ttu-id="0b0f3-394">元素</span><span class="sxs-lookup"><span data-stu-id="0b0f3-394">Element</span></span>|<span data-ttu-id="0b0f3-395">说明</span><span class="sxs-lookup"><span data-stu-id="0b0f3-395">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0b0f3-396">索引</span><span class="sxs-lookup"><span data-stu-id="0b0f3-396">index</span></span>|<span data-ttu-id="0b0f3-397">要设置格式的对象的参数列表中的从零开始的位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-397">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0b0f3-398">如果 `null`由*index*指定的对象，则会将格式项替换为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-398">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0b0f3-399">因为此重载在其参数列表中只有一个对象，所以*index*的值必须始终为0。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-399">Because this overload has only a single object in its parameter list, the value of *index* must always be 0.</span></span> <span data-ttu-id="0b0f3-400">如果*索引*位置中没有参数，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-400">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0b0f3-401">、*length*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-401">,*length*</span></span>|<span data-ttu-id="0b0f3-402">参数的字符串表示形式中的最小字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-402">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0b0f3-403">如果为正，则参数为右对齐; 否则为。如果为负，则为左对齐。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-403">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0b0f3-404">：*格式字符串*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-404">:*formatString*</span></span>|<span data-ttu-id="0b0f3-405">要设置格式的对象支持的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-405">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0b0f3-406">*格式字符串*的可能值与对象的 `ToString(string format)` 方法所支持的值相同。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-406">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0b0f3-407">如果未指定 "*格式字符串*" 并且要设置格式的对象实现 <xref:System.IFormattable> 接口，则 `null` 将作为用作 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 格式字符串的 `format` 参数的值进行传递。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-407">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0b0f3-408">需要 "{" 和 "}" 等前导和尾随大括号。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-408">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0b0f3-409">若要在 `format`中指定单个文本大括号字符，请指定两个前导或尾随大括号字符;也就是说，"{{" 或 "}}"。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-409">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0b0f3-410">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-410">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b0f3-411">如果在格式字符串中未引用指定的对象，则会将其忽略。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-411">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0b0f3-412">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-412">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-413"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-413"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-414"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-414">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-415">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-415">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0b0f3-416"><paramref name="format" /> 不是有效的复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-416"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="0b0f3-417">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0b0f3-417">-or-</span></span> 
<span data-ttu-id="0b0f3-418">格式项的索引小于 0 （0）、或大于或等于要设置格式的对象数 (用于该方法重载，为一)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-418">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-419">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-419">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-420">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-420">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-421">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-421">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="textWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0b0f3-422">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-422">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="0b0f3-423">一个对象数组，其中包含零个或多个要设置格式和写入的对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-423">An object array that contains zero or more objects to format and write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-424">使用与 <see cref="M:System.String.Format(System.String,System.Object[])" /> 方法相同的语义将格式化字符串写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-424">Writes a formatted string to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-425">此方法使用复合格式设置将对象的值转换为其字符串表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-425">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0b0f3-426">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-426">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0b0f3-427">有关复合格式设置功能的详细信息，请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-427">For more information about the composite formatting feature, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="0b0f3-428">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-428">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-429">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)和[自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-429">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-430">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-430">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-431">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-431">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="0b0f3-432">`format` 参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-432">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0b0f3-433">格式设置过程将每个格式项替换为相应对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-433">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0b0f3-434">格式项的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-434">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0b0f3-435">{*index*[，*length*] [：*格式字符串*]}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-435">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0b0f3-436">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-436">Elements in square brackets are optional.</span></span> <span data-ttu-id="0b0f3-437">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-437">The following table describes each element.</span></span> <span data-ttu-id="0b0f3-438">有关复合格式设置功能的详细信息（包括格式项的语法），请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-438">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
|<span data-ttu-id="0b0f3-439">元素</span><span class="sxs-lookup"><span data-stu-id="0b0f3-439">Element</span></span>|<span data-ttu-id="0b0f3-440">说明</span><span class="sxs-lookup"><span data-stu-id="0b0f3-440">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0b0f3-441">索引</span><span class="sxs-lookup"><span data-stu-id="0b0f3-441">index</span></span>|<span data-ttu-id="0b0f3-442">要设置格式的对象的参数列表中的从零开始的位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-442">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0b0f3-443">如果 `null`由*index*指定的对象，则会将格式项替换为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-443">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0b0f3-444">由于此重载在其参数列表中具有数组，因此*index*的值必须始终小于数组的长度。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-444">Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array.</span></span> <span data-ttu-id="0b0f3-445">如果*索引*位置中没有参数，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-445">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0b0f3-446">、*length*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-446">,*length*</span></span>|<span data-ttu-id="0b0f3-447">参数的字符串表示形式中的最小字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-447">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0b0f3-448">如果为正，则参数为右对齐; 否则为。如果为负，则为左对齐。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-448">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0b0f3-449">：*格式字符串*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-449">:*formatString*</span></span>|<span data-ttu-id="0b0f3-450">要设置格式的对象支持的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-450">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0b0f3-451">*格式字符串*的可能值与对象的 `ToString(string format)` 方法所支持的值相同。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-451">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0b0f3-452">如果未指定 "*格式字符串*" 并且要设置格式的对象实现 <xref:System.IFormattable> 接口，则 `null` 将作为用作 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 格式字符串的 `format` 参数的值进行传递。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-452">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0b0f3-453">需要 "{" 和 "}" 等前导和尾随大括号。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-453">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0b0f3-454">若要在 `format`中指定单个文本大括号字符，请指定两个前导或尾随大括号字符;也就是说，"{{" 或 "}}"。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-454">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0b0f3-455">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-455">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b0f3-456">如果在格式字符串中未引用指定的对象，则会将其忽略。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-456">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0b0f3-457">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-457">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-458"><paramref name="format" /> 或 <paramref name="arg" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-458"><paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-459"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-459">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-460">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-460">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0b0f3-461"><paramref name="format" /> 不是有效的复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-461"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="0b0f3-462">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0b0f3-462">-or-</span></span> 
<span data-ttu-id="0b0f3-463">格式项的索引小于 0（零），或者大于或等于 <paramref name="arg" /> 数组的长度。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-463">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="arg" /> array.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-464">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-464">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-465">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-465">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-466">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-466">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="textWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-467">要从中写出数据的字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-467">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="0b0f3-468">在开始接收数据时缓存中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-468">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="0b0f3-469">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-469">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-470">将字符的子数组写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-470">Writes a subarray of characters to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-471">此方法将数据从 `index`位置开始的 `buffer` 字符数组写入此 `TextWriter` 中的 `count` 字符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-471">This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.</span></span>  
  
 <span data-ttu-id="0b0f3-472">此重载等效于 `index` 和（`index` + `count`）之间 `buffer` 中每个字符的 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-472">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload for each character in `buffer` between `index` and (`index` + `count`).</span></span>  
  
 <span data-ttu-id="0b0f3-473">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-473">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b0f3-474">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-474">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-475">
          <paramref name="buffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-475">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b0f3-476"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-476"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-477"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-477">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-478">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-478">An I/O error occurs.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-479">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-479">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-480">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-480">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-481">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-481">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="textWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0b0f3-482">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-482">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="0b0f3-483">要格式化和写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-483">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="0b0f3-484">要格式化和写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-484">The second object to format and write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-485">使用与 <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> 方法相同的语义将格式化字符串写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-485">Writes a formatted string to the text stream using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-486">此方法使用复合格式设置将对象的值转换为其字符串表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-486">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0b0f3-487">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-487">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0b0f3-488">有关复合格式设置功能的详细信息，请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-488">For more information about the composite formatting feature, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="0b0f3-489">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-489">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-490">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)和[自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-490">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-491">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-491">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-492">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-492">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="0b0f3-493">`format` 参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-493">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0b0f3-494">格式设置过程将每个格式项替换为相应对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-494">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0b0f3-495">格式项的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-495">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0b0f3-496">{*index*[，*length*] [：*格式字符串*]}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-496">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0b0f3-497">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-497">Elements in square brackets are optional.</span></span> <span data-ttu-id="0b0f3-498">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-498">The following table describes each element.</span></span> <span data-ttu-id="0b0f3-499">有关复合格式设置功能的详细信息（包括格式项的语法），请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-499">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
|<span data-ttu-id="0b0f3-500">元素</span><span class="sxs-lookup"><span data-stu-id="0b0f3-500">Element</span></span>|<span data-ttu-id="0b0f3-501">说明</span><span class="sxs-lookup"><span data-stu-id="0b0f3-501">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0b0f3-502">索引</span><span class="sxs-lookup"><span data-stu-id="0b0f3-502">index</span></span>|<span data-ttu-id="0b0f3-503">要设置格式的对象的参数列表中的从零开始的位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-503">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0b0f3-504">如果 `null`由*index*指定的对象，则会将格式项替换为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-504">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0b0f3-505">由于此重载在其参数列表中有两个对象，因此*index*的值必须始终为0或1。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-505">Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1.</span></span> <span data-ttu-id="0b0f3-506">如果*索引*位置中没有参数，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-506">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0b0f3-507">、*length*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-507">,*length*</span></span>|<span data-ttu-id="0b0f3-508">参数的字符串表示形式中的最小字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-508">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0b0f3-509">如果为正，则参数为右对齐; 否则为。如果为负，则为左对齐。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-509">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0b0f3-510">：*格式字符串*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-510">:*formatString*</span></span>|<span data-ttu-id="0b0f3-511">要设置格式的对象支持的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-511">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0b0f3-512">*格式字符串*的可能值与对象的 `ToString(string format)` 方法所支持的值相同。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-512">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0b0f3-513">如果未指定 "*格式字符串*" 并且要设置格式的对象实现 <xref:System.IFormattable> 接口，则 `null` 将作为用作 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 格式字符串的 `format` 参数的值进行传递。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-513">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0b0f3-514">需要 "{" 和 "}" 等前导和尾随大括号。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-514">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0b0f3-515">若要在 `format`中指定单个文本大括号字符，请指定两个前导或尾随大括号字符;也就是说，"{{" 或 "}}"。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-515">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0b0f3-516">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-516">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b0f3-517">如果在格式字符串中未引用指定的对象，则会将其忽略。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-517">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0b0f3-518">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-518">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-519"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-519"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-520"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-520">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-521">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-521">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0b0f3-522"><paramref name="format" /> 不是有效的复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-522"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="0b0f3-523">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0b0f3-523">-or-</span></span> 
<span data-ttu-id="0b0f3-524">格式项的索引小于 0 （0） 或大于或等于要设置格式的对象数 (用于该方法重载，为二)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-524">The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-525">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-525">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-526">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-526">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-527">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-527">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj * obj -&gt; unit" Usage="textWriter.Write (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0b0f3-528">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-528">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="0b0f3-529">要格式化和写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-529">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="0b0f3-530">要格式化和写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-530">The second object to format and write.</span></span></param>
        <param name="arg2"><span data-ttu-id="0b0f3-531">要设置格式和写入的第三个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-531">The third object to format and write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-532">使用与 <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> 方法相同的语义将格式化字符串写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-532">Writes a formatted string to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-533">此方法使用复合格式设置将对象的值转换为其字符串表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-533">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0b0f3-534">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-534">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0b0f3-535">有关复合格式设置功能的详细信息，请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-535">For more information about the composite formatting feature, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="0b0f3-536">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-536">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-537">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)和[自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-537">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-538">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-538">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-539">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-539">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="0b0f3-540">`format` 参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-540">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0b0f3-541">格式设置过程将每个格式项替换为相应对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-541">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0b0f3-542">格式项的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-542">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0b0f3-543">{*index*[，*length*] [：*格式字符串*]}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-543">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0b0f3-544">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-544">Elements in square brackets are optional.</span></span> <span data-ttu-id="0b0f3-545">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-545">The following table describes each element.</span></span> <span data-ttu-id="0b0f3-546">有关复合格式设置功能的详细信息（包括格式项的语法），请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-546">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
|<span data-ttu-id="0b0f3-547">元素</span><span class="sxs-lookup"><span data-stu-id="0b0f3-547">Element</span></span>|<span data-ttu-id="0b0f3-548">说明</span><span class="sxs-lookup"><span data-stu-id="0b0f3-548">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0b0f3-549">索引</span><span class="sxs-lookup"><span data-stu-id="0b0f3-549">index</span></span>|<span data-ttu-id="0b0f3-550">要设置格式的对象的参数列表中的从零开始的位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-550">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0b0f3-551">如果 `null`由*index*指定的对象，则会将格式项替换为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-551">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0b0f3-552">因为此重载在其参数列表中有三个对象，所以*index*的值必须始终是0、1或2。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-552">Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2.</span></span> <span data-ttu-id="0b0f3-553">如果*索引*位置中没有参数，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-553">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0b0f3-554">、*length*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-554">,*length*</span></span>|<span data-ttu-id="0b0f3-555">参数的字符串表示形式中的最小字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-555">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0b0f3-556">如果为正，则参数为右对齐; 否则为。如果为负，则为左对齐。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-556">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0b0f3-557">：*格式字符串*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-557">:*formatString*</span></span>|<span data-ttu-id="0b0f3-558">要设置格式的对象支持的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-558">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0b0f3-559">*格式字符串*的可能值与对象的 `ToString(string format)` 方法所支持的值相同。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-559">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0b0f3-560">如果未指定 "*格式字符串*" 并且要设置格式的对象实现 <xref:System.IFormattable> 接口，则 `null` 将作为用作 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 格式字符串的 `format` 参数的值进行传递。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-560">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0b0f3-561">需要 "{" 和 "}" 等前导和尾随大括号。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-561">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0b0f3-562">若要在 `format`中指定单个文本大括号字符，请指定两个前导或尾随大括号字符;也就是说，"{{" 或 "}}"。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-562">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0b0f3-563">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-563">This method does not search the specified string  for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b0f3-564">如果在格式字符串中未引用指定的对象，则会将其忽略。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-564">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0b0f3-565">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-565">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-566"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-566"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-567"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-567">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-568">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-568">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0b0f3-569"><paramref name="format" /> 不是有效的复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-569"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="0b0f3-570">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0b0f3-570">-or-</span></span> 
<span data-ttu-id="0b0f3-571">格式项的索引小于 0 （0）、或大于或等于要设置格式的对象数 (用于该方法重载，为三)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-571">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-572">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-572">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-573">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-573">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-574">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-574">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b0f3-575">将数据异步写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-575">Writes data to the text stream asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-576">要写入文本流中的字符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-576">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-577">将字符异步写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-577">Writes a character to the text stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-578">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-578">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-579"><xref:System.IO.TextWriter> 类是一个抽象类。{2}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-579">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0b0f3-580">因此，不要在代码中对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-580">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0b0f3-581">有关使用 <xref:System.IO.TextWriter.WriteAsync%2A> 方法的示例，请参阅 <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-581">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-582">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-582">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-583">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-583">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Char()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : char[] -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-584">要写入文本流中的字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-584">The character array to write to the text stream.</span></span> <span data-ttu-id="0b0f3-585">如果 <paramref name="buffer" /> 为 <see langword="null" />，则不写入任何内容。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-585">If <paramref name="buffer" /> is <see langword="null" />, nothing is written.</span></span></param>
        <summary><span data-ttu-id="0b0f3-586">将字符数组异步写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-586">Writes a character array to the text stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-587">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-587">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-588">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-588">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-589">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-589">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-590">要写入的字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-590">The string to write.</span></span> <span data-ttu-id="0b0f3-591">如果 <paramref name="value" /> 为 <see langword="null" />，则不会将任何内容写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-591">If <paramref name="value" /> is <see langword="null" />, nothing is written to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-592">将字符串异步写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-592">Writes a string to the text stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-593">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-593">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-594"><xref:System.IO.TextWriter> 类是一个抽象类。{2}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-594">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0b0f3-595">因此，不要在代码中对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-595">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0b0f3-596">有关使用 <xref:System.IO.TextWriter.WriteAsync%2A> 方法的示例，请参阅 <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-596">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-597">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-597">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-598">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-598">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.String)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (buffer As ReadOnlyMemory(Of Char), Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-599">要写入文本流中的字符内存区域。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-599">The character memory region to write to the text stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="0b0f3-600">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-600">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="0b0f3-601">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-601">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="0b0f3-602">以异步形式将字符内存区域写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-602">Asynchronously writes a character memory region to the text stream.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-603">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-603">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (System.Text.StringBuilder value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(class System.Text.StringBuilder value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As StringBuilder, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-604">要作为字符串生成器写入文本流的字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-604">The string, as a string builder, to write to the text stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="0b0f3-605">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-605">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="0b0f3-606">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-606">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="0b0f3-607">以异步形式将字符串生成器写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-607">Asynchronously writes a string builder to the text stream.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-608">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-608">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

<span data-ttu-id="0b0f3-609">此方法等效于调用 `WriteAsync(stringBuilder.ToString())`，但它使用 <xref:System.Text.StringBuilder.GetChunks?displayProperty=nameWithType> 方法来避免创建中间字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-609">This method is equivalent to calling `WriteAsync(stringBuilder.ToString())`, however, it uses the <xref:System.Text.StringBuilder.GetChunks?displayProperty=nameWithType> method to avoid creating the intermediate string.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-610">要从中写出数据的字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-610">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="0b0f3-611">在开始接收数据时缓存中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-611">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="0b0f3-612">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-612">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-613">以异步形式将字符的子数组写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-613">Writes a subarray of characters to the text stream asynchronously.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-614">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-614">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-615"><xref:System.IO.TextWriter> 类是一个抽象类。{2}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-615">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0b0f3-616">因此，不要在代码中对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-616">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0b0f3-617">有关使用 <xref:System.IO.TextWriter.WriteAsync%2A> 方法的示例，请参阅 <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-617">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-618"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-618"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b0f3-619"><paramref name="index" /> 加 <paramref name="count" /> 大于缓冲区长度。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-619">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b0f3-620"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-620"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-621">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-621">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-622">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-622">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b0f3-623">将数据写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-623">Writes data to the text stream, followed by a line terminator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="textWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-624">将行终止符写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-624">Writes a line terminator to the text stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0b0f3-625">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-625">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="0b0f3-626">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-626">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-627"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-627">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-628">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-628">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-629">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-629">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-630">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-630">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-631">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-631">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-632">要写入的 <see langword="Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-632">The <see langword="Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-633">将 <see langword="Boolean" /> 值的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-633">Writes the text representation of a <see langword="Boolean" /> value to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-634">指定值的文本表示形式是通过调用 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-634">The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0b0f3-635">此方法输出 <xref:System.Boolean.TrueString?displayProperty=nameWithType> 或 <xref:System.Boolean.FalseString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-635">This method outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b0f3-636">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-636">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-637">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-637">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-638"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-638">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-639">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-639">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-640">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-640">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-641">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-641">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-642">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-642">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-643">要写入文本流中的字符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-643">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-644">将字符写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-644">Writes a character to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-645">此重载等效于后面跟 <xref:System.IO.TextWriter.WriteLine> <xref:System.IO.TextWriter.Write%28System.Char%29>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-645">This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%29> followed by <xref:System.IO.TextWriter.WriteLine> .</span></span>  
  
 <span data-ttu-id="0b0f3-646">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-646">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-647">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-647">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-648"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-648">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-649">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-649">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-650">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-650">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-651">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-651">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-652">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-652">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="textWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-653">从其读取数据的字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-653">The character array from which data is read.</span></span></param>
        <summary><span data-ttu-id="0b0f3-654">将字符数组写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-654">Writes an array of characters to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-655">`buffer` 中的所有字符都将写入基础流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-655">All the characters in `buffer` are written to the underlying stream.</span></span> <span data-ttu-id="0b0f3-656">如果字符数组为 `null`，则仅写入行结束符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-656">If the character array is `null`, only the line terminator is written.</span></span>  
  
 <span data-ttu-id="0b0f3-657">此重载等效于后面跟 <xref:System.IO.TextWriter.WriteLine> <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-657">This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> followed by <xref:System.IO.TextWriter.WriteLine> .</span></span>  
  
 <span data-ttu-id="0b0f3-658">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-658">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-659">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-659">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-660"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-660">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-661">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-661">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-662">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-662">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-663">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-663">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-664">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-664">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : decimal -&gt; unit&#xA;override this.WriteLine : decimal -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-665">要写入的十进制值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-665">The decimal value to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-666">将小数值的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-666">Writes the text representation of a decimal value to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-667">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-667">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="0b0f3-668">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-668">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 <span data-ttu-id="0b0f3-669">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-669">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-670"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-670">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-671">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-671">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-672">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-672">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-673">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-673">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-674">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-674">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-675">要写入的 8 字节浮点值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-675">The 8-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-676">将 8 字节浮点值的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-676">Writes the text representation of a 8-byte floating-point value to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-677">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-677">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="0b0f3-678">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-678">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 <span data-ttu-id="0b0f3-679">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-679">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-680"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-680">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-681">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-681">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-682">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-682">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-683">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-683">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-684">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-684">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-685">要写入的 4 字节有符号整数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-685">The 4-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-686">将 4 字节带符号整数的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-686">Writes the text representation of a 4-byte signed integer to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-687">指定值的文本表示形式是通过调用 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-687">The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-688">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-688">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-689">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-689">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-690">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-690">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-691"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-691">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-692">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-692">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-693">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-693">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-694">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-694">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-695">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-695">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-696">要写入的 8 字节有符号整数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-696">The 8-byte signed integer to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-697">将 8 字节带符号整数的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-697">Writes the text representation of an 8-byte signed integer to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-698">指定值的文本表示形式是通过调用 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-698">The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-699">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-699">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-700">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-700">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-701">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-701">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-702"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-702">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-703">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-703">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-704">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-704">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-705">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-705">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-706">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-706">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-707">要写入的对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-707">The object to write.</span></span> <span data-ttu-id="0b0f3-708">如果 <paramref name="value" /> 为 <see langword="null" />，则只写入行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-708">If <paramref name="value" /> is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="0b0f3-709">通过在对象上调用 <see langword="ToString" /> 方法将此对象的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-709">Writes the text representation of an object to the text stream, by calling the <see langword="ToString" /> method on that object, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="0b0f3-710">此重载等效于 <xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-710">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29> overload.</span></span> <span data-ttu-id="0b0f3-711">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-711">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>

<span data-ttu-id="0b0f3-712">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-712">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="0b0f3-713">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-713">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-714"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-714">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-715">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-715">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-716">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-716">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-717">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-717">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-718">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-718">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="textWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-719">要写入文本流中的字符范围值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-719">The char span value to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-720">将字符范围的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-720">Writes the text representation of a character span to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="0b0f3-721">通过调用 ReadOnlySpan<Char>生成指定值的文本表示形式[。ToString](xref:System.ReadOnlySpan%601.ToString%2A)方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-721">The text representation of the specified value is produced by calling the [ReadOnlySpan<Char>.ToString](xref:System.ReadOnlySpan%601.ToString%2A) method.</span></span>

<span data-ttu-id="0b0f3-722">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-722">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="0b0f3-723">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-723">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-724">要写入的 4 字节浮点值。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-724">The 4-byte floating-point value to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-725">将 4 字节浮点值的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-725">Writes the text representation of a 4-byte floating-point value to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="0b0f3-726">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-726">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="0b0f3-727">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-727">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>

 <span data-ttu-id="0b0f3-728">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-728">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-729"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-729">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-730">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-730">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-731">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-731">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-732">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-732">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-733">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-733">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-734">要写入的字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-734">The string to write.</span></span> <span data-ttu-id="0b0f3-735">如果 <paramref name="value" /> 为 <see langword="null" />，则只写入行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-735">If <paramref name="value" /> is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="0b0f3-736">将字符串写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-736">Writes a string to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0b0f3-737">此重载等效于 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-737">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.</span></span>

<span data-ttu-id="0b0f3-738">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-738">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="0b0f3-739">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-739">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>

<span data-ttu-id="0b0f3-740">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-740">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-741"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-741">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-742">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-742">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-743">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-743">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-744">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-744">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-745">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-745">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : System.Text.StringBuilder -&gt; unit&#xA;override this.WriteLine : System.Text.StringBuilder -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-746">要作为字符串生成器写入文本流的字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-746">The string, as a string builder, to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-747">将字符串生成器的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-747">Writes the text representation of a string builder to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="0b0f3-748">指定值的文本表示形式是通过调用 <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-748">The text representation of the specified value is produced by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span>

<span data-ttu-id="0b0f3-749">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-749">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

<span data-ttu-id="0b0f3-750">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-750">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-751">要写入的 4 字节无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-751">The 4-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-752">将 4 字节无符号整数的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-752">Writes the text representation of a 4-byte unsigned integer to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-753">指定值的文本表示形式是通过调用 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-753">The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-754">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-754">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-755">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-755">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-756">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-756">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-757"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-757">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-758">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-758">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-759">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-759">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-760">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-760">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-761">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-761">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint64 -&gt; unit&#xA;override this.WriteLine : uint64 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-762">要写入的 8 字节无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-762">The 8-byte unsigned integer to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-763">将 8 字节无符号整数的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-763">Writes the text representation of an 8-byte unsigned integer to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-764">指定值的文本表示形式是通过调用 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 方法生成的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-764">The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b0f3-765">如果未 `null`<xref:System.IO.TextWriter.FormatProvider%2A> 属性，则指定特定于区域性的格式设置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-765">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0b0f3-766">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-766">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-767">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-767">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-768"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-768">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-769">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-769">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-770">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-770">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-771">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-771">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-772">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-772">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0b0f3-773">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-773">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="0b0f3-774">要格式化和写入的对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-774">The object to format and write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-775">使用与 <see cref="M:System.String.Format(System.String,System.Object)" /> 方法相同的语义将格式化字符串和新行写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-775">Writes a formatted string and a new line to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-776">此方法使用复合格式设置将对象的值转换为其字符串表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-776">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0b0f3-777">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-777">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0b0f3-778">有关复合格式设置功能的详细信息，请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-778">For more information about the composite formatting feature, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="0b0f3-779">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-779">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-780">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)和[自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-780">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-781">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-781">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-782">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-782">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="0b0f3-783">`format` 参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-783">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0b0f3-784">格式设置过程将每个格式项替换为相应对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-784">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0b0f3-785">格式项的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-785">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0b0f3-786">{*index*[，*length*] [：*格式字符串*]}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-786">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0b0f3-787">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-787">Elements in square brackets are optional.</span></span> <span data-ttu-id="0b0f3-788">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-788">The following table describes each element.</span></span> <span data-ttu-id="0b0f3-789">有关复合格式设置功能的详细信息（包括格式项的语法），请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-789">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
|<span data-ttu-id="0b0f3-790">元素</span><span class="sxs-lookup"><span data-stu-id="0b0f3-790">Element</span></span>|<span data-ttu-id="0b0f3-791">说明</span><span class="sxs-lookup"><span data-stu-id="0b0f3-791">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0b0f3-792">索引</span><span class="sxs-lookup"><span data-stu-id="0b0f3-792">index</span></span>|<span data-ttu-id="0b0f3-793">要设置格式的对象的参数列表中的从零开始的位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-793">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0b0f3-794">如果 `null`由*index*指定的对象，则会将格式项替换为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-794">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0b0f3-795">因为此重载在其参数列表中只有一个对象，所以*index*的值必须始终为0。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-795">Because this overload has only a single object in its parameter list, the value of *index* must always be 0.</span></span> <span data-ttu-id="0b0f3-796">如果*索引*位置中没有参数，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-796">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0b0f3-797">、*length*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-797">,*length*</span></span>|<span data-ttu-id="0b0f3-798">参数的字符串表示形式中的最小字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-798">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0b0f3-799">如果为正，则参数为右对齐; 否则为。如果为负，则为左对齐。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-799">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0b0f3-800">：*格式字符串*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-800">:*formatString*</span></span>|<span data-ttu-id="0b0f3-801">要设置格式的对象支持的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-801">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0b0f3-802">*格式字符串*的可能值与对象的 `ToString(string format)` 方法所支持的值相同。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-802">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0b0f3-803">如果未指定 "*格式字符串*" 并且要设置格式的对象实现 <xref:System.IFormattable> 接口，则 `null` 将作为用作 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 格式字符串的 `format` 参数的值进行传递。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-803">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0b0f3-804">需要 "{" 和 "}" 等前导和尾随大括号。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-804">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0b0f3-805">若要在 `format`中指定单个文本大括号字符，请指定两个前导或尾随大括号字符;也就是说，"{{" 或 "}}"。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-805">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0b0f3-806">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-806">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0b0f3-807">如果在格式字符串中未引用指定的对象，则会将其忽略。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-807">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0b0f3-808">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-808">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-809">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-809">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-810"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-810"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-811"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-811">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-812">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-812">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0b0f3-813"><paramref name="format" /> 不是有效的复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-813"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="0b0f3-814">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0b0f3-814">-or-</span></span> 
<span data-ttu-id="0b0f3-815">格式项的索引小于 0 （0）、或大于或等于要设置格式的对象数 (用于该方法重载，为一)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-815">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-816">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-816">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-817">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-817">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-818">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-818">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="textWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0b0f3-819">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-819">A composite format string.</span></span></param>
        <param name="arg"><span data-ttu-id="0b0f3-820">一个对象数组，其中包含零个或多个要设置格式和写入的对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-820">An object array that contains zero or more objects to format and write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-821">使用与 <see cref="M:System.String.Format(System.String,System.Object)" /> 相同的语义将格式化字符串和新行写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-821">Writes out a formatted string and a new line to the text stream, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-822">此方法使用复合格式设置将对象的值转换为其字符串表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-822">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0b0f3-823">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-823">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0b0f3-824">有关复合格式设置功能的详细信息，请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-824">For more information about the composite formatting feature, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="0b0f3-825">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-825">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-826">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)和[自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-826">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-827">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-827">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-828">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-828">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="0b0f3-829">`format` 参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-829">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0b0f3-830">格式设置过程将每个格式项替换为相应对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-830">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0b0f3-831">格式项的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-831">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0b0f3-832">{*index*[，*length*] [：*格式字符串*]}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-832">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0b0f3-833">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-833">Elements in square brackets are optional.</span></span> <span data-ttu-id="0b0f3-834">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-834">The following table describes each element.</span></span> <span data-ttu-id="0b0f3-835">有关复合格式设置功能的详细信息（包括格式项的语法），请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-835">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
|<span data-ttu-id="0b0f3-836">元素</span><span class="sxs-lookup"><span data-stu-id="0b0f3-836">Element</span></span>|<span data-ttu-id="0b0f3-837">说明</span><span class="sxs-lookup"><span data-stu-id="0b0f3-837">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0b0f3-838">索引</span><span class="sxs-lookup"><span data-stu-id="0b0f3-838">index</span></span>|<span data-ttu-id="0b0f3-839">要设置格式的对象的参数列表中的从零开始的位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-839">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0b0f3-840">如果 `null`由*index*指定的对象，则会将格式项替换为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-840">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0b0f3-841">由于此重载在其参数列表中具有数组，因此*index*的值必须始终小于数组的长度。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-841">Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array.</span></span> <span data-ttu-id="0b0f3-842">如果*索引*位置中没有参数，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-842">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0b0f3-843">、*length*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-843">,*length*</span></span>|<span data-ttu-id="0b0f3-844">参数的字符串表示形式中的最小字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-844">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0b0f3-845">如果为正，则参数为右对齐; 否则为。如果为负，则为左对齐。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-845">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0b0f3-846">：*格式字符串*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-846">:*formatString*</span></span>|<span data-ttu-id="0b0f3-847">要设置格式的对象支持的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-847">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0b0f3-848">*格式字符串*的可能值与对象的 `ToString(string format)` 方法所支持的值相同。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-848">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0b0f3-849">如果未指定 "*格式字符串*" 并且要设置格式的对象实现 <xref:System.IFormattable> 接口，则 `null` 将作为用作 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 格式字符串的 `format` 参数的值进行传递。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-849">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0b0f3-850">需要 "{" 和 "}" 等前导和尾随大括号。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-850">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0b0f3-851">若要在 `format`中指定单个文本大括号字符，请指定两个前导或尾随大括号字符;也就是说，"{{" 或 "}}"。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-851">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0b0f3-852">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-852">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0b0f3-853">如果在格式字符串中未引用指定的对象，则会将其忽略。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-853">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0b0f3-854">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-854">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-855">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-855">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-856">字符串或对象作为 <see langword="null" /> 传入。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-856">A string or object is passed in as <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-857"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-857">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-858">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-858">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0b0f3-859"><paramref name="format" /> 不是有效的复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-859"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="0b0f3-860">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0b0f3-860">-or-</span></span> 
<span data-ttu-id="0b0f3-861">格式项的索引小于 0（零），或者大于或等于 <paramref name="arg" /> 数组的长度。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-861">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="arg" /> array.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-862">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-862">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-863">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-863">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-864">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-864">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="textWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-865">从其读取数据的字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-865">The character array from which data is read.</span></span></param>
        <param name="index"><span data-ttu-id="0b0f3-866">在开始读取数据时 <paramref name="buffer" /> 中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-866">The character position in <paramref name="buffer" /> at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="0b0f3-867">要写入的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-867">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-868">将字符子数组写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-868">Writes a subarray of characters to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-869">此方法将数据从 `index`位置开始的 `buffer` 字符数组写入此 `TextWriter` 中的 `count` 字符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-869">This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.</span></span>  
  
 <span data-ttu-id="0b0f3-870">此重载等效于调用 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 方法，后跟 `buffer` 之间的每个字符 <xref:System.IO.TextWriter.WriteLine%2A> `index` 和（`index` + `count`）。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-870">This overload is equivalent to calling the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> method followed by <xref:System.IO.TextWriter.WriteLine%2A> for each character in `buffer` between `index` and (`index` + `count`).</span></span>  
  
 <span data-ttu-id="0b0f3-871">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-871">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-872">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-872">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b0f3-873">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-873">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-874">
          <paramref name="buffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-874">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b0f3-875"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-875"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-876"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-876">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-877">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-877">An I/O error occurs.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-878">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-878">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-879">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-879">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-880">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-880">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0b0f3-881">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-881">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="0b0f3-882">要格式化和写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-882">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="0b0f3-883">要格式化和写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-883">The second object to format and write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-884">使用与 <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> 方法相同的语义将格式化字符串和新行写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-884">Writes a formatted string and a new line to the text stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-885">此方法使用复合格式设置将对象的值转换为其字符串表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-885">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0b0f3-886">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-886">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0b0f3-887">有关复合格式设置功能的详细信息，请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-887">For more information about the composite formatting feature, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="0b0f3-888">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-888">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-889">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)和[自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-889">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-890">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-890">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-891">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-891">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="0b0f3-892">`format` 参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-892">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0b0f3-893">格式设置过程将每个格式项替换为相应对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-893">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0b0f3-894">格式项的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-894">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0b0f3-895">{*index*[，*length*] [：*格式字符串*]}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-895">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0b0f3-896">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-896">Elements in square brackets are optional.</span></span> <span data-ttu-id="0b0f3-897">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-897">The following table describes each element.</span></span> <span data-ttu-id="0b0f3-898">有关复合格式设置功能的详细信息（包括格式项的语法），请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-898">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
|<span data-ttu-id="0b0f3-899">元素</span><span class="sxs-lookup"><span data-stu-id="0b0f3-899">Element</span></span>|<span data-ttu-id="0b0f3-900">说明</span><span class="sxs-lookup"><span data-stu-id="0b0f3-900">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0b0f3-901">索引</span><span class="sxs-lookup"><span data-stu-id="0b0f3-901">index</span></span>|<span data-ttu-id="0b0f3-902">要设置格式的对象的参数列表中的从零开始的位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-902">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0b0f3-903">如果 `null`由*index*指定的对象，则会将格式项替换为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-903">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0b0f3-904">由于此重载在其参数列表中有两个对象，因此*index*的值必须始终为0或1。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-904">Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1.</span></span> <span data-ttu-id="0b0f3-905">如果*索引*位置中没有参数，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-905">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0b0f3-906">、*length*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-906">,*length*</span></span>|<span data-ttu-id="0b0f3-907">参数的字符串表示形式中的最小字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-907">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0b0f3-908">如果为正，则参数为右对齐; 否则为。如果为负，则为左对齐。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-908">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0b0f3-909">：*格式字符串*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-909">:*formatString*</span></span>|<span data-ttu-id="0b0f3-910">要设置格式的对象支持的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-910">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0b0f3-911">*格式字符串*的可能值与对象的 `ToString(string format)` 方法所支持的值相同。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-911">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0b0f3-912">如果未指定 "*格式字符串*" 并且要设置格式的对象实现 <xref:System.IFormattable> 接口，则 `null` 将作为用作 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 格式字符串的 `format` 参数的值进行传递。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-912">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0b0f3-913">需要 "{" 和 "}" 等前导和尾随大括号。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-913">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0b0f3-914">若要在 `format`中指定单个文本大括号字符，请指定两个前导或尾随大括号字符;也就是说，"{{" 或 "}}"。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-914">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0b0f3-915">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-915">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0b0f3-916">如果在格式字符串中未引用指定的对象，则会将其忽略。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-916">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0b0f3-917">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-917">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-918">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-918">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-919"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-919"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-920"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-920">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-921">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-921">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0b0f3-922"><paramref name="format" /> 不是有效的复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-922"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="0b0f3-923">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0b0f3-923">-or-</span></span> 
<span data-ttu-id="0b0f3-924">格式项的索引小于 0 （0）、或大于或等于要设置格式的对象数 (用于该方法重载，为二)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-924">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-925">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-925">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-926">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-926">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-927">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-927">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0b0f3-928">复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-928">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="0b0f3-929">要格式化和写入的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-929">The first object to format and write.</span></span></param>
        <param name="arg1"><span data-ttu-id="0b0f3-930">要格式化和写入的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-930">The second object to format and write.</span></span></param>
        <param name="arg2"><span data-ttu-id="0b0f3-931">要设置格式和写入的第三个对象。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-931">The third object to format and write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-932">使用与 <see cref="M:System.String.Format(System.String,System.Object)" /> 相同的语义将格式化字符串和新行写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-932">Writes out a formatted string and a new line to the text stream, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-933">此方法使用复合格式设置将对象的值转换为其字符串表示形式，并将该表示形式嵌入字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-933">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0b0f3-934">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-934">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0b0f3-935">有关复合格式设置功能的详细信息，请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-935">For more information about the composite formatting feature, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
-   <span data-ttu-id="0b0f3-936">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-936">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-937">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)和[自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-937">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-938">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-938">For more information about enumeration format specifiers, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span>  
  
-   <span data-ttu-id="0b0f3-939">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-939">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="0b0f3-940">`format` 参数包含与零个或多个索引占位符（称为格式项）混合的零个或多个文本的运行，这些占位符与此方法的参数列表中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-940">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0b0f3-941">格式设置过程将每个格式项替换为相应对象的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-941">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0b0f3-942">格式项的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="0b0f3-942">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0b0f3-943">{*index*[，*length*] [：*格式字符串*]}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-943">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0b0f3-944">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-944">Elements in square brackets are optional.</span></span> <span data-ttu-id="0b0f3-945">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-945">The following table describes each element.</span></span> <span data-ttu-id="0b0f3-946">有关复合格式设置功能的详细信息（包括格式项的语法），请参阅[复合格式设置](/dotnet/standard/base-types/composite-formatting)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-946">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).</span></span>  
  
|<span data-ttu-id="0b0f3-947">元素</span><span class="sxs-lookup"><span data-stu-id="0b0f3-947">Element</span></span>|<span data-ttu-id="0b0f3-948">说明</span><span class="sxs-lookup"><span data-stu-id="0b0f3-948">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0b0f3-949">索引</span><span class="sxs-lookup"><span data-stu-id="0b0f3-949">index</span></span>|<span data-ttu-id="0b0f3-950">要设置格式的对象的参数列表中的从零开始的位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-950">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0b0f3-951">如果 `null`由*index*指定的对象，则会将格式项替换为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-951">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0b0f3-952">因为此重载在其参数列表中有三个对象，所以*index*的值必须始终是0、1或2。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-952">Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2.</span></span> <span data-ttu-id="0b0f3-953">如果*索引*位置中没有参数，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-953">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0b0f3-954">、*length*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-954">,*length*</span></span>|<span data-ttu-id="0b0f3-955">参数的字符串表示形式中的最小字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-955">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0b0f3-956">如果为正，则参数为右对齐; 否则为。如果为负，则为左对齐。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-956">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0b0f3-957">：*格式字符串*</span><span class="sxs-lookup"><span data-stu-id="0b0f3-957">:*formatString*</span></span>|<span data-ttu-id="0b0f3-958">要设置格式的对象支持的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-958">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0b0f3-959">*格式字符串*的可能值与对象的 `ToString(string format)` 方法所支持的值相同。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-959">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0b0f3-960">如果未指定 "*格式字符串*" 并且要设置格式的对象实现 <xref:System.IFormattable> 接口，则 `null` 将作为用作 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 格式字符串的 `format` 参数的值进行传递。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-960">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0b0f3-961">需要 "{" 和 "}" 等前导和尾随大括号。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-961">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0b0f3-962">若要在 `format`中指定单个文本大括号字符，请指定两个前导或尾随大括号字符;也就是说，"{{" 或 "}}"。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-962">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0b0f3-963">此方法不会在指定的字符串中搜索各个换行符（十六进制0x000a）并将其替换为 <xref:System.IO.TextWriter.NewLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-963">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0b0f3-964">如果在格式字符串中未引用指定的对象，则会将其忽略。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-964">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0b0f3-965">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-965">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-966">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](/dotnet/standard/io/common-i-o-tasks)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-966">For a list of common I/O tasks, see [Common I/O Tasks](/dotnet/standard/io/common-i-o-tasks).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-967"><paramref name="format" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-967"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-968"><see cref="T:System.IO.TextWriter" /> 是关闭的。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-968">The <see cref="T:System.IO.TextWriter" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0b0f3-969">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-969">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0b0f3-970"><paramref name="format" /> 不是有效的复合格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-970"><paramref name="format" /> is not a valid composite format string.</span></span>  
  
<span data-ttu-id="0b0f3-971">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0b0f3-971">-or-</span></span> 
<span data-ttu-id="0b0f3-972">格式项的索引小于 0 （0）、或大于或等于要设置格式的对象数 (用于该方法重载，为三)。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-972">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/io/"><span data-ttu-id="0b0f3-973">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="0b0f3-973">File and Stream I/O</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="0b0f3-974">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-974">How to: Read Text from a File</span></span></related>
        <related type="Article" href="/dotnet/standard/io/how-to-write-text-to-a-file"><span data-ttu-id="0b0f3-975">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="0b0f3-975">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b0f3-976">以异步形式将数据写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-976">Asynchronously writes data to the text stream, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0b0f3-977"><xref:System.IO.TextWriter> 类是一个抽象类。{2}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-977">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0b0f3-978">因此，不要在代码中对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-978">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0b0f3-979">有关使用 <xref:System.IO.TextWriter.WriteLineAsync%2A> 方法的示例，请参阅 <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-979">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : unit -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b0f3-980">以异步形式将行终止符写入文本流。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-980">Asynchronously writes a line terminator to the text stream.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-981">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-981">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0b0f3-982">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-982">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-983">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-983">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-984">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-984">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-985">要写入文本流中的字符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-985">The character to write to the text stream.</span></span></param>
        <summary><span data-ttu-id="0b0f3-986">以异步形式将字符写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-986">Asynchronously writes a character to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-987">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-987">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-988">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-988">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-989"><xref:System.IO.TextWriter> 类是一个抽象类。{2}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-989">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0b0f3-990">因此，不要在代码中对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-990">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0b0f3-991">有关使用 <xref:System.IO.TextWriter.WriteLineAsync%2A> 方法的示例，请参阅 <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-991">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-992">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-992">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-993">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-993">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteLineAsync (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteLineAsync (buffer As Char()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.WriteLineAsync : char[] -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-994">要写入文本流中的字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-994">The character array to write to the text stream.</span></span> <span data-ttu-id="0b0f3-995">如果字符数组为 <see langword="null" />，则仅写入行结束符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-995">If the character array is <see langword="null" />, only the line terminator is written.</span></span></param>
        <summary><span data-ttu-id="0b0f3-996">以异步形式将字符数组写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-996">Asynchronously writes an array of characters to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-997">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-997">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-998">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-998">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-999">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-999">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-1000">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1000">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-1001">要写入的字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1001">The string to write.</span></span> <span data-ttu-id="0b0f3-1002">如果值为 <see langword="null" />，则只写入行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1002">If the value is <see langword="null" />, only a line terminator is written.</span></span></param>
        <summary><span data-ttu-id="0b0f3-1003">以异步形式将字符串写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1003">Asynchronously writes a string to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-1004">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1004">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b0f3-1005">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1005">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0b0f3-1006"><xref:System.IO.TextWriter> 类是一个抽象类。{2}</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1006">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0b0f3-1007">因此，不要在代码中对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1007">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0b0f3-1008">有关使用 <xref:System.IO.TextWriter.WriteLineAsync%2A> 方法的示例，请参阅 <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1008">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-1009">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1009">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-1010">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1010">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (buffer As ReadOnlyMemory(Of Char), Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-1011">要写入文本流中的字符内存区域。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1011">The character memory region to write to the text stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="0b0f3-1012">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1012">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="0b0f3-1013">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1013">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="0b0f3-1014">以异步形式将字符内存区域的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1014">Asynchronously writes the text representation of a character memory region to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-1015">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1015">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="0b0f3-1016">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1016">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (System.Text.StringBuilder value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(class System.Text.StringBuilder value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As StringBuilder, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : System.Text.StringBuilder * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0b0f3-1017">要作为字符串生成器写入文本流的字符串。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1017">The string, as a string builder, to write to the text stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="0b0f3-1018">要监视的取消请求标记。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1018">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="0b0f3-1019">默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1019">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="0b0f3-1020">以异步形式将字符串生成器的文本表示形式写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1020">Asynchronously writes the text representation of a string builder to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-1021">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1021">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0b0f3-1022">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1022">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0b0f3-1023">要从中写出数据的字符数组。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1023">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="0b0f3-1024">在开始接收数据时缓存中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1024">The character position in the buffer at which to start retrieving data.</span></span></param>
        <param name="count"><span data-ttu-id="0b0f3-1025">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1025">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="0b0f3-1026">以异步形式将字符子数组写入文本流，后跟行终止符。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1026">Asynchronously writes a subarray of characters to the text stream, followed by a line terminator.</span></span></summary>
        <returns><span data-ttu-id="0b0f3-1027">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1027">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0b0f3-1028">行终止符由 <xref:System.IO.TextWriter.CoreNewLine> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1028">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0b0f3-1029"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1029"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b0f3-1030"><paramref name="index" /> 加 <paramref name="count" /> 大于缓冲区长度。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1030">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0b0f3-1031"><paramref name="index" /> 或 <paramref name="count" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1031"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0b0f3-1032">文本编写器已被释放。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1032">The text writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b0f3-1033">文本编写器正在由其前一次写操作使用。</span><span class="sxs-lookup"><span data-stu-id="0b0f3-1033">The text writer is currently in use by a previous write operation.</span></span></exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
