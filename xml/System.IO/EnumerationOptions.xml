<Type Name="EnumerationOptions" FullName="System.IO.EnumerationOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b0338320d1a4a97d7fa52f1ced7ff93d1ddfd5f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89875306" /></Metadata><TypeSignature Language="C#" Value="public class EnumerationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.EnumerationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerationOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerationOptions" />
  <TypeSignature Language="F#" Value="type EnumerationOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.FileSystem" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a5149-101">提供文件和目录枚举选项。</span><span class="sxs-lookup"><span data-stu-id="a5149-101">Provides file and directory enumeration options.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.EnumerationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5149-102">使用推荐默认选项初始化 <see cref="T:System.IO.EnumerationOptions" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a5149-102">Initializes a new instance of the <see cref="T:System.IO.EnumerationOptions" /> class with the recommended default options.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributesToSkip">
      <MemberSignature Language="C#" Value="public System.IO.FileAttributes AttributesToSkip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAttributes AttributesToSkip" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributesToSkip As FileAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAttributes AttributesToSkip { System::IO::FileAttributes get(); void set(System::IO::FileAttributes value); };" />
      <MemberSignature Language="F#" Value="member this.AttributesToSkip : System.IO.FileAttributes with get, set" Usage="System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5149-103">获取或设置要跳过的属性。</span><span class="sxs-lookup"><span data-stu-id="a5149-103">Gets or sets the attributes to skip.</span></span> <span data-ttu-id="a5149-104">默认值为 <c>FileAttributes.Hidden | FileAttributes.System</c>。</span><span class="sxs-lookup"><span data-stu-id="a5149-104">The default is <c>FileAttributes.Hidden | FileAttributes.System</c>.</span></span></summary>
        <value><span data-ttu-id="a5149-105">要跳过的特性。</span><span class="sxs-lookup"><span data-stu-id="a5149-105">The attributes to skip.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int with get, set" Usage="System.IO.EnumerationOptions.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5149-106">获取或设置建议的缓冲区大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a5149-106">Gets or sets the suggested buffer size, in bytes.</span></span> <span data-ttu-id="a5149-107">默认值为 0（无建议）。</span><span class="sxs-lookup"><span data-stu-id="a5149-107">The default is 0 (no suggestion).</span></span></summary>
        <value><span data-ttu-id="a5149-108">缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="a5149-108">The buffer size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a5149-109">并非所有平台都使用用户分配的缓冲区，一些平台需要固定缓冲区或具有足够空间的缓冲区来返回完整结果。</span><span class="sxs-lookup"><span data-stu-id="a5149-109">Not all platforms use user allocated buffers, and some require either fixed buffers or a buffer that has enough space to return a full result.</span></span> <span data-ttu-id="a5149-110">此选项非常有用的一种情况是在 Windows 上进行远程共享枚举。</span><span class="sxs-lookup"><span data-stu-id="a5149-110">One scenario where this option is useful is with remote share enumeration on Windows.</span></span> <span data-ttu-id="a5149-111">如果具有较大的缓冲区，则可能会提高性能，因为更多的结果可通过网络进行批处理 (例如，通过网络共享) 。</span><span class="sxs-lookup"><span data-stu-id="a5149-111">Having a large buffer may result in better performance as more results can be batched over the wire (for example, over a network share).</span></span>
<span data-ttu-id="a5149-112">例如，"大" 缓冲区将为16K。</span><span class="sxs-lookup"><span data-stu-id="a5149-112">A "large" buffer, for example, would be 16K.</span></span> <span data-ttu-id="a5149-113">典型为4K。</span><span class="sxs-lookup"><span data-stu-id="a5149-113">Typical is 4K.</span></span>
            
<span data-ttu-id="a5149-114">如果在当前平台上没有用于本机 Api 的含义，或如果它太小而无法获取至少一个结果，则不会使用建议的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="a5149-114">The suggested buffer size will not be used if it has no meaning for the native APIs on the current platform or if it would be too small for getting at least a single result.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreInaccessible">
      <MemberSignature Language="C#" Value="public bool IgnoreInaccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreInaccessible" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreInaccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreInaccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreInaccessible : bool with get, set" Usage="System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5149-115">获取或设置一个值，该值指示是否在拒绝访问时跳过文件或目录（例如 <see cref="T:System.UnauthorizedAccessException" /> 或 <see cref="T:System.Security.SecurityException" />）。</span><span class="sxs-lookup"><span data-stu-id="a5149-115">Gets or sets a value that indicates whether to skip files or directories when access is denied (for example, <see cref="T:System.UnauthorizedAccessException" /> or <see cref="T:System.Security.SecurityException" />).</span></span> <span data-ttu-id="a5149-116">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a5149-116">The default is <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="a5149-117"><see langword="true" /> 若要跳过 innacessible 文件或目录，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="a5149-117"><see langword="true" /> to skip innacessible files or directories; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCasing">
      <MemberSignature Language="C#" Value="public System.IO.MatchCasing MatchCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchCasing MatchCasing" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchCasing As MatchCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchCasing MatchCasing { System::IO::MatchCasing get(); void set(System::IO::MatchCasing value); };" />
      <MemberSignature Language="F#" Value="member this.MatchCasing : System.IO.MatchCasing with get, set" Usage="System.IO.EnumerationOptions.MatchCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5149-118">获取或设置大小写匹配行为。</span><span class="sxs-lookup"><span data-stu-id="a5149-118">Gets or sets the case matching behavior.</span></span></summary>
        <value><span data-ttu-id="a5149-119">指示大小写匹配行为的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a5149-119">One of the enumeration values that indicates the case matching behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a5149-120">对于允许指定匹配表达式的 Api，此属性允许您指定大小写匹配行为。</span><span class="sxs-lookup"><span data-stu-id="a5149-120">For APIs that allow specifying a match expression, this property allows you to specify the case matching behavior.</span></span>
<span data-ttu-id="a5149-121">默认值为匹配平台默认值，该默认值为搜集与临时文件夹区分大小写。</span><span class="sxs-lookup"><span data-stu-id="a5149-121">The default is to match platform defaults, which are gleaned from the case sensitivity of the temporary folder.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchType">
      <MemberSignature Language="C#" Value="public System.IO.MatchType MatchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchType MatchType" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchType" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchType As MatchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchType MatchType { System::IO::MatchType get(); void set(System::IO::MatchType value); };" />
      <MemberSignature Language="F#" Value="member this.MatchType : System.IO.MatchType with get, set" Usage="System.IO.EnumerationOptions.MatchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5149-122">获取或设置匹配类型。</span><span class="sxs-lookup"><span data-stu-id="a5149-122">Gets or sets the match type.</span></span></summary>
        <value><span data-ttu-id="a5149-123">指示匹配类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="a5149-123">One of the enumeration values that indicates the match type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a5149-124">对于允许指定匹配表达式的 Api，此属性可用于指定如何解释 match 表达式。</span><span class="sxs-lookup"><span data-stu-id="a5149-124">For APIs that allow specifying a match expression, this property allows you to specify how to interpret the match expression.</span></span>
<span data-ttu-id="a5149-125">默认值为简单匹配，其中 "\*" 始终为0个或更多个字符，"？" 是单个字符。</span><span class="sxs-lookup"><span data-stu-id="a5149-125">The default is simple matching where '\*' is always 0 or more characters and '?' is a single character.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecurseSubdirectories">
      <MemberSignature Language="C#" Value="public bool RecurseSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecurseSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property RecurseSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecurseSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecurseSubdirectories : bool with get, set" Usage="System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5149-126">获取或设置一个值，该值指示在枚举时是否递归到子目录中。</span><span class="sxs-lookup"><span data-stu-id="a5149-126">Gets or sets a value that indicates whether to recurse into subdirectories while enumerating.</span></span> <span data-ttu-id="a5149-127">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a5149-127">The default is <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="a5149-128"><see langword="true" /> 递归到子目录;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="a5149-128"><see langword="true" /> to recurse into subdirectories; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnSpecialDirectories">
      <MemberSignature Language="C#" Value="public bool ReturnSpecialDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnSpecialDirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnSpecialDirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnSpecialDirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnSpecialDirectories : bool with get, set" Usage="System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a5149-129">获取或设置一个值，该值指示是否返回特殊目录项“.”和“..”。</span><span class="sxs-lookup"><span data-stu-id="a5149-129">Gets or sets a value that indicates whether to return the special directory entries "." and "..".</span></span></summary>
        <value><span data-ttu-id="a5149-130"><see langword="true" /> 若要返回特殊目录条目，请输入 "." 和 "...";否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="a5149-130"><see langword="true" /> to return the special directory entries "." and ".."; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
