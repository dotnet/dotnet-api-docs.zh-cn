<Type Name="WindowsRuntimeStorageExtensions" FullName="System.IO.WindowsRuntimeStorageExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e7ef7288748921559865cf9fbb4624d7b02d14f" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83535681" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeStorageExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeStorageExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeStorageExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1b138-101">在开发 Windows 应用商店应用程序时，将 <see cref="T:Windows.Storage.IStorageFile" /> 和 <see cref="T:Windows.Storage.IStorageFolder" /> 接口的扩展方法包含在 Windows 运行时中。</span><span class="sxs-lookup"><span data-stu-id="1b138-101">Contains extension methods for the <see cref="T:Windows.Storage.IStorageFile" /> and <see cref="T:Windows.Storage.IStorageFolder" /> interfaces in the Windows Runtime when developing Windows Store apps.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b138-102">仅当开发 Windows 应用商店应用时，这些扩展方法才可用。</span><span class="sxs-lookup"><span data-stu-id="1b138-102">These extension methods are available only when you develop Windows Store apps.</span></span> <span data-ttu-id="1b138-103">方法提供了在 Windows 应用商店应用中打开文件以进行读取或写入的便利方法。</span><span class="sxs-lookup"><span data-stu-id="1b138-103">The methods provide convenient ways of opening files for reading or writing in Windows Store apps.</span></span> <span data-ttu-id="1b138-104">不创建 `WindowsRuntimeStorageExtensions` 类的实例;相反，请从 <xref:Windows.Storage.IStorageFile> 的实例和 <xref:Windows.Storage.IStorageFolder> 接口使用这些方法。</span><span class="sxs-lookup"><span data-stu-id="1b138-104">You do not create an instance of the `WindowsRuntimeStorageExtensions` class; instead, you use these methods from instances of the <xref:Windows.Storage.IStorageFile> and <xref:Windows.Storage.IStorageFolder> interfaces.</span></span>

<span data-ttu-id="1b138-105">`WindowsRuntimeStorageExtensions` 类包含两种扩展 <xref:Windows.Storage.IStorageFile> 以进行读取或写入的方法：</span><span class="sxs-lookup"><span data-stu-id="1b138-105">The `WindowsRuntimeStorageExtensions` class contains two methods that extend <xref:Windows.Storage.IStorageFile> for reading or writing:</span></span>

  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)>

<span data-ttu-id="1b138-106">System.io.windowsruntimestorageextensions 类包含两个扩展 <xref:Windows.Storage.IStorageFolder> 以进行读取和写入的方法：</span><span class="sxs-lookup"><span data-stu-id="1b138-106">The WindowsRuntimeStorageExtensions class contains two methods that extend <xref:Windows.Storage.IStorageFolder> for reading and writing:</span></span>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)>

## Examples

<span data-ttu-id="1b138-107">下面的示例演示如何在 Windows 应用商店应用程序中以 <xref:System.IO.Stream> 的形式打开应用程序数据中的文件，以及如何使用 <xref:System.IO.StreamWriter> 类的实例向其写入数据。</span><span class="sxs-lookup"><span data-stu-id="1b138-107">The following example shows how to open a file in the application data as a <xref:System.IO.Stream> in a Windows Store app, and write to it by using an instance of the <xref:System.IO.StreamWriter> class.</span></span> <span data-ttu-id="1b138-108">然后，它使用 <xref:System.IO.StreamReader> 类的实例读取该文件的内容。</span><span class="sxs-lookup"><span data-stu-id="1b138-108">It then reads the contents for the file by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

<span data-ttu-id="1b138-109">下一个示例演示与前面的示例相关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="1b138-109">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateSafeFileHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b138-110">创建并返回对正在扩展的 IStorage 实例的安全文件句柄的引用。</span><span class="sxs-lookup"><span data-stu-id="1b138-110">Creates and returns a reference to a safe file handle for the IStorage instance that is being extended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b138-111">在 Windows 10 周年更新中，新的接口已添加到 <xref:Windows.Storage.IStorageFolder> 和 <xref:Windows.Storage.IStorageFile>，以允许创建标准 Win32 文件句柄： `IStorageFolderHandleAccess` 和 `IStorageItemHandleAccess`。</span><span class="sxs-lookup"><span data-stu-id="1b138-111">With the Windows 10 Anniversary Update, new interfaces were added to <xref:Windows.Storage.IStorageFolder> and <xref:Windows.Storage.IStorageFile> that allow creating a standard Win32 file handle: `IStorageFolderHandleAccess` and `IStorageItemHandleAccess`.</span></span> <span data-ttu-id="1b138-112">扩展方法的 `CreateSafeFileHandle` 组利用这些接口的 `Create` 方法。</span><span class="sxs-lookup"><span data-stu-id="1b138-112">The `CreateSafeFileHandle` group of extension methods take advantage of the `Create` methods of these interfaces.</span></span>

<span data-ttu-id="1b138-113">API 的主要优点是可以访问中转 `SafeFileHandle`。</span><span class="sxs-lookup"><span data-stu-id="1b138-113">The key benefit of the API is access to a brokered `SafeFileHandle`.</span></span> <span data-ttu-id="1b138-114">如果你想要在[AppContainer](https://docs.microsoft.com/windows/win32/secauthz/appcontainer-isolation)中运行时围绕 <xref:Windows.Storage.IStorageItem> 或 <xref:Windows.Storage.IStorageFolder> 创建 <xref:System.IO.FileStream>，这一点至关重要。</span><span class="sxs-lookup"><span data-stu-id="1b138-114">This is critically important if you want to create a <xref:System.IO.FileStream> around an <xref:Windows.Storage.IStorageItem> or <xref:Windows.Storage.IStorageFolder> when you are running in an [AppContainer](https://docs.microsoft.com/windows/win32/secauthz/appcontainer-isolation).</span></span> <span data-ttu-id="1b138-115">在 AppContainer 中运行时，应用程序具有非常有限的文件访问权限。</span><span class="sxs-lookup"><span data-stu-id="1b138-115">When running in an AppContainer, the application has very limited file access rights.</span></span> <span data-ttu-id="1b138-116">像图片和文档文件夹这样的东西需要通过 `RuntimeBroker.exe`代理的本机文件句柄，因为应用程序进程本身对大多数文件没有权限。</span><span class="sxs-lookup"><span data-stu-id="1b138-116">Things like picture and document folders require the native file handle to be proxied via `RuntimeBroker.exe`, as the application process itself doesn't have rights to most files.</span></span> <span data-ttu-id="1b138-117">此 API 获取代理的句柄。</span><span class="sxs-lookup"><span data-stu-id="1b138-117">This API gets the proxied handle.</span></span> <span data-ttu-id="1b138-118">如果访问用户数据文件夹或使用文件选取器，则应始终使用此 API 创建 <xref:System.IO.FileStream>。</span><span class="sxs-lookup"><span data-stu-id="1b138-118">If accessing user data folders or using a file picker, this API should always be used to create <xref:System.IO.FileStream>.</span></span> <span data-ttu-id="1b138-119">在这些情况下，使用路径通常会引发 <xref:System.AccessViolationException>。</span><span class="sxs-lookup"><span data-stu-id="1b138-119">Using a path will often throw <xref:System.AccessViolationException> in these cases.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode) As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Win32::SafeHandles::SafeFileHandle ^ CreateSafeFileHandle(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="rootDirectory"><span data-ttu-id="1b138-120">当前存储文件夹实例。</span><span class="sxs-lookup"><span data-stu-id="1b138-120">The current storage folder instance.</span></span></param>
        <param name="relativePath"><span data-ttu-id="1b138-121">要添加句柄的文件名称。</span><span class="sxs-lookup"><span data-stu-id="1b138-121">The name of the file that you want to get a handle to.</span></span></param>
        <param name="mode"><span data-ttu-id="1b138-122">操作系统应在其中打开该文件的模式。</span><span class="sxs-lookup"><span data-stu-id="1b138-122">The mode in which the operating system should open the file.</span></span></param>
        <summary><span data-ttu-id="1b138-123">为当前存储文件夹实例中的文件创建安全文件句柄。</span><span class="sxs-lookup"><span data-stu-id="1b138-123">Creates a safe file handle for a file that is in the current storage folder instance.</span></span></summary>
        <returns><span data-ttu-id="1b138-124">如果操作成功，则为安全文件句柄实例；如果从 <paramref name="rootDirectory" /> 到 IStorageFolderHandleAccess 的转换返回 <see langword="null" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-124">A safe file handle instance if the operation succeeds; <see langword="null" /> if the conversion of the <paramref name="rootDirectory" /> to an IStorageFolderHandleAccess returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b138-125">调用此方法时，如果 <xref:System.IO.FileMode.Append?displayProperty=nameWithType>指定的模式，则将使用 <xref:System.IO.FileAccess.Read?displayProperty=nameWithType> 访问权限打开文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-125">When calling this method, if the specified mode is <xref:System.IO.FileMode.Append?displayProperty=nameWithType>, the file will be opened with <xref:System.IO.FileAccess.Read?displayProperty=nameWithType> access permission.</span></span> <span data-ttu-id="1b138-126">对于任何其他模式，将使用 <xref:System.IO.FileAccess.ReadWrite?displayProperty=nameWithType> 访问权限打开文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-126">For any other modes, the file will be opened with <xref:System.IO.FileAccess.ReadWrite?displayProperty=nameWithType> access permission.</span></span>

<span data-ttu-id="1b138-127">此外，此方法将使用 <xref:System.IO.FileShare.Read?displayProperty=nameWithType> 流共享访问和 <xref:System.IO.FileOptions.None?displayProperty=nameWithType> 高级文件创建选项来打开该文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-127">Additionally, this method will open the file with <xref:System.IO.FileShare.Read?displayProperty=nameWithType> stream sharing access and with <xref:System.IO.FileOptions.None?displayProperty=nameWithType> advanced file creation options.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b138-128"><paramref name="rootDirectory" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-128"><paramref name="rootDirectory" /> is <see langword="null" />.</span></span>

<span data-ttu-id="1b138-129">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1b138-129">-or-</span></span>

<span data-ttu-id="1b138-130"><paramref name="relativePath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-130"><paramref name="relativePath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFile windowsRuntimeFile, System.IO.FileAccess access = System.IO.FileAccess.ReadWrite, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFile windowsRuntimeFile, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFile,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (windowsRuntimeFile As IStorageFile, Optional access As FileAccess = System.IO.FileAccess.ReadWrite, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFile * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (windowsRuntimeFile, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile"><span data-ttu-id="1b138-131">存储文件实例。</span><span class="sxs-lookup"><span data-stu-id="1b138-131">A storage file instance.</span></span></param>
        <param name="access"><span data-ttu-id="1b138-132">打开文件时应使用的访问类型。</span><span class="sxs-lookup"><span data-stu-id="1b138-132">The kind of access that should be used when opening the file.</span></span> <span data-ttu-id="1b138-133">默认值是 <see cref="F:System.IO.FileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-133">The default value is <see cref="F:System.IO.FileAccess.ReadWrite" />.</span></span></param>
        <param name="share"><span data-ttu-id="1b138-134">对于同一文件，其他 <see cref="T:System.IO.FileStream" /> 对象可以具有的流共享访问类型。</span><span class="sxs-lookup"><span data-stu-id="1b138-134">The kind of stream sharing access other <see cref="T:System.IO.FileStream" /> objects can have to the same file.</span></span> <span data-ttu-id="1b138-135">默认值是 <see cref="F:System.IO.FileShare.Read" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-135">The default value is <see cref="F:System.IO.FileShare.Read" />.</span></span></param>
        <param name="options"><span data-ttu-id="1b138-136">用于创建 <see cref="T:System.IO.FileStream" /> 对象的高级选项。</span><span class="sxs-lookup"><span data-stu-id="1b138-136">Advanced options for creating the <see cref="T:System.IO.FileStream" /> object.</span></span> <span data-ttu-id="1b138-137">默认值是 <see cref="F:System.IO.FileOptions.None" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-137">The default value is <see cref="F:System.IO.FileOptions.None" />.</span></span></param>
        <summary><span data-ttu-id="1b138-138">为当前存储文件实例创建安全文件句柄。</span><span class="sxs-lookup"><span data-stu-id="1b138-138">Creates a safe file handle for a the current storage file instance.</span></span></summary>
        <returns><span data-ttu-id="1b138-139">如果操作成功，则为安全文件句柄实例；如果从 <paramref name="windowsRuntimeFile" /> 到 IStorageItemHandleAccess 的转换返回 <see langword="null" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-139">A safe file handle instance if the operation succeeds; <see langword="null" /> if the conversion of the <paramref name="windowsRuntimeFile" /> to an IStorageItemHandleAccess returns <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b138-140"><paramref name="windowsRuntimeFile" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-140"><paramref name="windowsRuntimeFile" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode, access As FileAccess, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="rootDirectory"><span data-ttu-id="1b138-141">当前存储文件夹实例。</span><span class="sxs-lookup"><span data-stu-id="1b138-141">The current storage folder instance.</span></span></param>
        <param name="relativePath"><span data-ttu-id="1b138-142">要添加句柄的文件名称。</span><span class="sxs-lookup"><span data-stu-id="1b138-142">The name of the file that you want to get a handle to.</span></span></param>
        <param name="mode"><span data-ttu-id="1b138-143">操作系统应在其中打开该文件的模式。</span><span class="sxs-lookup"><span data-stu-id="1b138-143">The mode in which the operating system should open the file.</span></span></param>
        <param name="access"><span data-ttu-id="1b138-144">打开文件时应使用的访问类型。</span><span class="sxs-lookup"><span data-stu-id="1b138-144">The kind of access that should be used when opening the file.</span></span></param>
        <param name="share"><span data-ttu-id="1b138-145">对于同一文件，其他 <see cref="T:System.IO.FileStream" /> 对象可以具有的流共享访问类型。</span><span class="sxs-lookup"><span data-stu-id="1b138-145">The kind of stream sharing access other <see cref="T:System.IO.FileStream" /> objects can have to the same file.</span></span> <span data-ttu-id="1b138-146">默认值是 <see cref="F:System.IO.FileShare.Read" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-146">The default value is <see cref="F:System.IO.FileShare.Read" />.</span></span></param>
        <param name="options"><span data-ttu-id="1b138-147">用于创建 <see cref="T:System.IO.FileStream" /> 对象的高级选项。</span><span class="sxs-lookup"><span data-stu-id="1b138-147">Advanced options for creating the <see cref="T:System.IO.FileStream" /> object.</span></span> <span data-ttu-id="1b138-148">默认值是 <see cref="F:System.IO.FileOptions.None" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-148">The default value is <see cref="F:System.IO.FileOptions.None" />.</span></span></param>
        <summary><span data-ttu-id="1b138-149">为当前存储文件夹实例中的文件创建安全文件句柄。</span><span class="sxs-lookup"><span data-stu-id="1b138-149">Creates a safe file handle for a file that is in the current storage folder instance.</span></span></summary>
        <returns><span data-ttu-id="1b138-150">如果操作成功，则为安全文件句柄实例；如果从 <paramref name="rootDirectory" /> 到 IStorageFolderHandleAccess 的转换返回 <see langword="null" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-150">A safe file handle instance if the operation succeeds; <see langword="null" /> if the conversion of the <paramref name="rootDirectory" /> to an IStorageFolderHandleAccess returns <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b138-151"><paramref name="rootDirectory" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-151"><paramref name="rootDirectory" /> is <see langword="null" />.</span></span>

<span data-ttu-id="1b138-152">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1b138-152">-or-</span></span>

<span data-ttu-id="1b138-153"><paramref name="relativePath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-153"><paramref name="relativePath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile"><span data-ttu-id="1b138-154">要读取的 Windows 运行时 <see cref="T:Windows.Storage.IStorageFile" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b138-154">The Windows Runtime <see cref="T:Windows.Storage.IStorageFile" /> object to read from.</span></span></param>
        <summary><span data-ttu-id="1b138-155">检索流以从指定的文件中读取。</span><span class="sxs-lookup"><span data-stu-id="1b138-155">Retrieves a stream for reading from a specified file.</span></span></summary>
        <returns><span data-ttu-id="1b138-156">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="1b138-156">A task that represents the asynchronous read operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> <span data-ttu-id="1b138-157">在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Storage.IStorageFile>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="1b138-157">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:Windows.Storage.IStorageFile>.</span></span> <span data-ttu-id="1b138-158">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="1b138-158">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="1b138-159">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="1b138-159">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="1b138-160">下面的示例演示如何在 Windows 应用商店应用程序中将文件作为 <xref:System.IO.Stream> 打开，并通过使用 <xref:System.IO.StreamReader> 类的实例来读取其内容。</span><span class="sxs-lookup"><span data-stu-id="1b138-160">The following example shows how to open a file as a <xref:System.IO.Stream> in a Windows Store app, and read its contents by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestorageextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage.xaml.vb#2)]

<span data-ttu-id="1b138-161">下一个示例演示与前面的示例相关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="1b138-161">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b138-162"><paramref name="windowsRuntimeFile" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-162"><paramref name="windowsRuntimeFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1b138-163">无法以流的形式打开或检索文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-163">The file could not be opened or retrieved as a stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (rootDirectory As IStorageFolder, relativePath As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFolder * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync (rootDirectory, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootDirectory"><span data-ttu-id="1b138-164">包含要读取文件的 Windows 运行时 <see cref="T:Windows.Storage.IStorageFile" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b138-164">The Windows Runtime <see cref="T:Windows.Storage.IStorageFile" /> object that contains the file to read from.</span></span></param>
        <param name="relativePath"><span data-ttu-id="1b138-165">相对于根文件夹，到要读取的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="1b138-165">The path, relative to the root folder, to the file to read from.</span></span></param>
        <summary><span data-ttu-id="1b138-166">检索流以从指定的父文件夹的一个文件中读取。</span><span class="sxs-lookup"><span data-stu-id="1b138-166">Retrieves a stream for reading from a file in the specified parent folder.</span></span></summary>
        <returns><span data-ttu-id="1b138-167">表示异步读取操作的任务。</span><span class="sxs-lookup"><span data-stu-id="1b138-167">A task that represents the asynchronous read operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="1b138-168">在 Visual Basic 和C#中，你可以调用此方法作为 IStorageFolder 类型的任何对象上的实例方法。</span><span class="sxs-lookup"><span data-stu-id="1b138-168">In Visual Basic and C#, you can call this method as an instance method on any object of type IStorageFolder.</span></span> <span data-ttu-id="1b138-169">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="1b138-169">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="1b138-170">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="1b138-170">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="1b138-171">下面的示例演示如何在 Windows 应用商店应用程序中将文件作为 <xref:System.IO.Stream> 打开，并通过使用 <xref:System.IO.StreamReader> 类的实例来读取其内容。</span><span class="sxs-lookup"><span data-stu-id="1b138-171">The following example shows how to open a file as a <xref:System.IO.Stream> in a Windows Store app, and read its contents by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestorageextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage2.xaml.vb#4)]

<span data-ttu-id="1b138-172">下一个示例演示与前面的示例相关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="1b138-172">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b138-173"><paramref name="rootDirectory" /> 或 <paramref name="relativePath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-173"><paramref name="rootDirectory" /> or <paramref name="relativePath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b138-174"><paramref name="relativePath" /> 为空，或者只包含空白字符。</span><span class="sxs-lookup"><span data-stu-id="1b138-174"><paramref name="relativePath" /> is empty or contains only white-space characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1b138-175">无法以流的形式打开或检索文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-175">The file could not be opened or retrieved as a stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForWriteAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile"><span data-ttu-id="1b138-176">要写入的 Windows 运行时 <see cref="T:Windows.Storage.IStorageFile" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b138-176">The Windows Runtime <see cref="T:Windows.Storage.IStorageFile" /> object to write to.</span></span></param>
        <summary><span data-ttu-id="1b138-177">检索流以写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-177">Retrieves a stream for writing to a specified file.</span></span></summary>
        <returns><span data-ttu-id="1b138-178">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="1b138-178">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> <span data-ttu-id="1b138-179">在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Storage.IStorageFile>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="1b138-179">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:Windows.Storage.IStorageFile>.</span></span> <span data-ttu-id="1b138-180">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="1b138-180">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="1b138-181">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="1b138-181">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="1b138-182">下面的示例演示如何在 Windows 应用商店应用程序中将文件作为 <xref:System.IO.Stream> 打开，以及如何使用 <xref:System.IO.StreamReader> 类的实例向其写入。</span><span class="sxs-lookup"><span data-stu-id="1b138-182">The following example shows how to open a file as a <xref:System.IO.Stream> in a Windows Store app, and write to it by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml.cs#6)]
[!code-vb[windowsruntimestorageextensions#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage3.xaml.vb#6)]

<span data-ttu-id="1b138-183">下一个示例演示与前面的示例相关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="1b138-183">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml#5)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b138-184"><paramref name="windowsRuntimeFile" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-184"><paramref name="windowsRuntimeFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1b138-185">无法以流的形式打开或检索文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-185">The file could not be opened or retrieved as a stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, Windows.Storage.CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype Windows.Storage.CreationCollisionOption creationCollisionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForWriteAsync (rootDirectory As IStorageFolder, relativePath As String, creationCollisionOption As CreationCollisionOption) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, Windows::Storage::CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFolder * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync (rootDirectory, relativePath, creationCollisionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
        <Parameter Name="creationCollisionOption" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="rootDirectory"><span data-ttu-id="1b138-186">包含要写入文件的 Windows 运行时 <see cref="T:Windows.Storage.IStorageFile" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b138-186">The Windows Runtime <see cref="T:Windows.Storage.IStorageFile" /> object that contains the file to write to.</span></span></param>
        <param name="relativePath"><span data-ttu-id="1b138-187">相对于根文件夹，到要写入的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="1b138-187">The path, relative to the root folder, to the file to write to.</span></span></param>
        <param name="creationCollisionOption"><span data-ttu-id="1b138-188">指定要生成的文件名与现有文件名称相同时要使用的行为的 Windows 运行时 <see cref="T:Windows.Storage.CreationCollisionOption" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="1b138-188">The Windows Runtime <see cref="T:Windows.Storage.CreationCollisionOption" /> enumeration value that specifies the behavior to use when the name of the file to create is the same as the name of an existing file.</span></span></param>
        <summary><span data-ttu-id="1b138-189">检索流以在指定的父文件夹中写入文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-189">Retrieves a stream for writing to a file in the specified parent folder.</span></span></summary>
        <returns><span data-ttu-id="1b138-190">表示异步写入操作的任务。</span><span class="sxs-lookup"><span data-stu-id="1b138-190">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="1b138-191">在 Visual Basic 和C#中，你可以将此方法作为 <xref:Windows.Storage.IStorageFolder>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="1b138-191">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:Windows.Storage.IStorageFolder>.</span></span> <span data-ttu-id="1b138-192">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="1b138-192">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="1b138-193">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="1b138-193">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="1b138-194">下面的示例演示如何在 Windows 应用商店应用程序中将文件作为 <xref:System.IO.Stream> 打开，以及如何使用 <xref:System.IO.StreamReader> 类的实例向其写入。</span><span class="sxs-lookup"><span data-stu-id="1b138-194">The following example shows how to open a file as a <xref:System.IO.Stream> in a Windows Store app, and write to it by using an instance of the <xref:System.IO.StreamReader> class.</span></span>

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

<span data-ttu-id="1b138-195">下一个示例演示与前面的示例相关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="1b138-195">The next example shows the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b138-196"><paramref name="rootDirectory" /> 或 <paramref name="relativePath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b138-196"><paramref name="rootDirectory" /> or <paramref name="relativePath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b138-197"><paramref name="relativePath" /> 为空，或者只包含空白字符。</span><span class="sxs-lookup"><span data-stu-id="1b138-197"><paramref name="relativePath" /> is empty or contains only white-space characters.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1b138-198">无法以流的形式打开或检索文件。</span><span class="sxs-lookup"><span data-stu-id="1b138-198">The file could not be opened or retrieved as a stream.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
