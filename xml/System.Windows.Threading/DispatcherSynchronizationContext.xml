<Type Name="DispatcherSynchronizationContext" FullName="System.Windows.Threading.DispatcherSynchronizationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a4db2f6d19395bfaf8e124466335de131e2dc74" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86984056" /></Metadata><TypeSignature Language="C#" Value="public sealed class DispatcherSynchronizationContext : System.Threading.SynchronizationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DispatcherSynchronizationContext extends System.Threading.SynchronizationContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherSynchronizationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DispatcherSynchronizationContext&#xA;Inherits SynchronizationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherSynchronizationContext sealed : System::Threading::SynchronizationContext" />
  <TypeSignature Language="F#" Value="type DispatcherSynchronizationContext = class&#xA;    inherit SynchronizationContext" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.SynchronizationContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 Windows Presentation Foundation (WPF) 提供同步上下文。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在 <xref:System.Windows.Threading.Dispatcher> 创建实例时未指定 <xref:System.Windows.Threading.DispatcherSynchronizationContext> ，则当前与 <xref:System.Windows.Threading.Dispatcher> 关联 <xref:System.Windows.Threading.DispatcherSynchronizationContext> 。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherSynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherSynchronizationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用当前的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 初始化 <see cref="T:System.Windows.Threading.Dispatcher" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherSynchronizationContext (System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dispatcher As Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherSynchronizationContext(System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherSynchronizationContext : System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherSynchronizationContext" Usage="new System.Windows.Threading.DispatcherSynchronizationContext dispatcher" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="dispatcher">要将此 <see cref="T:System.Windows.Threading.Dispatcher" /> 与其关联的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 初始化 <see cref="T:System.Windows.Threading.Dispatcher" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dispatcher" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherSynchronizationContext (System.Windows.Threading.Dispatcher dispatcher, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Threading.Dispatcher dispatcher, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dispatcher As Dispatcher, priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherSynchronizationContext(System::Windows::Threading::Dispatcher ^ dispatcher, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherSynchronizationContext : System.Windows.Threading.Dispatcher * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherSynchronizationContext" Usage="new System.Windows.Threading.DispatcherSynchronizationContext (dispatcher, priority)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dispatcher">要将此 <see cref="T:System.Windows.Threading.Dispatcher" /> 与其关联的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />。</param>
        <param name="priority">用于的优先级别发送和发送回调方法。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 初始化 <see cref="T:System.Windows.Threading.Dispatcher" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public override System.Threading.SynchronizationContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.SynchronizationContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCopy () As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::SynchronizationContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="override this.CreateCopy : unit -&gt; System.Threading.SynchronizationContext" Usage="dispatcherSynchronizationContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 的副本。</summary>
        <returns>此同步上下文的副本。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public override void Post (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Post(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Post (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="dispatcherSynchronizationContext.Post (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">要调用的委托。</param>
        <param name="state">传递给委托的对象。</param>
        <summary>异步调用同步上下文中的回调。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 委托按优先级置于调度程序队列中 <xref:System.Windows.Threading.DispatcherPriority.Normal> 。  
  
 <xref:System.Windows.Threading.DispatcherSynchronizationContext.Post%2A> 启动异步请求以发布消息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="d" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public override void Send (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Send(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Send (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Send(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.Send : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="dispatcherSynchronizationContext.Send (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">要调用的委托。</param>
        <param name="state">传递给委托的对象。</param>
        <summary>同步调用同步上下文中的回调。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 委托按优先级置于调度程序队列中 <xref:System.Windows.Threading.DispatcherPriority.Normal> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="d" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public override int Wait (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Wait(native int[] waitHandles, bool waitAll, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Wait (waitHandles As IntPtr(), waitAll As Boolean, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Wait(cli::array &lt;IntPtr&gt; ^ waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="override this.Wait : nativeint[] * bool * int -&gt; int" Usage="dispatcherSynchronizationContext.Wait (waitHandles, waitAll, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.ConstrainedExecution.PrePrepareMethod]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.ConstrainedExecution.PrePrepareMethod&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.IntPtr[]" />
        <Parameter Name="waitAll" Type="System.Boolean" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">一个包含本机操作系统句柄的数组。</param>
        <param name="waitAll">若等待所有句柄，则为 <see langword="true" />；若等待任一句柄，则为 <see langword="false" />。</param>
        <param name="millisecondsTimeout">等待的毫秒数，或为 <see cref="F:System.Threading.Timeout.Infinite" /> (-1)，表示无限期等待。</param>
        <summary>等待指定数组中的任一元素或所有元素接收信号。</summary>
        <returns>满足等待的对象的数组索引。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
