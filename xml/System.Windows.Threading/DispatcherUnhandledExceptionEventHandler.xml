<Type Name="DispatcherUnhandledExceptionEventHandler" FullName="System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1fc74b8218fb3c3d66971d9c87194fa55996aac" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89745114" /></Metadata><TypeSignature Language="C#" Value="public delegate void DispatcherUnhandledExceptionEventHandler(object sender, DispatcherUnhandledExceptionEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DispatcherUnhandledExceptionEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DispatcherUnhandledExceptionEventHandler(sender As Object, e As DispatcherUnhandledExceptionEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DispatcherUnhandledExceptionEventHandler(System::Object ^ sender, DispatcherUnhandledExceptionEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DispatcherUnhandledExceptionEventHandler = delegate of obj * DispatcherUnhandledExceptionEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="af636-101">事件源。</span><span class="sxs-lookup"><span data-stu-id="af636-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="af636-102">事件数据。</span><span class="sxs-lookup"><span data-stu-id="af636-102">The event data.</span></span></param>
    <summary><span data-ttu-id="af636-103">表示用来处理 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="af636-103">Represents the method that will handle the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af636-104"><xref:System.Windows.Threading.Dispatcher.UnhandledException>当执行的代码 <xref:System.Windows.Threading.Dispatcher> 引发未处理的异常时发生该事件。</span><span class="sxs-lookup"><span data-stu-id="af636-104">The <xref:System.Windows.Threading.Dispatcher.UnhandledException> event occurs when code executing by way of the <xref:System.Windows.Threading.Dispatcher> throws an exception which is not handled.</span></span>  
  
 <span data-ttu-id="af636-105"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>事件提供了不引发事件的方法 <xref:System.Windows.Threading.Dispatcher.UnhandledException> 。</span><span class="sxs-lookup"><span data-stu-id="af636-105">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="af636-106"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>首先引发事件，如果 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> 上的 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> 设置为 `false` ，则 <xref:System.Windows.Threading.Dispatcher.UnhandledException> 不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="af636-106">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
</Type>
