<Type Name="ClaimsPrincipalPermission" FullName="System.IdentityModel.Services.ClaimsPrincipalPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98b7ce1fdc4f09d6553ccb7f4e9b543c869c8bb9" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86812906" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClaimsPrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ClaimsPrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClaimsPrincipalPermission&#xA;Implements IPermission, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipalPermission sealed : System::Security::IPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipalPermission = class&#xA;    interface IPermission&#xA;    interface ISecurityEncodable&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="df4ae-101">表示使用 <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> 实施的权限，以确定对资源的访问是否应授予活动原则。</span><span class="sxs-lookup"><span data-stu-id="df4ae-101">Represents a permission that uses a <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> implementation to determine if access to a resource should be granted to the active principal.</span></span> <span data-ttu-id="df4ae-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="df4ae-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-103"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission>类提供通过使用 <xref:System.Security.Claims.ClaimsAuthorizationManager> 为应用程序配置的来执行命令性访问检查的功能。</span><span class="sxs-lookup"><span data-stu-id="df4ae-103">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class provides the capability to perform imperative access checks by using the <xref:System.Security.Claims.ClaimsAuthorizationManager> that is configured for an application.</span></span> <span data-ttu-id="df4ae-104">通过调用 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 方法或静态 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> 方法，你可以根据为声明身份验证管理器定义的授权策略，对代码的执行路径中的资源提供保护。</span><span class="sxs-lookup"><span data-stu-id="df4ae-104">By invoking the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method or the static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, you can provide protection to resources from within the execution path of your code according to the authorization policy defined for your claims authentication manager.</span></span> <span data-ttu-id="df4ae-105">声明性访问检查可以通过使用类来执行 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-105">Declarative access checks can be performed by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="df4ae-106"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission>类使用配置的声明授权管理器，该管理器由在 <xref:System.IdentityModel.Configuration.IdentityConfiguration> 属性下设置的进行 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-106">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class uses the claims authorization manager configured by the <xref:System.IdentityModel.Configuration.IdentityConfiguration> that is set under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="df4ae-107">即使在不使用 WS-FEDERATION 的情况下，也是如此，例如，active (WCF) Web 应用程序和控制台应用程序。</span><span class="sxs-lookup"><span data-stu-id="df4ae-107">This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications.</span></span> <span data-ttu-id="df4ae-108">可以在配置中或以编程方式指定声明授权管理器。</span><span class="sxs-lookup"><span data-stu-id="df4ae-108">You can specify the claims authorization manager either in configuration or programmatically.</span></span> <span data-ttu-id="df4ae-109">若要在配置文件中指定声明授权管理器，请在[ &lt; identityConfiguration &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration)元素下设置[ &lt; &gt; claimsAuthorizationManager](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager)元素，并确保此标识配置由运行时加载的[ &lt; federationConfiguration &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration)元素引用 (例如，通过将 `identityConfigurationName` 属性设置) 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-109">To specify the claims authorization manager in a configuration file, set the [&lt;claimsAuthorizationManager&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager) element under an [&lt;identityConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration) element and ensure that this identity configuration is referenced by the [&lt;federationConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration) element that is loaded by the runtime (for example, by setting the `identityConfigurationName` attribute).</span></span> <span data-ttu-id="df4ae-110">若要以编程方式设置声明授权管理器，请为事件提供处理程序 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-110">To set the claims authorization manager programmatically, provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="df4ae-111">在一个级别上，提供的功能 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 类似于基于角色的访问检查 (RBAC) 通过 <xref:System.Security.Permissions.PrincipalPermission> 类提供; 但是， <xref:System.Security.Claims.ClaimsAuthorizationManager> 类会基于活动主体提供的声明执行检查。</span><span class="sxs-lookup"><span data-stu-id="df4ae-111">On one level, the functionality provided by <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> is similar to the role-based access checks (RBAC) provided through the <xref:System.Security.Permissions.PrincipalPermission> class; however, the <xref:System.Security.Claims.ClaimsAuthorizationManager> class performs checks based on the claims presented by the active principal.</span></span> <span data-ttu-id="df4ae-112">这比通过纯 RBAC 提供的粒度要多得多，在这种情况下，通常会在单个角色下收集许多权限。</span><span class="sxs-lookup"><span data-stu-id="df4ae-112">This enables far more granularity than is available through pure RBAC, where many permissions are typically collected under a single role.</span></span> <span data-ttu-id="df4ae-113">更重要的是，更重要的是，基于声明的授权可以更好地分离业务逻辑和授权策略，因为可以对代码中的资源执行特定操作的权限，并且可以使用后端策略来配置呈现实体为满足需求而必须拥有的声明。</span><span class="sxs-lookup"><span data-stu-id="df4ae-113">Perhaps, more importantly, claims-based authorization enables better separation of business logic and authorization policy because permission can be demanded for a specific action on a resource in code and back-end policy can be used to configure which claims the presenting entity must possess in order to satisfy the demand.</span></span> <span data-ttu-id="df4ae-114">与 RBAC 类似， <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 执行基于用户的访问检查，即，与从类派生的类实现的代码访问安全性不同， <xref:System.Security.CodeAccessPermission> 并使用堆栈审核来确保已向代码的所有调用方授予权限， <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 仅对当前主体执行检查。</span><span class="sxs-lookup"><span data-stu-id="df4ae-114">Like RBAC, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> performs a user-based access check, that is, unlike code access security implemented by classes that derive from the <xref:System.Security.CodeAccessPermission> class and use a stack walk to ensure that all callers of the code have been granted a permission, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> performs its check only on the current principal.</span></span>  
  
 <span data-ttu-id="df4ae-115">静态 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> 方法检查针对指定资源的指定操作的访问权限。</span><span class="sxs-lookup"><span data-stu-id="df4ae-115">The static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method checks access for a specified action on a specified resource.</span></span> <span data-ttu-id="df4ae-116">资源和操作都是字符串，并且通常为 Uri。</span><span class="sxs-lookup"><span data-stu-id="df4ae-116">The resource and action are both strings and are typically URIs.</span></span> <span data-ttu-id="df4ae-117">你还可以 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 使用操作和资源初始化实例，并调用 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="df4ae-117">You can also initialize an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> with an action and a resource and call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method.</span></span> <span data-ttu-id="df4ae-118">尽管构造函数只使用单个资源和操作，但 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 可以通过和方法合并对象 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-118">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="df4ae-119">使用这些方法创建的权限可能包含多个资源操作对。</span><span class="sxs-lookup"><span data-stu-id="df4ae-119">A permission created by using these methods may contain multiple resource-action pairs.</span></span>  
  
 <span data-ttu-id="df4ae-120">这两种方法都可通过调用 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> 已配置的声明授权管理器的方法来确定访问权限，其中包括 <xref:System.Security.Claims.AuthorizationContext> 活动主体 (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>) 、资源和操作。</span><span class="sxs-lookup"><span data-stu-id="df4ae-120">Both methods determine access by invoking the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>), the resource, and the action.</span></span> <span data-ttu-id="df4ae-121"><xref:System.Security.SecurityException>如果当前主体无权对资源执行操作，则它们会引发; 否则，执行将继续。</span><span class="sxs-lookup"><span data-stu-id="df4ae-121">They throw a <xref:System.Security.SecurityException> if the current principal is not authorized to perform the action on the resource; otherwise, execution proceeds.</span></span>  
  
 <span data-ttu-id="df4ae-122">对于 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 包含多个资源操作对的，将 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> 为权限中包含的每个资源操作对调用方法。</span><span class="sxs-lookup"><span data-stu-id="df4ae-122">In the case of a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> that contains multiple resource-action pairs, the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method is invoked for each of the resource-action pairs contained in the permission.</span></span>  <span data-ttu-id="df4ae-123">要使对的调用 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 成功，必须针对权限中包含的所有资源操作对对活动主体进行授权。</span><span class="sxs-lookup"><span data-stu-id="df4ae-123">For the call to <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed, the active principal must be authorized for all of the resource-action pairs contained in the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df4ae-124">下面的示例演示如何使用 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 方法、 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> 方法或声明保护资源 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-124">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, or a <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration.</span></span> <span data-ttu-id="df4ae-125">在每种情况下，将调用配置的 <xref:System.Security.Claims.ClaimsAuthorizationManager> 来针对指定的资源和操作评估当前主体。</span><span class="sxs-lookup"><span data-stu-id="df4ae-125">In each case, the configured <xref:System.Security.Claims.ClaimsAuthorizationManager> is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="df4ae-126">如果未对指定资源的指定操作授权当前主体，则 <xref:System.Security.SecurityException> 将引发; 否则，执行将继续。</span><span class="sxs-lookup"><span data-stu-id="df4ae-126">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#1)]  
  
 <span data-ttu-id="df4ae-127">下面的 XML 演示将自定义声明授权管理器与类结合使用所需的最低配置 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-127">The following XML shows the minimum configuration required to use a custom claims authorization manager with the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class.</span></span> <span data-ttu-id="df4ae-128">至少必须在 `system.identityModel` 元素中同时声明和 `system.identityModel.services` 部分， `<configSection>` 然后在默认标识配置下的[ &lt; claimsAuthorizationManager &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager)元素中指定授权管理器。</span><span class="sxs-lookup"><span data-stu-id="df4ae-128">You must, at a minimum, declare both the `system.identityModel` and the `system.identityModel.services` sections in the `<configSection>` element and then specify your authorization manager in a [&lt;claimsAuthorizationManager&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager) element under the default identity configuration.</span></span> <span data-ttu-id="df4ae-129">这将确保从默认的联合身份验证配置引用授权管理器。</span><span class="sxs-lookup"><span data-stu-id="df4ae-129">This will ensure that your authorization manager is referenced from the default federation configuration.</span></span> <span data-ttu-id="df4ae-130">或者，你可以指定在 `identityConfigurationName` [ &lt; federationConfiguration &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration)元素的属性中指定了授权管理器的标识配置的名称。</span><span class="sxs-lookup"><span data-stu-id="df4ae-130">Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the `identityConfigurationName` attribute of the [&lt;federationConfiguration&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration) element.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
  <configSections>  
    <!-- WIF configuration sections -->  
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
  </configSections>  
  
  <startup>  
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
  </startup>  
  
  <system.identityModel>  
    <identityConfiguration>  
      <claimsAuthorizationManager type ="MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager"/>  
    </identityConfiguration>  
  </system.identityModel>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
    <altmember cref="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration"><span data-ttu-id="df4ae-131">&lt;federationConfiguration&gt;</span><span class="sxs-lookup"><span data-stu-id="df4ae-131">&lt;federationConfiguration&gt;</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipalPermission (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipalPermission(System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.ClaimsPrincipalPermission : string * string -&gt; System.IdentityModel.Services.ClaimsPrincipalPermission" Usage="new System.IdentityModel.Services.ClaimsPrincipalPermission (resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="df4ae-132">主体应该被授权的资源。</span><span class="sxs-lookup"><span data-stu-id="df4ae-132">The resource on which the principal should be authorized.</span></span></param>
        <param name="action"><span data-ttu-id="df4ae-133">应为其授权当前主体的操作。</span><span class="sxs-lookup"><span data-stu-id="df4ae-133">The action for which the principal should be authorized.</span></span></param>
        <summary><span data-ttu-id="df4ae-134">创建 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="df4ae-134">Creates a new instance of the <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-135"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission>对象用指定的资源-操作对进行初始化。</span><span class="sxs-lookup"><span data-stu-id="df4ae-135">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is initialized with the specified resource-action pair.</span></span> <span data-ttu-id="df4ae-136">您可以调用 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 方法来执行访问检查。</span><span class="sxs-lookup"><span data-stu-id="df4ae-136">You can call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method to perform an access check.</span></span>  
  
 <span data-ttu-id="df4ae-137">尽管构造函数只使用单个资源和操作，但 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 可以通过和方法合并对象 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-137">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="df4ae-138">通过这些方法创建的权限可能包含多个资源操作对。</span><span class="sxs-lookup"><span data-stu-id="df4ae-138">The permission created through these methods may contain multiple resource-action pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="df4ae-139"><paramref name="resource" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="df4ae-139"><paramref name="resource" /> is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="df4ae-140"><paramref name="action" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="df4ae-140"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public static void CheckAccess (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckAccess(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckAccess (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckAccess(System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="static member CheckAccess : string * string -&gt; unit" Usage="System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess (resource, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="df4ae-141">主体应该被授权的资源。</span><span class="sxs-lookup"><span data-stu-id="df4ae-141">The resource on which the principal should be authorized.</span></span></param>
        <param name="action"><span data-ttu-id="df4ae-142">应为其授权当前主体的操作。</span><span class="sxs-lookup"><span data-stu-id="df4ae-142">The action for which the principal should be authorized.</span></span></param>
        <summary><span data-ttu-id="df4ae-143">检查是否授权当前主体在指定资源上执行指定操作。</span><span class="sxs-lookup"><span data-stu-id="df4ae-143">Checks if the current principal is authorized to perform the specified action on the specified resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-144">主体必须针对指定资源的指定操作进行授权，否则 <xref:System.Security.SecurityException> 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="df4ae-144">The principal must be authorized for the specified action on the specified resource or the <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="df4ae-145"><xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType>配置的声明授权管理器的方法是使用 <xref:System.Security.Claims.AuthorizationContext> 活动主体 (<xref:System.Threading.Thread.CurrentPrincipal%2A>) 、资源和操作的组合来调用的。</span><span class="sxs-lookup"><span data-stu-id="df4ae-145">The <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager is invoked with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df4ae-146">下面的示例演示如何使用方法保护资源 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-146">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method.</span></span> <span data-ttu-id="df4ae-147">将调用配置的声明授权管理器来评估当前主体是否针对指定的资源和操作。</span><span class="sxs-lookup"><span data-stu-id="df4ae-147">The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="df4ae-148">如果未对指定资源的指定操作授权当前主体，则 <xref:System.Security.SecurityException> 将引发; 否则，执行将继续。</span><span class="sxs-lookup"><span data-stu-id="df4ae-148">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="df4ae-149">当前主体无法从 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 进行分配。</span><span class="sxs-lookup"><span data-stu-id="df4ae-149">The current principal is not assignable from <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span>  
  
<span data-ttu-id="df4ae-150">-或-</span><span class="sxs-lookup"><span data-stu-id="df4ae-150">-or-</span></span> 
<span data-ttu-id="df4ae-151">没有配置的 <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />。</span><span class="sxs-lookup"><span data-stu-id="df4ae-151">There is no <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> configured.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="df4ae-152">授权检查已失败。</span><span class="sxs-lookup"><span data-stu-id="df4ae-152">The authorization check failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df4ae-153">返回当前 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 实例的副本。</span><span class="sxs-lookup"><span data-stu-id="df4ae-153">Returns a copy of the current <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> instance.</span></span></summary>
        <returns><span data-ttu-id="df4ae-154">一个从当前实例中复制的 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />。</span><span class="sxs-lookup"><span data-stu-id="df4ae-154">A <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> copied from the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="claimsPrincipalPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df4ae-155">检查当前主体是否获得与当前实例关联的资源操作对的授权。</span><span class="sxs-lookup"><span data-stu-id="df4ae-155">Checks if the current principal is authorized for the resource-action pairs associated with the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-156">对于与此实例关联的所有资源操作对，当前主体必须进行授权，否则将 <xref:System.Security.SecurityException> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="df4ae-156">The current principal must be authorized for all of the resource-action pairs associated with this instance or the <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="df4ae-157">尽管构造函数只使用单个资源和操作，但 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 可以通过和方法合并对象 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-157">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="df4ae-158">通过这些方法创建的权限可能包含多个资源操作对。</span><span class="sxs-lookup"><span data-stu-id="df4ae-158">The permission created through these methods may contain multiple resource-action pairs.</span></span>  
  
 <span data-ttu-id="df4ae-159"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>方法 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> 使用 <xref:System.Security.Claims.AuthorizationContext> 活动主体 (<xref:System.Threading.Thread.CurrentPrincipal%2A>) 、资源和权限中包含的每个资源操作对的操作，调用已配置的声明授权管理器的方法。</span><span class="sxs-lookup"><span data-stu-id="df4ae-159">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action for each of the resource-action pairs contained in the permission.</span></span> <span data-ttu-id="df4ae-160"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>若要成功，必须针对权限中包含的所有资源操作对对活动主体授权。</span><span class="sxs-lookup"><span data-stu-id="df4ae-160">For the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df4ae-161">下面的示例演示如何使用方法保护资源 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-161">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method.</span></span> <span data-ttu-id="df4ae-162">将调用配置的声明授权管理器来评估当前主体是否针对指定的资源和操作。</span><span class="sxs-lookup"><span data-stu-id="df4ae-162">The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="df4ae-163">如果未对指定资源的指定操作授权当前主体，则 <xref:System.Security.SecurityException> 将引发; 否则，执行将继续。</span><span class="sxs-lookup"><span data-stu-id="df4ae-163">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="df4ae-164">当前主体无法从 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 进行分配。</span><span class="sxs-lookup"><span data-stu-id="df4ae-164">The current principal is not assignable from <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span>  
  
<span data-ttu-id="df4ae-165">-或-</span><span class="sxs-lookup"><span data-stu-id="df4ae-165">-or-</span></span> 
<span data-ttu-id="df4ae-166">没有配置的 <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />。</span><span class="sxs-lookup"><span data-stu-id="df4ae-166">There is no <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> configured.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="df4ae-167">授权检查已失败。</span><span class="sxs-lookup"><span data-stu-id="df4ae-167">The authorization check failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (element As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="claimsPrincipalPermission.FromXml element" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="df4ae-168">用于重新构造权限的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="df4ae-168">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="df4ae-169">通过指定的 XML 内码重新构建当前权限及其状态。</span><span class="sxs-lookup"><span data-stu-id="df4ae-169">Reconstructs the current permission and its state from the specified XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-170">从通过调用方法创建的 XML 编码重新构造权限 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-170">Reconstructs a permission from the XML encoding created by a call to the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="df4ae-171"><paramref name="element" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="df4ae-171"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="df4ae-172">该编码中包含未识别的元素或特性或不正确形成的 XML。</span><span class="sxs-lookup"><span data-stu-id="df4ae-172">The encoding contains unrecognized elements or attributes or improperly formed XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="df4ae-173">要与当前权限相交的该权限。</span><span class="sxs-lookup"><span data-stu-id="df4ae-173">The permission to intersect with the current permission.</span></span> <span data-ttu-id="df4ae-174">必须为 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="df4ae-174">It must be an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="df4ae-175">返回一个权限，该权限是当前权限与指定权限的交集。</span><span class="sxs-lookup"><span data-stu-id="df4ae-175">Returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="df4ae-176">一个新的 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />，表示当前权限与指定权限的交集；或为 <see langword="null" />（如果 <paramref name="target" /> 为 <paramref name="null" />，或者不是 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 的一个实例）。</span><span class="sxs-lookup"><span data-stu-id="df4ae-176">A new <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> that represents the intersection of the current permission and the specified permission; or <see langword="null" /> if <paramref name="target" /> is <paramref name="null" /> or is not an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-177">返回的权限只包含当前权限和指定权限中同时存在的资源操作对。</span><span class="sxs-lookup"><span data-stu-id="df4ae-177">The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission.</span></span> <span data-ttu-id="df4ae-178">仅存在于其中一个权限或另一个权限中的资源操作对不包括在内。</span><span class="sxs-lookup"><span data-stu-id="df4ae-178">Resource-action pairs that existed in only one or the other of the permissions are not included.</span></span> <span data-ttu-id="df4ae-179"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>若要成功实现新的权限，当前主体只需获得对当前权限和指定权限通用的资源-操作对的授权。</span><span class="sxs-lookup"><span data-stu-id="df4ae-179">For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="claimsPrincipalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="df4ae-180">对其子集关系测试的权限。</span><span class="sxs-lookup"><span data-stu-id="df4ae-180">The permission to be tested for the subset relationship.</span></span> <span data-ttu-id="df4ae-181">必须为 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="df4ae-181">It must be an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="df4ae-182">返回一个值，该值指示当前权限是否为指定权限的一个子集。</span><span class="sxs-lookup"><span data-stu-id="df4ae-182">Returns a value that indicates whether current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="df4ae-183">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="df4ae-183"><see langword="true" /> if current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-184">如果当前权限中包含的所有资源操作对也存在于指定权限中，则当前权限是指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="df4ae-184">The current permission is a subset of the specified permission if all of the resource-action pairs contained in the current permission are also present in the specified permission.</span></span> <span data-ttu-id="df4ae-185">如果 `target` 为 `null` 或不是的实例 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> ，则 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-185">If `target` is `null` or is not an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="claimsPrincipalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df4ae-186">返回一个值，指示权限是否不受限。</span><span class="sxs-lookup"><span data-stu-id="df4ae-186">Returns a value that indicates whether the permission is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="df4ae-187">如果权限不受限，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="df4ae-187"><see langword="true" /> if the permission is unrestricted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="df4ae-188">始终返回 <see langword="true" />，指示权限不受限。</span><span class="sxs-lookup"><span data-stu-id="df4ae-188">Always returns <see langword="true" /> indicating that permission is unrestricted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="claimsPrincipalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df4ae-189">返回当前权限及其状态的 XML 编码形式。</span><span class="sxs-lookup"><span data-stu-id="df4ae-189">Returns the XML encoded form of the current permission and its state.</span></span></summary>
        <returns><span data-ttu-id="df4ae-190">当前权限及其状态的 XML 编码形式。</span><span class="sxs-lookup"><span data-stu-id="df4ae-190">The XML encoded form of the current permission and its state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-191">通过调用方法，可以从其 XML 编码格式重新构造主体 <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="df4ae-191">The principal can be reconstructed from its XML encoded form by calling the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="claimsPrincipalPermission.Union target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="df4ae-192">将与当前权限合并的该权限。</span><span class="sxs-lookup"><span data-stu-id="df4ae-192">The permission to combine with current permission.</span></span> <span data-ttu-id="df4ae-193">该对象的类型必须是 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />。</span><span class="sxs-lookup"><span data-stu-id="df4ae-193">It must be of type <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="df4ae-194">返回一个新权限，该权限是当前权限与指定权限的并集。</span><span class="sxs-lookup"><span data-stu-id="df4ae-194">Returns a new permission that is the union of the current permission and the specified permission.</span></span> <span data-ttu-id="df4ae-195">具有当前实例和目标实例中存在的所有资源操作对的 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="df4ae-195"><see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> object that has all of the resource-action pairs that are present in the current instance and the target instance.</span></span></summary>
        <returns><span data-ttu-id="df4ae-196">一个新的 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />，表示当前权限与指定权限的联合；或为 <see langword="null" />（如果 <paramref name="target" /> 为 <paramref name="null" />，或者不是 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 的一个实例）。</span><span class="sxs-lookup"><span data-stu-id="df4ae-196">A new <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> that represents the union of the current permission and the specified permission; or <see langword="null" /> if <paramref name="target" /> is <paramref name="null" /> or is not an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df4ae-197">返回的权限包含当前权限中存在的所有资源操作对，以及存在指定权限的所有资源操作对。</span><span class="sxs-lookup"><span data-stu-id="df4ae-197">The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission.</span></span> <span data-ttu-id="df4ae-198"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>若要成功实现新的权限，当前主体必须为当前权限中存在的所有资源操作对和指定权限中存在的所有资源-操作对进行授权。</span><span class="sxs-lookup"><span data-stu-id="df4ae-198">For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
