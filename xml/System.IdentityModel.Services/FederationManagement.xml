<Type Name="FederationManagement" FullName="System.IdentityModel.Services.FederationManagement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79cbcaef82330255295a407873fb565884fc8568" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89921099" /></Metadata><TypeSignature Language="C#" Value="public static class FederationManagement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FederationManagement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.FederationManagement" />
  <TypeSignature Language="VB.NET" Value="Public Class FederationManagement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederationManagement abstract sealed" />
  <TypeSignature Language="F#" Value="type FederationManagement = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义创建 Federation 元数据文档的静态方法，并基于 Federation 元数据文档更新的应用程序配置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关联合元数据文档的详细信息，请参阅以下规范的第三部分： [Web Services 联合身份验证语言 (WS 联合身份验证) 1.2 版](https://go.microsoft.com/fwlink/?LinkID=210152)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateApplicationFederationMetadata">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader CreateApplicationFederationMetadata (Uri applicationUri, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, System.IdentityModel.Services.ApplicationType applicationType, System.Collections.ObjectModel.Collection&lt;Uri&gt; audienceUris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader CreateApplicationFederationMetadata(class System.Uri applicationUri, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Collections.ObjectModel.Collection`1&lt;class System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, valuetype System.IdentityModel.Services.ApplicationType applicationType, class System.Collections.ObjectModel.Collection`1&lt;class System.Uri&gt; audienceUris) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateApplicationFederationMetadata (applicationUri As Uri, certificate As X509Certificate2, claimsRequired As Collection(Of DisplayClaim), applicationType As ApplicationType, audienceUris As Collection(Of Uri)) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ CreateApplicationFederationMetadata(Uri ^ applicationUri, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::Collections::ObjectModel::Collection&lt;System::IdentityModel::Metadata::DisplayClaim ^&gt; ^ claimsRequired, System::IdentityModel::Services::ApplicationType applicationType, System::Collections::ObjectModel::Collection&lt;Uri ^&gt; ^ audienceUris);" />
      <MemberSignature Language="F#" Value="static member CreateApplicationFederationMetadata : Uri * System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; * System.IdentityModel.Services.ApplicationType * System.Collections.ObjectModel.Collection&lt;Uri&gt; -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata (applicationUri, certificate, claimsRequired, applicationType, audienceUris)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationUri" Type="System.Uri" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="claimsRequired" Type="System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt;" />
        <Parameter Name="applicationType" Type="System.IdentityModel.Services.ApplicationType" />
        <Parameter Name="audienceUris" Type="System.Collections.ObjectModel.Collection&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationUri">应用程序 URI。</param>
        <param name="certificate">使用签名元数据的 X.509 证书。</param>
        <param name="claimsRequired">应用程序需要的声明。</param>
        <param name="applicationType"><see cref="T:System.IdentityModel.Services.ApplicationType" /> 的一个值指定元数据描述的应用类型。 这用于确定终结点创建。</param>
        <param name="audienceUris">可用于此应用程序的可接受的 URI 的集合。</param>
        <summary>创建包含 Federation Metadata 的 XML 文档。</summary>
        <returns>包含使用参数创建的元数据文件的 XML 读取器。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateIdentityProviderTrustInfo">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>根据指定的 Federation 元数据文档更新指定应用程序的配置（如果需要）。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, claimsOfferedUpdate As Boolean) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataReader">包含元数据文档的 XML 读取器。</param>
        <param name="inputConfiguration">含配置的 XML 读取器。</param>
        <param name="claimsOfferedUpdate">如果应更新提供的要求列表，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>根据指定的 Federation 元数据文件和指定是否应更新所提供的声明列表的值，更新指定的应用程序配置（如果需要）。</summary>
        <returns>一个 XML 读取器包含更新的配置，或如果无法更新该配置，则为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="inputConfiguration" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, claimsOfferedUpdate As Boolean, metadataSerializer As MetadataSerializer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool * System.IdentityModel.Metadata.MetadataSerializer -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">包含元数据文档的 XML 读取器。</param>
        <param name="inputConfiguration">含配置的 XML 读取器。</param>
        <param name="claimsOfferedUpdate">如果应更新提供的要求列表，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="metadataSerializer">读取 STS 元数据的序列化程序。</param>
        <summary>根据指定的 Federation 元数据文件和指定是否应更新所提供的声明列表的值，更新指定的应用程序配置（如果需要）。 用于读取安全标识服务（STS）元数据的序列化程序也被指定。</summary>
        <returns>一个 XML 读取器包含更新的配置，或如果无法更新该配置，则为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="inputConfiguration" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="metadataSerializer" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, ByRef newIssuerNameRegistry As XmlNodeReader, ByRef claimTypesOffered As XmlNodeReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * XmlNodeReader * XmlNodeReader -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
      </Parameters>
      <Docs>
        <param name="metadataReader">包含元数据文档的 XML 读取器。</param>
        <param name="inputConfiguration">含配置的 XML 读取器。</param>
        <param name="newIssuerNameRegistry">当此方法返回时，包含 XML 节点，该节点包含指定发布者名称注册表的元素。 如果没有颁发者名称注册表指定，则 <see langword="null" />。 该参数未经初始化即被处理。</param>
        <param name="claimTypesOffered">当此方法返回时，如果提供的声明类型列表已更改，则包含含有指定新列表的元素的 XML 节点读取器。 如果未更改列表，则返回 <see langword="null" />。 该参数未经初始化即被处理。</param>
        <summary>根据指定的 Federation 元数据文档更新指定应用程序的配置（如果需要）。 如果已更新，返回颁布者名称注册表的配置元素，以及所提供的声明类型的配置元素。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="inputConfiguration" /><paramref name="metadataReader" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, ByRef newIssuerNameRegistry As XmlNodeReader, ByRef claimTypesOffered As XmlNodeReader, metadataSerializer As MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * XmlNodeReader * XmlNodeReader * System.IdentityModel.Metadata.MetadataSerializer -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">包含元数据文档的 XML 读取器。</param>
        <param name="inputConfiguration">含配置的 XML 读取器。</param>
        <param name="newIssuerNameRegistry">当此方法返回时，包含 XML 节点，该节点包含指定发布者名称注册表的元素。 如果没有颁发者名称注册表指定，则 <see langword="null" />。 该参数未经初始化即被处理。</param>
        <param name="claimTypesOffered">当此方法返回时，如果提供的声明类型列表已更改，则包含含有指定新列表的元素的 XML 节点读取器。 如果未更改列表，则返回 <see langword="null" />。 该参数未经初始化即被处理。</param>
        <param name="metadataSerializer">读取 STS 元数据的序列化程序。</param>
        <summary>根据指定的 Federation 元数据文档更新指定应用程序的配置（如果需要）。 如果已更新，返回颁布者名称注册表的配置元素，以及所提供的声明类型的配置元素。 用于读取安全标识服务（STS）元数据的序列化程序也被指定。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="inputConfiguration" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="metadataSerializer" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
