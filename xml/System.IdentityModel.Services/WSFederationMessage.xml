<Type Name="WSFederationMessage" FullName="System.IdentityModel.Services.WSFederationMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fe3c76031097ccf4c65b10be317b04af46b20a5" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82500708" /></Metadata><TypeSignature Language="C#" Value="public abstract class WSFederationMessage : System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WSFederationMessage extends System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WSFederationMessage&#xA;Inherits FederationMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationMessage abstract : System::IdentityModel::Services::FederationMessage" />
  <TypeSignature Language="F#" Value="type WSFederationMessage = class&#xA;    inherit FederationMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.FederationMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 WS-Federation 消息并定义基类，通过其可衍生更具体 WS-Federation 消息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationMessage>类表示 Ws 联合身份验证请求或 Ws 联合身份验证响应。 表示特定 WS 联合身份验证消息的更专业化类派生自 <xref:System.IdentityModel.Services.WSFederationMessage> ; 例如， <xref:System.IdentityModel.Services.SignInRequestMessage> 类，该类表示 ws-federation 登录请求消息。  
  
 <xref:System.IdentityModel.Services.WSFederationMessage>类公开几个可用于设置或访问单个消息参数的属性。 还可以通过字典设置或访问这些参数 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。 例如，可以通过 <xref:System.IdentityModel.Services.WSFederationMessage.Encoding%2A> 属性或通过将 "wencoding" 指定为字典的键来读取消息中的 wencoding 参数 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。  
  
 <xref:System.IdentityModel.Services.WSFederationMessage>包含一些静态方法，您可以调用这些方法来创建相应的 WS 联合身份验证消息：包含查询字符串的 url、基 URL 以及 WS 联合身份验证参数名称和值的集合，或在 HTTP 请求中窗体发布数据。  
  
 [!INCLUDE[wif_wsfed_ref](~/includes/wif-wsfed-ref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationMessage (Uri baseUrl, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationMessage(Uri ^ baseUrl, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.WSFederationMessage : Uri * string -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="new System.IdentityModel.Services.WSFederationMessage (baseUrl, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUrl">WS-Federation 消息应用的基 URL。 这是没有任何询问参数的 URL。 设置 <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> 属性。</param>
        <param name="action">消息的 wa 参数。 指定要执行的操作；例如，WS 联合身份验证登录请求的“wsignin1.0”。 设置 <see cref="P:System.IdentityModel.Services.WSFederationMessage.Action" /> 属性。</param>
        <summary>从该消息应用的基 URL 和要执行的操作（wa 消息参数）来初始化 <see cref="T:System.IdentityModel.Services.WSFederationMessage" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="baseUri" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="action" /> 为 <see langword="null" /> 或空字符串。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException"><paramref name="baseUri" /> 不是有效的绝对 URI。</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wa 参数。</summary>
        <value>wa 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wa 参数指定要执行的操作。 例如，对于登录方案， <xref:System.IdentityModel.Services.WSFederationMessage.Action%2A> 属性设置为 "wsignin1.0 1.0"，对于注销方案，属性设置为 "wsignout1.0 1.0"。 Wa 参数是必需的，因此此属性不能设置为 `null` 或空字符串。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">尝试设置一个为 <see langword="null" /> 或空字符串的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wctx 参数。</summary>
        <value>wctx 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在请求中传递了所颁发的令牌，则指定必须返回的上下文值。 此值是不透明的，也就是说，它的语义只由消息的发起方识别（通常是信赖方-RP）;消息或任何中介的接收方不会对其进行解释。 Wctx 参数是可选的。 将 <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wctx 参数。  
  
> [!IMPORTANT]
>  如果你的应用程序接收到带有 wctx 参数集的 WS 联合身份验证消息，则应确保在发送方的任何响应中返回相同的值，或者在将消息传递给另一方时转发该消息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFormPost">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromFormPost (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromFormPost(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFormPost (request As HttpRequestBase) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromFormPost(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="static member CreateFromFormPost : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">包含窗体发布参数请求的请求。</param>
        <summary>从指定请求接收的窗体发送中创建 WS-Federation 消息。</summary>
        <returns>生成的消息或如果消息无法生成则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果可以创建消息，则方法将根据在 <xref:System.IdentityModel.Services.WSFederationMessage> 窗体 post 中提交的 wa 参数返回适当的实现; 例如，如果 wa 参数是 "wsignout1.0 1.0"，则 <xref:System.IdentityModel.Services.SignOutRequestMessage> 返回一个对象。  
  
 获取由客户端从请求提交并调用方法的窗体变量的基 URL 和集合 <xref:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromNameValueCollection">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromNameValueCollection (Uri baseUrl, System.Collections.Specialized.NameValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromNameValueCollection(class System.Uri baseUrl, class System.Collections.Specialized.NameValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromNameValueCollection (baseUrl As Uri, collection As NameValueCollection) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromNameValueCollection(Uri ^ baseUrl, System::Collections::Specialized::NameValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member CreateFromNameValueCollection : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection (baseUrl, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseUrl">联合消息应用的基 URL。</param>
        <param name="collection">该包含消息的参数的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>从参数的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 创建 WS-Federation 消息。</summary>
        <returns>生成的消息或如果消息无法生成则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参数集合必须包含 wa 参数的条目，该参数指定要执行的操作。 如果 wa 条目不是已识别的操作，则会引发异常。 参数集合应包含集合中 wa 参数指定的消息种类的相应参数。 方法将基于 wa 参数返回相应的实现 <xref:System.IdentityModel.Services.WSFederationMessage> 。 下表列出了 <xref:System.IdentityModel.Services.WSFederationMessage> 为各种参数组合返回的实现。  
  
|返回类型|wa 指定的查询参数|注释|  
|-------------------|----------------------------------|--------------|  
|<xref:System.IdentityModel.Services.AttributeRequestMessage>|wattr 1。0|--|  
|<xref:System.IdentityModel.Services.PseudonymRequestMessage>|wpseudo 1。0|--|  
|<xref:System.IdentityModel.Services.SignInRequestMessage>|wsignin1.0|`collection`必须包含 wtrealm 或 wreply 参数。 如果 `collection` 包含 wresult 或 wresultptr 参数，则返回一个登录响应消息（请参阅下一行）。|  
|<xref:System.IdentityModel.Services.SignInResponseMessage>|wsignin1.0|如果 `collection` 包含 wresult 或 wresultptr 参数，则返回。 只能存在一个。 如果两者都存在，则会引发异常。|  
|<xref:System.IdentityModel.Services.SignOutRequestMessage>|wsignout1.0 1。0|--|  
|<xref:System.IdentityModel.Services.SignOutCleanupRequestMessage>|wsignoutcleanup1.0 1。0|--|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="baseUrl" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="collection" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">wa 参数在参数集合中不可被识别。</exception>
        <exception cref="T:System.ArgumentException">登录响应消息在参数集合中同时具有 wresult 和 wresultptr 参数。 （合法的登录答案信息的 wa 参数与“wsignin1.0”等效，wsiesult 与 wresultptr 参数也等效，但这两组等效参数不可同时发生。）</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromUri">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromUri (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromUri(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromUri (requestUri As Uri) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromUri(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateFromUri : Uri -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromUri requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">从其创建消息的 URI。 指定于查询字符串的消息参数。 wa 参数必须存在。</param>
        <summary>从指定的 URI 中创建一条 WS-Federation 消息。 参数假定在查询字符串中指定。</summary>
        <returns>已创建的消息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationMessage>根据查询字符串中的 wa 参数返回适当的实现; 例如，如果 wa 参数是 "wsignout1.0 1.0"，则 <xref:System.IdentityModel.Services.SignOutRequestMessage> 返回一个对象。  
  
 根据查询字符串中存在的参数的组合和值，可能会引发其他异常。  
  
 调用 <xref:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">不能从指定的 URI 中创建消息。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wencoding 参数。</summary>
        <value>Wencoding 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定要用于消息中嵌入的任何 XML 的编码样式。 Wencoding 参数是可选的。 将 <xref:System.IdentityModel.Services.WSFederationMessage.Encoding%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wencoding 参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromUri">
      <MemberSignature Language="C#" Value="public static bool TryCreateFromUri (Uri requestUri, out System.IdentityModel.Services.WSFederationMessage fedMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateFromUri(class System.Uri requestUri, [out] class System.IdentityModel.Services.WSFederationMessage&amp; fedMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreateFromUri (requestUri As Uri, ByRef fedMsg As WSFederationMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreateFromUri(Uri ^ requestUri, [Runtime::InteropServices::Out] System::IdentityModel::Services::WSFederationMessage ^ % fedMsg);" />
      <MemberSignature Language="F#" Value="static member TryCreateFromUri : Uri * WSFederationMessage -&gt; bool" Usage="System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri (requestUri, fedMsg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="fedMsg" Type="System.IdentityModel.Services.WSFederationMessage" RefType="out" />
      </Parameters>
      <Docs>
        <param name="requestUri">从其创建消息的 URI。 指定于查询字符串的消息参数。 wa 参数必须存在。</param>
        <param name="fedMsg">当此方法返回时，如果无法创建消息，则包含创建的消息或 <see langword="null" />。 该参数未经初始化即被处理。</param>
        <summary>尝试从指定的 URI 中创建一个 WS-Federation 消息。 参数被假定为查询字符串。</summary>
        <returns>如果成功创建了消息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果可以创建消息，则该方法将根据 <xref:System.IdentityModel.Services.WSFederationMessage> 查询字符串中的 wa 参数返回适当的实现; 例如，如果 wa 参数是 "wsignout1.0 1.0"，则 <xref:System.IdentityModel.Services.SignOutRequestMessage> 返回一个对象。  
  
 调用 <xref:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>
