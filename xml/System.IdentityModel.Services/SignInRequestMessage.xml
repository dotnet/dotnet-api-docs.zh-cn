<Type Name="SignInRequestMessage" FullName="System.IdentityModel.Services.SignInRequestMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="448dd2a3d0fe8b2b8dabc0200138acbb9d34df8a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70516078" /></Metadata><TypeSignature Language="C#" Value="public class SignInRequestMessage : System.IdentityModel.Services.WSFederationMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignInRequestMessage extends System.IdentityModel.Services.WSFederationMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.SignInRequestMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class SignInRequestMessage&#xA;Inherits WSFederationMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignInRequestMessage : System::IdentityModel::Services::WSFederationMessage" />
  <TypeSignature Language="F#" Value="type SignInRequestMessage = class&#xA;    inherit WSFederationMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.WSFederationMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 WS-Federation Sign-In 请求消息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WS 联合身份验证登录消息由信赖方 (RP) 发送到 security token service (STS) 来请求安全令牌。 Wa 参数必须设置为 "wsignout1.0 1.0"，并且应将 wtrealm 参数设置为请求的资源的安全领域 (这通常是所请求资源) 的 URL。 还可以在请求中指定其他可选参数。  
  
 <xref:System.IdentityModel.Services.SignOutRequestMessage>消息是通过类的静态方法创建的 <xref:System.IdentityModel.Services.SignOutRequestMessage> ，例如 <xref:System.IdentityModel.Services.WSFederationMessage.CreateFromUri%2A> 方法，当 wa 参数设置为 "wsignin1.0 1.0" 时，不存在 wresult 或 wresultptr 参数，并且 wtrealm 参数或 wreply 参数存在。  
  
> [!IMPORTANT]
>  为了与 Active Directory 联合身份验证服务 (AD FS) 版本1.0 的向后兼容，Windows Identity Foundation (WIF) 允许将 wtrealm 参数或 wreply 参数设置 (或同时) 两个，以便登录消息有效;但是，WS-FEDERATION 协议要求在登录请求中存在 wtrealm 参数。 在大多数情况下，应确保指定了 wtrealm 参数。  
  
 <xref:System.IdentityModel.Services.SignInRequestMessage>类公开几个可用于设置或访问单个消息参数的属性。 还可以通过字典设置或访问这些参数 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。 例如，可以通过 <xref:System.IdentityModel.Services.SignInRequestMessage.Realm%2A> 属性或通过将 "wtrealm" 指定为字典的键来读取消息中的 wtrealm 参数 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。  
  
 [!INCLUDE[wif_wsfed_ref](~/includes/wif-wsfed-ref-md.md)]  
  
   
  
## Examples  
 [!code-csharp[WifSignInMessage#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifsigninmessage/cs/webapplication1/default.aspx.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.SignInResponseMessage" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Services.SignInRequestMessage" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignInRequestMessage (Uri baseUrl, string realm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, string realm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SignInRequestMessage.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, realm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignInRequestMessage(Uri ^ baseUrl, System::String ^ realm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.SignInRequestMessage : Uri * string -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="new System.IdentityModel.Services.SignInRequestMessage (baseUrl, realm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="realm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUrl">签名消息应用的基 URL。</param>
        <param name="realm">wtrealm 消息参数的值。 设置 <see cref="P:System.IdentityModel.Services.SignInRequestMessage.Realm" /> 属性。</param>
        <summary>使用指定的基础 URL 和参数初始化 <see cref="T:System.IdentityModel.Services.SignInRequestMessage" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wa message 参数 (<xref:System.IdentityModel.Services.WSFederationMessage.Action%2A> 属性) 初始化为 "wsignin1.0 1.0"。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="realm" /> 为 <see langword="null" /> 或空字符串。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignInRequestMessage (Uri baseUrl, string realm, string reply);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, string realm, string reply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SignInRequestMessage.#ctor(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, realm As String, reply As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignInRequestMessage(Uri ^ baseUrl, System::String ^ realm, System::String ^ reply);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.SignInRequestMessage : Uri * string * string -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="new System.IdentityModel.Services.SignInRequestMessage (baseUrl, realm, reply)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="realm" Type="System.String" />
        <Parameter Name="reply" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUrl">签名消息应用的基 URL。</param>
        <param name="realm">wtrealm 消息参数的值。 如果不是 <see langword="null" /> 或为空，则设置 <see cref="P:System.IdentityModel.Services.SignInRequestMessage.Realm" /> 属性。</param>
        <param name="reply">将向其答复的 URI 。 （wreply 消息参数的值。）如果不为 null 或为空，则设置 <see cref="P:System.IdentityModel.Services.SignInRequestMessage.Reply" /> 属性。</param>
        <summary>使用指定的基础 URI、 wtrealm 和 wreply 参数初始化 <see cref="T:System.IdentityModel.Services.SignInRequestMessage" /> 类的新实例。 支持向后兼容性的非标准消息创建。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wa message 参数 (<xref:System.IdentityModel.Services.WSFederationMessage.Action%2A> 属性) 初始化为 "wsignin1.0 1.0"。  
  
 支持向后兼容性的非标准消息创建。 在典型情况下，必须指定 wtrealm message 参数。 此构造函数只允许指定 wreply 消息参数，以便与 Active Directory 联合身份验证服务 (AD FS) 版本1.0 的向后兼容。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="realm" /> 和 <paramref name="reply" /> 为 <see langword="null" /> 或空字符串。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wauth 参数。</summary>
        <value>身份验证类型。 这被指定为 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wauth 参数类似于 WS-TRUST 中定义的 wst： AuthenticationType 元素。 该值应设置为一个字符串，该字符串包含标识所使用的身份验证类型的 URI。  
  
 Wauth 参数是可选的。 将 <xref:System.IdentityModel.Services.SignInRequestMessage.AuthenticationType%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wauth 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置完全无效的 URI 值的尝试发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentTime">
      <MemberSignature Language="C#" Value="public string CurrentTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.CurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentTime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentTime { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTime : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.CurrentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wct 参数。</summary>
        <value>在 UTC 中为 datetime 的字符串指定 wct 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wct 参数指定创建消息时的当前时间。 Wct 参数是可选的。 设置为 <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> 属性 `null` 或空字符串，以便从消息中删除 wct 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">尝试设置无效事件字符串的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Federation">
      <MemberSignature Language="C#" Value="public string Federation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Federation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.Federation" />
      <MemberSignature Language="VB.NET" Value="Public Property Federation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Federation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Federation : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.Federation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wfed 参数。</summary>
        <value>wfed 参数的值。 这被指定为 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wfed 参数指定消息的联合上下文。 Wfed 参数是可选的。 设置为 <xref:System.IdentityModel.Services.SignInRequestMessage.Federation%2A> 属性 `null` 或空字符串，以便从消息中删除 wfed 参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wfresh 参数。</summary>
        <value>wfresh 参数的值。 这应该是表示作为字符串的整数。 他指定以分钟为单位的最大生存期是有效的身份验证。 零表发布标记前应提示用户。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wfresh 参数指示身份验证有效的最长时间（分钟）。 Wfresh 参数是可选的。 将 <xref:System.IdentityModel.Services.SignInRequestMessage.Freshness%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wfresh 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">尝试设置一个不是整数的字符串表示形式的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 whr 参数。</summary>
        <value>whr 参数的值。 这被指定为 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 瓦时参数标识用于请求的标识提供程序的安全领域。 可以将其指定为要使用的 IP STS URL，或将其用作请求接收方理解的标识符。 瓦时参数是可选的，将 <xref:System.IdentityModel.Services.SignInRequestMessage.HomeRealm%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 $ 里瓦参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wp 参数。</summary>
        <value>wp 参数的值。 这被指定为 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 标识要用于请求的策略。 它通常适用于 (wa 参数) 的操作，但可能会导致更广泛的影响。 Wp 参数是可选的。 将 <xref:System.IdentityModel.Services.SignInRequestMessage.Policy%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wp 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置完全无效的 URI 值的尝试发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wtrealm 参数。</summary>
        <value>wtrealm 参数的值。 这被指定为 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wtrealm 参数指定请求的资源所属的安全领域。 这通常是所请求资源的 URL。  
  
> [!IMPORTANT]
>  为了与 Active Directory 联合身份验证服务 (AD FS) 版本1.0 的向后兼容，Windows Identity Foundation (WIF) 允许将 wtrealm 参数或 wreply 参数设置 (或同时) 两个，以便登录消息有效;但是，WS-FEDERATION 协议要求在登录请求中存在 wtrealm 参数。 在大多数情况下，应确保指定了 wtrealm 参数。  
  
 将 <xref:System.IdentityModel.Services.SignInRequestMessage.Realm%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wtrealm 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置完全无效的 URI 值的尝试发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wreply 参数。</summary>
        <value>wreply 参数的值。 这被指定为 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 包含响应应定向到的 URI。 Wtrealm 参数通常用于指定此 URI。 但在更复杂的情况下，可以使用 wtrealm 参数来指定请求的安全领域（例如，整个网站），wreply 参数可用于指定该领域内的特定资源，例如文档、页面或终结点。 Wreply 参数是可选的。 将 <xref:System.IdentityModel.Services.SignInRequestMessage.Reply%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wreply 参数。  
  
> [!IMPORTANT]
>  为了与 Active Directory 联合身份验证服务 (AD FS) 版本1.0 的向后兼容，Windows Identity Foundation (WIF) 允许将 wtrealm 参数或 wreply 参数设置 (或同时) 两个，以便登录消息有效;但是，WS-FEDERATION 协议要求在登录请求中存在 wtrealm 参数。 在大多数情况下，应确保指定了 wtrealm 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置完全无效的 URI 值的尝试发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wreq 参数。</summary>
        <value>wreq 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wreq 参数使用 `<wst:RequestSecurityToken>` 如 WS 信任中所述的元素或完整请求消息来指定令牌请求。 Wreq 参数是可选的。 将 <xref:System.IdentityModel.Services.SignInRequestMessage.Request%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wreq 参数。  
  
 如果 <xref:System.IdentityModel.Services.SignInRequestMessage.Request%2A> 指定了属性，则 <xref:System.IdentityModel.Services.SignInRequestMessage.RequestPtr%2A> 不能指定属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wreqptr 参数。</summary>
        <value>wreqptr 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定一个 URL，该 URL 指示在何处查找表示为元素的请求 `<wst:RequestSecurityToken>` 。 Wreqptr 参数是可选的。 将 <xref:System.IdentityModel.Services.SignInRequestMessage.RequestPtr%2A> 属性设置为 `null` 或空字符串，以便从消息中删除 wreqptr 参数。  
  
 如果 <xref:System.IdentityModel.Services.SignInRequestMessage.RequestPtr%2A> 指定了属性，则 <xref:System.IdentityModel.Services.SignInRequestMessage.Request%2A> 不能指定属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置完全无效的 URI 值的尝试发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUrl">
      <MemberSignature Language="C#" Value="public string RequestUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestUrl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.RequestUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUrl : string" Usage="System.IdentityModel.Services.SignInRequestMessage.RequestUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对应此消息的 URL 的字符串表示形式。</summary>
        <value>从当前实例序列化的 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该字符串包含一个 URL (包括通过序列化当前实例而创建的查询参数) 。 <xref:System.IdentityModel.Services.SignInRequestMessage.Write%2A>调用方法以执行序列化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SignInRequestMessage.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.SignInRequestMessage.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息的 wres 参数。</summary>
        <value>wres 参数的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定要访问的资源的 URL。 Wres 参数为旧参数。 通常情况下，改用 wtrealm 参数 (<xref:System.IdentityModel.Services.SignInRequestMessage.Realm%2A> 属性) 。 Wres 参数是可选的。 将属性设置为 <xref:System.IdentityModel.Services.SignInRequestMessage.Resource%2A> `null` 或空字符串，以便从消息中删除 wres 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置完全无效的 URI 值的尝试发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SignInRequestMessage.Validate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Validate();" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="signInRequestMessage.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>验证当前实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  为了与 Active Directory 联合身份验证服务 (AD FS) 版本1.0 的向后兼容，Windows Identity Foundation (WIF) 允许将 wtrealm 参数或 wreply 参数设置 (或同时) 两个，以便登录消息有效;但是，WS-FEDERATION 协议要求在登录请求中存在 wtrealm 参数。 在大多数情况下，应确保指定了 wtrealm 参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">wa 参数（<see cref="P:System.IdentityModel.Services.WSFederationMessage.Action" /> 属性）未被设置为“wsignin1.0”。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">wtrealm 参数和 wreply 参数都未出现。 （<see cref="P:System.IdentityModel.Services.SignInRequestMessage.Realm" /> 属性和 <see cref="P:System.IdentityModel.Services.SignInRequestMessage.Reply" /> 属性为<see langword="null" />或者为空。） 
- 或 - 
存在 wreq 参数和 wreqptr 参数。 （<see cref="P:System.IdentityModel.Services.SignInRequestMessage.Request" /> 属性和 <see cref="P:System.IdentityModel.Services.SignInRequestMessage.RequestPtr" /> 属性均被设置。）</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SignInRequestMessage.Write(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Write : System.IO.TextWriter -&gt; unit" Usage="signInRequestMessage.Write writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要为其写入消息的 <see cref="T:System.IO.TextWriter" />。</param>
        <summary>以查询字符串形式将此消息写入指定的文本写入器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法 <xref:System.IdentityModel.Services.SignInRequestMessage.Validate%2A> 在写入消息之前调用方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
