<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e8aabaced2ae1e73724ec078e8beff9fe874a33" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89994018" /></Metadata><TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandler abstract" />
  <TypeSignature Language="F#" Value="type CookieHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b70c5-101">提供用于读取、编写和删除会话 Cookie 的抽象基类在 HTTP 客服端上。</span><span class="sxs-lookup"><span data-stu-id="b70c5-101">Provides an abstract base class for reading, writing, and deleting session cookies on an HTTP client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-102"><xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) 使用类的实例 <xref:System.IdentityModel.Services.CookieHandler> 来读取、写入和删除 <xref:System.IdentityModel.Tokens.SessionSecurityToken> HTTP 客户端上包含的 cookie 或 cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-102">The <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) uses an instance of the <xref:System.IdentityModel.Services.CookieHandler> class to read, write, and delete the cookie or cookies that contain the <xref:System.IdentityModel.Tokens.SessionSecurityToken> on the HTTP client.</span></span> <span data-ttu-id="b70c5-103">Cookie (或 cookie，在这种情况下，在包含会话令牌的几个 cookie) 中拆分会话令牌称为会话 cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-103">The cookie (or cookies, in the case where the session token is split across several cookies) that contains the session token is known as the session cookie.</span></span>  
  
 <span data-ttu-id="b70c5-104">Windows Identity Foundation (WIF) 附带了一个 cookie 处理程序，该处理程序称为由类实现的分块 cookie 处理程序 <xref:System.IdentityModel.Services.ChunkedCookieHandler> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-104">Windows Identity Foundation (WIF) ships with a cookie handler called the chunked cookie handler that is implemented by the <xref:System.IdentityModel.Services.ChunkedCookieHandler> class.</span></span> <span data-ttu-id="b70c5-105">分块 cookie 处理程序根据指定的区块大小，在一个或多个 cookie 中拆分会话令牌。</span><span class="sxs-lookup"><span data-stu-id="b70c5-105">The chunked cookie handler splits the session token across one or more cookies according to a specified chunk size.</span></span> <span data-ttu-id="b70c5-106">这是为了满足许多浏览器施加的各个 cookie 的大小限制。</span><span class="sxs-lookup"><span data-stu-id="b70c5-106">This is to meet size limitations on individual cookies imposed by many browsers.</span></span>  
  
 <span data-ttu-id="b70c5-107">可以从派生 <xref:System.IdentityModel.Services.CookieHandler> ，以创建自己的 cookie 处理程序。</span><span class="sxs-lookup"><span data-stu-id="b70c5-107">You can derive from <xref:System.IdentityModel.Services.CookieHandler> to create your own cookie handler.</span></span> <span data-ttu-id="b70c5-108">当你执行此操作时，必须重写 <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A> 、 <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> 方法，以执行删除、读取和写入会话 cookie 的实际工作。</span><span class="sxs-lookup"><span data-stu-id="b70c5-108">When you do so, you must override the <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>, <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>, and <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> methods to perform the actual work of deleting, reading, and writing the session cookie.</span></span> <span data-ttu-id="b70c5-109">通常，这些方法从集合中读取 cookie <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> ，并通过集合写入或删除 cookie <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-109">These methods typically read the cookie from the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection and write or delete cookies through the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="b70c5-110"><xref:System.Web.HttpContext>可以通过其访问请求和响应的对象作为参数提供给上述每个方法。</span><span class="sxs-lookup"><span data-stu-id="b70c5-110">The <xref:System.Web.HttpContext> object through which you can access the request and response is provided as a parameter to each of these methods.</span></span> <span data-ttu-id="b70c5-111">除了所需的方法之外，您还可以选择重写类公开的其他虚方法属性， <xref:System.IdentityModel.Services.CookieHandler> 以自定义处理程序的行为。</span><span class="sxs-lookup"><span data-stu-id="b70c5-111">In addition to the required methods, you can optionally override other virtual methods properties exposed by the <xref:System.IdentityModel.Services.CookieHandler> class to customize the behavior of your handler.</span></span>  
  
 <span data-ttu-id="b70c5-112">类公开了多个属性 <xref:System.IdentityModel.Services.CookieHandler> ，这些属性指定会话 cookie 的默认行为和属性。</span><span class="sxs-lookup"><span data-stu-id="b70c5-112">Several properties are exposed by the <xref:System.IdentityModel.Services.CookieHandler> class that specify default behavior and properties for the session cookie.</span></span> <span data-ttu-id="b70c5-113"><xref:System.IdentityModel.Services.CookieHandler.Name%2A>、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 属性提供了 cookie 的基名称、它在其中有效的域以及它在客户端上的存储路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-113">The <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties supply the base name for the cookie, the domain in which it is valid and the path under which it is stored on the client.</span></span> <span data-ttu-id="b70c5-114"><xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A>属性指定是否可通过客户端脚本访问 cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-114">The <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property specifies whether the cookie is accessible to client-side scripts.</span></span> <span data-ttu-id="b70c5-115"><xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A>属性指定是否只应通过安全 (HTTPS) 连接来传输 cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-115">The <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property specifies whether the cookie should be transmitted only over secure (HTTPS) connections.</span></span> <span data-ttu-id="b70c5-116">如果设置此属性，则该 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> 属性用于为持久会话设置过期时间，即即使在浏览器关闭后仍有效的会话也是如此。</span><span class="sxs-lookup"><span data-stu-id="b70c5-116">If set, the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property is used to set the expiration time for persistent sessions, that is for sessions that remain valid even after the browser is closed.</span></span> <span data-ttu-id="b70c5-117">所有这些属性都具有等效的属性，这些属性通常在基础 <xref:System.Web.HttpCookie> 对象 (或由处理程序的 "核心" 方法) 的对象上设置。</span><span class="sxs-lookup"><span data-stu-id="b70c5-117">All of these properties have equivalent properties that are typically set on the underlying <xref:System.Web.HttpCookie> object (or objects) by the "core" methods of the handler.</span></span> <span data-ttu-id="b70c5-118">有关详细信息，请参阅每个属性的文档。</span><span class="sxs-lookup"><span data-stu-id="b70c5-118">For more information see the documentation for each property.</span></span>  
  
 <span data-ttu-id="b70c5-119">可以通过[ &lt; cookieHandler &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)元素在配置中指定 SAM 使用的 cookie 处理程序。</span><span class="sxs-lookup"><span data-stu-id="b70c5-119">The cookie handler that is used by the SAM can be specified in configuration through the [&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler) element.</span></span> <span data-ttu-id="b70c5-120">可以在事件的事件委托中修改此元素设置的 cookie 处理程序， <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> 也可以通过属性直接对其进行设置或访问 <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-120">The cookie handler set by this element can be modified in an event delegate for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event or it can be set or accessed directly through the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b70c5-121">下面的示例将 SAM 配置为使用类型的自定义 cookie 处理程序 `MyNamespace.MyCustomCookieHandler` 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-121">The following example configures the SAM to use a custom cookie handler of type `MyNamespace.MyCustomCookieHandler`.</span></span>  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler"><span data-ttu-id="b70c5-122">&lt;cookieHandler&gt;</span><span class="sxs-lookup"><span data-stu-id="b70c5-122">&lt;cookieHandler&gt;</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b70c5-123">从派生类中的构造函数中调用，用于初始化 <see cref="T:System.IdentityModel.Services.CookieHandler" /> 类。</span><span class="sxs-lookup"><span data-stu-id="b70c5-123">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Services.CookieHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b70c5-124">删除一个cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-124">Deletes a cookie.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="cookieHandler.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b70c5-125">读取与当前请求相关的 cookie，该请求具有默认名称、域和路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-125">Deletes the cookie associated with the current request that has the default name, domain, and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-126">名称、域和路径由 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-126">The name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="b70c5-127">请求由指定 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b70c5-127">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Delete : string -&gt; unit" Usage="cookieHandler.Delete name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b70c5-128">Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-128">The name of the cookie.</span></span></param>
        <summary><span data-ttu-id="b70c5-129">删除与指定请求相关的 cookie，该请求具有当前名称和默认的域和路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-129">Deletes the cookie associated with the current request that has the specified name and the default domain and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-130">域和路径由 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-130">The domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="b70c5-131">请求由指定 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b70c5-131">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b70c5-132"><paramref name="name" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-132"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b70c5-133">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-133">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-134">读取与当前请求相关的 cookie，该请求具有默认名称、域和路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-134">Deletes the cookie associated with the current request that has the default name, domain, and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-135">名称、域和路径由 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-135">The name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b70c5-136">Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-136">The name of the cookie.</span></span></param>
        <param name="context"><span data-ttu-id="b70c5-137">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-137">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-138">删除与指定请求相关的 cookie，该请求具有指定名称和默认的域和路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-138">Deletes the cookie associated with the specified request that has the specified name and the default domain and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-139">域和路径由 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-139">The domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b70c5-140"><paramref name="name" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-140"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b70c5-141">Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-141">The name of the cookie.</span></span></param>
        <param name="path"><span data-ttu-id="b70c5-142">Cookie的路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-142">The path for the cookie.</span></span></param>
        <param name="domain"><span data-ttu-id="b70c5-143">Cookie 域</span><span class="sxs-lookup"><span data-stu-id="b70c5-143">The domain for the cookie</span></span></param>
        <param name="context"><span data-ttu-id="b70c5-144">该请求的 <see cref="T:System.Web.HttpContext" /></span><span class="sxs-lookup"><span data-stu-id="b70c5-144">The <see cref="T:System.Web.HttpContext" /> for the request</span></span></param>
        <summary><span data-ttu-id="b70c5-145">删除与指定请求相关的 cookie，该请求具有指定名称、路径和域。</span><span class="sxs-lookup"><span data-stu-id="b70c5-145">Deletes the cookie associated with the specified request that has the specified name, path, and domain.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b70c5-146"><paramref name="name" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-146"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DeleteCore : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.DeleteCore (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b70c5-147">Cookie 的名称</span><span class="sxs-lookup"><span data-stu-id="b70c5-147">The name of the cookie</span></span></param>
        <param name="path"><span data-ttu-id="b70c5-148">Cookie的路径</span><span class="sxs-lookup"><span data-stu-id="b70c5-148">The path for the cookie</span></span></param>
        <param name="domain"><span data-ttu-id="b70c5-149">Cookie 域</span><span class="sxs-lookup"><span data-stu-id="b70c5-149">The domain for the cookie</span></span></param>
        <param name="context"><span data-ttu-id="b70c5-150">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-150">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-151">当在派生类中重写时，删除与指定请求（具有指定名称、域和路径）关联的 cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-151">When overridden in a derived class, deletes the cookie associated with the specified request that has the specified name, domain, and path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-152">从重载方法调用 <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> ，用于执行删除 cookie 的实际工作。</span><span class="sxs-lookup"><span data-stu-id="b70c5-152">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> methods to do the actual work of deleting the cookie.</span></span> <span data-ttu-id="b70c5-153"><xref:System.IdentityModel.Services.CookieHandler.Delete%2A>方法将确保名称和路径为非空字符串。</span><span class="sxs-lookup"><span data-stu-id="b70c5-153">The <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> methods will ensure that name and path are non-empty strings.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b70c5-154">必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="b70c5-154">You must override this method.</span></span> <span data-ttu-id="b70c5-155">实现完全取决于开发人员。</span><span class="sxs-lookup"><span data-stu-id="b70c5-155">The implementation is entirely up to the developer.</span></span> <span data-ttu-id="b70c5-156">在典型情况下，实现会将集合中的指定 cookie 替换为 <see cref="P:System.Web.HttpResponse.Cookies" /> 包含数据的 cookie， <see langword="null" /> 并将过期时间设置为早于当前时间; 但是，这并不是必需的。</span><span class="sxs-lookup"><span data-stu-id="b70c5-156">In the typical case, implementations replace the specified cookie in the <see cref="P:System.Web.HttpResponse.Cookies" /> collection, with a cookie that has <see langword="null" /> data and an expiration time that is set earlier than the current time; however, this is not a requirement.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b70c5-157">获取或设置用于 Cookie 的域。</span><span class="sxs-lookup"><span data-stu-id="b70c5-157">Gets or sets the domain used for cookies.</span></span></summary>
        <value><span data-ttu-id="b70c5-158">用于 cookie 的字段。</span><span class="sxs-lookup"><span data-stu-id="b70c5-158">The domain used for cookies.</span></span> <span data-ttu-id="b70c5-159">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-159">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-160">与 <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> 属性相对应。</span><span class="sxs-lookup"><span data-stu-id="b70c5-160">Corresponds to the <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b70c5-161">可以通过 `domain` 在配置中的[ &lt; cookieHandler &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)元素上指定特性来初始化属性。</span><span class="sxs-lookup"><span data-stu-id="b70c5-161">The property can be initialized by specifying the `domain` attribute on the [&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler"><span data-ttu-id="b70c5-162">&lt;cookieHandler&gt;</span><span class="sxs-lookup"><span data-stu-id="b70c5-162">&lt;cookieHandler&gt;</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HideFromClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HideFromClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromClientScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b70c5-163">获取或设置一个值，该值指示是否应该从客户端脚本隐藏 Cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-163">Gets or sets a value that indicates whether the cookie should be hidden from client script.</span></span></summary>
        <value><span data-ttu-id="b70c5-164">如果应隐藏客户脚本的 cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-164"><see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b70c5-165">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-165">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-166">控制是否在由处理程序编写的 cookie 的 Set Cookie 标头中发出 "HttpOnly" 标志。</span><span class="sxs-lookup"><span data-stu-id="b70c5-166">Controls whether the "HttpOnly" flag is emitted in the Set-Cookie header for cookies written by the handler.</span></span> <span data-ttu-id="b70c5-167">某些 web 浏览器通过保持客户端脚本访问 cookie 值来服从此标志。</span><span class="sxs-lookup"><span data-stu-id="b70c5-167">Some web browsers honor this flag by keeping client-side script from accessing the cookie value.</span></span>  
  
 <span data-ttu-id="b70c5-168">此属性与属性相对应 <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-168">This property corresponds to the <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b70c5-169">可以通过 `hideFromScript` 在配置中的[ &lt; cookieHandler &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)元素上指定特性来初始化属性。</span><span class="sxs-lookup"><span data-stu-id="b70c5-169">The property can be initialized by specifying the `hideFromScript` attribute on the [&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchCookiePath (baseUri As Uri, targetUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MatchCookiePath(Uri ^ baseUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="abstract member MatchCookiePath : Uri * Uri -&gt; string&#xA;override this.MatchCookiePath : Uri * Uri -&gt; string" Usage="cookieHandler.MatchCookiePath (baseUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="b70c5-170">请求的基 URL。</span><span class="sxs-lookup"><span data-stu-id="b70c5-170">The base URL of the request.</span></span></param>
        <param name="targetUri"><span data-ttu-id="b70c5-171">要匹配的 URI。</span><span class="sxs-lookup"><span data-stu-id="b70c5-171">The URL to match</span></span></param>
        <summary><span data-ttu-id="b70c5-172">如果目标域在 Cookie 域中，且目标路径在 Cookie 路径中，则对 Cookie 路径中的大小写进行匹配。</span><span class="sxs-lookup"><span data-stu-id="b70c5-172">If the target domain is within the cookie domain and the target path is within the cookie path, match the casing of the cookie path portion.</span></span></summary>
        <returns><span data-ttu-id="b70c5-173">返回 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-173">Returns <see cref="T:System.String" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b70c5-174">获取或设置处理程序编写的 Cookie 的基名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-174">Gets or sets the base name for cookies written by the handler.</span></span></summary>
        <value><span data-ttu-id="b70c5-175">使用 Cookie 的基名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-175">The base name to use for cookies.</span></span> <span data-ttu-id="b70c5-176">默认值为 "FedAuth"。</span><span class="sxs-lookup"><span data-stu-id="b70c5-176">The default is "FedAuth".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-177">此属性与属性相对应 <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-177">This property corresponds to the <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b70c5-178">可以通过 `name` 在配置中的[ &lt; cookieHandler &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)元素上指定特性来初始化属性。</span><span class="sxs-lookup"><span data-stu-id="b70c5-178">The property can be initialized by specifying the `name` attribute on the [&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b70c5-179">发生设置 <see langword="null" /> 或空值的尝试。</span><span class="sxs-lookup"><span data-stu-id="b70c5-179">An attempt to set a <see langword="null" /> or empty value occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b70c5-180">获取或设置处理程序编写的 Cookie 的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-180">Gets or sets the virtual path for cookies written by the handler.</span></span></summary>
        <value><span data-ttu-id="b70c5-181">虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-181">The virtual path.</span></span> <span data-ttu-id="b70c5-182">默认为 ASP.NET 应用程序的根。</span><span class="sxs-lookup"><span data-stu-id="b70c5-182">Defaults to the root of the ASP.NET application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-183">此属性与属性相对应 <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-183">This property corresponds to the <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b70c5-184">可以通过 `path` 在配置中的[ &lt; cookieHandler &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)元素上指定特性来初始化属性。</span><span class="sxs-lookup"><span data-stu-id="b70c5-184">The property can be initialized by specifying the `path` attribute on the [&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b70c5-185">发生设置 <see langword="null" /> 或空值的尝试。</span><span class="sxs-lookup"><span data-stu-id="b70c5-185">An attempt to set a <see langword="null" /> or empty value occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan? PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PersistentSessionLifetime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b70c5-186">永久会话的生存期。</span><span class="sxs-lookup"><span data-stu-id="b70c5-186">The lifetime of persistent sessions.</span></span> <span data-ttu-id="b70c5-187">如果为零，将始终使用瞬变会话。</span><span class="sxs-lookup"><span data-stu-id="b70c5-187">If zero, transient sessions are always used.</span></span></summary>
        <value><span data-ttu-id="b70c5-188">会话生存期。</span><span class="sxs-lookup"><span data-stu-id="b70c5-188">The session lifetime.</span></span> <span data-ttu-id="b70c5-189">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-189">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-190">持久会话的票证存储在基于文件的 cookie 中，这意味着在关闭并重新打开 web 浏览器后，登录会话可能会继续。</span><span class="sxs-lookup"><span data-stu-id="b70c5-190">Tickets for persistent sessions are stored in file-based cookies, meaning that the sign-in session may continue after the web browser is closed and reopened.</span></span>  
  
 <span data-ttu-id="b70c5-191">此属性用于设置 <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="b70c5-191">This property is used to set the <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b70c5-192">可以通过 `persistentSessionLifetime` 在配置中的[ &lt; cookieHandler &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)元素上指定特性来初始化属性。</span><span class="sxs-lookup"><span data-stu-id="b70c5-192">The property can be initialized by specifying the `persistentSessionLifetime` attribute on the [&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b70c5-193">指定的值小于零。</span><span class="sxs-lookup"><span data-stu-id="b70c5-193">A value that is less than zero is specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b70c5-194">读取 Cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-194">Reads a cookie.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read();" />
      <MemberSignature Language="F#" Value="member this.Read : unit -&gt; byte[]" Usage="cookieHandler.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b70c5-195">读取与当前请求相关的 cookie，该请求具有默认名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-195">Reads the cookie associated with the current request that has the default name.</span></span></summary>
        <returns><span data-ttu-id="b70c5-196">如果未到为 cookie，则为 cookie 值或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-196">The cookie value or <see langword="null" /> if the cookie was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-197">Cookie 的名称由 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-197">The name of the cookie is specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A> property.</span></span> <span data-ttu-id="b70c5-198">请求由指定 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-198">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Read : string -&gt; byte[]" Usage="cookieHandler.Read name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b70c5-199">要读取的 Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-199">The name of the cookie to read.</span></span></param>
        <summary><span data-ttu-id="b70c5-200">读取与当前请求相关的 cookie，该请求具有指定名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-200">Reads the cookie associated with the current request that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="b70c5-201">如果未到为 cookie，则为 cookie 值或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-201">The cookie value or <see langword="null" /> if the cookie was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-202">请求由指定 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b70c5-202">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b70c5-203"><paramref name="name" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-203"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b70c5-204">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-204">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-205">读取与当前请求相关的 cookie，该请求具有默认名称、域和路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-205">Reads the cookie associated with the current request that has the default name, domain, and path.</span></span></summary>
        <returns><span data-ttu-id="b70c5-206">如果未到为 cookie，则为 cookie 值或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-206">The cookie value or <see langword="null" /> if the cookie was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-207">Cookie 的名称由 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-207">The name of the cookie is specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b70c5-208">要读取的 Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-208">The name of the cookie to read.</span></span></param>
        <param name="context"><span data-ttu-id="b70c5-209">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-209">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-210">读取与指定请求相关的 cookie，该请求具有指定名称和默认的域和路径。</span><span class="sxs-lookup"><span data-stu-id="b70c5-210">Reads the cookie associated with the specified request that has the specified name and the default domain and path.</span></span></summary>
        <returns><span data-ttu-id="b70c5-211">如果未到为 cookie，则为 cookie 值或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-211">The cookie value or <see langword="null" /> if the cookie was not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b70c5-212"><paramref name="name" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-212"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ReadCore : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.ReadCore (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b70c5-213">Cookie 的名称</span><span class="sxs-lookup"><span data-stu-id="b70c5-213">The name of the cookie</span></span></param>
        <param name="context"><span data-ttu-id="b70c5-214">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-214">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-215">当在派生类中重写时，将读取与具有指定名称和指定请求关联的 cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-215">When overridden in a derived class, reads the cookie that has the specified name and that is associated with the specified request.</span></span></summary>
        <returns><span data-ttu-id="b70c5-216">如果未到为 cookie，则为 cookie 值或 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="b70c5-216">The cookie value or <see langword="null" /> if the cookie was not found</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-217">从重载方法调用 <xref:System.IdentityModel.Services.CookieHandler.Read%2A> ，用于执行读取 cookie 的实际工作。</span><span class="sxs-lookup"><span data-stu-id="b70c5-217">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Read%2A> methods to do the actual work of reading the cookie.</span></span> <span data-ttu-id="b70c5-218"><xref:System.IdentityModel.Services.CookieHandler.Read%2A>方法将确保 `name` 为非空字符串。</span><span class="sxs-lookup"><span data-stu-id="b70c5-218">The <xref:System.IdentityModel.Services.CookieHandler.Read%2A> methods will ensure that `name` is a non-empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b70c5-219">必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="b70c5-219">You must override this method.</span></span> <span data-ttu-id="b70c5-220">实现完全取决于开发人员。</span><span class="sxs-lookup"><span data-stu-id="b70c5-220">The implementation is entirely up to the developer.</span></span> <span data-ttu-id="b70c5-221">在典型情况下，实现将从集合中读取 cookie 数据 <see cref="P:System.Web.HttpRequest.Cookies" /> ，不过，这并不是必需的。</span><span class="sxs-lookup"><span data-stu-id="b70c5-221">In the typical case, implementations read the cookie data from the <see cref="P:System.Web.HttpRequest.Cookies" /> collection, however, this is not a requirement.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b70c5-222">获取或设置一个值，该值指定是否应只用 SSL 验证 Cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-222">Gets or sets a value that specifies whether the cookie should be used only with SSL.</span></span></summary>
        <value><span data-ttu-id="b70c5-223">如果只应针对 SSL 连接使用 cookie，则为 <see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-223"><see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b70c5-224">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-224">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-225">控制是否为写入的任何 cookie 发出集 Cookie 标头中的 "安全" 标志。</span><span class="sxs-lookup"><span data-stu-id="b70c5-225">Controls whether the "Secure" flag in the Set-Cookie header is emitted for any cookies written.</span></span> <span data-ttu-id="b70c5-226">如果此值为 `true` ，则会话 cookie 仅可通过 HTTPS 使用。</span><span class="sxs-lookup"><span data-stu-id="b70c5-226">If this value is `true`, the session cookies will only be available over HTTPS.</span></span>  
  
 <span data-ttu-id="b70c5-227">此属性与属性相对应 <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-227">This property corresponds to the <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b70c5-228">可以通过 `requireSSL` 在配置中的[ &lt; cookieHandler &gt; ](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler)元素上指定特性来初始化属性。</span><span class="sxs-lookup"><span data-stu-id="b70c5-228">The property can be initialized by specifying the `requireSSL` attribute on the [&lt;cookieHandler&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler) element in configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b70c5-229">写入 cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-229">Writes a cookie.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), isPersistent As Boolean, tokenExpirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * bool * DateTime -&gt; unit" Usage="cookieHandler.Write (value, isPersistent, tokenExpirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b70c5-230">Cookie 值。</span><span class="sxs-lookup"><span data-stu-id="b70c5-230">The cookie value.</span></span></param>
        <param name="isPersistent"><span data-ttu-id="b70c5-231">如果 Cookie 是持久的，则为 <see langword="true" />；如果 Cookie 仅是会话，则为 <see langword="false" />,即，仅在客户端上的浏览器关闭前有效。</span><span class="sxs-lookup"><span data-stu-id="b70c5-231"><see langword="true" /> if the cookie is persistent; <see langword="false" /> if the cookie is session-only, that is, only valid until the browser on the client is closed.</span></span></param>
        <param name="tokenExpirationTime"><span data-ttu-id="b70c5-232">基础标识的过期时间。</span><span class="sxs-lookup"><span data-stu-id="b70c5-232">The expiration time for the underlying token.</span></span></param>
        <summary><span data-ttu-id="b70c5-233">写入当前请求（具有指定值、持久性和过期时间）关联的 cookie，。</span><span class="sxs-lookup"><span data-stu-id="b70c5-233">Writes a cookie associated with the current request that has the specified value, persistence, and expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-234">如果 `isPersistent` 参数为 `false` ，则 cookie 过期时间将设置为 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-234">If the `isPersistent` parameter is `false`, the cookie expiration time is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b70c5-235">如果 `isPersistent` 参数为 `true` ，则 cookie 过期时间将设置为属性的值（如果不是，则设置为 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> `null` <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> ，如果属性为 `null` ，则将过期时间设置为参数的值） `tokenExpirationTime` 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-235">If the `isPersistent` parameter is `true`, the cookie expiration time is set to the value of the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property if it is not `null` or, if the <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> property is `null`, the expiration time is set to the value of the `tokenExpirationTime` parameter.</span></span>  
  
 <span data-ttu-id="b70c5-236">Cookie 名称、域和路径由 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> 、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-236">The cookie name, domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="b70c5-237">请求由指定 <xref:System.Web.HttpContext.Current%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-237">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="b70c5-238">是否应仅通过 SSL 发送 cookie 是由属性指定的 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> ，以及是否应在客户端脚本中隐藏该 cookie 是由属性指定的 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-238">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b70c5-239"><paramref name="value" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-239"><paramref name="value" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b70c5-240">Cookie 值。</span><span class="sxs-lookup"><span data-stu-id="b70c5-240">The cookie value.</span></span></param>
        <param name="name"><span data-ttu-id="b70c5-241">Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-241">The name of the cookie.</span></span></param>
        <param name="expirationTime"><span data-ttu-id="b70c5-242">Cookie 的过期时段，或会话（仅会话）Cookie 的 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-242">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span></span></param>
        <summary><span data-ttu-id="b70c5-243">写入当前请求（具有指定名称、值和过期时间）关联的 cookie，。</span><span class="sxs-lookup"><span data-stu-id="b70c5-243">Writes a cookie associated with the current request that has the specified name, value, and expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-244">Cookie 域和路径由 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-244">The cookie domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="b70c5-245">请求由指定 <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-245">The request is specified by <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="b70c5-246">请求由指定 <xref:System.Web.HttpContext.Current%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-246">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="b70c5-247">是否应仅通过 SSL 发送 cookie 是由属性指定的 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> ，以及是否应在客户端脚本中隐藏该 cookie 是由属性指定的 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-247">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b70c5-248"><paramref name="value" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-248"><paramref name="value" /> is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b70c5-249"><paramref name="name" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-249"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b70c5-250">Cookie 值。</span><span class="sxs-lookup"><span data-stu-id="b70c5-250">The cookie value.</span></span></param>
        <param name="name"><span data-ttu-id="b70c5-251">Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-251">The name of the cookie.</span></span></param>
        <param name="expirationTime"><span data-ttu-id="b70c5-252">Cookie 的过期时段，或会话（仅会话）Cookie 的 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-252">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span></span></param>
        <param name="context"><span data-ttu-id="b70c5-253">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-253">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-254">写入指定请求（具有指定名称、值和过期时间）关联的 cookie，。</span><span class="sxs-lookup"><span data-stu-id="b70c5-254">Writes a cookie associated with the specified request that has the specified name, value, and expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-255">Cookie 域和路径由 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> 和 <xref:System.IdentityModel.Services.CookieHandler.Path%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b70c5-255">The cookie domain and path are specified by the <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> and <xref:System.IdentityModel.Services.CookieHandler.Path%2A> properties.</span></span> <span data-ttu-id="b70c5-256">请求由指定 <xref:System.Web.HttpContext.Current%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-256">The request is specified by <xref:System.Web.HttpContext.Current%2A>.</span></span> <span data-ttu-id="b70c5-257">是否应仅通过 SSL 发送 cookie 是由属性指定的 <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> ，以及是否应在客户端脚本中隐藏该 cookie 是由属性指定的 <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-257">Whether the cookie should be sent only over SSL is specified by the <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> property and whether the cookie should be hidden from client-side scripts is specified by the <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b70c5-258"><paramref name="value" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-258"><paramref name="value" /> is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b70c5-259"><paramref name="name" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-259"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, requiresSsl As Boolean, hideFromClientScript As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, path, domain, expirationTime, requiresSsl, hideFromClientScript, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b70c5-260">Cookie 值。</span><span class="sxs-lookup"><span data-stu-id="b70c5-260">The cookie value.</span></span></param>
        <param name="name"><span data-ttu-id="b70c5-261">Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-261">The name of the cookie.</span></span></param>
        <param name="path"><span data-ttu-id="b70c5-262">Cookie的路径</span><span class="sxs-lookup"><span data-stu-id="b70c5-262">The path for the cookie</span></span></param>
        <param name="domain"><span data-ttu-id="b70c5-263">Cookie 域</span><span class="sxs-lookup"><span data-stu-id="b70c5-263">The domain for the cookie</span></span></param>
        <param name="expirationTime"><span data-ttu-id="b70c5-264">Cookie 的过期时段，或会话（仅会话）Cookie 的 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-264">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span></span></param>
        <param name="requiresSsl"><span data-ttu-id="b70c5-265">如果只应针对 SSL 连接使用 cookie，则为 <see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-265"><see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span></span></param>
        <param name="hideFromClientScript"><span data-ttu-id="b70c5-266">如果应隐藏客户脚本的 cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-266"><see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span></span></param>
        <param name="context"><span data-ttu-id="b70c5-267">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-267">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-268">写入指定请求（具有指定名称、值、域、路径、过期时间和可见性）关联的 cookie，。</span><span class="sxs-lookup"><span data-stu-id="b70c5-268">Writes a cookie associated with the specified request that has the specified name, value, domain, path, expiration time, and visibility.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b70c5-269"><paramref name="value" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-269"><paramref name="value" /> is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b70c5-270"><paramref name="name" /> 为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="b70c5-270"><paramref name="name" /> is <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member WriteCore : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.WriteCore (value, name, path, domain, expirationTime, secure, httpOnly, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b70c5-271">Cookie 值。</span><span class="sxs-lookup"><span data-stu-id="b70c5-271">The cookie value.</span></span></param>
        <param name="name"><span data-ttu-id="b70c5-272">Cookie 的名称。</span><span class="sxs-lookup"><span data-stu-id="b70c5-272">The name of the cookie.</span></span></param>
        <param name="path"><span data-ttu-id="b70c5-273">Cookie的路径</span><span class="sxs-lookup"><span data-stu-id="b70c5-273">The path for the cookie</span></span></param>
        <param name="domain"><span data-ttu-id="b70c5-274">Cookie 域</span><span class="sxs-lookup"><span data-stu-id="b70c5-274">The domain for the cookie</span></span></param>
        <param name="expirationTime"><span data-ttu-id="b70c5-275">Cookie 的过期时段，或会话（仅会话）Cookie 的 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-275">The expiration time for the cookie, or <see cref="F:System.DateTime.MinValue" /> for a session (session-only) cookie.</span></span></param>
        <param name="secure"><span data-ttu-id="b70c5-276">如果只应针对 SSL 连接使用 cookie，则为 <see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-276"><see langword="true" /> if the cookie should only be used over an SSL connection; otherwise, <see langword="false" />.</span></span></param>
        <param name="httpOnly"><span data-ttu-id="b70c5-277">如果应隐藏客户脚本的 cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-277"><see langword="true" /> if the cookie should be hidden from client script; otherwise, <see langword="false" />.</span></span></param>
        <param name="context"><span data-ttu-id="b70c5-278">该请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="b70c5-278">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <summary><span data-ttu-id="b70c5-279">当在派生类中重写时，写入与指定请求（具有指定名称、值、域、路径、过期时间、持久性和可见性）关联的 cookie。</span><span class="sxs-lookup"><span data-stu-id="b70c5-279">When overridden in a derived class, writes a cookie associated with the specified request that has the specified name, value, domain, path, expiration time, persistence and visibility.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b70c5-280">从重载方法调用 <xref:System.IdentityModel.Services.CookieHandler.Write%2A> ，用于执行写入 cookie 的实际工作。</span><span class="sxs-lookup"><span data-stu-id="b70c5-280">Called from the overloaded <xref:System.IdentityModel.Services.CookieHandler.Write%2A> methods to do the actual work of writing the cookie.</span></span> <span data-ttu-id="b70c5-281"><xref:System.IdentityModel.Services.CookieHandler.Write%2A>方法将确保 `value` 为非空字节数组，并且 `name` 和 `path` 为非空字符串。</span><span class="sxs-lookup"><span data-stu-id="b70c5-281">The <xref:System.IdentityModel.Services.CookieHandler.Write%2A> methods will ensure that `value` is a non-empty byte array and that `name` and `path` are non-empty strings.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b70c5-282">必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="b70c5-282">You must override this method.</span></span> <span data-ttu-id="b70c5-283">实现完全取决于开发人员。</span><span class="sxs-lookup"><span data-stu-id="b70c5-283">The implementation is entirely up to the developer.</span></span> <span data-ttu-id="b70c5-284">在典型情况下，实现将 cookie 数据写入 <see cref="P:System.Web.HttpResponse.Cookies" /> 集合，但这不是必需的。</span><span class="sxs-lookup"><span data-stu-id="b70c5-284">In the typical case, implementations write the cookie data to the <see cref="P:System.Web.HttpResponse.Cookies" /> collection, however, this is not a requirement.</span></span> <span data-ttu-id="b70c5-285">此方法的大多数参数通常用于在一个或多个对象上设置等效的属性 <see cref="T:System.Web.HttpCookie" /> 。</span><span class="sxs-lookup"><span data-stu-id="b70c5-285">Most parameters of the method are typically used to set equivalent properties on one or more <see cref="T:System.Web.HttpCookie" /> objects.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
