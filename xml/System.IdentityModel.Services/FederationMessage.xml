<Type Name="FederationMessage" FullName="System.IdentityModel.Services.FederationMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29c1ce38c1c8bea36fecd1809519ba5b8d47c805" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78702717" /></Metadata><TypeSignature Language="C#" Value="public abstract class FederationMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FederationMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FederationMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederationMessage abstract" />
  <TypeSignature Language="F#" Value="type FederationMessage = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义所有从联合消息类派生的基类。</summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides"><para>至少必须在 <see cref="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" /> 派生类中重写方法，并且可以选择重写受保护的 <see cref="M:System.IdentityModel.Services.FederationMessage.Validate" /> 方法。</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FederationMessage (Uri baseUrl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (baseUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FederationMessage(Uri ^ baseUrl);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.FederationMessage : Uri -&gt; System.IdentityModel.Services.FederationMessage" Usage="new System.IdentityModel.Services.FederationMessage baseUrl" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUrl">联合消息应用的基 URL。 初始化 <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> 属性。</param>
        <summary>从派生类中的构造函数中调用，用于初始化 <see cref="T:System.IdentityModel.Services.FederationMessage" /> 类。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="baseUri" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException"><paramref name="baseUri" /> 不是有效的绝对 URI。</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.IdentityModel.Services.FederationMessage.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置消息要应用于的基 URI。</summary>
        <value>一个包含基 URL 的 <see cref="T:System.Uri" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">尝试设置一个 <see langword="null" /> 值。</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">设置无效 URI 值的尝试发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBaseUrl">
      <MemberSignature Language="C#" Value="public static Uri GetBaseUrl (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetBaseUrl(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.GetBaseUrl(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBaseUrl (uri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetBaseUrl(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetBaseUrl : Uri -&gt; Uri" Usage="System.IdentityModel.Services.FederationMessage.GetBaseUrl uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">从中提取基 URL 的 URI。</param>
        <summary>从指定的 URI 提取基 URL 的帮手器方法。</summary>
        <returns>提取的基 URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的 URL 是不带查询字符串的原始 URL。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameter">
      <MemberSignature Language="C#" Value="public string GetParameter (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetParameter(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameter (parameter As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetParameter(System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.GetParameter : string -&gt; string" Usage="federationMessage.GetParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">要进行搜索的参数。</param>
        <summary>从参数字典中返回指定的参数值。</summary>
        <returns>参数或 <see langword="null" /> 的值，（如果参数不存在）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过属性访问参数字典 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="parameter" /> 为 <see langword="null" /> 或空字符串。</exception>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.FederationMessage.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Parameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.IdentityModel.Services.FederationMessage.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以字典形式获取消息参数。</summary>
        <value>一个包含消息参数的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 包含消息中的参数的名称和值对的字典。 参数使用参数名称进行键控。 例如，若要检索 wattr 参数的值，请使用 "wattr"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (Uri data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(class System.Uri data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.ParseQueryString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseQueryString (data As Uri) As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(Uri ^ data);" />
      <MemberSignature Language="F#" Value="static member ParseQueryString : Uri -&gt; System.Collections.Specialized.NameValueCollection" Usage="System.IdentityModel.Services.FederationMessage.ParseQueryString data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="data">要分析的 URI。</param>
        <summary>将指定的 URI 中的查询字符串分析为 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 的帮助器方法。</summary>
        <returns>一个 <see cref="T:System.Collections.Specialized.NameValueCollection" />，包含查询字符串的参数。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveParameter">
      <MemberSignature Language="C#" Value="public void RemoveParameter (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParameter(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParameter (parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParameter(System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.RemoveParameter : string -&gt; unit" Usage="federationMessage.RemoveParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">要移除的参数的名称。</param>
        <summary>从参数字典中移除参数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过属性访问参数字典 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="parameter" /> 为 <see langword="null" /> 或空字符串。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="C#" Value="public void SetParameter (string parameter, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameter(string parameter, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameter (parameter As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameter(System::String ^ parameter, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetParameter : string * string -&gt; unit" Usage="federationMessage.SetParameter (parameter, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">要设置的参数的名称。</param>
        <param name="value">分配给参数的值。</param>
        <summary>设置参数字典中参数的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果字典中不存在该参数，则会将其添加到该参数。 通过属性访问参数字典 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="parameter" /> 为 <see langword="null" /> 或空字符串。  
  
- 或 - 
 <paramref name="value" /> 为 <see langword="null" /> 或空字符串。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetUriParameter">
      <MemberSignature Language="C#" Value="public void SetUriParameter (string parameter, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUriParameter(string parameter, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUriParameter (parameter As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUriParameter(System::String ^ parameter, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetUriParameter : string * string -&gt; unit" Usage="federationMessage.SetUriParameter (parameter, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">参数名。</param>
        <param name="value">参数值。</param>
        <summary>设置参数字典中参数的值。 该值必须为绝对 URI。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果字典中不存在该参数，将添加该参数。 通过属性访问参数字典 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="parameter" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="value" /> 为 <see langword="null" />，或者不是绝对 URI。</exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.Validate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Validate();" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="federationMessage.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>验证消息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现检查 <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> 属性是否包含绝对 URI。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException"><see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> 值的属性是 <see langword="null" /> 或不是绝对 URI。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.IO.TextWriter -&gt; unit" Usage="federationMessage.Write writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">消息写出的文本编写器。</param>
        <summary>在派生类中重写时，将此消息写入该输出流中。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>必须在派生类中重写此方法。 你的实现应在写入消息之前验证该消息并引发相应的异常。</para></block>
      </Docs>
    </Member>
    <Member MemberName="WriteFormPost">
      <MemberSignature Language="C#" Value="public virtual string WriteFormPost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteFormPost() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFormPost () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteFormPost();" />
      <MemberSignature Language="F#" Value="abstract member WriteFormPost : unit -&gt; string&#xA;override this.WriteFormPost : unit -&gt; string" Usage="federationMessage.WriteFormPost " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>序列化一则消息作为窗体，发布并返回结果窗体和其以字符串形式的Javascript</summary>
        <returns>作为与其 Javascript 关联的窗体的消息的字符串表示形式。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteQueryString">
      <MemberSignature Language="C#" Value="public virtual string WriteQueryString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteQueryString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQueryString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteQueryString();" />
      <MemberSignature Language="F#" Value="abstract member WriteQueryString : unit -&gt; string&#xA;override this.WriteQueryString : unit -&gt; string" Usage="federationMessage.WriteQueryString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回以查询字符串形式的消息的字符串表示形式。</summary>
        <returns>查询字符串格式的消息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建由属性中指定的 URL 组成的消息， <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> 后跟从参数字典中创建的查询字符串。 通过属性访问参数字典 <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
