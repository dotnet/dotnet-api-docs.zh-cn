<Type Name="ComputerInfo" FullName="Microsoft.VisualBasic.Devices.ComputerInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9510787e0e827449434320f053925d18599b15b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83954895" /></Metadata><TypeSignature Language="C#" Value="public class ComputerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComputerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComputerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComputerInfo" />
  <TypeSignature Language="F#" Value="type ComputerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7df49-101">提供了用于获取计算机内存、已加载程序集、名称和操作系统相关信息的属性。</span><span class="sxs-lookup"><span data-stu-id="7df49-101">Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df49-102">`My.Computer.Info` 对象公开的属性返回有关部署应用程序的计算机的信息，在运行时确定。</span><span class="sxs-lookup"><span data-stu-id="7df49-102">The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time.</span></span> <span data-ttu-id="7df49-103">通常，此数据不同于开发计算机上的可用数据。</span><span class="sxs-lookup"><span data-stu-id="7df49-103">Typically, this data differs from what was available on the development computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df49-104">此示例使用 `My.Computer.Info.AvailablePhysicalMemory` 属性显示运行代码的计算机的可用物理内存量。</span><span class="sxs-lookup"><span data-stu-id="7df49-104">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-105">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-105">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComputerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComputerInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7df49-106">初始化 <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7df49-106">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-107">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-107">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AvailablePhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong AvailablePhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailablePhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailablePhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailablePhysicalMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailablePhysicalMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7df49-108">获取计算机的可用物理内存总量。</span><span class="sxs-lookup"><span data-stu-id="7df49-108">Gets the total amount of free physical memory for the computer.</span></span></summary>
        <value><span data-ttu-id="7df49-109">一个 <see langword="ULong" /> 值，包含计算机的可用物理内存的字节数。</span><span class="sxs-lookup"><span data-stu-id="7df49-109">A <see langword="ULong" /> containing the number of bytes of free physical memory for the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7df49-110">此示例使用 `My.Computer.Info.AvailablePhysicalMemory` 属性显示运行代码的计算机的可用物理内存量。</span><span class="sxs-lookup"><span data-stu-id="7df49-110">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="7df49-111">应用程序无法获取内存状态。</span><span class="sxs-lookup"><span data-stu-id="7df49-111">The application cannot obtain the memory status.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-112">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-112">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AvailableVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong AvailableVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailableVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailableVirtualMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableVirtualMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7df49-113">获取计算机的可用虚拟地址空间的总量。</span><span class="sxs-lookup"><span data-stu-id="7df49-113">Gets the total amount of the computer's free virtual address space.</span></span></summary>
        <value><span data-ttu-id="7df49-114">一个 <see langword="ULong" /> 值，包含计算机的可用虚拟地址空间的字节数。</span><span class="sxs-lookup"><span data-stu-id="7df49-114">A <see langword="ULong" /> containing the number of bytes of the computer's free virtual address space.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7df49-115">此示例使用 `My.Computer.Info.AvailableVirtualMemory` 属性显示运行代码的计算机的可用虚拟内存量。</span><span class="sxs-lookup"><span data-stu-id="7df49-115">This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="7df49-116">应用程序无法获取内存状态。</span><span class="sxs-lookup"><span data-stu-id="7df49-116">The application cannot obtain the memory status.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-117">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-117">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledUICulture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7df49-118">获取随操作系统安装的当前用户界面区域性。</span><span class="sxs-lookup"><span data-stu-id="7df49-118">Gets the current UI culture installed with the operating system.</span></span></summary>
        <value><span data-ttu-id="7df49-119">表示在计算机上安装的 UI 区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="7df49-119">A <see cref="T:System.Globalization.CultureInfo" /> object represents the UI culture installed on the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df49-120">`My.Computer.Info.InstalledUICulture` 属性与 <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> 属性具有相同的行为。</span><span class="sxs-lookup"><span data-stu-id="7df49-120">The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.</span></span>  
  
 <span data-ttu-id="7df49-121">在本地化的操作系统（如日语 Windows 2000 Professional）中，此属性返回操作系统的区域性。</span><span class="sxs-lookup"><span data-stu-id="7df49-121">In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df49-122">此示例使用 `My.Computer.Info.InstalledUICulture` 属性显示操作系统的 UI 区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="7df49-122">This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-123">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-123">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OSFullName">
      <MemberSignature Language="C#" Value="public string OSFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSFullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSFullName : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7df49-124">获取操作系统的全名。</span><span class="sxs-lookup"><span data-stu-id="7df49-124">Gets the full operating system name.</span></span></summary>
        <value><span data-ttu-id="7df49-125">一个 <see langword="String" /> 值，包含操作系统名称。</span><span class="sxs-lookup"><span data-stu-id="7df49-125">A <see langword="String" /> containing the operating-system name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df49-126">如果计算机上安装了 Windows Management Instrumentation （WMI），则此属性将返回有关操作系统名称的详细信息。</span><span class="sxs-lookup"><span data-stu-id="7df49-126">This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer.</span></span> <span data-ttu-id="7df49-127">否则，此属性将返回与 `My.Computer.Info.OSPlatform` 属性相同的字符串，该属性提供的信息比 WMI 可以提供的信息更少。</span><span class="sxs-lookup"><span data-stu-id="7df49-127">Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df49-128">此示例使用 `My.Computer.Info.OSFullName` 属性显示计算机操作系统的名称。</span><span class="sxs-lookup"><span data-stu-id="7df49-128">This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="7df49-129">调用代码没有完全信任权限。</span><span class="sxs-lookup"><span data-stu-id="7df49-129">The calling code does not have full trust.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-130">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-130">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OSPlatform">
      <MemberSignature Language="C#" Value="public string OSPlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSPlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSPlatform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSPlatform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSPlatform : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7df49-131">获取计算机的操作系统的平台标识符。</span><span class="sxs-lookup"><span data-stu-id="7df49-131">Gets the platform identifier for the operating system of the computer.</span></span></summary>
        <value><span data-ttu-id="7df49-132">一个包含计算机操作系统的平台标识符的 <see langword="String" />，此字符串是从 <see cref="T:System.PlatformID" /> 枚举的成员名称中选择的。</span><span class="sxs-lookup"><span data-stu-id="7df49-132">A <see langword="String" /> containing the platform identifier for the operating system of the computer, chosen from the member names of the <see cref="T:System.PlatformID" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df49-133">`My.Computer.Info.OSPlatform` 属性提供的功能类似于 <xref:System.Environment.OSVersion%2A> 属性返回的对象的 <xref:System.OperatingSystem.Platform%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="7df49-133">The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df49-134">此示例使用 `My.Computer.Info.OSPlatform` 属性显示计算机操作系统的平台。</span><span class="sxs-lookup"><span data-stu-id="7df49-134">This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="7df49-135">应用程序无法获取操作系统平台信息。</span><span class="sxs-lookup"><span data-stu-id="7df49-135">The application cannot obtain the operating-system platform information.</span></span></exception>
        <altmember cref="P:System.OperatingSystem.Platform" />
        <altmember cref="P:System.Environment.OSVersion" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-136">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-136">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSVersion : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7df49-137">获取计算机操作系统的版本。</span><span class="sxs-lookup"><span data-stu-id="7df49-137">Gets the version of the computer's operating system.</span></span></summary>
        <value><span data-ttu-id="7df49-138">一个 <see langword="String" /> 值，包含操作系统的当前版本号。</span><span class="sxs-lookup"><span data-stu-id="7df49-138">A <see langword="String" /> containing the current version number of the operating system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df49-139">`My.Computer.Info.OSVersion` 属性将版本的格式设置为 "主要版本. 次要版本. 内部版本. 内部版本. 修订版本"。</span><span class="sxs-lookup"><span data-stu-id="7df49-139">The `My.Computer.Info.OSVersion` property formats the version as "major.minor.build.revision".</span></span>  
  
 <span data-ttu-id="7df49-140">`My.Computer.Info.OSVersion` 属性提供的功能类似于 <xref:System.Environment.OSVersion%2A> 属性返回的对象的 <xref:System.OperatingSystem.Version%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="7df49-140">The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df49-141">此示例使用 `My.Computer.Info.OSVersion` 属性显示计算机操作系统的版本。</span><span class="sxs-lookup"><span data-stu-id="7df49-141">This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="7df49-142">应用程序无法获取操作系统版本信息。</span><span class="sxs-lookup"><span data-stu-id="7df49-142">The application cannot obtain the operating-system version information.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-143">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-143">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TotalPhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong TotalPhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalPhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalPhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalPhysicalMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalPhysicalMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7df49-144">获取计算机的物理内存总量。</span><span class="sxs-lookup"><span data-stu-id="7df49-144">Gets the total amount of physical memory for the computer.</span></span></summary>
        <value><span data-ttu-id="7df49-145">一个 <see langword="ULong" /> 值，包含计算机的物理内存的字节数。</span><span class="sxs-lookup"><span data-stu-id="7df49-145">A <see langword="ULong" /> containing the number of bytes of physical memory for the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7df49-146">此示例使用 `My.Computer.Info.TotalPhysicalMemory` 属性显示运行代码的计算机的物理内存总量。</span><span class="sxs-lookup"><span data-stu-id="7df49-146">This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="7df49-147">应用程序无法获取内存状态。</span><span class="sxs-lookup"><span data-stu-id="7df49-147">The application cannot obtain the memory status.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-148">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-148">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TotalVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong TotalVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalVirtualMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalVirtualMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7df49-149">获取计算机的可用虚拟地址空间的总量。</span><span class="sxs-lookup"><span data-stu-id="7df49-149">Gets the total amount of virtual address space available for the computer.</span></span></summary>
        <value><span data-ttu-id="7df49-150">一个 <see langword="ULong" /> 值，包含计算机的可用虚拟地址空间的字节数。</span><span class="sxs-lookup"><span data-stu-id="7df49-150">A <see langword="ULong" /> containing the number of bytes of virtual address space available for the computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7df49-151">此示例使用 `My.Computer.Info.TotalVirtualMemory` 属性显示运行代码的计算机的虚拟内存总量。</span><span class="sxs-lookup"><span data-stu-id="7df49-151">This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="7df49-152">应用程序无法获取内存状态。</span><span class="sxs-lookup"><span data-stu-id="7df49-152">The application cannot obtain the memory status.</span></span></exception>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/"><span data-ttu-id="7df49-153">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7df49-153">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
