<Type Name="ServerComputer" FullName="Microsoft.VisualBasic.Devices.ServerComputer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c1e95d5371d30881e5c71332e68770a4e52497c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89792501" /></Metadata><TypeSignature Language="C#" Value="public class ServerComputer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ServerComputer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.ServerComputer" />
  <TypeSignature Language="VB.NET" Value="Public Class ServerComputer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServerComputer" />
  <TypeSignature Language="F#" Value="type ServerComputer = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供了用于操控计算机组件（如音频、时钟、键盘、文件系统等）的属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对象公开的属性 `My.Computer` 返回有关在其上部署应用程序的计算机的信息，这是在运行时确定的。 通常，此数据不同于开发计算机上的可用数据。  
  
 某些成员（如 `My.Computer.Audio` 对象）仅适用于非服务器应用程序。  
  
 下表列出了涉及对象的任务的示例 `My.Computer` 。  
  
|功能|查看|  
|--------|---------|  
|检查连接状态|[如何：检查连接状态](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status)|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
|创建注册表项|[如何：创建注册表项并设置其值](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value)|  
|访问剪贴板|[将数据存储到剪贴板以及从剪贴板读取数据](/dotnet/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard)|  
  
   
  
## Examples  
 此示例使用 `My.Computer.Name` 属性显示运行代码的计算机的名称。  
  
 [!code-vb[VbVbalrMyComputer#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Audio" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Clock" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.FileSystemProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Keyboard" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Mouse" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Ports" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerComputer ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerComputer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Clock ^ Clock { Microsoft::VisualBasic::Devices::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : Microsoft.VisualBasic.Devices.Clock" Usage="Microsoft.VisualBasic.Devices.ServerComputer.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象可提供用于从系统时钟访问当前的本地时间和协调通用时间（与格林尼治标准时间相同）的属性。</summary>
        <value>计算机的 <see langword="My.Computer.Clock" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供对对象的轻松访问 `My.Computer.Clock` 。 有关详细信息，请参阅 <xref:Microsoft.VisualBasic.Devices.Clock>。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 `My.Computer.Audio.Play`指定时，方法在后台播放指定的声音 `AudioPlayMode.Background` 。  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 此代码只能在 Windows 窗体应用程序中运行。  
  
 文件名应引用您的系统上的 .wav 声音文件。  
  
 若要简化声音文件的管理，请考虑将文件存储为应用程序资源。 然后，可以通过 node.js [对象](/dotnet/visual-basic/language-reference/objects/my-resources-object)访问这些文件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Clock" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="FileSystem">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.MyServices.FileSystemProxy FileSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.MyServices.FileSystemProxy FileSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSystem As FileSystemProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::MyServices::FileSystemProxy ^ FileSystem { Microsoft::VisualBasic::MyServices::FileSystemProxy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileSystem : Microsoft.VisualBasic.MyServices.FileSystemProxy" Usage="Microsoft.VisualBasic.Devices.ServerComputer.FileSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MyServices.FileSystemProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于处理驱动器、文件和目录的属性和方法。</summary>
        <value>计算机的 <see langword="My.Computer.FileSystem" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供对对象的轻松访问 <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy> 。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 此示例将进行检查以确定文件夹是否 `C:\backup\logs` 存在并检查其属性。  
  
 [!code-vb[VbVbcnMyFileSystem#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MyServices.FileSystemProxy" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files">从文件读取 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/writing-to-files">写入文件 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/creating-deleting-and-moving-files-and-directories">创建、删除和移动文件和目录 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.ComputerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.ComputerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Info" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Info As ComputerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::ComputerInfo ^ Info { Microsoft::VisualBasic::Devices::ComputerInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.VisualBasic.Devices.ComputerInfo" Usage="Microsoft.VisualBasic.Devices.ServerComputer.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.ComputerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于获取有关计算机内存、已加载的程序集、名称和操作系统的信息的属性。</summary>
        <value>计算机的 <see langword="My.Computer.Info" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供对对象的轻松访问 `My.Computer.Info` 。 有关详细信息，请参阅 <xref:Microsoft.VisualBasic.Devices.ComputerInfo>。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 此示例使用 `My.Computer.Info.AvailablePhysicalMemory` 属性显示运行代码的计算机的可用物理内存量。  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.Devices.ServerComputer.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取计算机名称。</summary>
        <value>一个包含此计算机的名称的 <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Name`属性提供类似于属性的功能 <xref:System.Environment.MachineName%2A> 。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 此示例使用 `My.Computer.Name` 属性显示运行代码的计算机的名称。  
  
 [!code-vb[VbVbalrMyComputer#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Environment.MachineName" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Network">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Network Network { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Network Network" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Network" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Network As Network" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Network ^ Network { Microsoft::VisualBasic::Devices::Network ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Network : Microsoft.VisualBasic.Devices.Network" Usage="Microsoft.VisualBasic.Devices.ServerComputer.Network" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Network</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于与计算机所连接的网络进行交互的属性和方法。</summary>
        <value>计算机的 <see langword="My.Computer.Network" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供对对象的轻松访问 <xref:Microsoft.VisualBasic.Devices.Network> 。  
  
## <a name="availability-by-project-type"></a>按项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/performing-network-operations">执行网络操作</related>
      </Docs>
    </Member>
    <Member MemberName="Registry">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.MyServices.RegistryProxy Registry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.MyServices.RegistryProxy Registry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Registry As RegistryProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::MyServices::RegistryProxy ^ Registry { Microsoft::VisualBasic::MyServices::RegistryProxy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Registry : Microsoft.VisualBasic.MyServices.RegistryProxy" Usage="Microsoft.VisualBasic.Devices.ServerComputer.Registry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MyServices.RegistryProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于操作注册表的属性和方法。</summary>
        <value>计算机的 <see langword="My.Computer.Registry" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供对对象的轻松访问 <xref:Microsoft.VisualBasic.MyServices.RegistryProxy> 。  
  
   
  
## Examples  
 此示例从读取值 `Name` `HKEY_CURRENT_USER\Software\MyApp` ，并将其显示在消息框中。  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry">读取和写入注册表 (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
