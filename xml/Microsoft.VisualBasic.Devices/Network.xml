<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b935a1d10fcaba779cf3ce2dba008efd43160962" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89792628" /></Metadata><TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于与计算机所连接的网络进行交互的属性、事件和方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表列出了涉及对象的任务的示例 `My.Computer.Network` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
|检查连接状态|[如何：检查连接状态](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Network" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，则该 `DownloadFile` 方法将不会覆盖现有文件。 您可以使用方法的其他重载之一 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 来指示它覆盖现有文件、提供用户凭据或指定特定超时值。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，则该 `DownloadFile` 方法将不会覆盖现有文件。 您可以使用方法的其他重载之一 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 来指示它覆盖现有文件、提供用户凭据或指定特定超时值。 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，则该 `DownloadFile` 方法将不会覆盖现有文件。 您可以使用方法的其他重载之一 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 来指示它覆盖现有文件或指定特定的超时值。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，则该 `DownloadFile` 方法将不会覆盖现有文件。 您可以使用方法的其他重载之一 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 来指示它覆盖现有文件或指定特定的超时值。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><see langword="String" /> 或 <see cref="T:System.Uri" />。 要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName"><see langword="String" />. 下载的文件的文件名和路径。</param>
        <param name="networkCredentials"><see cref="T:System.Net.ICredentials" />. 要提供的凭据。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为 `True` ，则会显示一个对话框，其中显示操作的进度; 对话框包含可用于取消操作的 " **取消** " 按钮。 此对话框不是模式对话框，因此不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在指定的内响应 `connectionTimeout` ，则取消操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout"><see cref="T:System.Int32" />. 以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为 `True` ，则会显示一个对话框，其中显示操作的进度; 对话框包含可用于取消操作的 " **取消** " 按钮。 此对话框不是模式对话框，因此不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在指定的内响应 `connectionTimeout` ，则取消操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <param name="networkCredentials">要提供的凭据。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="onUserCancel">指定当用户在对话框（在 <paramref name="showUI" /> 设置为 <see langword="True" /> 时将显示此对话框）上单击“取消”或“否”时的行为********。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为 `True` ，则会显示一个对话框，其中显示操作的进度; 对话框包含可用于取消操作的 " **取消** " 按钮。 此对话框不是模式对话框，因此不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在指定的内响应 `connectionTimeout` ，则取消操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为 `True` ，则会显示一个对话框，其中显示操作的进度; 对话框包含可用于取消操作的 " **取消** " 按钮。 此对话框不是模式对话框，因此不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在指定的内响应 `connectionTimeout` ，则取消操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="onUserCancel">指定当用户在对话框（在 <c>ShowUI</c> 设置为 <see langword="True" /> 时将显示此对话框）上单击“取消”或“否”时的行为********。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为 `True` ，则会显示一个对话框，其中显示操作的进度; 对话框包含可用于取消操作的 " **取消** " 按钮。 此对话框不是模式对话框，因此不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在指定的内响应 `connectionTimeout` ，则取消操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">要下载的文件的路径，包括文件名和主机地址。</param>
        <param name="destinationFileName">下载的文件的文件名和路径。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串 ""。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串 ""。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="overwrite">要覆盖现有文件，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="onUserCancel">指定当用户在对话框（在 <c>ShowUI</c> 设置为 <see langword="True" /> 时将显示此对话框）上单击“取消”或“否”时的行为********。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
        <summary>下载指定的远程文件，并将其保存到指定位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为 `True` ，则会显示一个对话框，其中显示操作的进度; 对话框包含可用于取消操作的 " **取消** " 按钮。 此对话框不是模式对话框，因此不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在指定的内响应 `connectionTimeout` ，则取消操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  `DownloadFile`方法不发送可选的 HTTP 标头。 某些服务器可能会 (内部服务器错误返回 500) 如果缺少可选的用户代理标头。 若要发送可选的标头，必须使用类构造请求 <xref:System.Net.WebClient> 。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.DownloadFile` 。  
  
|功能|查看|  
|-|-|  
|下载文件|[如何：下载文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file)|  
  
   
  
## Examples  
 此示例从下载文件 `WineList.txt` `http://www.cohowinery.com/downloads` ，并将其保存到 `C:\Documents and Settings\All Users\Documents` 。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例从下载文件 `WineList.txt` ， `http://www.cohowinery.com/downloads` 并将其保存到 `C:\Documents and Settings\All Users\Documents` ，指定超时间隔为500毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 以尾随斜杠结尾。</exception>
        <exception cref="T:System.IO.IOException">将 <paramref name="overwrite" /> 设置为 <see langword="False" />，而目标文件已存在。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示计算机是否已连接至网络。</summary>
        <value>如果将计算机连接到网络，则为 <see langword="True" />；否则为 <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable``False`从应用程序中调用时，始终返回，如果用户没有，则返回 `Click Once` <xref:System.Net.NetworkInformation.NetworkInformationPermission> 。  
  
 下表列出了涉及属性的任务的示例 `My.Computer.Network.IsAvailable` 。  
  
|功能|查看|  
|-|-|  
|检查计算机是否已连接到网络|[如何：检查连接状态](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status)|  
  
   
  
## Examples  
 此示例检查属性的状态并对其进行报告。  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在网络可用性更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `NetworkAvailabilityChanged`每次网络的可用性发生变化时，应用程序都会引发事件。 可以使用参数的 <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> 属性 `e` 来获取网络连接的新状态。 若要获取网络连接的当前状态，请使用 <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> 属性。  
  
 在 Windows 窗体应用程序中，将在应用程序的主线程上使用其他用户界面事件引发此事件。 这样，事件处理程序便可以直接访问应用程序的用户界面。 但是，如果在引发此事件时，应用程序正在忙于处理另一个用户界面事件，则在其他事件处理程序完成或调用方法之前，将无法处理此事件 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> 。  
  
 不能使用 `Handles` 语句来处理 `NetworkAvailabilityChanged` 事件; 必须使用 `AddHandler` 语句。  
  
 在 Windows 窗体应用程序中， `MyApplication` 对象公开一个 `NetworkAvailabilityChanged` 事件，该事件提供与此事件相同的功能，但你可以使用语句对其进行处理 `Handles` 。  
  
> [!NOTE]
>  许多网络集线器都提供网络连接，即使集线器与较大的网络断开连接也是如此。 因此，对于有线连接，此事件表示计算机和中心之间的连接发生更改。  
  
## Examples  
 此示例使用 `My.Computer.Network.NetworkAvailabilityChanged` 事件来更新窗体或控件的用户界面。  
  
 此代码应位于具有名为的窗体或控件中 <xref:System.Windows.Forms.Label> `Label1` 。  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ping 指定的服务器。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">要对其执行 ping 操作的服务器的 URL、计算机名称或 IP 号。</param>
        <summary>Ping 指定的服务器。</summary>
        <returns>如果操作已成功，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`方法不是用于确定远程计算机的可用性的防故障方法：目标计算机上的 ping 端口可能已关闭，或者 ping 请求可能被防火墙或路由器阻止。  
  
 传递给方法的地址 `Ping` 必须是 DNS 可解析的，并且不能以 "http://" 开头。  
  
   
  
## Examples  
 此示例通过确定方法是否返回来报告是否可以 ping 服务器 `Ping` `True` 。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 将替换为 `"198.01.01.01"` 要 ping 的服务器的 IP 地址、URL 或计算机名。  
  
 此示例通过确定 `Ping` 方法是否返回 `True` 并指定了1000毫秒的超时间隔，来报告是否可以 ping 服务器。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 将替换为 `"www.cohowinery.com"` 要 ping 的服务器的 IP 地址、URL 或计算机名。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">没有可用的网络连接。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL 无效。</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">要对其执行 ping 操作的服务器的 URI。</param>
        <summary>Ping 指定的服务器。</summary>
        <returns>如果操作已成功，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`方法不是用于确定远程计算机的可用性的防故障方法：目标计算机上的 ping 端口可能已关闭，或者 ping 请求可能被防火墙或路由器阻止。  
  
 传递给方法的地址 `Ping` 必须是 DNS 可解析的，并且不能以 "http://" 开头。  
  
   
  
## Examples  
 此示例通过确定方法是否返回来报告是否可以 ping 服务器 `Ping` `True` 。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 将替换为 `"198.01.01.01"` 要 ping 的服务器的 IP 地址、URL 或计算机名。  
  
 此示例通过确定 `Ping` 方法是否返回 `True` 并指定了1000毫秒的超时间隔，来报告是否可以 ping 服务器。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 将替换为 `"www.cohowinery.com"` 要 ping 的服务器的 IP 地址、URL 或计算机名。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">没有可用的网络连接。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL 无效。</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">要对其执行 ping 操作的服务器的 URL、计算机名称或 IP 号。</param>
        <param name="timeout">用于联系目标的时间阈值（以毫秒为单位）。 默认值为 500。</param>
        <summary>Ping 指定的服务器。</summary>
        <returns>如果操作已成功，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`方法不是用于确定远程计算机的可用性的防故障方法：目标计算机上的 ping 端口可能已关闭，或者 ping 请求可能被防火墙或路由器阻止。  
  
 传递给方法的地址 `Ping` 必须是 DNS 可解析的，并且不能以 "http://" 开头。  
  
   
  
## Examples  
 此示例通过确定方法是否返回来报告是否可以 ping 服务器 `Ping` `True` 。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 将替换为 `"198.01.01.01"` 要 ping 的服务器的 IP 地址、URL 或计算机名。  
  
 此示例通过确定 `Ping` 方法是否返回 `True` 并指定了1000毫秒的超时间隔，来报告是否可以 ping 服务器。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 将替换为 `"www.cohowinery.com"` 要 ping 的服务器的 IP 地址、URL 或计算机名。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">没有可用的网络连接。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL 无效。</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">要对其执行 ping 操作的服务器的 URI。</param>
        <param name="timeout">用于联系目标的时间阈值（以毫秒为单位）。 默认值为 500。</param>
        <summary>Ping 指定的服务器。</summary>
        <returns>如果操作已成功，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`方法不是用于确定远程计算机的可用性的防故障方法：目标计算机上的 ping 端口可能已关闭，或者 ping 请求可能被防火墙或路由器阻止。  
  
 传递给方法的地址 `Ping` 必须是 DNS 可解析的，并且不能以 "http://" 开头。  
  
   
  
## Examples  
 此示例通过确定方法是否返回来报告是否可以 ping 服务器 `Ping` `True` 。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 将替换为 `"198.01.01.01"` 要 ping 的服务器的 IP 地址、URL 或计算机名。  
  
 此示例通过确定 `Ping` 方法是否返回 `True` 并指定了1000毫秒的超时间隔，来报告是否可以 ping 服务器。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 将替换为 `"www.cohowinery.com"` 要 ping 的服务器的 IP 地址、URL 或计算机名。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">没有可用的网络连接。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL 无效。</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将指定的文件发送到指定的主机地址。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用方法的其他重载之一 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> 来提供用户凭据或指定特定超时值。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">源文件路径无效。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用方法的其他重载之一 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> 来提供用户凭据或指定特定超时值。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">源文件路径无效。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用方法的其他重载之一 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> 来指定特定超时值。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> 小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用方法的其他重载之一 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> 来指定特定超时值。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> 小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的默认超时（100 秒）内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <param name="networkCredentials">身份验证的凭据。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为，则会 `True` 显示一个对话框，其中包含一个 " **取消** " 按钮，用户可以单击该按钮来取消操作。 因为对话框不是模式对话框，所以它不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在中指定的间隔内响应 `connectionTimeout` ，则取消操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> 小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为，则会 `True` 显示一个对话框，其中包含一个 " **取消** " 按钮，用户可以单击该按钮来取消操作。 因为对话框不是模式对话框，所以它不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在中指定的间隔内响应 `connectionTimeout` ，则取消操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> 小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <param name="networkCredentials">身份验证的凭据。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="onUserCancel">当用户单击“取消”时要采取的操作****。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为，则会 `True` 显示一个对话框，其中包含一个 " **取消** " 按钮，用户可以单击该按钮来取消操作。 因为对话框不是模式对话框，所以它不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在中指定的间隔内响应 `connectionTimeout` ，则取消操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> 小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
        <param name="showUI">要显示操作进度，则为 <see langword="True" />；否则为 <see langword="False" />。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为，则会 `True` 显示一个对话框，其中包含一个 " **取消** " 按钮，用户可以单击该按钮来取消操作。 因为对话框不是模式对话框，所以它不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在中指定的间隔内响应 `connectionTimeout` ，则取消操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> 小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
        <param name="showUI">是否显示操作进度。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="onUserCancel">当用户单击“取消”时要采取的操作****。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为，则会 `True` 显示一个对话框，其中包含一个 " **取消** " 按钮，用户可以单击该按钮来取消操作。 因为对话框不是模式对话框，所以它不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在中指定的间隔内响应 `connectionTimeout` ，则取消操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> 小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">要上载的文件的路径和名称。</param>
        <param name="address">目标服务器的 URL、IP 地址或 URI。</param>
        <param name="userName">要进行身份验证的用户名。 默认值为空字符串：<c>""</c>。</param>
        <param name="password">要进行身份验证的密码。 默认值为空字符串：<c>""</c>。</param>
        <param name="showUI">是否显示操作进度。 默认值为 <see langword="False" />。</param>
        <param name="connectionTimeout">以毫秒为单位的超时间隔。 默认值为 100 秒。</param>
        <param name="onUserCancel">当用户单击“取消”时要采取的操作****。 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
        <summary>将指定的文件发送到指定的主机地址。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `showUI` 设置为，则会 `True` 显示一个对话框，其中包含一个 " **取消** " 按钮，用户可以单击该按钮来取消操作。 因为对话框不是模式对话框，所以它不会阻止用户在程序中输入其他窗口。  
  
 如果服务器未在中指定的间隔内响应 `connectionTimeout` ，则取消操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪时输出跟踪信息。 有关详细信息，请参阅 [启用网络跟踪](/dotnet/framework/network-programming/enabling-network-tracing)。  
  
> [!NOTE]
>  FTP 协议以纯文本形式发送信息（包括密码），且不应用于传输敏感信息。  
  
 下表列出了涉及方法的任务的示例 `My.Computer.Network.UploadFile` 。  
  
|功能|查看|  
|-|-|  
|上传文件|[如何：上传文件](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file)|  
  
   
  
## Examples  
 此示例将文件上传 `Order.txt` 到 `http://www.cohowinery.com/uploads` 。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> 小于或等于零。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />不包括文件名。</exception>
        <exception cref="T:System.Security.SecurityException">用户缺少必要的权限，无法执行网络操作。</exception>
        <exception cref="T:System.TimeoutException">服务器没有在指定的 <paramref name="connectionTimeout" /> 内响应。</exception>
        <exception cref="T:System.Net.WebException">请求被目标 Web 服务器拒绝。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">对象 (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file">如何：在 Visual Basic 中下载文件</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths">如何：在 Visual Basic 中分析文件路径</related>
      </Docs>
    </Member>
  </Members>
</Type>
