<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="284a507276c32fb294140b2169bd33fef4cf4ca5" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70552928" /></Metadata><TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'T&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="cb345-101">列表中的对象的协定类型。</span><span class="sxs-lookup"><span data-stu-id="cb345-101">The contract type of the objects in the list.</span></span></typeparam>
    <summary><span data-ttu-id="cb345-102">表示类型的泛型列表，这些类型是按协定定义的且用于传递宿主与外接程序之间的协定类型集合。</span><span class="sxs-lookup"><span data-stu-id="cb345-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb345-103"><xref:System.AddIn.Pipeline.CollectionAdapters>类使用接口， <xref:System.AddIn.Contract.IListContract%601> 在两个方向上，在宿主和外接程序之间传递集合。</span><span class="sxs-lookup"><span data-stu-id="cb345-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="cb345-104">建议使用 <xref:System.AddIn.Pipeline.CollectionAdapters> 类，而不是直接在代码中使用该类。</span><span class="sxs-lookup"><span data-stu-id="cb345-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="cb345-105">有关示例，请参阅 [演练：在宿主和外接程序之间传递集合](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)。</span><span class="sxs-lookup"><span data-stu-id="cb345-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="cb345-106">此类可用于在应用程序域之间通过引用传递对象，因为这些对象不会序列化。</span><span class="sxs-lookup"><span data-stu-id="cb345-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit" Usage="iListContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cb345-107">要添加的对象。</span><span class="sxs-lookup"><span data-stu-id="cb345-107">The object to add.</span></span></param>
        <summary><span data-ttu-id="cb345-108">将对象添加到 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中。</span><span class="sxs-lookup"><span data-stu-id="cb345-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb345-109">`item`参数的类型必须为协定所定义的类型。</span><span class="sxs-lookup"><span data-stu-id="cb345-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iListContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb345-110">从 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中移除所有对象。</span><span class="sxs-lookup"><span data-stu-id="cb345-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iListContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cb345-111">要在集合中查找的对象。</span><span class="sxs-lookup"><span data-stu-id="cb345-111">The object to look for in the collection.</span></span></param>
        <summary><span data-ttu-id="cb345-112">确定特定项是否在 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中。</span><span class="sxs-lookup"><span data-stu-id="cb345-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="cb345-113">如果 <see langword="true" /> 位于集合中，则为 <paramref name="item" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb345-113"><see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iListContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb345-114">获取 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中项的数目。</span><span class="sxs-lookup"><span data-stu-id="cb345-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="cb345-115">集合中项的数目。</span><span class="sxs-lookup"><span data-stu-id="cb345-115">The number of items in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorContract : unit -&gt; System.AddIn.Contract.IEnumeratorContract&lt;'T&gt;" Usage="iListContract.GetEnumeratorContract " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb345-116">返回一个循环访问 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="cb345-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="cb345-117">一个循环访问集合的 <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> 枚举器。</span><span class="sxs-lookup"><span data-stu-id="cb345-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iListContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb345-118">确定 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是否为只读。</span><span class="sxs-lookup"><span data-stu-id="cb345-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></summary>
        <returns><span data-ttu-id="cb345-119">如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb345-119"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'T" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb345-120">要获取的项的索引（索引从零开始）。</span><span class="sxs-lookup"><span data-stu-id="cb345-120">The zero-based index of the item to get.</span></span></param>
        <summary><span data-ttu-id="cb345-121">返回 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合的指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="cb345-122">指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-122">The item at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb345-123"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A>方法不会移除指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="cb345-124">若要从集合中移除项 <xref:System.AddIn.Contract.IListContract%601> ，请使用 <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cb345-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb345-125"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cb345-125"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="cb345-126">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cb345-126">-or-</span></span> 
 <span data-ttu-id="cb345-127"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 的返回值。</span><span class="sxs-lookup"><span data-stu-id="cb345-127"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cb345-128">集合中的一项。</span><span class="sxs-lookup"><span data-stu-id="cb345-128">An item in the collection.</span></span></param>
        <summary><span data-ttu-id="cb345-129">返回 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 集合中特定项的索引。</span><span class="sxs-lookup"><span data-stu-id="cb345-129">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="cb345-130">指定的项的索引。</span><span class="sxs-lookup"><span data-stu-id="cb345-130">The index of the specified item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb345-131">如果集合中有多个相同类型的对象，则此方法将标识在集合中第一次出现指定类型的项的索引。</span><span class="sxs-lookup"><span data-stu-id="cb345-131">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="cb345-132"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A>方法不会移除指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-132">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="cb345-133">若要从集合中移除项 <xref:System.AddIn.Contract.IListContract%601> ，请使用 <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cb345-133">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb345-134"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cb345-134"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="cb345-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cb345-135">-or-</span></span> 
 <span data-ttu-id="cb345-136"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法的返回值。</span><span class="sxs-lookup"><span data-stu-id="cb345-136"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb345-137">从零开始的索引，在该处插入 <paramref name="item" />。</span><span class="sxs-lookup"><span data-stu-id="cb345-137">The zero-based index at which to insert <paramref name="item" />.</span></span></param>
        <param name="item"><span data-ttu-id="cb345-138">要在 <see cref="T:System.AddIn.Contract.IContract" /> 集合中插入的 <see cref="T:System.AddIn.Contract.IListContract`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="cb345-138">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></param>
        <summary><span data-ttu-id="cb345-139">将某个项插入 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中的指定索引处。</span><span class="sxs-lookup"><span data-stu-id="cb345-139">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb345-140">调用 <xref:System.AddIn.Contract.IListContract%601.Insert%2A> 方法后，插入点之后的项将移动以容纳新项。</span><span class="sxs-lookup"><span data-stu-id="cb345-140">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="cb345-141">还会更新移动项的索引。</span><span class="sxs-lookup"><span data-stu-id="cb345-141">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="cb345-142">若要替换指定索引处的项，请使用 <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cb345-142">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="cb345-143">若要确定 <xref:System.AddIn.Contract.IListContract%601> 集合是否为只读，请调用 <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cb345-143">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb345-144"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cb345-144"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="cb345-145">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cb345-145">-or-</span></span> 
 <span data-ttu-id="cb345-146"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 的返回值。</span><span class="sxs-lookup"><span data-stu-id="cb345-146"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cb345-147"><see cref="T:System.AddIn.Contract.IListContract`1" /> 集合为只读。</span><span class="sxs-lookup"><span data-stu-id="cb345-147">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool" Usage="iListContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cb345-148">要从集合中移除的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-148">The item to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="cb345-149">从指定类型的 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中移除项。</span><span class="sxs-lookup"><span data-stu-id="cb345-149">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span></span></summary>
        <returns><span data-ttu-id="cb345-150">如果该项被移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cb345-150"><see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb345-151">您必须对集合中特定类型的每个对象重复此方法。</span><span class="sxs-lookup"><span data-stu-id="cb345-151">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb345-152">要移除的项的索引。</span><span class="sxs-lookup"><span data-stu-id="cb345-152">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="cb345-153">移除 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-153">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb345-154">调用后 <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> ，删除项之后的项将移动以占用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="cb345-154">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="cb345-155">还会更新移动项的索引。</span><span class="sxs-lookup"><span data-stu-id="cb345-155">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="cb345-156">若要确定 <xref:System.AddIn.Contract.IListContract%601> 集合是否为只读，请调用 <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cb345-156">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb345-157"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cb345-157"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="cb345-158">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cb345-158">-or-</span></span> 
 <span data-ttu-id="cb345-159"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法的返回值。</span><span class="sxs-lookup"><span data-stu-id="cb345-159"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cb345-160"><see cref="T:System.AddIn.Contract.IListContract`1" /> 集合为只读。</span><span class="sxs-lookup"><span data-stu-id="cb345-160">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit" Usage="iListContract.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cb345-161">从零开始的索引，在此对项进行设置。</span><span class="sxs-lookup"><span data-stu-id="cb345-161">The zero-based index at which to set the item.</span></span></param>
        <param name="item"><span data-ttu-id="cb345-162">要在指定索引处设置的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-162">The item to set at the specified index.</span></span></param>
        <summary><span data-ttu-id="cb345-163">设置 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-163">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb345-164"><xref:System.AddIn.Contract.IListContract%601.SetItem%2A>方法设置指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="cb345-164">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="cb345-165">若要向 <xref:System.AddIn.Contract.IListContract%601> 集合中添加项，请使用 <xref:System.AddIn.Contract.IListContract%601.Insert%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cb345-165">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="cb345-166">若要确定 <xref:System.AddIn.Contract.IListContract%601> 集合是否为只读，请调用 <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cb345-166">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cb345-167"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="cb345-167"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="cb345-168">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cb345-168">-or-</span></span> 
 <span data-ttu-id="cb345-169"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法的返回值。</span><span class="sxs-lookup"><span data-stu-id="cb345-169"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cb345-170"><see cref="T:System.AddIn.Contract.IListContract`1" /> 集合为只读。</span><span class="sxs-lookup"><span data-stu-id="cb345-170">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
