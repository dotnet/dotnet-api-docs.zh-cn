<Type Name="ModelItem" FullName="System.Activities.Presentation.Model.ModelItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9bff42d1ff6047c0cb8986c514bab397af99d76d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89731219" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelItem : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItem extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItem&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItem abstract : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ModelItem = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3085b-101">表示编辑模型中的单个项。</span><span class="sxs-lookup"><span data-stu-id="3085b-101">Represents a single item in the editing model.</span></span> <span data-ttu-id="3085b-102">项可以为从复杂的数据结构直至颜色或整数的任何内容。</span><span class="sxs-lookup"><span data-stu-id="3085b-102">An item can be anything from a complex data structure down to a color or integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3085b-103">您可以通过其集合访问项的属性 <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> ，并对属性的值进行更改。</span><span class="sxs-lookup"><span data-stu-id="3085b-103">You can access the item's properties through its <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> collection and make changes to the values of the properties.</span></span>  
  
 <span data-ttu-id="3085b-104"><xref:System.Activities.Presentation.Model.ModelItem> 是设计器的基础数据模型周围的包装。</span><span class="sxs-lookup"><span data-stu-id="3085b-104">A <xref:System.Activities.Presentation.Model.ModelItem> is a wrapper around the underlying data model of the designer.</span></span> <span data-ttu-id="3085b-105">可以通过 <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> 方法访问该基础模型。</span><span class="sxs-lookup"><span data-stu-id="3085b-105">You can access the underlying model through the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3085b-106">对 <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> 方法返回的对象所做的任何更改将不受设计器的序列化和撤消系统的影响。</span><span class="sxs-lookup"><span data-stu-id="3085b-106">Any changes you make to an object returned from the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method will not be reflected by the serialization and undo systems of the designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3085b-107">可以将 <xref:System.Activities.Presentation.Model.ModelItem> 视为它所指处对象的瘦代理。</span><span class="sxs-lookup"><span data-stu-id="3085b-107">The <xref:System.Activities.Presentation.Model.ModelItem> can be thought of as a thin proxy for an object at which it points.</span></span> <span data-ttu-id="3085b-108">首先定义一个简单的 `Animal` 对象。</span><span class="sxs-lookup"><span data-stu-id="3085b-108">First define a simple `Animal` object.</span></span>  
  
```csharp  
  
public class Animal  
{  
    // simple property  
    public string Name { get; set; }  
    // complex property   
    public Location Residence { get; set; }   
    // list   
    public List<Animal> CloseRelatives { get; set; }  
    // dictionary  
    public Dictionary<string, object> Features { get; set; }   
}  
  
public class Location  
{  
    public string StreetAddress { get; set; }  
    public string City { get; set; }  
    public string State { get; set; }   
}  
  
```  
  
 <span data-ttu-id="3085b-109">其次，创建该 `Animal` 的实例，以及作为其代理的 <xref:System.Activities.Presentation.Model.ModelItem>。</span><span class="sxs-lookup"><span data-stu-id="3085b-109">Secondly, create an instance of that `Animal` and a <xref:System.Activities.Presentation.Model.ModelItem> that is a proxy for it.</span></span> <span data-ttu-id="3085b-110">然后，可以通过调用 <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> 检索该对象。</span><span class="sxs-lookup"><span data-stu-id="3085b-110">The object can then be retrieved by calling <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span></span> <span data-ttu-id="3085b-111">下面的代码还演示如何使用 <xref:System.Activities.Presentation.Model.ModelItem> 定义的其他属性。</span><span class="sxs-lookup"><span data-stu-id="3085b-111">The following code also shows how to use other properties defined by <xref:System.Activities.Presentation.Model.ModelItem>.</span></span>  
  
```csharp  
  
EditingContext ec = new EditingContext();  
var companion1 = new Animal { Name = "Houdini the parakeet" };  
var companion2 = new Animal { Name = "Groucho the fish" };  
var animal = new Animal   
   {  
      Name = "Sasha the pug",  
      Residence = new Location   
      {  
         StreetAddress = "123 Main Street",  
         City = "AnyTown",  
         State = "Washington"  
      },  
      Features = new Dictionary<string, object> {   
         {"noise", "snort" },  
         {"MeanTimeUntilNaps", TimeSpan.FromMinutes(15) }  
      },  
      CloseRelatives = new List<Animal> { companion1, companion2 }   
   };  
ModelTreeManager mtm = new ModelTreeManager(ec);  mtm.Load(animal);  
ModelItem mi = mtm.Root;  
  
//Testing other properties of the class  
ModelItem root = mtm.Root;  
Assert.IsTrue(root.GetCurrentValue() == animal, "GetCurrentValue() returns same object");  
Assert.IsTrue(root.ItemType == typeof(Animal),"ItemType describes the item");  
Assert.IsTrue(root.Parent == null,"root parent is null");  
Assert.IsTrue(root.Source == null, "root source is null");  
Assert.IsTrue(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion1,   
   "ComputedValue of prop == actual object");  
Assert.IsFalse(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion2,   
   "ComputedValue of prop == actual object");  
Assert.AreEqual(root.Properties["Residence"].  
   Value.  
   Properties["StreetAddress"].  
   Value.GetCurrentValue(), "123 Main Street", "get actual value back out");  
Assert.AreEqual(root, root.Properties["Residence"].Parent, "property points to owner");  
ModelItem location = root.Properties["Residence"].Value;  
Assert.AreEqual(root.Properties["Residence"], location.Source, "sources point to the right place");  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3085b-112">创建 <see cref="T:System.Activities.Presentation.Model.ModelItem" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3085b-112">Creates a new instance of the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-113">获取在此项上声明的特性。</span><span class="sxs-lookup"><span data-stu-id="3085b-113">Gets the attributes declared on this item.</span></span></summary>
        <value><span data-ttu-id="3085b-114">一个包含项特性的集合。</span><span class="sxs-lookup"><span data-stu-id="3085b-114">A collection that contains the attributes of the item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginEdit">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3085b-115">打开设计器的编辑范围。</span><span class="sxs-lookup"><span data-stu-id="3085b-115">Opens an editing scope for the designer.</span></span></summary>
        <altmember cref="T:System.Activities.Presentation.Model.ModelEditingScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit () As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit();" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : unit -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3085b-116">打开设计器的编辑范围。</span><span class="sxs-lookup"><span data-stu-id="3085b-116">Opens an editing scope for the designer.</span></span> <span data-ttu-id="3085b-117">打开编辑范围后，所有对象之间的所有更改将保存到该范围中，直至事务完成或还原为止。</span><span class="sxs-lookup"><span data-stu-id="3085b-117">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span></span> <span data-ttu-id="3085b-118">编辑范围可以嵌套，但必须按顺序提交。</span><span class="sxs-lookup"><span data-stu-id="3085b-118">Editing scopes can be nested, but must be committed in order.</span></span></summary>
        <returns><span data-ttu-id="3085b-119">必须完成或还原的 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-119">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3085b-120">编辑范围允许将对模型所做的多个更改作为单个事务应用。</span><span class="sxs-lookup"><span data-stu-id="3085b-120">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="3085b-121">在事务完成之前，可以随时还原在编辑范围内进行的所有更改。</span><span class="sxs-lookup"><span data-stu-id="3085b-121">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="3085b-122">编辑范围对于设计器是全局性的。</span><span class="sxs-lookup"><span data-stu-id="3085b-122">Editing scopes are global to the designer.</span></span> <span data-ttu-id="3085b-123">可以为设计器中的任何项创建编辑范围；您无需为所更改的特定项创建编辑范围。</span><span class="sxs-lookup"><span data-stu-id="3085b-123">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit shouldApplyChangesImmediately" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="shouldApplyChangesImmediately"><span data-ttu-id="3085b-124">如果指示应立即应用更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-124"><see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3085b-125">打开设计器的编辑范围。</span><span class="sxs-lookup"><span data-stu-id="3085b-125">Opens an editing scope for the designer.</span></span></summary>
        <returns><span data-ttu-id="3085b-126">必须完成或还原的 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-126">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit (description As String) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="3085b-127">更改的可选说明。</span><span class="sxs-lookup"><span data-stu-id="3085b-127">An optional description of the change.</span></span> <span data-ttu-id="3085b-128">这将设置到编辑范围的 <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> 属性中。</span><span class="sxs-lookup"><span data-stu-id="3085b-128">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span></span></param>
        <summary><span data-ttu-id="3085b-129">打开设计器的编辑范围。</span><span class="sxs-lookup"><span data-stu-id="3085b-129">Opens an editing scope for the designer.</span></span> <span data-ttu-id="3085b-130">打开编辑范围后，所有对象之间的所有更改将保存到该范围中，直至事务完成或还原为止。</span><span class="sxs-lookup"><span data-stu-id="3085b-130">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span></span> <span data-ttu-id="3085b-131">编辑范围可以嵌套，但必须按顺序提交。</span><span class="sxs-lookup"><span data-stu-id="3085b-131">Editing scopes can be nested, but must be committed in order.</span></span></summary>
        <returns><span data-ttu-id="3085b-132">必须完成或还原的 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-132">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3085b-133">编辑范围允许将对模型所做的多个更改作为单个事务应用。</span><span class="sxs-lookup"><span data-stu-id="3085b-133">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="3085b-134">在事务完成之前，可以随时还原在编辑范围内进行的所有更改。</span><span class="sxs-lookup"><span data-stu-id="3085b-134">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="3085b-135">编辑范围对于设计器是全局性的。</span><span class="sxs-lookup"><span data-stu-id="3085b-135">Editing scopes are global to the designer.</span></span> <span data-ttu-id="3085b-136">可以为设计器中的任何项创建编辑范围；您无需为所更改的特定项创建编辑范围。</span><span class="sxs-lookup"><span data-stu-id="3085b-136">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (description As String, shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit (description, shouldApplyChangesImmediately)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="3085b-137">更改的可选说明。</span><span class="sxs-lookup"><span data-stu-id="3085b-137">An optional description of the change.</span></span> <span data-ttu-id="3085b-138">这将设置到编辑范围的 <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> 属性中。</span><span class="sxs-lookup"><span data-stu-id="3085b-138">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span></span></param>
        <param name="shouldApplyChangesImmediately"><span data-ttu-id="3085b-139">如果指示应立即应用更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-139"><see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3085b-140">打开设计器的编辑范围。</span><span class="sxs-lookup"><span data-stu-id="3085b-140">Opens an editing scope for the designer.</span></span></summary>
        <returns><span data-ttu-id="3085b-141">必须完成或还原的 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-141">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Content" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Content As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Content { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-142">获取项的 <see langword="ContentPropertyAttribute" /> 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-142">Gets the <see langword="ContentPropertyAttribute" /> of the item, or <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="3085b-143">项的 <see langword="ContentPropertyAttribute" /> 作为 <see cref="T:System.Activities.Presentation.Model.ModelProperty" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-143">The <see langword="ContentPropertyAttribute" /> of the item as a <see cref="T:System.Activities.Presentation.Model.ModelProperty" />.</span></span> <span data-ttu-id="3085b-144">如果 <see langword="ContentPropertyAttribute" /> 不由此项的 <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> 声明，则 <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> 返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-144">If the <see langword="ContentPropertyAttribute" /> is not declared by the <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> of this item, <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public abstract object GetCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.GetCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCurrentValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetCurrentValue();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValue : unit -&gt; obj" Usage="modelItem.GetCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3085b-145">返回 <see cref="T:System.Activities.Presentation.Model.ModelItem" /> 所包装的基础模型对象的当前值。</span><span class="sxs-lookup"><span data-stu-id="3085b-145">Returns the current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping.</span></span></summary>
        <returns><span data-ttu-id="3085b-146"><see cref="T:System.Activities.Presentation.Model.ModelItem" /> 作为 <see cref="T:System.Object" /> 所包装的基础模型对象的当前值。</span><span class="sxs-lookup"><span data-stu-id="3085b-146">The current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping as an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3085b-147">您可以检查此对象，但不应对其进行任何更改。</span><span class="sxs-lookup"><span data-stu-id="3085b-147">You can inspect this object, but you should not make any changes to it.</span></span> <span data-ttu-id="3085b-148">对返回的对象进行的更改将不会合并到设计器中。</span><span class="sxs-lookup"><span data-stu-id="3085b-148">Changes made to the object returned will not be incorporated into the designer.</span></span> <span data-ttu-id="3085b-149"><xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> 方法可返回对象的现有实例或新的克隆实例。</span><span class="sxs-lookup"><span data-stu-id="3085b-149">The <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method can return either an existing or new cloned instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-150">获取返回项所表示的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="3085b-150">Gets the type of object that the item represents.</span></span></summary>
        <value><span data-ttu-id="3085b-151">返回项所表示的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="3085b-151">The type of object that the item represents.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-152">获取或设置项的名称或 ID 。</span><span class="sxs-lookup"><span data-stu-id="3085b-152">Gets or sets the name or ID of the item.</span></span></summary>
        <value><span data-ttu-id="3085b-153">为 <see cref="T:System.String" /> 的类的名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="3085b-153">The name or ID of the item as a <see cref="T:System.String" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3085b-154">并非所有项都需要具有名称，因此这可能会返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="3085b-154">Not all items need to have names, so this might return `null`.</span></span> <span data-ttu-id="3085b-155">根据项的类型以及它在层次结构中所处的位置，在项上设置 <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> 可能并非总是合法的。</span><span class="sxs-lookup"><span data-stu-id="3085b-155">Depending on the type of item and where it sits in the hierarchy, it might not always be legal to set the <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> on an item.</span></span> <span data-ttu-id="3085b-156">如果 <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> 此项的被声明为 `RuntimeNamePropertyAttribute` ，则  <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> 属性是指向该属性所指示的属性的直接映射。</span><span class="sxs-lookup"><span data-stu-id="3085b-156">If the <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> of this item declares a `RuntimeNamePropertyAttribute`, the  <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> property is a direct mapping to the property dictated by that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Parent" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parent As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Parent { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-157">获取返回作为此项的父级的项。</span><span class="sxs-lookup"><span data-stu-id="3085b-157">Gets the item that is the parent of this item.</span></span></summary>
        <value><span data-ttu-id="3085b-158">一个表示此项的父级的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-158">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the parent of this item.</span></span> <span data-ttu-id="3085b-159">如果项包含在集合或字典中，则改为返回拥有该集合或字典的对象。</span><span class="sxs-lookup"><span data-stu-id="3085b-159">If an item is contained in a collection or dictionary, the object that owns the collection or dictionary is returned instead.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parents">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Parents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Parents" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parents As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Parents { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parents : seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-160">获取此项的所有父级。</span><span class="sxs-lookup"><span data-stu-id="3085b-160">Gets all parents of this item.</span></span></summary>
        <value><span data-ttu-id="3085b-161">此项的父级。</span><span class="sxs-lookup"><span data-stu-id="3085b-161">The parents of this item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As ModelPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelPropertyCollection ^ Properties { System::Activities::Presentation::Model::ModelPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Activities.Presentation.Model.ModelPropertyCollection" Usage="System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-162">设置此项上的公共属性。</span><span class="sxs-lookup"><span data-stu-id="3085b-162">Gets the public properties on this item.</span></span></summary>
        <value><span data-ttu-id="3085b-163">包含此项的公共属性的 <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-163">A <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> that contains the public properties of this item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3085b-164">根据附加的属性或对编辑范围的更改，返回的属性集可能会发生更改。</span><span class="sxs-lookup"><span data-stu-id="3085b-164">The set of properties returned might change based on attached properties or changes to the editing scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public abstract event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItem.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Custom Event PropertyChanged As PropertyChangedEventHandler " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event PropertyChanged As PropertyChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-165">实现 <see langword="INotifyPropertyChanged" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-165">Implements <see langword="INotifyPropertyChanged" />.</span></span> <span data-ttu-id="3085b-166">使用此事件来侦听对模型所做的更改。</span><span class="sxs-lookup"><span data-stu-id="3085b-166">Use this event to listen for changes to the model.</span></span> <span data-ttu-id="3085b-167">WPF 的数据绑定功能也使用此事件。</span><span class="sxs-lookup"><span data-stu-id="3085b-167">This is also used by the data binding features of WPF.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3085b-168">完成这些事件后，将它们与项断开连接。</span><span class="sxs-lookup"><span data-stu-id="3085b-168">Disconnect events from items when you are finished with them.</span></span> <span data-ttu-id="3085b-169">否则，可能会使垃圾回收器无法释放不再使用的项。</span><span class="sxs-lookup"><span data-stu-id="3085b-169">Otherwise, you might prevent the garbage collector from disposing of an item that is no longer in use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-170">获取返回作为此树的根的项。</span><span class="sxs-lookup"><span data-stu-id="3085b-170">Gets the item that is the root of this tree.</span></span></summary>
        <value><span data-ttu-id="3085b-171">一个作为此树的根的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />；或者，如果此项不是树的一部分，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-171">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the root of this tree, or <see langword="null" /> if this item is not part of a tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Source" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Source { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-172">获取提供此值的属性。</span><span class="sxs-lookup"><span data-stu-id="3085b-172">Gets the property that provided this value.</span></span></summary>
        <value><span data-ttu-id="3085b-173">指示此值的源的 <see cref="T:System.Activities.Presentation.Model.ModelProperty" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-173">A <see cref="T:System.Activities.Presentation.Model.ModelProperty" /> that indicates the source of this value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3085b-174">如果项表示对象图的根，则返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="3085b-174">If the item represents the root of the object graph, this will return `null`.</span></span> <span data-ttu-id="3085b-175">如果项是集合或字典的成员，则从 Source 返回的属性将是由该集合或字典提供的伪属性。</span><span class="sxs-lookup"><span data-stu-id="3085b-175">If an item is a member of a collection or dictionary, the property returned from Source will be a pseudo-property provided by the collection or dictionary.</span></span> <span data-ttu-id="3085b-176">对于其他值，Source 属性返回在其中实际设置值的属性。</span><span class="sxs-lookup"><span data-stu-id="3085b-176">For other values, the Source property returns the property where the value was actually set.</span></span> <span data-ttu-id="3085b-177">因此，如果某个值正在被继承，则 Source 允许您找出谁最初提供了该值。</span><span class="sxs-lookup"><span data-stu-id="3085b-177">Therefore, if a value is being inherited, Source allows you to find out who originally provided the value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt; Sources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelProperty&gt; Sources" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Sources As IEnumerable(Of ModelProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ Sources { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sources : seq&lt;System.Activities.Presentation.Model.ModelProperty&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-178">获取保存此值的所有属性。</span><span class="sxs-lookup"><span data-stu-id="3085b-178">Gets all the properties that hold this value.</span></span></summary>
        <value><span data-ttu-id="3085b-179">此值的源。</span><span class="sxs-lookup"><span data-stu-id="3085b-179">The sources of this value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="modelItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3085b-180">返回此模型项中包含的基础模型对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3085b-180">Returns a string representation of the underlying model object contained in this model item.</span></span></summary>
        <returns><span data-ttu-id="3085b-181">此模型项中包含的基础模型对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3085b-181">A string representation of the underlying model object contained in this model item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public abstract System.Windows.DependencyObject View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject View" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.View" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property View As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::DependencyObject ^ View { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.DependencyObject" Usage="System.Activities.Presentation.Model.ModelItem.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3085b-182">获取以图形方式表示此项的 <see cref="T:System.Windows.DependencyObject" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-182">Gets a <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item.</span></span></summary>
        <value><span data-ttu-id="3085b-183">以图形方式表示此项的 <see cref="T:System.Windows.DependencyObject" />，或者，如果没有此类表示形式，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3085b-183">A <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item, or <see langword="null" /> if there is no such representation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
