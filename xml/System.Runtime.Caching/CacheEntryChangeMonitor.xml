<Type Name="CacheEntryChangeMonitor" FullName="System.Runtime.Caching.CacheEntryChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0a3d06abe1311fff0d337ebb230c32aece57104" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86771618" /></Metadata><TypeSignature Language="C#" Value="public abstract class CacheEntryChangeMonitor : System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CacheEntryChangeMonitor extends System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.CacheEntryChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CacheEntryChangeMonitor&#xA;Inherits ChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheEntryChangeMonitor abstract : System::Runtime::Caching::ChangeMonitor" />
  <TypeSignature Language="F#" Value="type CacheEntryChangeMonitor = class&#xA;    inherit ChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.ChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供表示 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 类型的基类，可通过实现此类型来监视对缓存项的更改。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.CacheEntryChangeMonitor>类提供可实现的抽象属性，这些属性可用于监视缓存条目。 当缓存实现必须监视其自己的缓存中的项更改时，将使用此类。 对于作为 <xref:System.Runtime.Caching.ObjectCache> 缓存实现的缓存， <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 方法返回类型的实例 <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>有关必须遵循的继承约定的信息，请参阅类概述中的继承者的信息 <see cref="T:System.Runtime.Caching.ChangeMonitor" /> 。</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheEntryChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.CacheEntryChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CacheEntryChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 类的新实例。 从派生类中的构造函数调用此构造函数以初始化基类。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.CacheEntryChangeMonitor>类具有无参数的构造函数。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生类的构造函数必须在 <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> 构造函数返回之前设置属性、开始监视和调用。 如果在初始化完成之前依赖项发生了更改 (例如，如果缓存) 中找不到依赖缓存键，则构造函数必须调用 <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> 方法。 构造函数只能 <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> 在调用后调用方法 <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> ，因为 <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> 如果初始化未完成，则会引发异常。</para></block>
      </Docs>
    </Member>
    <Member MemberName="CacheKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; CacheKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; CacheKeys" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheEntryChangeMonitor.CacheKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CacheKeys As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ CacheKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Runtime.Caching.CacheEntryChangeMonitor.CacheKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要监视其是否发生更改的缓存键集合。</summary>
        <value>缓存键的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 集合通常在派生类型的构造函数中进行设置 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public abstract DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheEntryChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTimeOffset" Usage="System.Runtime.Caching.CacheEntryChangeMonitor.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示所监视缓存项的最近更改时间（用 UTC 时间表示）。</summary>
        <value>运行时间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果监视多个缓存条目的更改，则 <xref:System.Runtime.Caching.CacheEntryChangeMonitor.LastModified%2A> 属性将返回在任何缓存条目中发生修改的最晚时间。  
  
 通常，在 <xref:System.Runtime.Caching.CacheEntryChangeMonitor.LastModified%2A> 派生类的初始化过程中计算属性的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionName">
      <MemberSignature Language="C#" Value="public abstract string RegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheEntryChangeMonitor.RegionName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ RegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegionName : string" Usage="System.Runtime.Caching.CacheEntryChangeMonitor.RegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取缓存中的某个区域的名称。</summary>
        <value>缓存中的某个区域的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值通常指示在缓存中监视更改的特定区域。 <xref:System.Runtime.Caching.CacheEntryChangeMonitor.RegionName%2A>属性提供了配置更改监视器的选项，使其仅监视特定缓存区域中的缓存条目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
