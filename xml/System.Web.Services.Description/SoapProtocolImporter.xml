<Type Name="SoapProtocolImporter" FullName="System.Web.Services.Description.SoapProtocolImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4057e6c9356396bbdaefb386938a13c4fe22888" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69049335" /></Metadata><TypeSignature Language="C#" Value="public class SoapProtocolImporter : System.Web.Services.Description.ProtocolImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapProtocolImporter extends System.Web.Services.Description.ProtocolImporter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapProtocolImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapProtocolImporter&#xA;Inherits ProtocolImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapProtocolImporter : System::Web::Services::Description::ProtocolImporter" />
  <TypeSignature Language="F#" Value="type SoapProtocolImporter = class&#xA;    inherit ProtocolImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Description.ProtocolImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为使用 SOAP 协议的 Web 服务生成类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类根据 SOAP 协议生成客户端代理代码或抽象服务器代码。 类为 Web 服务描述语言（WSDL）文档中定义的每个受支持的绑定生成类。  
  
 通常，开发人员无需直接调用，而是 <xref:System.Web.Services.Description.SoapProtocolImporter> 通过类间接使用该类 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapProtocolImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapProtocolImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginClass">
      <MemberSignature Language="C#" Value="protected override System.CodeDom.CodeTypeDeclaration BeginClass ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.CodeDom.CodeTypeDeclaration BeginClass() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.BeginClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BeginClass () As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::CodeDom::CodeTypeDeclaration ^ BeginClass();" />
      <MemberSignature Language="F#" Value="override this.BeginClass : unit -&gt; System.CodeDom.CodeTypeDeclaration" Usage="soapProtocolImporter.BeginClass " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化绑定类的生成。</summary>
        <returns>绑定类。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在为给定绑定生成类的过程中，方法将在 <xref:System.Web.Services.Description.SoapProtocolImporter.BeginClass%2A> <xref:System.Web.Services.Description.SoapProtocolImporter> 类生成对应于操作的方法之前执行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginNamespace">
      <MemberSignature Language="C#" Value="protected override void BeginNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.BeginNamespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BeginNamespace();" />
      <MemberSignature Language="F#" Value="override this.BeginNamespace : unit -&gt; unit" Usage="soapProtocolImporter.BeginNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在代码生成过程中对整个代码命名空间执行初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在代码生成过程中， <xref:System.Web.Services.Description.SoapProtocolImporter.BeginNamespace%2A> 方法在 <xref:System.Web.Services.Description.SoapProtocolImporter> 生成表示绑定的类之前执行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClass">
      <MemberSignature Language="C#" Value="protected override void EndClass ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndClass() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.EndClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndClass ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EndClass();" />
      <MemberSignature Language="F#" Value="override this.EndClass : unit -&gt; unit" Usage="soapProtocolImporter.EndClass " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在生成方法后处理绑定类。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在为给定绑定生成类的过程中，该 <xref:System.Web.Services.Description.SoapProtocolImporter.EndClass%2A> 方法在 <xref:System.Web.Services.Description.SoapProtocolImporter> 类生成对应于操作的方法之后执行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndNamespace">
      <MemberSignature Language="C#" Value="protected override void EndNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.EndNamespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EndNamespace();" />
      <MemberSignature Language="F#" Value="override this.EndNamespace : unit -&gt; unit" Usage="soapProtocolImporter.EndNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在生成绑定类后对整个代码命名空间执行处理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在代码生成过程中， <xref:System.Web.Services.Description.SoapProtocolImporter.EndNamespace%2A> 方法在 <xref:System.Web.Services.Description.SoapProtocolImporter> 类生成表示绑定的类后执行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMethod">
      <MemberSignature Language="C#" Value="protected override System.CodeDom.CodeMemberMethod GenerateMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.CodeDom.CodeMemberMethod GenerateMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.GenerateMethod" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateMethod () As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::CodeDom::CodeMemberMethod ^ GenerateMethod();" />
      <MemberSignature Language="F#" Value="override this.GenerateMethod : unit -&gt; System.CodeDom.CodeMemberMethod" Usage="soapProtocolImporter.GenerateMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为绑定类生成方法代码。</summary>
        <returns>绑定类的方法代码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在为给定绑定生成类的过程中，将 <xref:System.Web.Services.Description.SoapProtocolImporter.GenerateMethod%2A> 为表示操作的每个绑定类方法执行此方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSupported">
      <MemberSignature Language="C#" Value="protected override bool IsBindingSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsBindingSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsBindingSupported" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsBindingSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsBindingSupported();" />
      <MemberSignature Language="F#" Value="override this.IsBindingSupported : unit -&gt; bool" Usage="soapProtocolImporter.IsBindingSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定是否可为当前绑定生成类。</summary>
        <returns>如果可为当前绑定生成类，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter.IsBindingSupported%2A>方法确定是否为当前绑定生成类（由属性表示） <xref:System.Web.Services.Description.ProtocolImporter.Binding%2A> 。 方法检查 <xref:System.Web.Services.Description.ProtocolImporter.Binding%2A> 属性的 <xref:System.Web.Services.Description.Binding.Extensions%2A> 属性是否包含一个 <xref:System.Web.Services.Description.SoapBinding> 实例。 此外， <xref:System.Web.Services.Description.SoapBinding.Transport%2A> 当前 Web 服务配置必须支持通过属性获取的传输机制。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOperationFlowSupported">
      <MemberSignature Language="C#" Value="protected override bool IsOperationFlowSupported (System.Web.Services.Description.OperationFlow flow);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsOperationFlowSupported(valuetype System.Web.Services.Description.OperationFlow flow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsOperationFlowSupported(System.Web.Services.Description.OperationFlow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsOperationFlowSupported (flow As OperationFlow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsOperationFlowSupported(System::Web::Services::Description::OperationFlow flow);" />
      <MemberSignature Language="F#" Value="override this.IsOperationFlowSupported : System.Web.Services.Description.OperationFlow -&gt; bool" Usage="soapProtocolImporter.IsOperationFlowSupported flow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flow" Type="System.Web.Services.Description.OperationFlow" />
      </Parameters>
      <Docs>
        <param name="flow">表示传输模式的 <see cref="T:System.Web.Services.Description.OperationFlow" /> 枚举值。</param>
        <summary>确定当前操作的操作流是否受支持。</summary>
        <returns>如果当前操作的操作流受支持，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter.IsOperationFlowSupported%2A>方法确定是否为当前操作生成一个方法，该方法由 <xref:System.Web.Services.Description.Operation> 属性表示。 对于正在为其生成类的绑定中的每个操作，都将发生此计算。 如果 `false` 返回值，则 <xref:System.Web.Services.Description.ProtocolImporter.UnsupportedOperationWarning%2A> 执行方法。 `true`仅当输入值为或时，才返回 <xref:System.Web.Services.Description.OperationFlow.OneWay> 值 <xref:System.Web.Services.Description.OperationFlow.RequestResponse> 。  
  
 有关更多信息，请参见 <xref:System.Web.Services.Description.OperationMessageCollection.Flow%2A> 属性。 <xref:System.Web.Services.Description.Operation.Messages%2A> 属性为 <xref:System.Web.Services.Description.OperationMessageCollection> 类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoapEncodingPresent">
      <MemberSignature Language="C#" Value="protected virtual bool IsSoapEncodingPresent (string uriList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSoapEncodingPresent(string uriList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsSoapEncodingPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsSoapEncodingPresent (uriList As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsSoapEncodingPresent(System::String ^ uriList);" />
      <MemberSignature Language="F#" Value="abstract member IsSoapEncodingPresent : string -&gt; bool&#xA;override this.IsSoapEncodingPresent : string -&gt; bool" Usage="soapProtocolImporter.IsSoapEncodingPresent uriList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriList">由空格分隔的 URI 列表。</param>
        <summary>检查表示统一资源标识符 (URI) 列表的字符串中是否存在“http://schemas.xmlsoap.org/soap/encoding/”。</summary>
        <returns>如果字符串包含“http://schemas.xmlsoap.org/soap/encoding/”，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolName">
      <MemberSignature Language="C#" Value="public override string ProtocolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProtocolName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.ProtocolName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ProtocolName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProtocolName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolName : string" Usage="System.Web.Services.Description.SoapProtocolImporter.ProtocolName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取值“Soap”。</summary>
        <value>一个包含字符串“Soap”的 <see cref="T:System.String" /> 对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapBinding">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBinding SoapBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.SoapBinding SoapBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapBinding As SoapBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBinding ^ SoapBinding { System::Web::Services::Description::SoapBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapBinding : System.Web.Services.Description.SoapBinding" Usage="System.Web.Services.Description.SoapProtocolImporter.SoapBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取通过 <see cref="T:System.Web.Services.Description.SoapBinding" /> 属性的 <see cref="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" /> 属性获取的 <see cref="P:System.Web.Services.Description.Binding.Extensions" /> 实例。</summary>
        <value>通过 <see cref="T:System.Web.Services.Description.SoapBinding" /> 属性的 <see cref="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" /> 属性获取的 <see cref="P:System.Web.Services.Description.Binding.Extensions" /> 实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapExporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapCodeExporter SoapExporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapCodeExporter SoapExporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapExporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapExporter As SoapCodeExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapCodeExporter ^ SoapExporter { System::Xml::Serialization::SoapCodeExporter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapExporter : System.Xml.Serialization.SoapCodeExporter" Usage="System.Web.Services.Description.SoapProtocolImporter.SoapExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapCodeExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取类型为 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以根据 SOAP 编码的 XML 架构内容和 .NET Framework 类型之间的映射生成代码。</summary>
        <value>类型为 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以根据 SOAP 编码的 XML 架构内容和 .NET Framework 类型之间的映射生成代码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类使用 <xref:System.Xml.Serialization.SoapCodeExporter> 对象来创建 XML 架构元素 .NET Framework 类型映射中的代码和启用 SOAP 编码的数据类型，而不是文本 XML 架构使用。 Soap 编码是在 SOAP 1.1 规范的第5节中指定的。 SOAP 编码使用命名空间 " <http://schemas.xmlsoap.org/soap/encoding/> "。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapImporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapSchemaImporter SoapImporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapSchemaImporter SoapImporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapImporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapImporter As SoapSchemaImporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapSchemaImporter ^ SoapImporter { System::Xml::Serialization::SoapSchemaImporter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapImporter : System.Xml.Serialization.SoapSchemaImporter" Usage="System.Web.Services.Description.SoapProtocolImporter.SoapImporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapSchemaImporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取类型为 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以在 SOAP 编码的 XML 架构内容和 .NET Framework 类型之间生成映射。</summary>
        <value>类型为 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以在 SOAP 编码的 XML 架构内容和 .NET Framework 类型之间生成映射。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类使用 <xref:System.Xml.Serialization.SoapSchemaImporter> 对象创建 XML 架构元素的 .NET Framework 类型映射和启用 SOAP 编码的数据类型，而不是文本 XML 架构使用。 Soap 编码是在 SOAP 1.1 规范的第5节中指定的。 SOAP 编码使用命名空间 " <http://schemas.xmlsoap.org/soap/encoding/> "。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlExporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlCodeExporter XmlExporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlCodeExporter XmlExporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.XmlExporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlExporter As XmlCodeExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlCodeExporter ^ XmlExporter { System::Xml::Serialization::XmlCodeExporter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlExporter : System.Xml.Serialization.XmlCodeExporter" Usage="System.Web.Services.Description.SoapProtocolImporter.XmlExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlCodeExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取类型为 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以根据文本 XML 架构内容和 .NET Framework 类型之间的映射生成代码。</summary>
        <value>类型为 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以根据文本 XML 架构内容和 .NET Framework 类型之间的映射生成代码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类使用 <xref:System.Xml.Serialization.XmlSchemaImporter> 对象创建 xml 架构元素的 .NET Framework 类型映射和需要文本 xml 架构使用的数据类型，而不是 SOAP 编码。 Soap 编码是在 SOAP 1.1 规范的第5节中指定的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlSchemaImporter XmlImporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlSchemaImporter XmlImporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.XmlImporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlImporter As XmlSchemaImporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlSchemaImporter ^ XmlImporter { System::Xml::Serialization::XmlSchemaImporter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlImporter : System.Xml.Serialization.XmlSchemaImporter" Usage="System.Web.Services.Description.SoapProtocolImporter.XmlImporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSchemaImporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取类型为 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以在文本 XML 架构内容和 .NET Framework 类型之间生成映射。</summary>
        <value>类型为 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象，以在文本 XML 架构内容和 .NET Framework 类型之间生成映射。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类使用 <xref:System.Xml.Serialization.XmlSchemaImporter> 对象从 xml 架构元素的 .NET Framework 类型映射和需要文本 xml 架构使用的数据类型（而不是 SOAP 编码）创建代码。 Soap 编码是在 SOAP 1.1 规范的第5节中指定的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
