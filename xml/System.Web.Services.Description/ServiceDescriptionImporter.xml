<Type Name="ServiceDescriptionImporter" FullName="System.Web.Services.Description.ServiceDescriptionImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d2b88fd8e945ff590fdcb14c52a3b3b655aeee8b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86677701" /></Metadata><TypeSignature Language="C#" Value="public class ServiceDescriptionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceDescriptionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.ServiceDescriptionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceDescriptionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDescriptionImporter" />
  <TypeSignature Language="F#" Value="type ServiceDescriptionImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>公开一种为 XML Web services 生成客户端代理类的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web service 的接口通常由 Web 服务描述语言 (WSDL) 文件描述。 例如，若要使用公开的 ASP.NET 获取 Web 服务的 WSDL 说明 `http://localhost/service.asmx` ，只需导航到 `http://localhost/service.asmx?WSDL` 。  
  
 <xref:System.Web.Services.Description.ServiceDescriptionImporter>类使你可以轻松地将 WSDL 说明中包含的信息导入 <xref:System.CodeDom.CodeCompileUnit?displayProperty=nameWithType> 对象。 通过调整参数的值 <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> ，你可以指示一个 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 实例生成一个客户端代理类，该类通过以透明方式调用它来提供 web 服务的功能，或生成一个抽象类来封装 web 服务的功能，而无需实现它。  
  
 然后，可以直接调用生成对象中的代码， <xref:System.CodeDom.CodeCompileUnit> 也可以采用所选语言进行导出。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 如何使用类生成代理客户端代码，以调用 WSDL 文件描述的 XML Web service。  
  
 [!code-cpp[WebServices_Description_Importer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#0)]
 [!code-csharp[WebServices_Description_Importer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDescriptionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.ServiceDescriptionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceDescriptionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用此构造函数。  
  
 [!code-cpp[WebServices_Description_Importer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#1)]
 [!code-csharp[WebServices_Description_Importer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServiceDescription">
      <MemberSignature Language="C#" Value="public void AddServiceDescription (System.Web.Services.Description.ServiceDescription serviceDescription, string appSettingUrlKey, string appSettingBaseUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddServiceDescription(class System.Web.Services.Description.ServiceDescription serviceDescription, string appSettingUrlKey, string appSettingBaseUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.ServiceDescriptionImporter.AddServiceDescription(System.Web.Services.Description.ServiceDescription,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddServiceDescription (serviceDescription As ServiceDescription, appSettingUrlKey As String, appSettingBaseUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddServiceDescription(System::Web::Services::Description::ServiceDescription ^ serviceDescription, System::String ^ appSettingUrlKey, System::String ^ appSettingBaseUrl);" />
      <MemberSignature Language="F#" Value="member this.AddServiceDescription : System.Web.Services.Description.ServiceDescription * string * string -&gt; unit" Usage="serviceDescriptionImporter.AddServiceDescription (serviceDescription, appSettingUrlKey, appSettingBaseUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.Web.Services.Description.ServiceDescription" />
        <Parameter Name="appSettingUrlKey" Type="System.String" />
        <Parameter Name="appSettingBaseUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">要添加到集合的 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 实例。</param>
        <param name="appSettingUrlKey">将代理类的 <see langword="Url" /> 属性的初始值设置为从 <paramref name="serviceDescription" /> 参数所表示的实例生成。 指定它应该从 web.config 文件的 <see langword="&lt;appsetting&gt;" /> 节生成。</param>
        <param name="appSettingBaseUrl">将代理类的 <see langword="Url" /> 属性的初始值设置为从 <paramref name="serviceDescription" /> 参数所表示的实例生成。 指定它应该通过该参数的值和由 WSDL 文档中的 <see langword="location" /> 特性指定的 URL 的组合来构造。</param>
        <summary>将指定的 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 添加到要导入的 <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> 值的集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可将 <xref:System.Web.Services.Description.ServiceDescription> 实例添加到要在调用方法时导入的集合中 <xref:System.Web.Services.Description.ServiceDescriptionImporter.Import%2A> 。  
  
 两个字符串参数（ `appSettingUrlKey` 和 `appSettingBaseUrl` ）指定如何构造 `Url` 要从导入的值生成的 XML Web service 代理的属性 <xref:System.Web.Services.Description.ServiceDescription> 。 `appSettingUrlKey`参数指定 `Url` 应 `<appsettings>` 使用参数值作为配置项，从 web.config 文件的节中读取属性。 如果 `appSettingUrlKey` 参数为 `null` 或空字符串，则初始值由 `location` Web 服务描述语言 (WSDL) 文档中的属性确定。 如果的值 <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> 为 `Server` ，则在您尝试设置参数的值时，将引发错误 `appSettingUrlKey` 。  
  
 `appSettingBaseUrl`参数指定 `Url` 应从此参数值和由 WSDL 文档中的特性指定的 URL 的组合构造属性的初始值 `location` 。 `appSettingUrlKey`还必须指定参数。 该 `Url` 属性是通过将从参数构造的相对 url `appSettingBaseUrl` 与 WSDL 指定的 url 进行组合 (构造的，) 使用从 web.config 文件加载的 url 来构造的。 如果此参数为 `null` 或空字符串，则从 web.config 文件中的值完全构造 URL。  
  
   
  
## Examples  
 下面的示例演示如何在 <xref:System.Web.Services.Description.ServiceDescriptionImporter.AddServiceDescription%2A> 使用类时使用方法 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 。  
  
 [!code-cpp[WebServices_Description_Importer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#1)]
 [!code-csharp[WebServices_Description_Importer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeGenerationOptions">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.CodeGenerationOptions CodeGenerationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Serialization.CodeGenerationOptions CodeGenerationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeGenerationOptions As CodeGenerationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::CodeGenerationOptions CodeGenerationOptions { System::Xml::Serialization::CodeGenerationOptions get(); void set(System::Xml::Serialization::CodeGenerationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.CodeGenerationOptions : System.Xml.Serialization.CodeGenerationOptions with get, set" Usage="System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.CodeGenerationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于代码生成的各种选项。</summary>
        <value><see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> 枚举的成员或成员组合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerationOptions%2A>属性允许您指定在 <xref:System.Web.Services.Description.ServiceDescriptionImporter.Import%2A> 调用方法生成代码时使用的各种选项。 例如，你可以指定是否将 WSDL 中描述的简单类型生成为值类型或 <xref:System.Data.SqlTypes> 命名空间类型，以及是否将它们生成为属性或字段。  
  
   
  
## Examples  
 下面的示例演示属性的用法 <xref:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerationOptions%2A> 。  
  
 [!code-cpp[WebServices_Description_Importer#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#4)]
 [!code-csharp[WebServices_Description_Importer#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeGenerator">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeGenerator As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeGenerator { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CodeGenerator : System.CodeDom.Compiler.CodeDomProvider with get, set" Usage="System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置服务说明导入程序使用的代码生成器。</summary>
        <value>服务说明导入程序用来生成代理代码的 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 接口。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateWebReferences">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GenerateWebReferences (System.Web.Services.Description.WebReferenceCollection webReferences, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Web.Services.Description.WebReferenceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GenerateWebReferences(class System.Web.Services.Description.WebReferenceCollection webReferences, class System.CodeDom.Compiler.CodeDomProvider codeProvider, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.Web.Services.Description.WebReferenceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.ServiceDescriptionImporter.GenerateWebReferences(System.Web.Services.Description.WebReferenceCollection,System.CodeDom.Compiler.CodeDomProvider,System.CodeDom.CodeCompileUnit,System.Web.Services.Description.WebReferenceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateWebReferences (webReferences As WebReferenceCollection, codeProvider As CodeDomProvider, codeCompileUnit As CodeCompileUnit, options As WebReferenceOptions) As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GenerateWebReferences(System::Web::Services::Description::WebReferenceCollection ^ webReferences, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Web::Services::Description::WebReferenceOptions ^ options);" />
      <MemberSignature Language="F#" Value="static member GenerateWebReferences : System.Web.Services.Description.WebReferenceCollection * System.CodeDom.Compiler.CodeDomProvider * System.CodeDom.CodeCompileUnit * System.Web.Services.Description.WebReferenceOptions -&gt; System.Collections.Specialized.StringCollection" Usage="System.Web.Services.Description.ServiceDescriptionImporter.GenerateWebReferences (webReferences, codeProvider, codeCompileUnit, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webReferences" Type="System.Web.Services.Description.WebReferenceCollection" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="options" Type="System.Web.Services.Description.WebReferenceOptions" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="webReferences">要编译的 Web 引用的 <see cref="T:System.Web.Services.Description.WebReferenceCollection" />。</param>
        <param name="codeProvider">指定代码提供程序的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
        <param name="codeCompileUnit"><see cref="T:System.CodeDom.CodeCompileUnit" />，指定代码要编译进的单元。</param>
        <param name="options">指定代码生成选项的 <see cref="T:System.Web.Services.Description.WebReferenceOptions" />。</param>
        <summary>编译 Web 引用的集合，以生成客户端代理或服务器存根。</summary>
        <returns>编译器警告的 <see cref="T:System.Collections.Specialized.StringCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 集合中每个成员的服务说明文档集合 <xref:System.Web.Services.Description.WebReference> `webReferences` 应该只包含 <xref:System.Web.Services.Description.ServiceDescription> 和 <xref:System.Xml.Schema.XmlSchema> 对象。 此方法无法解释 <xref:System.Web.Services.Discovery.DiscoveryDocument> 对象。  
  
 如果集合中的任何 XML Web service 方法 `webReferences` 共享自定义参数或返回类型，则这些类型也会在生成的代理方法中共享。 这对于单独编译每个代理的情况非常重要，因为在这种情况下，此类类型不能进行互操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionImportWarnings Import (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.Services.Description.ServiceDescriptionImportWarnings Import(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (codeNamespace As CodeNamespace, codeCompileUnit As CodeCompileUnit) As ServiceDescriptionImportWarnings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Services::Description::ServiceDescriptionImportWarnings Import(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberSignature Language="F#" Value="member this.Import : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit -&gt; System.Web.Services.Description.ServiceDescriptionImportWarnings" Usage="serviceDescriptionImporter.Import (codeNamespace, codeCompileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionImportWarnings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="codeNamespace"><see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> 值导入到的命名空间。</param>
        <param name="codeCompileUnit">在其中生成表示 <see cref="T:System.CodeDom.CodeCompileUnit" /> 值的代码的 <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> 实例。</param>
        <summary>导入指定的 <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> 值，并将按照 <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.Style" /> 属性的指定来生成代码。</summary>
        <returns>说明所发生的任何错误的 <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> 值；如果未发生任何错误，则为 0。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定要导入的<xref:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions%2A>值和要生成的代码的<xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A>属性后，调用<xref:System.Web.Services.Description.Import>方法以启动代码生成。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Web.Services.Description.Import> 方法的用法。  
  
 [!code-cpp[WebServices_Description_Importer#5](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#5)]
 [!code-csharp[WebServices_Description_Importer#5](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolName">
      <MemberSignature Language="C#" Value="public string ProtocolName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProtocolName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.ProtocolName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtocolName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProtocolName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolName : string with get, set" Usage="System.Web.Services.Description.ServiceDescriptionImporter.ProtocolName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于访问所说明的 XML Web services 的协议。</summary>
        <value><see cref="T:System.String" />，其中包含要导入的协议的不区分大小写的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的允许值为：  
  
-   Soap  
  
-   "Soap12"  
  
-   HttpPost  
  
-   HttpGet  
  
-   HttpSoap  
  
 默认值为 "Soap"，表示 SOAP 1.1 标准。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Web.Services.Description.ServiceDescriptionImporter.ProtocolName%2A> 使用类时属性的用法 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 。  
  
 [!code-cpp[WebServices_Description_Importer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#1)]
 [!code-csharp[WebServices_Description_Importer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlSchemas ^ Schemas { System::Xml::Serialization::XmlSchemas ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Serialization.XmlSchemas" Usage="System.Web.Services.Description.ServiceDescriptionImporter.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由其 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 属性使用的 <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" />。</summary>
        <value>一个 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 对象，其中包含 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 集合中的 <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> 实例所使用的 XML 架构。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示属性的用法 <xref:System.Web.Services.Description.ServiceDescriptionImporter.Schemas%2A> 。  
  
 [!code-cpp[WebServices_Description_Importer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#2)]
 [!code-csharp[WebServices_Description_Importer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceDescriptions">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection ServiceDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection ServiceDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceDescriptions As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ ServiceDescriptions { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceDescriptions : System.Web.Services.Description.ServiceDescriptionCollection" Usage="System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要导入的 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 实例的集合。</summary>
        <value>一个 <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> 实例，其中包含要由 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 实例导入的 <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> 实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与形成只读属性的任何集合一样，可以将成员添加到集合中，将其从集合中移除，或使用由集合公开的方法进行修改。 你还可以使用 <xref:System.Web.Services.Description.ServiceDescriptionImporter.AddServiceDescription%2A> 方法将成员添加到此集合。  
  
   
  
## Examples  
 下面的示例演示属性的用法 <xref:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions%2A> 。  
  
 [!code-cpp[WebServices_Description_Importer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#2)]
 [!code-csharp[WebServices_Description_Importer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionImportStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Description.ServiceDescriptionImportStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.ServiceDescriptionImporter.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As ServiceDescriptionImportStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionImportStyle Style { System::Web::Services::Description::ServiceDescriptionImportStyle get(); void set(System::Web::Services::Description::ServiceDescriptionImportStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Web.Services.Description.ServiceDescriptionImportStyle with get, set" Usage="System.Web.Services.Description.ServiceDescriptionImporter.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionImportStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值确定导入 <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> 值时所生成的代码的样式（客户端或服务器）。</summary>
        <value><see cref="T:System.Web.Services.Description.ServiceDescriptionImportStyle" /> 值之一。 默认为 <see cref="F:System.Web.Services.Description.ServiceDescriptionImportStyle.Client" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> 属性设置为 <xref:System.Web.Services.Description.ServiceDescriptionImportStyle.Client> ，则 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 会生成客户端代理类，这些类通过调用来提供所述 Web 服务的功能。  
  
 如果将 <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> 属性设置为 <xref:System.Web.Services.Description.ServiceDescriptionImportStyle.Server> ，则 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 实例将生成表示所述 XML Web services 的功能的抽象类，而无需实现这些功能。 然后，可以通过编写从这些抽象类继承的类并实现相关方法来实现它们。  
  
   
  
## Examples  
 下面的示例演示属性的用法 <xref:System.Web.Services.Description.ServiceDescriptionImporter.Style%2A> 。  
  
 [!code-cpp[WebServices_Description_Importer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebServices_Description_Importer/CPP/import.cpp#3)]
 [!code-csharp[WebServices_Description_Importer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebServices_Description_Importer/CS/import.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
