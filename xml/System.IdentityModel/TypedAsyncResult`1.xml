<Type Name="TypedAsyncResult&lt;T&gt;" FullName="System.IdentityModel.TypedAsyncResult&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fc40d31a0225b0ac7832aca3cf199abd97467cd" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78701611" /></Metadata><TypeSignature Language="C#" Value="public class TypedAsyncResult&lt;T&gt; : System.IdentityModel.AsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypedAsyncResult`1&lt;T&gt; extends System.IdentityModel.AsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.TypedAsyncResult`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TypedAsyncResult(Of T)&#xA;Inherits AsyncResult" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class TypedAsyncResult : System::IdentityModel::AsyncResult" />
  <TypeSignature Language="F#" Value="type TypedAsyncResult&lt;'T&gt; = class&#xA;    inherit AsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.IdentityModel.AsyncResult</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">结果的类型。</typeparam>
    <summary><see cref="T:System.IdentityModel.AsyncResult" /> 的具体实现将包含结果 <see cref="T:System.Type" />，并在调用 <see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" /> 的方法时将其返回。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.TypedAsyncResult`1" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedAsyncResult (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedAsyncResult(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.TypedAsyncResult&lt;'T&gt; : obj -&gt; System.IdentityModel.TypedAsyncResult&lt;'T&gt;" Usage="new System.IdentityModel.TypedAsyncResult&lt;'T&gt; state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">一个用户定义的对象，限定或包含有关异步操作的信息。</param>
        <summary>初始化 <see cref="T:System.IdentityModel.TypedAsyncResult`1" /> 类的新实例，它包含状态对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你的 <xref:System.IdentityModel.TypedAsyncResult%601> 实例不需要回调委托，则使用此构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedAsyncResult (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As AsyncCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedAsyncResult(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.TypedAsyncResult&lt;'T&gt; : AsyncCallback * obj -&gt; System.IdentityModel.TypedAsyncResult&lt;'T&gt;" Usage="new System.IdentityModel.TypedAsyncResult&lt;'T&gt; (callback, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">异步操作完成时调用的方法。</param>
        <param name="state">一个用户定义的对象，限定或包含有关异步操作的信息。</param>
        <summary>初始化 <see cref="T:System.IdentityModel.TypedAsyncResult`1" /> 类的新实例，它包含回调委托和状态对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Complete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>进行调用以完成异步操作。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (T result, bool completedSynchronously);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete(!T result, bool completedSynchronously) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (result As T, completedSynchronously As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(T result, bool completedSynchronously);" />
      <MemberSignature Language="F#" Value="override this.Complete : 'T * bool -&gt; unit" Usage="typedAsyncResult.Complete (result, completedSynchronously)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" />
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="result">要包装的结果。</param>
        <param name="completedSynchronously">如果异步操作同步完成，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>如果您完成了异步操作，且没有出现异常，请调用完整版本。 它更新操作的状态和通知回调。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (T result, bool completedSynchronously, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete(!T result, bool completedSynchronously, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (result As T, completedSynchronously As Boolean, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(T result, bool completedSynchronously, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.Complete : 'T * bool * Exception -&gt; unit" Usage="typedAsyncResult.Complete (result, completedSynchronously, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" />
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="result">要包装的结果。</param>
        <param name="completedSynchronously">如果异步操作同步完成，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="exception">处理异步操作期期间发生的异常。</param>
        <summary>，如果您在此过程中引发异常，请调用完整版本。 除了通知回调之外，它捕获该异常并存储它，以便在调用 <see cref="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" />  方法时抛出。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public static T End (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !T End(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function End (result As IAsyncResult) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static T End(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member End : IAsyncResult -&gt; 'T" Usage="System.IdentityModel.TypedAsyncResult&lt;'T&gt;.End result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">表示异步操作状态 <see cref="T:System.IAsyncResult" />。</param>
        <summary>End 函数异步操作完成后需调用 End。 它确保异步操作已完成，而且进行常规的验证。</summary>
        <returns>异步操作的类型化结果。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public T Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Result" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.TypedAsyncResult`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Result { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : 'T" Usage="System.IdentityModel.TypedAsyncResult&lt;'T&gt;.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置完成的异步操作的类型化结果。</summary>
        <value>完成的异步操作的类型化结果。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
