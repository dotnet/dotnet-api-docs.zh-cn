<Type Name="Visual3D" FullName="System.Windows.Media.Media3D.Visual3D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3efd143dc1930b0cbb376094c98a7e290a2bc94b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83920746" /></Metadata><TypeSignature Language="C#" Value="public abstract class Visual3D : System.Windows.DependencyObject, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Visual3D extends System.Windows.DependencyObject implements class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Media3D.Visual3D" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Visual3D&#xA;Inherits DependencyObject&#xA;Implements IAnimatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Visual3D abstract : System::Windows::DependencyObject, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type Visual3D = class&#xA;    inherit DependencyObject&#xA;    interface IAnimatable" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type Visual3D = class&#xA;    inherit DependencyObject&#xA;    interface DUCE.IResource&#xA;    interface IAnimatable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="024da-101">提供可视三维对象通用的服务和属性，其中包括命中测试、坐标转换和边界框计算。</span><span class="sxs-lookup"><span data-stu-id="024da-101">Provides services and properties that are common to visual 3-D objects, including hit-testing, coordinate transformation, and bounding box calculations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-102">与 <xref:System.Windows.Media.Media3D.Model3D> 类不同，<xref:System.Windows.Media.Media3D.Visual3D> 对象无法共享或重复使用。</span><span class="sxs-lookup"><span data-stu-id="024da-102">Unlike the <xref:System.Windows.Media.Media3D.Model3D> class, <xref:System.Windows.Media.Media3D.Visual3D> objects cannot be shared or reused.</span></span>  
  
 <span data-ttu-id="024da-103">使用 <xref:System.Windows.Media.VisualTreeHelper> 类上的静态方法访问 <xref:System.Windows.Media.Media3D.Visual3D> 服务。</span><span class="sxs-lookup"><span data-stu-id="024da-103">Access <xref:System.Windows.Media.Media3D.Visual3D> services by using static methods on the <xref:System.Windows.Media.VisualTreeHelper> class.</span></span>  
  
 <span data-ttu-id="024da-104"><xref:System.Windows.Media.Media3D.Visual3D> 对象将优化为场景节点。</span><span class="sxs-lookup"><span data-stu-id="024da-104"><xref:System.Windows.Media.Media3D.Visual3D> objects are optimized to be scene nodes.</span></span> <span data-ttu-id="024da-105">例如，它们缓存界限。</span><span class="sxs-lookup"><span data-stu-id="024da-105">For example, they cache bounds.</span></span> <span data-ttu-id="024da-106">无论何时，都可以使用 <xref:System.Windows.Media.Media3D.Visual3D> 对象获取场景中对象的唯一实例。</span><span class="sxs-lookup"><span data-stu-id="024da-106">Whenever you can, use <xref:System.Windows.Media.Media3D.Visual3D> objects for unique instances of objects within your scene.</span></span> <span data-ttu-id="024da-107">这种用法与 <xref:System.Windows.Media.Media3D.Model3D> 对象（这些对象是经过优化可共享和重复使用的轻型对象）的使用情况相比较。</span><span class="sxs-lookup"><span data-stu-id="024da-107">This usage contrasts with that of <xref:System.Windows.Media.Media3D.Model3D> objects, which are lightweight objects that are optimized to be shared and reused.</span></span> <span data-ttu-id="024da-108">例如，使用 <xref:System.Windows.Media.Media3D.Model3D> 对象构建汽车模型;并使用十个 <xref:System.Windows.Media.Media3D.ModelVisual3D> 对象在场景中放置十大汽车。</span><span class="sxs-lookup"><span data-stu-id="024da-108">For example, use a <xref:System.Windows.Media.Media3D.Model3D> object to build a model of a car; and use ten <xref:System.Windows.Media.Media3D.ModelVisual3D> objects to place ten cars in your scene.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddVisual3DChild">
      <MemberSignature Language="C#" Value="protected void AddVisual3DChild (System.Windows.Media.Media3D.Visual3D child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddVisual3DChild(class System.Windows.Media.Media3D.Visual3D child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddVisual3DChild (child As Visual3D)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddVisual3DChild(System::Windows::Media::Media3D::Visual3D ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddVisual3DChild : System.Windows.Media.Media3D.Visual3D -&gt; unit" Usage="visual3D.AddVisual3DChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="024da-109">要添加到父三维可视对象的子三维可视对象。</span><span class="sxs-lookup"><span data-stu-id="024da-109">The child 3-D visual object to add to the parent 3-D visual object.</span></span></param>
        <summary><span data-ttu-id="024da-110">定义两个三维可视对象之间的父子关系。</span><span class="sxs-lookup"><span data-stu-id="024da-110">Defines the parent-child relationship between two 3-D visuals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-111"><xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A> 方法是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-111">The <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A> method is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-112">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-112">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="024da-113">当可视子级迭代正在进行时，不能修改子集合。</span><span class="sxs-lookup"><span data-stu-id="024da-113">The children collection cannot be modified when a visual children iteration is in progress.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="024da-114">派生自 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的类必须调用此方法，以通知 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 层子集中出现新的子集合。</span><span class="sxs-lookup"><span data-stu-id="024da-114">A class that derives from <see cref="T:System.Windows.Media.Media3D.Visual3D" /> must call this method to notify the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> layer that a new child appeared in the children collection.</span></span> <span data-ttu-id="024da-115">然后，<see cref="T:System.Windows.Media.Media3D.Visual3D" /> 层调用 <see cref="M:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="024da-115">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> layer then calls the <see cref="M:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="024da-116">将给定 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 的效果应用于给定的依赖属性。</span><span class="sxs-lookup"><span data-stu-id="024da-116">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="visual3D.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="024da-117">要进行动画处理的 <see cref="T:System.Windows.DependencyProperty" />。</span><span class="sxs-lookup"><span data-stu-id="024da-117">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="024da-118">对属性进行动画处理的 <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</span><span class="sxs-lookup"><span data-stu-id="024da-118">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</span></span></param>
        <summary><span data-ttu-id="024da-119">将给定 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 的效果应用于给定的依赖属性。</span><span class="sxs-lookup"><span data-stu-id="024da-119">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="visual3D.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="024da-120">要进行动画处理的 <see cref="T:System.Windows.DependencyProperty" />。</span><span class="sxs-lookup"><span data-stu-id="024da-120">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="024da-121">对属性进行动画处理的 <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</span><span class="sxs-lookup"><span data-stu-id="024da-121">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="024da-122">一个对象，它指定如何与所有相关动画序列进行交互。</span><span class="sxs-lookup"><span data-stu-id="024da-122">The object that specifies how to interact with all relevant animation sequences.</span></span></param>
        <summary><span data-ttu-id="024da-123">将给定 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 的效果应用于给定的依赖属性。</span><span class="sxs-lookup"><span data-stu-id="024da-123">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span> <span data-ttu-id="024da-124">新 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 对任何当前的动画所产生的效果均由 <paramref name="handoffBehavior" /> 参数值确定。</span><span class="sxs-lookup"><span data-stu-id="024da-124">The effect of the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> on any current animations is determined by the value of the <paramref name="handoffBehavior" /> parameter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="024da-125">根据指定的 <see cref="T:System.Windows.DependencyProperty" /> 和 <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> 启动 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 对象的动画序列。</span><span class="sxs-lookup"><span data-stu-id="024da-125">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" /> object, based on both the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> and <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="visual3D.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="024da-126">要动画处理的 <see cref="T:System.Windows.DependencyProperty" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="024da-126">The <see cref="T:System.Windows.DependencyProperty" /> object to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="024da-127">具有对属性进行动画处理所需功能的时间线。</span><span class="sxs-lookup"><span data-stu-id="024da-127">The timeline that has the necessary functionality to animate the property.</span></span></param>
        <summary><span data-ttu-id="024da-128">基于指定的 <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> 为 <see cref="T:System.Windows.DependencyProperty" /> 对象初始化动画序列。</span><span class="sxs-lookup"><span data-stu-id="024da-128">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" /> object, based on the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-129">呈现下一帧时将触发动画序列。</span><span class="sxs-lookup"><span data-stu-id="024da-129">The animation sequence is triggered when the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="visual3D.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="024da-130">要动画处理的 <see cref="T:System.Windows.DependencyProperty" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="024da-130">The <see cref="T:System.Windows.DependencyProperty" /> object to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="024da-131">具有对新动画进行自定义所需功能的时间线。</span><span class="sxs-lookup"><span data-stu-id="024da-131">The timeline that has the necessary functionality to customize the new animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="024da-132">一个对象，它指定如何与所有相关动画序列进行交互。</span><span class="sxs-lookup"><span data-stu-id="024da-132">The object that specifies how to interact with all relevant animation sequences.</span></span></param>
        <summary><span data-ttu-id="024da-133">根据指定的 <see cref="T:System.Windows.DependencyProperty" /> 和 <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> 启动 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 对象的动画序列。</span><span class="sxs-lookup"><span data-stu-id="024da-133">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" /> object, based on both the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> and <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-134">呈现下一帧时将触发动画序列。</span><span class="sxs-lookup"><span data-stu-id="024da-134">The animation sequence is triggered when the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCommonVisualAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject FindCommonVisualAncestor (System.Windows.DependencyObject otherVisual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject FindCommonVisualAncestor(class System.Windows.DependencyObject otherVisual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindCommonVisualAncestor (otherVisual As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ FindCommonVisualAncestor(System::Windows::DependencyObject ^ otherVisual);" />
      <MemberSignature Language="F#" Value="member this.FindCommonVisualAncestor : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="visual3D.FindCommonVisualAncestor otherVisual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherVisual" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="otherVisual"><span data-ttu-id="024da-135">要与其一起查找公共上级的可视对象。</span><span class="sxs-lookup"><span data-stu-id="024da-135">The visual object with which to find a common ancestor.</span></span></param>
        <summary><span data-ttu-id="024da-136">返回可视对象和其他指定可视对象的公共上级。</span><span class="sxs-lookup"><span data-stu-id="024da-136">Returns the common ancestor of the visual object and another specified visual object.</span></span></summary>
        <returns><span data-ttu-id="024da-137">当前可视对象和 <paramref name="otherVisual" /> 的公共上级；如果未找到公共上级，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="024da-137">The common ancestor of the current visual object and <paramref name="otherVisual" />; or <see langword="null" /> if no common ancestor is found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="visual3D.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="024da-138">要请求其基值的对象。</span><span class="sxs-lookup"><span data-stu-id="024da-138">The object for which the base value is being requested.</span></span></param>
        <summary><span data-ttu-id="024da-139">检索指定 <see cref="T:System.Windows.DependencyProperty" /> 对象的基值。</span><span class="sxs-lookup"><span data-stu-id="024da-139">Retrieves the base value of the specified <see cref="T:System.Windows.DependencyProperty" /> object.</span></span></summary>
        <returns><span data-ttu-id="024da-140">一个表示 <paramref name="dp" /> 的基值的对象。</span><span class="sxs-lookup"><span data-stu-id="024da-140">The object that represents the base value of <paramref name="dp" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisual3DChild">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Media3D.Visual3D GetVisual3DChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Media3D.Visual3D GetVisual3DChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetVisual3DChild (index As Integer) As Visual3D" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Media3D::Visual3D ^ GetVisual3DChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetVisual3DChild : int -&gt; System.Windows.Media.Media3D.Visual3D&#xA;override this.GetVisual3DChild : int -&gt; System.Windows.Media.Media3D.Visual3D" Usage="visual3D.GetVisual3DChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Visual3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="024da-141">集合中三维可视对象的索引。</span><span class="sxs-lookup"><span data-stu-id="024da-141">The index of the 3-D visual object in the collection.</span></span></param>
        <summary><span data-ttu-id="024da-142">返回父级 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 中的指定 <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />。</span><span class="sxs-lookup"><span data-stu-id="024da-142">Returns the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> in the parent <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" />.</span></span></summary>
        <returns><span data-ttu-id="024da-143">该集合中在指定 <paramref name="index" /> 值处的子级。</span><span class="sxs-lookup"><span data-stu-id="024da-143">The child in the collection at the specified <paramref name="index" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-144">默认情况下，<xref:System.Windows.Media.Visual> 没有子级。</span><span class="sxs-lookup"><span data-stu-id="024da-144">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span>  
  
 <span data-ttu-id="024da-145"><xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> 方法是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-145">The <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> method is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-146">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-146">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="024da-147"><paramref name="index" /> 值无效。</span><span class="sxs-lookup"><span data-stu-id="024da-147">The <paramref name="index" /> value is not valid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="024da-148">若要正确枚举可视化树，派生自 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的类必须重写此方法，同时重写 <see cref="P:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="024da-148">To correctly enumerate the visual tree, a class that derives from <see cref="T:System.Windows.Media.Media3D.Visual3D" /> must override this method and also override the <see cref="P:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.Visual3D.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.Media.Media3D.Visual3D.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="024da-149">获取一个值，该值指示此 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 是否具有任何进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="024da-149">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Media3D.Visual3D" /> has any animated properties.</span></span></summary>
        <value><span data-ttu-id="024da-150">如果此元素具有动画，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="024da-150"><see langword="true" /> if this element has animations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAncestorOf">
      <MemberSignature Language="C#" Value="public bool IsAncestorOf (System.Windows.DependencyObject descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAncestorOf(class System.Windows.DependencyObject descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.IsAncestorOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAncestorOf (descendant As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAncestorOf(System::Windows::DependencyObject ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.IsAncestorOf : System.Windows.DependencyObject -&gt; bool" Usage="visual3D.IsAncestorOf descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="descendant"><span data-ttu-id="024da-151">一个可能是后代的可视对象。</span><span class="sxs-lookup"><span data-stu-id="024da-151">A visual object that is a possible descendant.</span></span></param>
        <summary><span data-ttu-id="024da-152">确定可视对象是否为后代可视对象的上级。</span><span class="sxs-lookup"><span data-stu-id="024da-152">Determines whether the visual object is an ancestor of the descendant visual object.</span></span></summary>
        <returns><span data-ttu-id="024da-153">如果可视对象是 <paramref name="descendant" /> 的上级，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="024da-153"><see langword="true" /> if the visual object is an ancestor of <paramref name="descendant" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDescendantOf">
      <MemberSignature Language="C#" Value="public bool IsDescendantOf (System.Windows.DependencyObject ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDescendantOf(class System.Windows.DependencyObject ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.IsDescendantOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDescendantOf (ancestor As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDescendantOf(System::Windows::DependencyObject ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.IsDescendantOf : System.Windows.DependencyObject -&gt; bool" Usage="visual3D.IsDescendantOf ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="024da-154">一个可能是上级的可视对象。</span><span class="sxs-lookup"><span data-stu-id="024da-154">A visual object that is a possible ancestor.</span></span></param>
        <summary><span data-ttu-id="024da-155">确定可视对象是否为上级可视对象的后代。</span><span class="sxs-lookup"><span data-stu-id="024da-155">Determines whether the visual object is a descendant of the ancestor visual object.</span></span></summary>
        <returns><span data-ttu-id="024da-156">如果可视对象是 <paramref name="ancestor" /> 的后代，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="024da-156"><see langword="true" /> if the visual object is a descendant of <paramref name="ancestor" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="visual3D.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="024da-157">已添加到集合的 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</span><span class="sxs-lookup"><span data-stu-id="024da-157">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> that was added to the collection.</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="024da-158">从集合中移除的 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</span><span class="sxs-lookup"><span data-stu-id="024da-158">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> that was removed from the collection.</span></span></param>
        <summary><span data-ttu-id="024da-159">修改可视对象的 <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> 时调用。</span><span class="sxs-lookup"><span data-stu-id="024da-159">Called when the <see cref="T:System.Windows.Media.Media3D.Visual3DCollection" /> of the visual object is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="visual3D.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="024da-160">一个表示 <see cref="T:System.Windows.DependencyObject" /> 对象的上一个父级的 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 类型值。</span><span class="sxs-lookup"><span data-stu-id="024da-160">A value of type <see cref="T:System.Windows.DependencyObject" /> that represents the previous parent of the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object.</span></span> <span data-ttu-id="024da-161">如果 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 对象没有上一个父级，则参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="024da-161">If the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object did not have a previous parent, the value of the parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="024da-162">在三维可视对象的父级更改时调用。</span><span class="sxs-lookup"><span data-stu-id="024da-162">Called when the parent of the 3-D visual object is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-163"><xref:System.Windows.Media.Media3D.Visual3D.OnVisualParentChanged%2A> 方法是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-163">The <xref:System.Windows.Media.Media3D.Visual3D.OnVisualParentChanged%2A> method is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-164">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-164">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveVisual3DChild">
      <MemberSignature Language="C#" Value="protected void RemoveVisual3DChild (System.Windows.Media.Media3D.Visual3D child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveVisual3DChild(class System.Windows.Media.Media3D.Visual3D child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.RemoveVisual3DChild(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveVisual3DChild (child As Visual3D)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveVisual3DChild(System::Windows::Media::Media3D::Visual3D ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveVisual3DChild : System.Windows.Media.Media3D.Visual3D -&gt; unit" Usage="visual3D.RemoveVisual3DChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="024da-165">要从父级可视对象中移除的子级三维可视对象。</span><span class="sxs-lookup"><span data-stu-id="024da-165">The child 3-D visual object to remove from the parent visual.</span></span></param>
        <summary><span data-ttu-id="024da-166">移除两个三维可视对象之间的父子关系。</span><span class="sxs-lookup"><span data-stu-id="024da-166">Removes the parent-child relationship between two 3-D visuals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-167"><xref:System.Windows.Media.Media3D.Visual3D.RemoveVisual3DChild%2A> 方法是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-167">The <xref:System.Windows.Media.Media3D.Visual3D.RemoveVisual3DChild%2A> method is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-168">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-168">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="024da-169">派生自 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的类必须调用此方法，以通知 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 层已从子集合中删除子级。</span><span class="sxs-lookup"><span data-stu-id="024da-169">A class that derives from <see cref="T:System.Windows.Media.Media3D.Visual3D" /> must call this method to notify the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> layer that a child was removed from the children collection.</span></span> <span data-ttu-id="024da-170">然后，<see cref="T:System.Windows.Media.Media3D.Visual3D" /> 层调用 <see cref="M:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="024da-170">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> layer then calls the <see cref="M:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.Transform3D Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Media3D.Transform3D Transform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.Visual3D.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Transform3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Media3D::Transform3D ^ Transform { System::Windows::Media::Media3D::Transform3D ^ get(); void set(System::Windows::Media::Media3D::Transform3D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Media3D.Transform3D with get, set" Usage="System.Windows.Media.Media3D.Visual3D.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Transform3D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="024da-171">获取或设置应用于三维对象的变换。</span><span class="sxs-lookup"><span data-stu-id="024da-171">Gets or sets the transformation that is applied to the 3-D object.</span></span></summary>
        <value><span data-ttu-id="024da-172">要应用于三维对象的变换。</span><span class="sxs-lookup"><span data-stu-id="024da-172">The transformation to apply to the 3-D object.</span></span> <span data-ttu-id="024da-173">默认值为 <see cref="P:System.Windows.Media.Media3D.Transform3D.Identity" /> 变换。</span><span class="sxs-lookup"><span data-stu-id="024da-173">The default is the <see cref="P:System.Windows.Media.Media3D.Transform3D.Identity" /> transformation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-174"><xref:System.Windows.Media.Media3D.Visual3D.Transform%2A> 属性是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-174">The <xref:System.Windows.Media.Media3D.Visual3D.Transform%2A> property is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-175">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-175">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
<a name="dependencyPropertyInfo_Transform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="024da-176">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="024da-176">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="024da-177">标识符字段</span><span class="sxs-lookup"><span data-stu-id="024da-177">Identifier field</span></span>|<xref:System.Windows.Media.Media3D.Visual3D.TransformProperty>|  
|<span data-ttu-id="024da-178">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="024da-178">Metadata properties set to `true`</span></span>|<span data-ttu-id="024da-179">无</span><span class="sxs-lookup"><span data-stu-id="024da-179">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Media3D.Visual3D.TransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Media3D.Visual3D.TransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="024da-180">标识 <see cref="P:System.Windows.Media.Media3D.Visual3D.Transform" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="024da-180">Identifies the <see cref="P:System.Windows.Media.Media3D.Visual3D.Transform" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-181"><xref:System.Windows.Media.Media3D.Visual3D.TransformProperty> 在 .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="024da-181"><xref:System.Windows.Media.Media3D.Visual3D.TransformProperty> is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-182">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-182">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformToAncestor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="024da-183">返回一个转换，该转换可用于将此对象中的坐标转换为指定对象的上级。</span><span class="sxs-lookup"><span data-stu-id="024da-183">Returns a transform that can be used to transform coordinates from this object to the specified ancestor of the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-184"><xref:System.Windows.Media.Media3D.Visual3D.TransformToAncestor%2A> 在 .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="024da-184"><xref:System.Windows.Media.Media3D.Visual3D.TransformToAncestor%2A> is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-185">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-185">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.GeneralTransform3D TransformToAncestor (System.Windows.Media.Media3D.Visual3D ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.GeneralTransform3D TransformToAncestor(class System.Windows.Media.Media3D.Visual3D ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual3D) As GeneralTransform3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::GeneralTransform3D ^ TransformToAncestor(System::Windows::Media::Media3D::Visual3D ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Media3D.Visual3D -&gt; System.Windows.Media.Media3D.GeneralTransform3D" Usage="visual3D.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.GeneralTransform3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="024da-186">要将坐标转换到的 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</span><span class="sxs-lookup"><span data-stu-id="024da-186">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="024da-187">返回一个转换，该转换可用于将此 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 对象中的坐标转换为该对象的指定 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 上级。</span><span class="sxs-lookup"><span data-stu-id="024da-187">Returns a transform that can be used to transform coordinates from this <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the object.</span></span></summary>
        <returns><span data-ttu-id="024da-188">一个 <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> 对象；如果无法创建转换，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="024da-188">A <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object; or <see langword="null" />, if the transform cannot be created.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-189"><xref:System.Windows.Media.Media3D.Visual3D.TransformToAncestor%2A> 方法是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-189">The <xref:System.Windows.Media.Media3D.Visual3D.TransformToAncestor%2A> method is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-190">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-190">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="024da-191"><paramref name="ancestor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="024da-191"><paramref name="ancestor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="024da-192">指定的 <paramref name="ancestor" /> 对象不是此对象的上级。</span><span class="sxs-lookup"><span data-stu-id="024da-192">The specified <paramref name="ancestor" /> object is not an ancestor of this object.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="024da-193"><see cref="T:System.Windows.Media.Media3D.Visual3D" /> 对象不相关。</span><span class="sxs-lookup"><span data-stu-id="024da-193">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.GeneralTransform3DTo2D TransformToAncestor (System.Windows.Media.Visual ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.GeneralTransform3DTo2D TransformToAncestor(class System.Windows.Media.Visual ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual) As GeneralTransform3DTo2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::GeneralTransform3DTo2D ^ TransformToAncestor(System::Windows::Media::Visual ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Visual -&gt; System.Windows.Media.Media3D.GeneralTransform3DTo2D" Usage="visual3D.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.GeneralTransform3DTo2D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="024da-194">要将坐标转换到的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="024da-194">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="024da-195">返回一个转换，该转换可用于将此 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 对象中的坐标转换为该对象的指定 <see cref="T:System.Windows.Media.Visual" /> 上级。</span><span class="sxs-lookup"><span data-stu-id="024da-195">Returns a transform that can be used to transform coordinates from this <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object to the specified <see cref="T:System.Windows.Media.Visual" /> ancestor of the object.</span></span></summary>
        <returns><span data-ttu-id="024da-196">一个 <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DTo2D" /> 对象；如果无法创建转换，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="024da-196">A <see cref="T:System.Windows.Media.Media3D.GeneralTransform3DTo2D" /> object; or <see langword="null" />, if the transform cannot be created.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-197">此转换将三维点投影到二维空间。</span><span class="sxs-lookup"><span data-stu-id="024da-197">This transform projects a 3-D point to a 2-D space.</span></span> <span data-ttu-id="024da-198">结果点是指定上级的坐标空间中转换后的三维点。</span><span class="sxs-lookup"><span data-stu-id="024da-198">The resulting point is the transformed 3-D point in the coordinate space of the specified ancestor.</span></span>  
  
 <span data-ttu-id="024da-199"><xref:System.Windows.Media.Media3D.Visual3D.TransformToAncestor%2A> 方法是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-199">The <xref:System.Windows.Media.Media3D.Visual3D.TransformToAncestor%2A> method is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-200">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-200">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="024da-201"><paramref name="ancestor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="024da-201"><paramref name="ancestor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="024da-202">指定的 <paramref name="ancestor" /> 对象不是此对象的上级。</span><span class="sxs-lookup"><span data-stu-id="024da-202">The specified <paramref name="ancestor" /> object is not an ancestor of this object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToDescendant">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.GeneralTransform3D TransformToDescendant (System.Windows.Media.Media3D.Visual3D descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.GeneralTransform3D TransformToDescendant(class System.Windows.Media.Media3D.Visual3D descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.Visual3D.TransformToDescendant(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToDescendant (descendant As Visual3D) As GeneralTransform3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::GeneralTransform3D ^ TransformToDescendant(System::Windows::Media::Media3D::Visual3D ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.TransformToDescendant : System.Windows.Media.Media3D.Visual3D -&gt; System.Windows.Media.Media3D.GeneralTransform3D" Usage="visual3D.TransformToDescendant descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.GeneralTransform3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="descendant"><span data-ttu-id="024da-203">要将坐标转换到的 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</span><span class="sxs-lookup"><span data-stu-id="024da-203">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="024da-204">返回一个转换，此转换可用于将坐标从此 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 对象转换为指定的 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 派生对象。</span><span class="sxs-lookup"><span data-stu-id="024da-204">Returns a transform that can be used to transform coordinates from this <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> descent object.</span></span></summary>
        <returns><span data-ttu-id="024da-205">一个 <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> 对象；如果从 <paramref name="descendant" /> 到此对象的转换不可逆，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="024da-205">A <see cref="T:System.Windows.Media.Media3D.GeneralTransform3D" /> object; or <see langword="null" />, if the transform from <paramref name="descendant" /> to this object is non-invertible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-206"><xref:System.Windows.Media.Media3D.Visual3D.TransformToDescendant%2A> 方法是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-206">The <xref:System.Windows.Media.Media3D.Visual3D.TransformToDescendant%2A> method is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-207">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-207">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="024da-208"><paramref name="descendant" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="024da-208"><paramref name="descendant" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="024da-209">此对象不是指定的 <paramref name="descendant" /> 对象的上级。</span><span class="sxs-lookup"><span data-stu-id="024da-209">This object is not an ancestor of the specified <paramref name="descendant" /> object.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="024da-210"><see cref="T:System.Windows.Media.Media3D.Visual3D" /> 对象不相关。</span><span class="sxs-lookup"><span data-stu-id="024da-210">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Visual3DChildrenCount">
      <MemberSignature Language="C#" Value="protected virtual int Visual3DChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Visual3DChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Visual3DChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int Visual3DChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Visual3DChildrenCount : int" Usage="System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="024da-211">获取 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 对象的子元素数量。</span><span class="sxs-lookup"><span data-stu-id="024da-211">Gets the number of child elements for the <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object.</span></span></summary>
        <value><span data-ttu-id="024da-212">子元素的数量。</span><span class="sxs-lookup"><span data-stu-id="024da-212">The number of child elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-213">默认情况下，<xref:System.Windows.Media.Media3D.Visual3D> 没有任何子元素。</span><span class="sxs-lookup"><span data-stu-id="024da-213">By default, a <xref:System.Windows.Media.Media3D.Visual3D> has no child elements.</span></span> <span data-ttu-id="024da-214">因此，默认实现始终返回0。</span><span class="sxs-lookup"><span data-stu-id="024da-214">Therefore, the default implementation always returns 0.</span></span>  
  
 <span data-ttu-id="024da-215"><xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> 属性是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-215">The <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> property is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-216">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-216">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="024da-217">若要正确枚举可视化树，派生自 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的类必须重写此属性，同时重写 <see cref="M:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="024da-217">To correctly enumerate the visual tree, a class that derives from <see cref="T:System.Windows.Media.Media3D.Visual3D" /> must override this property and also override the <see cref="M:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Visual3DModel">
      <MemberSignature Language="C#" Value="protected System.Windows.Media.Media3D.Model3D Visual3DModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Media3D.Model3D Visual3DModel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.Visual3D.Visual3DModel" />
      <MemberSignature Language="VB.NET" Value="Protected Property Visual3DModel As Model3D" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Media::Media3D::Model3D ^ Visual3DModel { System::Windows::Media::Media3D::Model3D ^ get(); void set(System::Windows::Media::Media3D::Model3D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Visual3DModel : System.Windows.Media.Media3D.Model3D with get, set" Usage="System.Windows.Media.Media3D.Visual3D.Visual3DModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Model3D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="024da-218">获取或设置要呈现的 <see cref="T:System.Windows.Media.Media3D.Model3D" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="024da-218">Gets or sets the <see cref="T:System.Windows.Media.Media3D.Model3D" /> object to render.</span></span></summary>
        <value><span data-ttu-id="024da-219">要呈现的 <see cref="T:System.Windows.Media.Media3D.Model3D" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="024da-219">The <see cref="T:System.Windows.Media.Media3D.Model3D" /> object to render.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="024da-220"><xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> 属性是在 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="024da-220">The <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> property is introduced in .NET Framework version 3.5.</span></span> <span data-ttu-id="024da-221">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="024da-221">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
