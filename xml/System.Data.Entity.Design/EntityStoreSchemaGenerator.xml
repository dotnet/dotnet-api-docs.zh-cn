<Type Name="EntityStoreSchemaGenerator" FullName="System.Data.Entity.Design.EntityStoreSchemaGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27f1c201c60b61fa5d642860a846bed0ef63b646" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86773646" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityStoreSchemaGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityStoreSchemaGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityStoreSchemaGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityStoreSchemaGenerator sealed" />
  <TypeSignature Language="F#" Value="type EntityStoreSchemaGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>负责加载数据库架构信息。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityStoreSchemaGenerator (string providerInvariantName, string connectionString, string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerInvariantName, string connectionString, string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerInvariantName As String, connectionString As String, namespaceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityStoreSchemaGenerator(System::String ^ providerInvariantName, System::String ^ connectionString, System::String ^ namespaceName);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityStoreSchemaGenerator : string * string * string -&gt; System.Data.Entity.Design.EntityStoreSchemaGenerator" Usage="new System.Data.Entity.Design.EntityStoreSchemaGenerator (providerInvariantName, connectionString, namespaceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">提供程序的固定名称。</param>
        <param name="connectionString">用于打开数据库的连接。</param>
        <param name="namespaceName">存储架构定义语言 (SSDL) 的命名空间名称。</param>
        <summary>初始化 <see cref="T:System.Data.Entity.Design.EntityStoreSchemaGenerator" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateStoreSchemaConnection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>为存储架构创建创建使用提供程序元数据加载的 EntityConnection。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateStoreSchemaConnection">
      <MemberSignature Language="C#" Value="public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection(string providerInvariantName, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStoreSchemaConnection (providerInvariantName As String, connectionString As String) As EntityConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::EntityClient::EntityConnection ^ CreateStoreSchemaConnection(System::String ^ providerInvariantName, System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member CreateStoreSchemaConnection : string * string -&gt; System.Data.EntityClient.EntityConnection" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection (providerInvariantName, connectionString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">提供程序的固定名称。</param>
        <param name="connectionString">提供程序连接的连接。</param>
        <summary>为存储架构创建创建使用提供程序元数据加载的 EntityConnection。</summary>
        <returns>一个可为提供程序查询 ConceptualSchemaDefinition 的 EntityConnection。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoreSchemaConnection">
      <MemberSignature Language="C#" Value="public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString, Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection(string providerInvariantName, string connectionString, class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStoreSchemaConnection (providerInvariantName As String, connectionString As String, targetEntityFrameworkVersion As Version) As EntityConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::EntityClient::EntityConnection ^ CreateStoreSchemaConnection(System::String ^ providerInvariantName, System::String ^ connectionString, Version ^ targetEntityFrameworkVersion);" />
      <MemberSignature Language="F#" Value="static member CreateStoreSchemaConnection : string * string * Version -&gt; System.Data.EntityClient.EntityConnection" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection (providerInvariantName, connectionString, targetEntityFrameworkVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionString" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">提供程序固定名称。</param>
        <param name="connectionString">提供程序连接的连接。</param>
        <param name="targetEntityFrameworkVersion">以内部 Entity Framework 版本为目标。</param>
        <summary>为存储架构创建创建使用提供程序元数据加载的 EntityConnection。 注意 targetEntityFrameworkVersion 参数使用内部 Entity Framework 版本数字如<see cref="T:System.Data.Entity.Design.EntityFrameworkVersions" /> 中的描述。</summary>
        <returns>一个可为提供程序查询 ConceptualSchemaDefinition 的 EntityConnection。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntityContainer EntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityContainer As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EntityContainer ^ EntityContainer { System::Data::Metadata::Edm::EntityContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityContainer : System.Data.Metadata.Edm.EntityContainer" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取创建的实体模型 EntityContainer。</summary>
        <value>创建的实体容器存储模型 EntityContainer。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateForeignKeyProperties">
      <MemberSignature Language="C#" Value="public bool GenerateForeignKeyProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateForeignKeyProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateForeignKeyProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateForeignKeyProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateForeignKeyProperties : bool with get, set" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于在存储模型中生成外键属性的标志。</summary>
        <value>如果在存储模型中生成外键，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateStoreMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>生成存储元数据并返回所有架构错误。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata () As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata();" />
      <MemberSignature Language="F#" Value="member this.GenerateStoreMetadata : unit -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityStoreSchemaGenerator.GenerateStoreMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>生成存储元数据并返回所有架构错误。</summary>
        <returns>架构错误对象的集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata (filters As IEnumerable(Of EntityStoreSchemaFilterEntry)) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata(System::Collections::Generic::IEnumerable&lt;System::Data::Entity::Design::EntityStoreSchemaFilterEntry ^&gt; ^ filters);" />
      <MemberSignature Language="F#" Value="member this.GenerateStoreMetadata : seq&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityStoreSchemaGenerator.GenerateStoreMetadata filters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="filters">一个 EntityStoreSchemaFilterEntry，指定在生成期间允许或排除哪些数据库对象。</param>
        <summary>生成存储元数据并返回所有架构错误。</summary>
        <returns>架构错误对象的集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateStoreMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters, Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateStoreMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; filters, class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateStoreMetadata (filters As IEnumerable(Of EntityStoreSchemaFilterEntry), targetEntityFrameworkVersion As Version) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateStoreMetadata(System::Collections::Generic::IEnumerable&lt;System::Data::Entity::Design::EntityStoreSchemaFilterEntry ^&gt; ^ filters, Version ^ targetEntityFrameworkVersion);" />
      <MemberSignature Language="F#" Value="member this.GenerateStoreMetadata : seq&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt; * Version -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityStoreSchemaGenerator.GenerateStoreMetadata (filters, targetEntityFrameworkVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Design.EntityStoreSchemaFilterEntry&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filters">一个 EntityStoreSchemaFilterEntry，指定在生成期间允许或排除哪些数据库对象。</param>
        <param name="targetEntityFrameworkVersion">与 Entity Framework 的目标版本相对应的 EntityFrameworkVersions 的属性。</param>
        <summary>生成存储架构定义语言 (SSDL) 并返回所有架构错误。</summary>
        <returns>架构错误对象的集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreItemCollection As StoreItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::StoreItemCollection ^ StoreItemCollection { System::Data::Metadata::Edm::StoreItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreItemCollection : System.Data.Metadata.Edm.StoreItemCollection" Usage="System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StoreItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取已创建的 StoreItemCollection。</summary>
        <value>创建的 <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> 对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStoreSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将生成的存储架构定义语言 (SSDL) 写入文件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStoreSchema">
      <MemberSignature Language="C#" Value="public void WriteStoreSchema (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStoreSchema(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStoreSchema (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStoreSchema(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="member this.WriteStoreSchema : string -&gt; unit" Usage="entityStoreSchemaGenerator.WriteStoreSchema outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName">输出文件的名称。</param>
        <summary>将生成的存储架构定义语言 (SSDL) 写入文件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStoreSchema">
      <MemberSignature Language="C#" Value="public void WriteStoreSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStoreSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStoreSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStoreSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteStoreSchema : System.Xml.XmlWriter -&gt; unit" Usage="entityStoreSchemaGenerator.WriteStoreSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">将 SSDL 文件写入到其中的 XmlWriter。</param>
        <summary>将生成的存储架构定义语言 (SSDL) 写入 XmlWriter 对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
