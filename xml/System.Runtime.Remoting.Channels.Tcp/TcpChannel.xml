<Type Name="TcpChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a4b3ccddf395504cd2a38587bf20f4f56057280" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89926969" /></Metadata><TypeSignature Language="C#" Value="public class TcpChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.IChannelSender" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpChannel&#xA;Implements IChannelReceiver, IChannelSender" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpChannel : System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::IChannelSender" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type TcpChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannelSender&#xA;    interface IChannel" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class TcpChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpChannel&#xA;Implements IChannelReceiver, IChannelSender, ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpChannel : System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type TcpChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannelSender&#xA;    interface IChannel&#xA;    interface ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type TcpChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface IChannelSender&#xA;    interface ISecurableChannel" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="217f4-101">提供使用 TCP 协议传输消息的信道实现。</span><span class="sxs-lookup"><span data-stu-id="217f4-101">Provides a channel implementation that uses the TCP protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="217f4-102">通道跨远程处理边界传输消息 (例如，在应用程序域) 的计算机之间传输消息。</span><span class="sxs-lookup"><span data-stu-id="217f4-102">Channels transport messages across remoting boundaries (for example, between computers on application domains).</span></span> <span data-ttu-id="217f4-103"><xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>类是一个便捷的类，它将 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 类和类的功能结合起来 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> 。</span><span class="sxs-lookup"><span data-stu-id="217f4-103">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> class is a convenience class combining the functionality of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class and the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class.</span></span>  
  
 <span data-ttu-id="217f4-104">通道由 .NET Framework 远程处理基础结构用于传输远程调用。</span><span class="sxs-lookup"><span data-stu-id="217f4-104">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="217f4-105">当客户端调用远程对象时，调用将被序列化为客户端通道发送并由服务器通道接收的消息。</span><span class="sxs-lookup"><span data-stu-id="217f4-105">When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="217f4-106">然后对其进行反序列化和处理。</span><span class="sxs-lookup"><span data-stu-id="217f4-106">It is then deserialized and processed.</span></span> <span data-ttu-id="217f4-107">任何返回值由服务器通道传输并由客户端通道接收。</span><span class="sxs-lookup"><span data-stu-id="217f4-107">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="217f4-108">若要对消息进行其他处理，可以指定的实现， <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> 并 <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> 通过它传递的所有消息 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> 。</span><span class="sxs-lookup"><span data-stu-id="217f4-108">To perform additional processing of messages, you can specify implementations of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> and <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> are passed.</span></span>  
  
 <span data-ttu-id="217f4-109"><xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>对象具有关联的配置属性，这些属性可在运行时在配置文件中设置 (方法是：调用静态 <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> 方法) 或通过将集合传递 <xref:System.Collections.IDictionary> 到 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> 构造函数) 以编程方式 (。</span><span class="sxs-lookup"><span data-stu-id="217f4-109">A <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="217f4-110">有关通道配置属性的详细信息，请参阅 [通道和格式化程序配置属性](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="217f4-110">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="217f4-111">如果服务器计算机运行的是 Windows 95/98/Me，则不能将该服务器 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> 指定为安全服务器。</span><span class="sxs-lookup"><span data-stu-id="217f4-111">If the server computer is running Windows 95/98/Me, the server <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> cannot be specified as secure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-112">下面的代码示例演示如何使用 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> 设置远程处理服务器及其客户端。</span><span class="sxs-lookup"><span data-stu-id="217f4-112">The following code example shows how to use a <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> to set up a remoting server and its client.</span></span> <span data-ttu-id="217f4-113">该示例包含三个部分：服务器、客户端和服务器和客户端使用的远程对象。</span><span class="sxs-lookup"><span data-stu-id="217f4-113">The example contains three parts, a server, a client, and a remote object used by the server and the client.</span></span>  
  
 <span data-ttu-id="217f4-114">下面的代码示例演示了一个服务器：</span><span class="sxs-lookup"><span data-stu-id="217f4-114">The following code example shows a server:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#1)]  
  
 <span data-ttu-id="217f4-115">下面的代码示例演示了此服务器的客户端：</span><span class="sxs-lookup"><span data-stu-id="217f4-115">The following code example shows a client for this server:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#10)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#10)]  
  
 <span data-ttu-id="217f4-116">下面的代码示例显示了服务器和客户端使用的远程对象：</span><span class="sxs-lookup"><span data-stu-id="217f4-116">The following code example shows the remote object used by the server and the client:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/common.cpp#20)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/common.cs#20)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="217f4-117">初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="217f4-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="217f4-118">初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 类的新实例，仅激活客户端信道，不激活服务器信道。</span><span class="sxs-lookup"><span data-stu-id="217f4-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating only a client channel, and not a server channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-119">无参数构造函数将所有字段初始化为其默认值。</span><span class="sxs-lookup"><span data-stu-id="217f4-119">The parameterless constructor initializes all fields to their default values.</span></span> <span data-ttu-id="217f4-120">如果使用无参数构造函数，则该通道仅作为客户端通道运行，而不会侦听任何端口。</span><span class="sxs-lookup"><span data-stu-id="217f4-120">If the parameterless constructor is used, the channel functions only as a client channel, and does not listen on any ports.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-121">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="217f4-121">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#11)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel(int port);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpChannel : int -&gt; System.Runtime.Remoting.Channels.Tcp.TcpChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpChannel port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="217f4-122">服务器信道侦听的端口。</span><span class="sxs-lookup"><span data-stu-id="217f4-122">The port on which the server channel listens.</span></span></param>
        <summary><span data-ttu-id="217f4-123">使用侦听指定端口的服务器信道初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="217f4-123">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with a server channel that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-124">若要请求远程处理系统代表您选择打开的端口，请指定端口 0 (零) 。</span><span class="sxs-lookup"><span data-stu-id="217f4-124">To request that the remoting system choose an open port on your behalf, specify port 0 (zero).</span></span> <span data-ttu-id="217f4-125">这将创建一个 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> 实例，以便在动态分配的端口上侦听请求。</span><span class="sxs-lookup"><span data-stu-id="217f4-125">This will create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance to listen for requests on the dynamically assigned port.</span></span> <span data-ttu-id="217f4-126">通常在客户端上执行此操作，以确保 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> 正在侦听回调方法。</span><span class="sxs-lookup"><span data-stu-id="217f4-126">This is typically done on the client to make sure that a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> is listening for callback methods.</span></span>  
  
 <span data-ttu-id="217f4-127">如果将0传递到构造函数，则 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> 实例化为使用可用端口。</span><span class="sxs-lookup"><span data-stu-id="217f4-127">If 0 is passed to the constructor the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> is instantiated to use a free port.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-128">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="217f4-128">The following code example demonstrates using this method.</span></span> <span data-ttu-id="217f4-129">若要请求动态分配可用端口，请将参数设置 `port` 为零。</span><span class="sxs-lookup"><span data-stu-id="217f4-129">To request that an available port be dynamically assigned, set the `port` parameter to zero.</span></span>  
  
 [!code-cpp[RemotingConfiguration.ServerActivation#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/VB/server.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, clientSinkProvider As IClientChannelSinkProvider, serverSinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ clientSinkProvider, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ serverSinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Tcp.TcpChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpChannel (properties, clientSinkProvider, serverSinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="clientSinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
        <Parameter Name="serverSinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="217f4-130">一个 <see cref="T:System.Collections.IDictionary" /> 集合，它为客户端和服务器信道要使用的配置属性指定值。</span><span class="sxs-lookup"><span data-stu-id="217f4-130">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the client and server channels.</span></span></param>
        <param name="clientSinkProvider"><span data-ttu-id="217f4-131">客户端信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="217f4-131">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel.</span></span></param>
        <param name="serverSinkProvider"><span data-ttu-id="217f4-132">服务器信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="217f4-132">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel.</span></span></param>
        <summary><span data-ttu-id="217f4-133">使用指定的配置属性和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="217f4-133">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with the specified configuration properties and sinks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-134">有关通道配置属性的详细信息，请参阅 [通道和格式化程序配置属性](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="217f4-134">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="217f4-135">如果服务器计算机运行的是 Windows 95/98/Me，则不能将该服务器 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> 指定为安全服务器。</span><span class="sxs-lookup"><span data-stu-id="217f4-135">If the server computer is running Windows 95/98/Me, the server <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> cannot be specified as secure.</span></span>  
  
 <span data-ttu-id="217f4-136">信道接收器提供了一个插件点，该插件点允许访问流过通道的基础消息，以及用于将消息发送到远程对象的传输机制所使用的流。</span><span class="sxs-lookup"><span data-stu-id="217f4-136">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="217f4-137">通道接收器还负责在客户端和服务器之间传输消息。</span><span class="sxs-lookup"><span data-stu-id="217f4-137">Channel sinks are also responsible for transporting messages between the client and the server.</span></span> <span data-ttu-id="217f4-138">通道接收器在链中链接在一起，并且所有通道消息在最终序列化并传输消息之前都流过此接收器链。</span><span class="sxs-lookup"><span data-stu-id="217f4-138">Channel sinks are linked together in a chain, and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span> <span data-ttu-id="217f4-139">如果不需要接收器功能，请将 `clientSinkProvider` 和参数设置 `serverSinkProvider` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="217f4-139">If you do not require sink functionality, set the `clientSinkProvider` and `serverSinkProvider` parameters to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-140">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="217f4-140">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="217f4-141">所提供的信道属性的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="217f4-141">A provided channel property was improperly formatted.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="217f4-142">通道和格式化程序配置属性</span><span class="sxs-lookup"><span data-stu-id="217f4-142">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelReceiver.ChannelData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="217f4-143">获取信道特定数据。</span><span class="sxs-lookup"><span data-stu-id="217f4-143">Gets the channel-specific data.</span></span></summary>
        <value><span data-ttu-id="217f4-144">包含特定于信道的数据的 <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="217f4-144">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-145">尽管作为的实例返回 <xref:System.Object?displayProperty=nameWithType> ，但可以将此属性的值强制转换为 <xref:System.Runtime.Remoting.Channels.ChannelDataStore> 说明对象所侦听的通道的实例 <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> 。</span><span class="sxs-lookup"><span data-stu-id="217f4-145">Although returned as an instance of <xref:System.Object?displayProperty=nameWithType>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-146">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="217f4-146">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#5)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="217f4-147">获取当前信道的名称。</span><span class="sxs-lookup"><span data-stu-id="217f4-147">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="217f4-148">一个 <see cref="T:System.String" /> 包含信道名称。</span><span class="sxs-lookup"><span data-stu-id="217f4-148">A <see cref="T:System.String" /> that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-149">每个已注册的通道都具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="217f4-149">Every registered channel has a unique name.</span></span> <span data-ttu-id="217f4-150">此名称用于在调用时检索特定通道 <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> 。</span><span class="sxs-lookup"><span data-stu-id="217f4-150">The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span></span> <span data-ttu-id="217f4-151">若要设置 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A> 属性，请将值分配给传递给构造函数的字典中的 "名称" 索引属性 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29> 。</span><span class="sxs-lookup"><span data-stu-id="217f4-151">To set the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A> property, assign the value to the "name" indexed property in the dictionary passed to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-152">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="217f4-152">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#3)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="217f4-153">获取当前信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="217f4-153">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="217f4-154">一个整数，表示分配给该信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="217f4-154">An integer that represents the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="217f4-155">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="217f4-155">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#4)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink&#xA;override this.CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="tcpChannel.CreateMessageSink (url, remoteChannelData, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink(System.String,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="217f4-156">新接收器应将消息传递到的 URL。</span><span class="sxs-lookup"><span data-stu-id="217f4-156">The URL to which the new sink should deliver messages.</span></span> <span data-ttu-id="217f4-157">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="217f4-157">Can be <see langword="null" />.</span></span></param>
        <param name="remoteChannelData"><span data-ttu-id="217f4-158">新接收器应将消息传递到的远程主机的信道数据对象。</span><span class="sxs-lookup"><span data-stu-id="217f4-158">The channel data object of the remote host to which the new sink should deliver messages.</span></span> <span data-ttu-id="217f4-159">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="217f4-159">Can be <see langword="null" />.</span></span></param>
        <param name="objectURI"><span data-ttu-id="217f4-160">此方法返回时，包含新信道消息接收器的 URI，该信道消息接收器将消息传送到指定 URL 或信道数据对象。</span><span class="sxs-lookup"><span data-stu-id="217f4-160">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span></span> <span data-ttu-id="217f4-161">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="217f4-161">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="217f4-162">返回将消息传送到指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="217f4-162">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span></span></summary>
        <returns><span data-ttu-id="217f4-163">将消息传递给指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="217f4-163">A channel message sink that delivers messages to the specified URL or channel data object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-164"><xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A>方法返回将消息传递到指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="217f4-164">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or channel data object.</span></span> <span data-ttu-id="217f4-165">如果 `uri` 参数为 `null` ， `remoteChannelData` 则将用作接收器的目标。</span><span class="sxs-lookup"><span data-stu-id="217f4-165">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="217f4-166">`url`或 `remoteChannelData` 参数可以为 `null` ，但不能同时为两者。</span><span class="sxs-lookup"><span data-stu-id="217f4-166">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
 <span data-ttu-id="217f4-167">信道接收器提供了一个插件点，该插件点允许访问流过通道的基础消息，以及用于将消息发送到远程对象的传输机制所使用的流。</span><span class="sxs-lookup"><span data-stu-id="217f4-167">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="217f4-168">通道接收器在链中链接在一起 `ChannelSinkProviders` ，并且所有通道消息都流过此接收器链，然后才会序列化并传输消息。</span><span class="sxs-lookup"><span data-stu-id="217f4-168">Channel sinks are linked together in a chain of `ChannelSinkProviders` and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-169">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="217f4-169">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public string[] GetUrlsForUri (string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUrlsForUri (objectURI As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectURI);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="tcpChannel.GetUrlsForUri objectURI" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.GetUrlsForUri(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectURI"><span data-ttu-id="217f4-170">需要其 URL 的对象的 URI。</span><span class="sxs-lookup"><span data-stu-id="217f4-170">The URI of the object for which URLs are required.</span></span></param>
        <summary><span data-ttu-id="217f4-171">返回具有指定 URI 的对象的所有 URL 的数组，该对象承载在当前的 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 上。</span><span class="sxs-lookup"><span data-stu-id="217f4-171">Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span></span></summary>
        <returns><span data-ttu-id="217f4-172">具有指定 URI 的对象的所有 URL 的数组，该对象承载在当前的 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 上。</span><span class="sxs-lookup"><span data-stu-id="217f4-172">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-173">此方法由使用 <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="217f4-173">This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-174">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="217f4-174">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[TcpChannel.GetUrlsForUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpChannel.GetUrlsForUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpChannel.GetUrlsForUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="217f4-175">获取或设置一个布尔值，该值指示当前信道是否安全。</span><span class="sxs-lookup"><span data-stu-id="217f4-175">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="217f4-176">一个布尔值，指示当前实例是否安全。</span><span class="sxs-lookup"><span data-stu-id="217f4-176">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-177">不需要显式设置此属性，因为它足以设置的 ensureSecurity 参数 <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29> 。</span><span class="sxs-lookup"><span data-stu-id="217f4-177">This property need not be set explicitly, as it is sufficient to set the ensureSecurity parameter of <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * string -&gt; string&#xA;override this.Parse : string * string -&gt; string" Usage="tcpChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="217f4-178">从中提取远程已知对象的 URI 的 URL。</span><span class="sxs-lookup"><span data-stu-id="217f4-178">The URL from which to extract the URI of the remote well-known object.</span></span></param>
        <param name="objectURI"><span data-ttu-id="217f4-179">当此方法返回时，包含含有远程已知对象的 URI 的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="217f4-179">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="217f4-180">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="217f4-180">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="217f4-181">从指定 URL 提取信道 URI 和远程已知对象 URI。</span><span class="sxs-lookup"><span data-stu-id="217f4-181">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="217f4-182">当前信道的 URI。</span><span class="sxs-lookup"><span data-stu-id="217f4-182">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-183">对象的 URI 是唯一标识特定对象实例的值。</span><span class="sxs-lookup"><span data-stu-id="217f4-183">A URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="217f4-184">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="217f4-184">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#6)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="tcpChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StartListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="217f4-185">可选的初始化信息。</span><span class="sxs-lookup"><span data-stu-id="217f4-185">Optional initialization information.</span></span></param>
        <summary><span data-ttu-id="217f4-186">指示当前信道开始侦听请求。</span><span class="sxs-lookup"><span data-stu-id="217f4-186">Instructs the current channel to start listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-187">无需调用此方法即可开始在新初始化的通道上进行侦听。</span><span class="sxs-lookup"><span data-stu-id="217f4-187">It is not necessary to call this method to begin listening on a newly initialized channel.</span></span>  
  
 <span data-ttu-id="217f4-188">在调用方法后，使用此方法重新启动对通道的侦听 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> 。</span><span class="sxs-lookup"><span data-stu-id="217f4-188">Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> method has been called.</span></span>  
  
 <span data-ttu-id="217f4-189">如果频道使用动态分配的端口号，则在重新启动侦听时，端口号可能会改变。</span><span class="sxs-lookup"><span data-stu-id="217f4-189">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="217f4-190">`data`参数可用于将特定的初始化状态传递到通道。</span><span class="sxs-lookup"><span data-stu-id="217f4-190">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="217f4-191">如果你不希望将特定状态传递到通道，请将设置 `data` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="217f4-191">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="tcpChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StopListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="217f4-192">该信道的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="217f4-192">Optional state information for the channel.</span></span></param>
        <summary><span data-ttu-id="217f4-193">指示当前信道停止侦听请求。</span><span class="sxs-lookup"><span data-stu-id="217f4-193">Instructs the current channel to stop listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="217f4-194">使用此方法停止在通道上进行侦听。</span><span class="sxs-lookup"><span data-stu-id="217f4-194">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="217f4-195">若要重新启动侦听，请使用 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="217f4-195">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="217f4-196">如果频道使用动态分配的端口号，则在重新启动侦听时，端口号可能会改变。</span><span class="sxs-lookup"><span data-stu-id="217f4-196">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="217f4-197">`data`参数可用于将特定的初始化状态传递到通道。</span><span class="sxs-lookup"><span data-stu-id="217f4-197">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="217f4-198">如果你不希望将特定状态传递到通道，请将设置 `data` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="217f4-198">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
