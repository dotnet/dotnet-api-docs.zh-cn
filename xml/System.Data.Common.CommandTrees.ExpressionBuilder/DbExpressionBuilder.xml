<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a55e8c1d544376411d918531d72f488523d9547b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86731742" /></Metadata><TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type DbExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e67e2-101">提供一个用于构造 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 的 API，并且允许该 API 作为针对表达式类型本身的扩展方法来访问。</span><span class="sxs-lookup"><span data-stu-id="e67e2-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="e67e2-102">定义聚合运算的函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-102">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="e67e2-103">要对其计算聚合函数的参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-103">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="e67e2-104">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-105">使用给定的函数和参数的引用聚合的新的函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-105">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="e67e2-106">函数聚集的 Distinct 属性将有 <see langword="false" />值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-107"><paramref name="function" /> 或 <paramref name="argument" /> null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-107"><paramref name="function" /> or <paramref name="argument" /> null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-108"><paramref name="function" /> 不是聚合函数，或者具有多个实参；或者 <paramref name="argument" /> 的结果类型不等同于或不能提升为 <paramref name="function" /> 的形参类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-108"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member AggregateDistinct : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="e67e2-109">定义聚合运算的函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-109">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="e67e2-110">要对其计算聚合函数的参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-110">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="e67e2-111">创建新的、应用于不同风格的 <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span></span></summary>
        <returns><span data-ttu-id="e67e2-112">使用给定的函数和参数的引用聚合的新的函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-112">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="e67e2-113">函数聚集的 Distinct 属性将有 <see langword="true" />值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-114"><paramref name="function" /> 或 <paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-114"><paramref name="function" /> or <paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-115"><paramref name="function" /> 不是聚合函数，或者具有多个实参；或者 <paramref name="argument" /> 的结果类型不等同于或不能提升为 <paramref name="function" /> 的形参类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-115"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-116">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，该对象确定是否为输入集的所有元素保留给定的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-117">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-117">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="e67e2-118">一个方法，表示要针对每个输入集成员计算的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-118">A method representing a predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="e67e2-119">此方法必须生成一个结果类型为 Boolean 的表达式，该表达式提供谓词逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="e67e2-120">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，该对象确定是否为输入集的所有元素保留给定的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-121">新 DbQuantifierExpression 表示所有操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-121">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-122"><paramref name="source" /> 或 <paramref name="predicate" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-122"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="e67e2-123">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-123">-or-</span></span>

<span data-ttu-id="e67e2-124">由 <paramref name="predicate" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-124">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-125"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-125"><paramref name="source" />  does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-126">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-126">-or-</span></span>

<span data-ttu-id="e67e2-127">由 <paramref name="Predicate" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-127">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-128">一个指定输入集的表达式绑定。</span><span class="sxs-lookup"><span data-stu-id="e67e2-128">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="e67e2-129">一个表达式，表示要针对每个输入集成员计算的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-129">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-130">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，该对象确定是否为输入集的所有元素保留给定的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-130">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-131">新 DbQuantifierExpression 表示所有操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-131">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-132"><paramref name="input" /> 或 <paramref name="predicate" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-132"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-133"><paramref name="predicate" /> 没有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-133"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member And : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbAndExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-134">一个指定左侧参数的布尔表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-134">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-135">一个指定右侧参数的布尔表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-135">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-136">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />，它对左侧参数和右侧参数执行逻辑“和”运算。</span><span class="sxs-lookup"><span data-stu-id="e67e2-136">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="e67e2-137">具有指定参数的新 DbAndExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-137">A new DbAndExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-138"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-138"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-139"><paramref name="left" /> 和 <paramref name="right" /> 没有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-139"><paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-140">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它确定指定的集参数是否非空。</span><span class="sxs-lookup"><span data-stu-id="e67e2-140">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-141">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-141">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-142">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它确定指定的集参数是否非空。</span><span class="sxs-lookup"><span data-stu-id="e67e2-142">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="e67e2-143">具有指定参数应用与新的 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> 的新 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-143">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-144"><paramref name="source" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-144"><paramref name="source" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-145"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-145"><paramref name="source" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-146">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-146">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="e67e2-147">一个方法，表示要针对每个输入集成员计算的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-147">A method representing the predicate to evaluate for each member of the input set.</span></span> <span data-ttu-id="e67e2-148">此方法必须生成一个结果类型为 Boolean 的表达式，该表达式提供谓词逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-148">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="e67e2-149">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，该对象确定是否为输入集的任何元素保留给定的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-149">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-150">新 DbQuantifierExpression 表示任何操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-150">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-151"><paramref name="source" /> 或 <paramref name="predicate" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-151"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="e67e2-152">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-152">-or-</span></span>

<span data-ttu-id="e67e2-153">由 <paramref name="predicate" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-153">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-154"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-154"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-155">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-155">-or-</span></span> 
<span data-ttu-id="e67e2-156">由 <paramref name="predicate" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-156">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-157">一个指定输入集的表达式绑定。</span><span class="sxs-lookup"><span data-stu-id="e67e2-157">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="e67e2-158">一个表达式，表示要针对每个输入集成员计算的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-158">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-159">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，该对象确定是否为输入集的任何元素保留给定的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-159">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-160">新 DbQuantifierExpression 表示任何操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-160">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-161"><paramref name="input" /> 或 <paramref name="predicate" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-161"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-162">由 <paramref name="predicate" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-162">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-163">返回作为键/值对象指的定参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-163">Returns the specified arguments as a key/value pair object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbAggregate * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e67e2-164">键/值对中的值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-164">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="e67e2-165">键/值对中的键。</span><span class="sxs-lookup"><span data-stu-id="e67e2-165">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="e67e2-166">返回作为键/值对象指的定参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-166">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="e67e2-167">密钥/值对对象。</span><span class="sxs-lookup"><span data-stu-id="e67e2-167">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e67e2-168">键/值对中的值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-168">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="e67e2-169">键/值对中的键。</span><span class="sxs-lookup"><span data-stu-id="e67e2-169">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="e67e2-170">返回作为键/值对象指的定参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-170">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="e67e2-171">密钥/值对对象。</span><span class="sxs-lookup"><span data-stu-id="e67e2-171">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member Bind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-172">要绑定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-172">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="e67e2-173">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，该对象使用生成的变量名称来绑定给定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-173">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="e67e2-174">使用指定的表达式和生成的变量名称绑定新的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-174">A new expression binding with the specified expression and a generated variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-175"><paramref name="input" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-175"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-176"><paramref name="input" /> 没有集合结果。</span><span class="sxs-lookup"><span data-stu-id="e67e2-176"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberSignature Language="F#" Value="static member BindAs : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs (input, varName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-177">要绑定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-177">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="e67e2-178">应用于绑定的变量名称。</span><span class="sxs-lookup"><span data-stu-id="e67e2-178">The variable name that should be used for the binding.</span></span></param>
        <summary><span data-ttu-id="e67e2-179">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，该对象使用指定的变量名称来绑定给定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-179">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="e67e2-180">使用指定的表达式和变量名称绑定新的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-180">A new expression binding with the specified expression and variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-181"><paramref name="input" /> 或 <paramref name="varName" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-181"><paramref name="input" /> or <paramref name="varName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-182"><paramref name="input" /> 没有集合结果。</span><span class="sxs-lookup"><span data-stu-id="e67e2-182"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberSignature Language="F#" Value="static member Case : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbCaseExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case (whenExpressions, thenExpressions, elseExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="whenExpressions"><span data-ttu-id="e67e2-183">提供每个 Case 的条件的表达式列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-183">A list of expressions that provide the conditional for of each case.</span></span></param>
        <param name="thenExpressions"><span data-ttu-id="e67e2-184">提供每个 Case 的结果的表达式列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-184">A list of expressions that provide the result of each case.</span></span></param>
        <param name="elseExpression"><span data-ttu-id="e67e2-185">定义没有 Case 匹配时的结果的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-185">An expression that defines the result when no case is matched.</span></span></param>
        <summary><span data-ttu-id="e67e2-186">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-186">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-187">使用指定的案件和默认结果的新 DbCaseExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-187">A new DbCaseExpression with the specified cases and default result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-188"><paramref name="whenExpressions" /> 或 <paramref name="thenExpressions" /> 为 null 或包含 null，或者 <paramref name="elseExpression" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-188"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-189"><paramref name="whenExpressions" /> 或 <paramref name="thenExpressions" /> 为空，或者 <paramref name="whenExpressions" /> 包含一个带有非布尔结果类型的表达式，或者没有适用于 <paramref name="thenExpressions" /> 和 <paramref name="elseExpression" /> 中的所有表达式的通用结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-189"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberSignature Language="F#" Value="static member CastTo : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbCastExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo (argument, toType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-190">应对其应用强制转换的参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-190">The argument to which the cast should be applied.</span></span></param>
        <param name="toType"><span data-ttu-id="e67e2-191">指定要强制转换成的类型的类型元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-191">Type metadata that specifies the type to cast to.</span></span></param>
        <summary><span data-ttu-id="e67e2-192">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> ，该表达式对多态参数应用强制转换运算。</span><span class="sxs-lookup"><span data-stu-id="e67e2-192">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-193">使用指定的参数和目标类型的新 DbCastExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-193">A new DbCastExpression with the specified argument and target type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-194"><paramref name="Argument" /> 或 <paramref name="toType" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-194"><paramref name="Argument" /> or <paramref name="toType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-195">指定的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="e67e2-195">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-196">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e67e2-197">要表示的常量值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-197">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="e67e2-198">创建新的给定常数值的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-198">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="e67e2-199">具有创给定值的新建新 DbConstantExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-199">A new DbConstantExpression with the given value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-200"><paramref name="value" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-200"><paramref name="value" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-201"><paramref name="value" /> 不是有效常量类型的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-201"><paramref name="value" /> is not an instance of a valid constant type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : System.Data.Metadata.Edm.TypeUsage * obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant (constantType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="constantType"><span data-ttu-id="e67e2-202">常量值的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-202">The type of the constant value.</span></span></param>
        <param name="value"><span data-ttu-id="e67e2-203">要表示的常量值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-203">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="e67e2-204">使用给定的常量值创建一个具有指定基元类型的新 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="e67e2-205">具有给定的值和 <paramref name="constantType" /> 结果类型的新 DbConstantExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-205">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-206"><paramref name="value" /> 或 <paramref name="constantType" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-206"><paramref name="value" /> or <paramref name="constantType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-207"><paramref name="value" /> 不是有效常量类型的实例，<paramref name="constantType" /> 不代表基元类型，或 <paramref name="value" /> 所属的基元类型与 <paramref name="constantType" /> 表示的基元类型不同。</span><span class="sxs-lookup"><span data-stu-id="e67e2-207"><paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-208">创建新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它按照键值对给定类型的特定实体的引用进行编码。</span><span class="sxs-lookup"><span data-stu-id="e67e2-208">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateRef (entitySet As EntitySet, keyValues As IEnumerable(Of DbExpression)) As DbRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="e67e2-209">引用的元素所在的实体集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-209">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="e67e2-210">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 集合，这些对象提供键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-210">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="e67e2-211">在数目、类型和顺序上，这些表达式必须匹配所引用实体类型的关键属性。</span><span class="sxs-lookup"><span data-stu-id="e67e2-211">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="e67e2-212">创建新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它按照键值对特定实体的引用进行编码。</span><span class="sxs-lookup"><span data-stu-id="e67e2-212">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="e67e2-213">使用给定实体集中的指定键值引用元素的新 DbRefExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-213">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-214"><paramref name="entitySet" /> 为 null，或 <paramref name="keyValues" /> 为 null 或包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-214"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-215"><paramref name="keyValues" /> 的计数与 <paramref name="entitySet" /> 的元素类型声明的键成员的计数不符，或者 <paramref name="keyValues" /> 包含的表达式的结果类型与对应的键成员的类型不兼容。</span><span class="sxs-lookup"><span data-stu-id="e67e2-215">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateRef (entitySet As EntitySet, ParamArray keyValues As DbExpression()) As DbRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.5">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="e67e2-216">引用的元素所在的实体集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-216">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="e67e2-217">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 集合，这些对象提供键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-217">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="e67e2-218">在数目、类型和顺序上，这些表达式必须匹配所引用实体类型的关键属性。</span><span class="sxs-lookup"><span data-stu-id="e67e2-218">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="e67e2-219">创建新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它按照键值对特定实体的引用进行编码。</span><span class="sxs-lookup"><span data-stu-id="e67e2-219">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="e67e2-220">使用给定实体集中的指定键值引用元素的新 DbRefExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-220">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-221"><paramref name="entitySet" /> 为 null，或 <paramref name="keyValues" /> 为 null 或包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-221"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-222"><paramref name="keyValues" /> 的计数与 <paramref name="entitySet" /> 的元素类型声明的键成员的计数不符，或者 <paramref name="keyValues" /> 包含的表达式的结果类型与对应的键成员的类型不兼容。</span><span class="sxs-lookup"><span data-stu-id="e67e2-222">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateRef (entitySet As EntitySet, entityType As EntityType, keyValues As IEnumerable(Of DbExpression)) As DbRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="e67e2-223">引用的元素所在的实体集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-223">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="e67e2-224">引用的实体的特定类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-224">The specific type of the referenced entity.</span></span> <span data-ttu-id="e67e2-225">此实体类型必须与实体集的元素类型处于同一层次结构。</span><span class="sxs-lookup"><span data-stu-id="e67e2-225">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="e67e2-226">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 集合，这些对象提供键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-226">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="e67e2-227">在数目、类型和顺序上，这些表达式必须匹配所引用实体类型的关键属性。</span><span class="sxs-lookup"><span data-stu-id="e67e2-227">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="e67e2-228">创建新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它按照键值对给定类型的特定实体的引用进行编码。</span><span class="sxs-lookup"><span data-stu-id="e67e2-228">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="e67e2-229">使用给定实体集中的指定键值引用元素的新 DbRefExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-229">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-230"><paramref name="entitySet" /> 或 <paramref name="entityType" /> 为 null，或 <paramref name="keyValues" /> 为 null 或包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-230"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-231"><paramref name="entityType" /> 不是来自 <paramref name="entitySet" /> 的元素类型所在的类型层次结构（子类型、超类型或相同类型）。</span><span class="sxs-lookup"><span data-stu-id="e67e2-231"><paramref name="entityType" /> is not from the same type hierarchy (a subtype, supertype, or the same type) as <paramref name="entitySet" />'s element type.</span></span>

<span data-ttu-id="e67e2-232">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-232">-or-</span></span>

<span data-ttu-id="e67e2-233"><paramref name="keyValues" /> 的计数与 <paramref name="entitySet" /> 的元素类型声明的键成员的计数不符，或者 <paramref name="keyValues" /> 包含的表达式的结果类型与对应的键成员的类型不兼容。</span><span class="sxs-lookup"><span data-stu-id="e67e2-233">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateRef (entitySet As EntitySet, entityType As EntityType, ParamArray keyValues As DbExpression()) As DbRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.5">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="e67e2-234">引用的元素所在的实体集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-234">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="e67e2-235">引用的实体的特定类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-235">The specific type of the referenced entity.</span></span> <span data-ttu-id="e67e2-236">此实体类型必须与实体集的元素类型处于同一层次结构。</span><span class="sxs-lookup"><span data-stu-id="e67e2-236">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="e67e2-237">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 集合，这些对象提供键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-237">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="e67e2-238">在数目、类型和顺序上，这些表达式必须匹配所引用实体类型的关键属性。</span><span class="sxs-lookup"><span data-stu-id="e67e2-238">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="e67e2-239">创建新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它按照键值对给定类型的特定实体的引用进行编码。</span><span class="sxs-lookup"><span data-stu-id="e67e2-239">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="e67e2-240">使用给定实体集中的指定键值引用元素的新 DbRefExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-240">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-241"><paramref name="entitySet" /> 或 <paramref name="entityType" /> 为 null，或 <paramref name="keyValues" /> 为 null 或包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-241"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-242"><paramref name="entityType" /> 不是来自 <paramref name="entitySet" /> 的元素类型所在的类型层次结构（子类型、超类型或相同类型）。</span><span class="sxs-lookup"><span data-stu-id="e67e2-242"><paramref name="entityType" /> is not from the same type hierarchy (a subtype, supertype, or the same type) as <paramref name="entitySet" />'s element type.</span></span>

<span data-ttu-id="e67e2-243">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-243">-or-</span></span>

<span data-ttu-id="e67e2-244"><paramref name="keyValues" /> 的计数与 <paramref name="entitySet" /> 的元素类型声明的键成员的计数不符，或者 <paramref name="keyValues" /> 包含的表达式的结果类型与对应的键成员的类型不兼容。</span><span class="sxs-lookup"><span data-stu-id="e67e2-244">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-245">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，它为每个给定输入集元素计算一次指定的 <paramref name="apply" /> 表达式，并生成具有相应 input 和 apply 列的行集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-245">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-246">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-246">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="e67e2-247">一个方法，指定要针对每个输入集成员计算一次的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-247">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-248">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，它为每个给定输入集元素计算一次指定的 <paramref name="apply" /> 表达式，并生成具有相应 input 和 apply 列的行集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="e67e2-249">不包括 <paramref name="apply" /> 计算结果为空集的行。</span><span class="sxs-lookup"><span data-stu-id="e67e2-249">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="e67e2-250">使用指定输入、应用绑定和 CrossApply <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-250">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-251"><paramref name="source" /> 或 <paramref name="apply" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-251"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="e67e2-252">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-252">-or-</span></span>

<span data-ttu-id="e67e2-253"><paramref name="apply" /> 的结果包含为 null 的名称或表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-253">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-254"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-254"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-255">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-255">-or-</span></span> 
<span data-ttu-id="e67e2-256"><paramref name="apply" /> 的结果包含在表达式绑定中无效的名称或表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-256">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-257">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-257">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="e67e2-258">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定要针对每个输入集成员计算一次的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-258">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-259">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，它为每个给定输入集元素计算一次指定的 <paramref name="apply" /> 表达式，并生成具有相应 input 和 apply 列的行集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="e67e2-260">不包括 <paramref name="apply" /> 计算结果为空集的行。</span><span class="sxs-lookup"><span data-stu-id="e67e2-260">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="e67e2-261">使用指定输入、应用绑定和 CrossApply <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-261">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-262"><paramref name="input" /> 或 <paramref name="apply" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-262"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="static member CrossJoin : seq&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Data.Common.CommandTrees.DbCrossJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin inputs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs"><span data-ttu-id="e67e2-263">指定输入集的表达式绑定列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-263">A list of expression bindings that specifies the input sets.</span></span></param>
        <summary><span data-ttu-id="e67e2-264">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />，它无条件地联接输入表达式绑定列表指定的集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-264">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span></span></summary>
        <returns><span data-ttu-id="e67e2-265">新的 DbCrossJoinExpression，具有 CrossJoin 的  <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，表示输入设置的无条件联接。</span><span class="sxs-lookup"><span data-stu-id="e67e2-265">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-266"><paramref name="inputs" /> 为 null 或包含 null 元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-266"><paramref name="inputs" /> is null or contains null element.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-267"><paramref name="inputs" /> 包含的表达式绑定数目少于 2 个。</span><span class="sxs-lookup"><span data-stu-id="e67e2-267"><paramref name="inputs" /> contains fewer than 2 expression bindings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Deref : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDerefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-268">一个提供引用的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-268">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span></span> <span data-ttu-id="e67e2-269">此表达式必须具有引用类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-269">This expression must have a reference Type.</span></span></param>
        <summary><span data-ttu-id="e67e2-270">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />，它根据给定的引用表达式来检索特定实体。</span><span class="sxs-lookup"><span data-stu-id="e67e2-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span></span></summary>
        <returns><span data-ttu-id="e67e2-271">检索指定的实体的新 DbDerefExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-271">A new DbDerefExpression that retrieves the specified Entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-272"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-272"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-273"><paramref name="argument" /> 没有引用结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-273"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDistinctExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-274">定义要对其执行 Distinct 操作的集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-274">An expression that defines the set over which to perform the distinct operation.</span></span></param>
        <summary><span data-ttu-id="e67e2-275">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />，它从给定的集参数中移除重复项。</span><span class="sxs-lookup"><span data-stu-id="e67e2-275">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-276">表示应用于指定集参数的不同的操作新 DbDistinctExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-276">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-277"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-277"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-278"><paramref name="argument" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-278"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-279">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-279">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-280">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-280">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-281">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，它用左侧参数除以右侧参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-281">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-282">表示除法运算的新 DbArithmeticExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-282">A new DbArithmeticExpression representing the division operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-283"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-283"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-284"><paramref name="left" /> 或 <paramref name="right" /> 之间不存在任何常用数值结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-284">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Element : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbElementExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-285">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-285">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-286">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />，它将一个集合转换为单一实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-286">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span></span></summary>
        <returns><span data-ttu-id="e67e2-287">一个 DbElementExpression，表示从集参数到单一实例的转换。</span><span class="sxs-lookup"><span data-stu-id="e67e2-287">A DbElementExpression that represents the conversion of the set argument to a singleton.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-288"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-288"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-289"><paramref name="argument" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-289"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Equal : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-290">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-290">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-291">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-291">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-292">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，它比较左侧参数和右侧参数是否相等。</span><span class="sxs-lookup"><span data-stu-id="e67e2-292">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span></span></summary>
        <returns><span data-ttu-id="e67e2-293">表示相等比较的新 DbComparisonExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-293">A new DbComparisonExpression representing the equality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-294"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-294"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-295"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用的可进行相等比较的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-295">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Except : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExceptExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-296">一个定义左侧集参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-296">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-297">一个定义右侧集参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-297">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-298">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />，它计算从左侧集参数中减去右侧集参数的结果。</span><span class="sxs-lookup"><span data-stu-id="e67e2-298">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-299">一个新的 DbExceptExpression，表示从左侧参数和减去右侧参数的差异。</span><span class="sxs-lookup"><span data-stu-id="e67e2-299">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-300"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-300"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-301"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-301">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Exists : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-302">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-302">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-303">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它确定指定的集参数是否非空。</span><span class="sxs-lookup"><span data-stu-id="e67e2-303">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="e67e2-304">具有指定参数应用与新的 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> 的新 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-304">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-305"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-305"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-306"><paramref name="argument" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-306"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.False : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e67e2-307">获取一个具有 <see langword="false" /> 布尔值的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-307">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="e67e2-308">一个具有 <see langword="false" /> 布尔值的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-308">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Filter : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-309">一个指定输入集的表达式绑定。</span><span class="sxs-lookup"><span data-stu-id="e67e2-309">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="e67e2-310">一个表达式，表示要针对每个输入集成员计算的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-310">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-311">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />，它使用指定的谓词筛选给定输入集中的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="e67e2-312">新的 DbFilterExpression 产生筛选的程序集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-312">A new DbFilterExpression that produces the filtered set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-313"><paramref name="input" /> 或 <paramref name="predicate" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-313"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-314"><paramref name="predicate" /> 没有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-314"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-315">新建一个 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 FullOuterJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，在指定的联接条件下，将左侧表达式和右侧表达式指定的集联接起来。</span><span class="sxs-lookup"><span data-stu-id="e67e2-315">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-316">用于指定左侧集自变量的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-316">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-317">用于指定右侧集自变量的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-317">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="e67e2-318">表示要作为联接依据的条件的方法。</span><span class="sxs-lookup"><span data-stu-id="e67e2-318">A method representing the condition on which to join.</span></span> <span data-ttu-id="e67e2-319">此方法必须生成具有布尔结果类型的表达式，该结果类型提供联接条件的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-319">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="e67e2-320">新建一个 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 FullOuterJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，在指定的联接条件下，将左侧表达式和右侧表达式指定的集联接起来。</span><span class="sxs-lookup"><span data-stu-id="e67e2-320">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-321">一个新的 DbJoinExpression，带有 FullOuterJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，表示在给定联接条件下应用到左侧和右侧输入集的完全外部联接操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-321">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-322"><paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-322"><paramref name="left" />, <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="e67e2-323">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-323">-or-</span></span>

<span data-ttu-id="e67e2-324">由 <paramref name="joinCondition" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-324">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-325"><paramref name="left" /> 或 <paramref name="right" /> 不具有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-325"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-326">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-326">-or-</span></span> 
<span data-ttu-id="e67e2-327">由 <paramref name="joinCondition" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-327">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-328">指定左侧集参数的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-328">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-329">指定右侧集参数的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-329">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="e67e2-330">一个指定联接条件的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-330">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="e67e2-331">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 FullOuterJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> ，以此按照指定的联接条件联接左侧表达式绑定和右侧表达式绑定指定的集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-331">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-332">一个新的 DbJoinExpression，带有 FullOuterJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，表示在给定联接条件下应用于左右侧输入集的完全外部联接操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-332">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-333"><paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-333"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-334">由 <paramref name="joinCondition" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-334">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetEntityRef : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbEntityRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-335">提供实体的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-335">The expression that provides the entity.</span></span> <span data-ttu-id="e67e2-336">此表达式必须具有实体结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-336">This expression must have an entity result type.</span></span></param>
        <summary><span data-ttu-id="e67e2-337">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />，它以结构化形式检索指定实体的引用。</span><span class="sxs-lookup"><span data-stu-id="e67e2-337">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specified entity in structural form.</span></span></summary>
        <returns><span data-ttu-id="e67e2-338">检索指定的实体的引用的新 DbEntityRefExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-338">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-339"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-339"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-340"><paramref name="argument" /> 没有实体结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-340"><paramref name="argument" /> does not have an entity result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetRefKey : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefKeyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-341">提供引用的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-341">The expression that provides the reference.</span></span> <span data-ttu-id="e67e2-342">此表达式的引用类型必须具有实体元素类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-342">This expression must have a reference Type with an Entity element type.</span></span></param>
        <summary><span data-ttu-id="e67e2-343">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />，它以结构化形式检索指定引用的键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-343">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specified reference in structural form.</span></span></summary>
        <returns><span data-ttu-id="e67e2-344">新 DbRefKeyExpression 检索指定引用的键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-344">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-345"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-345"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-346"><paramref name="argument" /> 没有引用结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-346"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-347">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-347">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-348">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-348">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-349">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，它确定左侧参数是否大于右侧参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-349">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-350">表示大于比较的新 DbComparisonExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-350">A new DbComparisonExpression representing the greater-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-351"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-351"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-352"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用的可进行顺序比较的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-352">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-353">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-353">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-354">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-354">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-355">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，它确定左侧参数是否大于或等于右侧参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-355">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-356">表示大于或等于比较的新 DbComparisonExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-356">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-357"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-357"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-358"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用的可进行顺序比较的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-358">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member GroupBind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-359">要绑定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-359">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="e67e2-360">创建一个新的组表达式绑定，该绑定使用生成的变量名称和组变量名称来绑定给定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-360">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="e67e2-361">使用指定的表达式和生成的变量名称和组变量名称绑定新的组表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-361">A new group expression binding with the specified expression and a generated variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-362"><paramref name="input" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-362"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-363"><paramref name="input" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-363"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberSignature Language="F#" Value="static member GroupBindAs : System.Data.Common.CommandTrees.DbExpression * string * string -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs (input, varName, groupVarName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="groupVarName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-364">要绑定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-364">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="e67e2-365">应用于绑定的变量名称。</span><span class="sxs-lookup"><span data-stu-id="e67e2-365">The variable name that should be used for the binding.</span></span></param>
        <param name="groupVarName"><span data-ttu-id="e67e2-366">在 group-by 表达式中使用新组表达式绑定时，应用于引用组的变量名称。</span><span class="sxs-lookup"><span data-stu-id="e67e2-366">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span></span></param>
        <summary><span data-ttu-id="e67e2-367">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />，它使用指定的变量名称和组变量名称来绑定给定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-367">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="e67e2-368">使用指定的表达式、变量名称和组变量名称绑定新的组表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-368">A new group expression binding with the specified expression, variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-369"><paramref name="input" />、<paramref name="varName" /> 或 <paramref name="groupVarName" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-369"><paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-370"><paramref name="input" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-370"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Data.Common.CommandTrees.DbGroupExpressionBinding * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbGroupByExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy (input, keys, aggregates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-371">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-371">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="keys"><span data-ttu-id="e67e2-372">定义分组列的字符串表达式对列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-372">A list of string-expression pairs that define the grouping columns.</span></span></param>
        <param name="aggregates"><span data-ttu-id="e67e2-373">指定要应用的聚合方法的表达式列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-373">A list of expressions that specify aggregates to apply.</span></span></param>
        <summary><span data-ttu-id="e67e2-374">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />，它根据指定的组键对输入集的元素进行分组，并应用给定的聚合方法。</span><span class="sxs-lookup"><span data-stu-id="e67e2-374">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span></span></summary>
        <returns><span data-ttu-id="e67e2-375">使用指定输入集、分组密钥和聚合的新 DbGroupByExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-375">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-376">DbGroupByExpression 允许键列表或聚合列表为空，但不允许同时为两者。</span><span class="sxs-lookup"><span data-stu-id="e67e2-376">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-377"><paramref name="input" />、<paramref name="keys" /> 或 <paramref name="aggregates" /> 为 null，<paramref name="keys" /> 包含 null 列键或表达式，或者 <paramref name="aggregates" /> 包含 null 聚合列名称或聚合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-377"><paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-378"><paramref name="keys" /> 和 <paramref name="aggregates" /> 都为空，或指定了无效或重复的列名称。</span><span class="sxs-lookup"><span data-stu-id="e67e2-378">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-379">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 InnerJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，以此按照指定的联接条件联接左侧表达式和右侧表达式指定的集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-379">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-380">用于指定左侧集自变量的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-380">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-381">用于指定右侧集自变量的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-381">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="e67e2-382">表示要作为联接依据的条件的方法。</span><span class="sxs-lookup"><span data-stu-id="e67e2-382">A method representing the condition on which to join.</span></span> <span data-ttu-id="e67e2-383">此方法必须生成具有布尔结果类型的表达式，该结果类型提供联接条件的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-383">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="e67e2-384">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 InnerJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，以此按照指定的联接条件联接左侧表达式和右侧表达式指定的集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-385">新 DbJoinExpression，使用 InnerJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，代表应用于给定联接条件下的左右输入集的inner联接操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-385">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-386"><paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-386"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="e67e2-387">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-387">-or-</span></span>

<span data-ttu-id="e67e2-388">由 <paramref name="joinCondition" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-388">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-389"><paramref name="left" /> 或 <paramref name="right" /> 不具有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-389"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-390">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-390">-or-</span></span>

<span data-ttu-id="e67e2-391">由 <paramref name="joinCondition" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-391">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-392">指定左侧集参数的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-392">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-393">指定右侧集参数的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-393">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="e67e2-394">一个指定联接条件的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-394">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="e67e2-395">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 InnerJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> ，以此按照指定的联接条件联接左侧表达式绑定和右侧表达式绑定指定的集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-395">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-396">一个新的 DbJoinExpression，带有 InnerJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，表示在给定联接条件下应用于左右侧输入集的内部联接操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-396">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-397"><paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-397"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-398"><paramref name="joinCondition" /> 没有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-398"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIntersectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-399">一个定义左侧集参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-399">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-400">一个定义右侧集参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-400">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-401">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />，它计算左侧集参数和右侧集参数的交集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-401">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span></span></summary>
        <returns><span data-ttu-id="e67e2-402">一个新的 DbIntersectExpression，表示左侧参数和右侧参数的交集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-402">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-403"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-403"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-404"><paramref name="left" /> 或 <paramref name="right" /> 之间不存在任何常用集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-404">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-405">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />，它表示对给定参数应用指定的 lambda 函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-405">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="e67e2-406">一个 <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> 实例，表示要应用的 lambda 函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-406">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="e67e2-407">提供参数的表达式列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-407">A list of expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="e67e2-408">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />，它表示对给定参数应用指定的 lambda 函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-408">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="e67e2-409">新 DbLambdaExpression 表示 Lambda 函数应用程序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-409">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-410"><paramref name="lambda" /> 或 <paramref name="arguments" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-410"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-411"><paramref name="arguments" /> 的计数与 <paramref name="lambda" /> 声明的变量数量不等，或者 <paramref name="arguments" /> 所包含表达式的结果类型不等于或不可提升为对应的变量类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-411">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.5">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="e67e2-412">一个 <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> 实例，表示要应用的 lambda 函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-412">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="e67e2-413">提供参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-413">Expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="e67e2-414">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />，它表示对给定参数应用指定的 lambda 函数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-414">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="e67e2-415">新 DbLambdaExpression 表示 Lambda 函数应用程序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-415">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-416"><paramref name="lambda" /> 或 <paramref name="arguments" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-416"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-417"><paramref name="arguments" /> 的计数与 <paramref name="lambda" /> 声明的变量数量不等，或者 <paramref name="arguments" /> 所包含表达式的结果类型不等于或不可提升为对应的变量类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-417">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="e67e2-418">要调用的函数的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-418">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="e67e2-419">为函数提供参数的表达式列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-419">A list of expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="e67e2-420">使用给定参数创建表示指定函数的调用的新 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-420">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="e67e2-421">表示函数调用的新 DbFunctionExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-421">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-422"><paramref name="function" /> 为 null，或 <paramref name="arguments" /> 为 null 或包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-422"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-423"><paramref name="arguments" /> 的计数与 <paramref name="function" /> 声明的参数数量不相等，或 <paramref name="arguments" /> 包含具有与对应函数参数类型不相等或不能提升的结果类型的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-423">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.5">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="e67e2-424">要调用的函数的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-424">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="e67e2-425">提供函数的参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-425">Expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="e67e2-426">使用给定参数创建表示指定函数的调用的新 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-426">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="e67e2-427">表示函数调用的新 DbFunctionExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-427">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-428"><paramref name="function" /> 为 null，或 <paramref name="arguments" /> 为 null 或包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-428"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-429"><paramref name="arguments" /> 的计数与 <paramref name="function" /> 声明的参数数量不相等，或 <paramref name="arguments" /> 包含具有与对应函数参数类型不相等或不能提升的结果类型的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-429">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsEmpty : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsEmptyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-430">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-430">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-431">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />，它确定指定的集参数是否为空集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-431">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-432">使用指定参数的新 DbIsEmptyExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-432">A new DbIsEmptyExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-433"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-433"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-434"><paramref name="argument" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-434"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsNull : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-435">一个指定参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-435">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-436">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />，它确定指定的参数是否为 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-436">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span></span></summary>
        <returns><span data-ttu-id="e67e2-437">使用指定参数的新 DbIsNullExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-437">A new DbIsNullExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-438"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-438"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-439"><paramref name="argument" /> 有一个集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-439"><paramref name="argument" /> has a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-440">一个指定实例的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-440">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="e67e2-441">指定应与实例的结果类型进行比较的类型的类型元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-441">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="e67e2-442">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />，它确定给定的参数是否为指定的类型或子类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-442">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span></span></summary>
        <returns><span data-ttu-id="e67e2-443">使用指定实例和类型以及 DbExpressionKind IsOf 的新 DbIsOfExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-443">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-444">DbIsOfExpression 要求 `argument` 具有多态结果类型，并且这 `type` 是与该结果类型属于同一类型层次结构的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-444">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-445"><paramref name="argument" /> 或 <paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-445"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-446"><paramref name="type" /> 不与 <paramref name="argument" /> 的结果类型相同处于相同的类型层次结构中。</span><span class="sxs-lookup"><span data-stu-id="e67e2-446"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOfOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-447">一个指定实例的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-447">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="e67e2-448">指定应与实例的结果类型进行比较的类型的类型元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-448">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="e67e2-449">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> 表达式，该表达式确定给定的参数是否为指定的类型且只为该类型（不是子类型）。</span><span class="sxs-lookup"><span data-stu-id="e67e2-449">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span></span></summary>
        <returns><span data-ttu-id="e67e2-450">使用指定实例和类型以及 DbExpressionKind IsOfOnly 的新 DbIsOfExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-450">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-451">DbIsOfExpression 要求 `argument` 具有多态结果类型，并且这 `type` 是与该结果类型属于同一类型层次结构的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-451">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-452"><paramref name="argument" /> 或 <paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-452"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-453"><paramref name="type" /> 不与 <paramref name="argument" /> 的结果类型相同处于相同的类型层次结构中。</span><span class="sxs-lookup"><span data-stu-id="e67e2-453"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="outer"><span data-ttu-id="e67e2-454">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它指定外部集参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-454">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="e67e2-455">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它指定内部集参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-455">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="e67e2-456">一个方法，它指定应如何从外部集的元素中派生外部键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-456">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="e67e2-457">一个方法，它指定应如何从内部集的元素中派生内部键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-457">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <summary><span data-ttu-id="e67e2-458">新建一个 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它在指定的内部键和外部键之间达到相等的条件下，将外部表达式和内部表达式指定的集进行联接，将 InnerJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-458">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-459">一个新的 DbJoinExpression，带有 InnerJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，这表示在比较外部键值和内部键值是否相等的联接条件下将内部联接运算应用于左输入集和右输入集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-459">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-460"><paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKey" /> 或 <paramref name="innerKey" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-460"><paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span>

<span data-ttu-id="e67e2-461">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-461">-or-</span></span> 
<span data-ttu-id="e67e2-462">由 <paramref name="outerKey" /> 或 <paramref name="innerKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-462">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-463"><paramref name="outer" /> 或 <paramref name="inner" /> 不具有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-463"><paramref name="outer" /> or <paramref name="inner" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-464">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-464">-or-</span></span>

<span data-ttu-id="e67e2-465">无法比较由 <paramref name="outerKey" /> 和 <paramref name="innerKey" /> 生成的表达式是否相等。</span><span class="sxs-lookup"><span data-stu-id="e67e2-465">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="e67e2-466"><paramref name="selector" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-466">The type of the <paramref name="selector" />.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="e67e2-467">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它指定外部集参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-467">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="e67e2-468">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它指定内部集参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-468">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="e67e2-469">一个方法，它指定应如何从外部集的元素中派生外部键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-469">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="e67e2-470">一个方法，它指定应如何从内部集的元素中派生内部键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-470">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <param name="selector"><span data-ttu-id="e67e2-471">一个方法，它指定应如何从内部和外部集的元素中派生结果集的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-471">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span></span> <span data-ttu-id="e67e2-472">此方法必须生成与 Join 相兼容的类型的实例，且可将其解析为 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-472">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="e67e2-473">“备注”中介绍了有关 <c>TSelector</c> 的兼容性要求。</span><span class="sxs-lookup"><span data-stu-id="e67e2-473">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="e67e2-474">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，它通过由外部和内部表达式指定的集投影指定的选择器，在指定的内部键和外部键之间达到相等的条件下进行联接，将 InnerJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-474">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-475">新的 DbProjectExpression，它使用指定的选择器作为其投影、新的 DbJoinExpression 作为其输入。</span><span class="sxs-lookup"><span data-stu-id="e67e2-475">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span></span> <span data-ttu-id="e67e2-476">使用 InnerJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 来创建输入 DbJoinExpression，这表示在比较外部键值和内部键值是否相等的联接条件下将内部联接运算应用于左输入集和右输入集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-476">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-477">若要与联接兼容， `TSelector` 必须从派生 <xref:System.Data.Common.CommandTrees.DbExpression> ，或者必须是具有 DbExpression 派生属性的匿名类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-477">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="e67e2-478">以下是支持的类型的示例 `TSelector` ：</span><span class="sxs-lookup"><span data-stu-id="e67e2-478">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="e67e2-479">`TSelector`)  (<xref:System.Data.Common.CommandTrees.DbPropertyExpression> 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-479">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="e67e2-480"> (`TSelector` 是) 的 DbExpression 派生属性的匿名类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-480">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-481"><paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKey" />、<paramref name="innerKey" /> 或 <paramref name="selector" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-481"><paramref name="outer" />,  <paramref name="inner" />,  <paramref name="outerKey" />,  <paramref name="innerKey" /> or <paramref name="selector" /> is null.</span></span>

<span data-ttu-id="e67e2-482">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-482">-or-</span></span>

<span data-ttu-id="e67e2-483">由 <paramref name="outerKey" /> 或 <paramref name="innerKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-483">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span>

<span data-ttu-id="e67e2-484">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-484">-or-</span></span>

<span data-ttu-id="e67e2-485">在转换为 DbExpression 之后，<paramref name="selector" /> 的结果为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-485">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-486"><paramref name="outer" /> 或 <paramref name="inner" /> 不具有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-486"><paramref name="outer" /> or <paramref name="inner" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-487">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-487">-or-</span></span>

<span data-ttu-id="e67e2-488">由 <paramref name="outerKey" /> 和 <paramref name="innerKey" /> 生成的表达式无法比较是否相等。</span><span class="sxs-lookup"><span data-stu-id="e67e2-488">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> is not comparable for equality.</span></span>

<span data-ttu-id="e67e2-489">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-489">-or-</span></span> 
<span data-ttu-id="e67e2-490"><paramref name="selector" /> 的结果与 SelectMany 不兼容。</span><span class="sxs-lookup"><span data-stu-id="e67e2-490">The result of <paramref name="selector" /> is not compatible with SelectMany.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-491">使用指定的内联 Lambda 函数实现和形参创建 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-491">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="e67e2-492">一个定义 lambda 函数的逻辑的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-492">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="e67e2-493">一个 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> 集合，该集合表示 Lambda 函数的形参。</span><span class="sxs-lookup"><span data-stu-id="e67e2-493">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="e67e2-494">这些变量适合在 <paramref name="body" /> 表达式中使用。</span><span class="sxs-lookup"><span data-stu-id="e67e2-494">These variables are valid for use in the <paramref name="body" /> expression.</span></span></param>
        <summary><span data-ttu-id="e67e2-495">使用指定的内联 Lambda 函数实现和形参创建 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-495">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="e67e2-496">使用指定主体和规范参数描述内联 Lambda 函数的新 DbLambda。</span><span class="sxs-lookup"><span data-stu-id="e67e2-496">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-497"><paramref name="variables" /> 为 null 或包含 null，或者 <paramref name="body" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-497"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-498"><paramref name="variables" /> 包含多个具有相同变量名称的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-498"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression[] -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.5">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="e67e2-499">一个定义 lambda 函数的逻辑的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-499">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="e67e2-500">一个 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> 集合，该集合表示 Lambda 函数的形参。</span><span class="sxs-lookup"><span data-stu-id="e67e2-500">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="e67e2-501">这些变量适合在 <paramref name="body" /> 表达式中使用。</span><span class="sxs-lookup"><span data-stu-id="e67e2-501">These variables are valid for use in the <paramref name="body" /> expression.</span></span></param>
        <summary><span data-ttu-id="e67e2-502">使用指定的内联 Lambda 函数实现和形参创建 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="e67e2-503">使用指定主体和规范参数描述内联 Lambda 函数的新 DbLambda。</span><span class="sxs-lookup"><span data-stu-id="e67e2-503">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-504"><paramref name="variables" /> 为 null 或包含 null，或者 <paramref name="body" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-504"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-505"><paramref name="variables" /> 包含多个具有相同变量名称的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-505"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-506">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 LeftOuterJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，以此按照指定的联接条件联接左侧表达式和右侧表达式指定的集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-506">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-507">用于指定左侧集自变量的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-507">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-508">用于指定右侧集自变量的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-508">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="e67e2-509">表示要作为联接依据的条件的方法。</span><span class="sxs-lookup"><span data-stu-id="e67e2-509">A method representing the condition on which to join.</span></span> <span data-ttu-id="e67e2-510">此方法必须生成具有布尔结果类型的表达式，该结果类型提供联接条件的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-510">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="e67e2-511">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 LeftOuterJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，以此按照指定的联接条件联接左侧表达式和右侧表达式指定的集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-511">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-512">新 DbJoinExpression，使用 LeftOuterJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，代表应用于给定联接条件下的左右输入集的左外部联接操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-512">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-513"><paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-513"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="e67e2-514">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-514">-or-</span></span>

<span data-ttu-id="e67e2-515">由 <paramref name="joinCondition" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-515">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-516"><paramref name="left" /> 或 <paramref name="right" /> 不具有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-516"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-517">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-517">-or-</span></span>

<span data-ttu-id="e67e2-518">由 <paramref name="joinCondition" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-518">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-519">指定左侧集参数的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-519">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-520">指定右侧集参数的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-520">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="e67e2-521">一个指定联接条件的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-521">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="e67e2-522">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，它将 LeftOuterJoin 用作 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> ，以此按照指定的联接条件联接左侧表达式绑定和右侧表达式绑定指定的集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-522">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-523">一个新的 DbJoinExpression，带有 LeftOuterJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，表示在给定联接条件下应用于左右输入集的左外部联接操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-523">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-524"><paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-524"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-525"><paramref name="joinCondition" /> 没有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-525"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-526">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-526">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-527">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-527">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-528">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，它确定左侧参数是否小于右侧参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-528">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-529">表示小于比较的新 DbComparisonExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-529">A new DbComparisonExpression representing the less-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-530"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-530"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-531"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用的可进行顺序比较的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-531">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-532">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-532">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-533">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-533">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-534">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，它确定左侧参数是否小于或等于右侧参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-534">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-535">表示小于或等于比较的新 DbComparisonExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-535">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-536"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-536"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-537"><paramref name="left" /> 和 <paramref name="right" /> 之间不存在任何可进行相等和顺序比较的常用结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-537">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-538">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />，它将指定的输入字符串与给定的模式进行比较。</span><span class="sxs-lookup"><span data-stu-id="e67e2-538">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-539">指定输入字符串的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-539">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="e67e2-540">指定模式字符串的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-540">An expression that specifies the pattern string.</span></span></param>
        <summary><span data-ttu-id="e67e2-541">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />，它将指定的输入字符串与给定的模式进行比较。</span><span class="sxs-lookup"><span data-stu-id="e67e2-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
        <returns><span data-ttu-id="e67e2-542">使用指定输入、模式和 null 转义的新 DbLikeExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-542">A new DbLikeExpression with the specified input, pattern and a null escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-543"><paramref name="Argument" /> 或 <paramref name="pattern" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-543"><paramref name="Argument" /> or <paramref name="pattern" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-544"><paramref name="Argument" /> 或 <paramref name="pattern" /> 没有字符串结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-544"><paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-545">指定输入字符串的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-545">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="e67e2-546">指定模式字符串的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-546">An expression that specifies the pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="e67e2-547">指定转义字符串的可选表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-547">An optional expression that specifies the escape string.</span></span></param>
        <summary><span data-ttu-id="e67e2-548">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />，它使用可选转义字符串将指定的输入字符串与给定的模式进行比较。</span><span class="sxs-lookup"><span data-stu-id="e67e2-548">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span></span></summary>
        <returns><span data-ttu-id="e67e2-549">使用指定输入、模式和转义的新 DbLikeExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-549">A new DbLikeExpression with the specified input, pattern and escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-550"><paramref name="argument" />、<paramref name="pattern" /> 或 <paramref name="escape" /> 为 NULL。</span><span class="sxs-lookup"><span data-stu-id="e67e2-550"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-551"><paramref name="argument" />、<paramref name="pattern" /> 或 <paramref name="escape" /> 没有字符串结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-551"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Limit : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-552">一个指定输入集合的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-552">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="e67e2-553">指定限制值的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-553">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="e67e2-554">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> 对象，该对象将参数集合中的元素个数限制为指定计数限定值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-554">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="e67e2-555">输出中不包括等值结果。</span><span class="sxs-lookup"><span data-stu-id="e67e2-555">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="e67e2-556">使用指定的不包括绑定的结果的参数和计数上限值的新 DbLimitExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-556">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-557"><paramref name="argument" /> 或 <paramref name="count" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-557"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-558"><paramref name="argument" /> 没有集合结果类型，或者 <paramref name="count" /> 没有等同于或可提升为 64 位整数类型的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-558"><paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Minus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-559">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-559">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-560">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-560">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-561">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，它从左侧参数中减去右侧参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-561">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-562">表示减法运算的新 DbArithmeticExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-562">A new DbArithmeticExpression representing the subtraction operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-563"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-563"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-564"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用数值结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-564">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Modulo : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-565">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-565">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-566">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-566">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-567">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，它计算左侧参数除以右侧参数所得的余数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-567">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-568">表示取模运算的新 DbArithmeticExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-568">A new DbArithmeticExpression representing the modulo operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-569"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-569"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-570"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用数值结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-570">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-571">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-571">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-572">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-572">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-573">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，它用左侧参数乘以右侧参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-573">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-574">表示乘法运算的新 DbArithmeticExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-574">A new DbArithmeticExpression representing the multiplication operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-575"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-575"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-576"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用数值结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-576">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-577">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />，它表示关联关系组合的导航。</span><span class="sxs-lookup"><span data-stu-id="e67e2-577">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (navigateFrom, fromEnd, toEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="navigateFrom"><span data-ttu-id="e67e2-578">一个表达式，指定应作为导航起点的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-578">An expression that specifies the instance from which navigation should occur.</span></span></param>
        <param name="fromEnd"><span data-ttu-id="e67e2-579">指示导航应发生的关系结束属性的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-579">Metadata for the property that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEnd"><span data-ttu-id="e67e2-580">指示导航应发生于关系结束属性的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-580">Metadata for the property that represents the end of the relationship to which navigation should occur.</span></span></param>
        <summary><span data-ttu-id="e67e2-581">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />，它表示关联关系组合的导航。</span><span class="sxs-lookup"><span data-stu-id="e67e2-581">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="e67e2-582">从指定的导航源实例中指定的关系类型的关系端指定的导航的新 DbRelationshipNavigationExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-582">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-583"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>要求始终从引用中进行导航，因此 `navigateFrom` 必须始终具有引用结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-583"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-584"><paramref name="fromEnd" />、<paramref name="toEnd" /> 或 <paramref name="navigateFrom" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-584"><paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-585"><paramref name="fromEnd" /> 和 <paramref name="toEnd" /> 不是由同一关系类型声明，或者 <paramref name="navigateFrom" /> 的结果类型与 <paramref name="fromEnd" /> 的属性类型不兼容。</span><span class="sxs-lookup"><span data-stu-id="e67e2-585"><paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Metadata.Edm.RelationshipType * string * string * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (type, fromEndName, toEndName, navigateFrom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" />
        <Parameter Name="fromEndName" Type="System.String" />
        <Parameter Name="toEndName" Type="System.String" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e67e2-586">表示关系的关系类型的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-586">Metadata for the relation type that represents the relationship.</span></span></param>
        <param name="fromEndName"><span data-ttu-id="e67e2-587">关系类型的属性名称，该类型表示了导航应该产生的关系的结尾。</span><span class="sxs-lookup"><span data-stu-id="e67e2-587">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEndName"><span data-ttu-id="e67e2-588">关系类型的属性名称，该类型表示了导航应该产生的关系的结尾。</span><span class="sxs-lookup"><span data-stu-id="e67e2-588">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span></span></param>
        <param name="navigateFrom"><span data-ttu-id="e67e2-589">一个表达式，指定应作为导航起点的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-589">An expression the specifies the instance from which navigation should occur.</span></span></param>
        <summary><span data-ttu-id="e67e2-590">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />，它表示关联关系组合的导航。</span><span class="sxs-lookup"><span data-stu-id="e67e2-590">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="e67e2-591">从指定的导航源实例中指定的关系类型的关系端指定的导航的新 DbRelationshipNavigationExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-591">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-592"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>要求始终从引用中进行导航，因此 `navigateFrom` 必须始终具有引用结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-592"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-593"><paramref name="type" />、<paramref name="fromEndName" />、<paramref name="toEndName" /> 或 <paramref name="navigateFrom" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-593"><paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-594"><paramref name="type" /> 与此命令树的元数据工作区未关联或 <paramref name="navigateFrom" /> 与另一个命令树相关联，或者 <paramref name="type" /> 不声明具有名称 <paramref name="toEndName" /> 或 <paramref name="fromEndName" /> 的关系结束属性，或者 <paramref name="navigateFrom" /> 具有与名称 <paramref name="fromEndName" /> 的关系结束属性的属性类型不兼容的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-594"><paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-595">一个指定参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-595">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-596">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，它对参数值求反。</span><span class="sxs-lookup"><span data-stu-id="e67e2-596">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-597">表示求反运算的新 DbArithmeticExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-597">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-598"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-598"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-599"><paramref name="argument" /> 不存在任何数值结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-599">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-600">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-600">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="e67e2-601">新实例的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-601">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="e67e2-602">指定新实例的值的表达式，根据实例类型对其解释。</span><span class="sxs-lookup"><span data-stu-id="e67e2-602">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="e67e2-603">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-603">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="e67e2-604">如果类型参数为集合类型，参数将指定集合的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-604">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="e67e2-605">否则，参数将用作新实例中的属性值或列值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-605">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="e67e2-606">使用指定的类型和参数的新 DbNewInstanceExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-606">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-607">如果 `instanceType` 是集合类型，则中的每个表达式都 `arguments` 必须具有可提升为的元素类型的结果类型 `instanceType` 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-607">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="e67e2-608">如果 `instanceType` 是行类型，则 `arguments` 必须包含与行类型中的列数相同的表达式，并且每个表达式的结果类型必须等于或可提升为对应列的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-608">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="e67e2-609">未声明任何列的行类型无效。</span><span class="sxs-lookup"><span data-stu-id="e67e2-609">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="e67e2-610">如果 `instanceType` 是实体类型，则 `arguments` 必须包含任意多个表达式，因为该类型定义了属性，并且每个表达式的结果类型必须等于或可提升为相应属性的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-610">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-611"><paramref name="instanceType" /> 或 <paramref name="arguments" /> 为 null，或者 <paramref name="arguments" /> 包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-611"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-612"><paramref name="arguments" /> 为空，或者包含的表达式的结果类型与 <paramref name="instanceType" /> 要求不匹配（如“备注”部分所述）。</span><span class="sxs-lookup"><span data-stu-id="e67e2-612"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.5">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="e67e2-613">新实例的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-613">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="e67e2-614">指定新实例的值的表达式，根据实例类型对其解释。</span><span class="sxs-lookup"><span data-stu-id="e67e2-614">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="e67e2-615">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-615">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="e67e2-616">如果类型参数为集合类型，参数将指定集合的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-616">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="e67e2-617">否则，参数将用作新实例中的属性值或列值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-617">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="e67e2-618">使用指定的类型和参数的新 DbNewInstanceExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-618">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-619">如果 `instanceType` 是集合类型，则中的每个表达式都 `arguments` 必须具有可提升为的元素类型的结果类型 `instanceType` 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-619">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="e67e2-620">如果 `instanceType` 是行类型，则 `arguments` 必须包含与行类型中的列数相同的表达式，并且每个表达式的结果类型必须等于或可提升为对应列的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-620">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="e67e2-621">未声明任何列的行类型无效。</span><span class="sxs-lookup"><span data-stu-id="e67e2-621">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="e67e2-622">如果 `instanceType` 是实体类型，则 `arguments` 必须包含任意多个表达式，因为该类型定义了属性，并且每个表达式的结果类型必须等于或可提升为相应属性的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-622">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-623"><paramref name="instanceType" /> 或 <paramref name="arguments" /> 为 null，或者 <paramref name="arguments" /> 包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-623"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-624"><paramref name="arguments" /> 为空，或者包含的表达式的结果类型与 <paramref name="instanceType" /> 要求不匹配（如“备注”部分所述）。</span><span class="sxs-lookup"><span data-stu-id="e67e2-624"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-625">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，它构造一个包含指定元素的集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-625">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="e67e2-626">提供集合元素的表达式列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-626">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="e67e2-627">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，它构造一个包含指定元素的集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="e67e2-628">集合的类型基于元素的通用类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-628">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="e67e2-629">如果不存在通用元素类型，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="e67e2-629">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="e67e2-630">使用指定的集合类型和参数的新 DbNewInstanceExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-630">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-631"><paramref name="elements" /> 为 null 或包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-631"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-632"><paramref name="elements" /> 为空，或包含不存在通用结果类型的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-632"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.5">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="e67e2-633">提供集合元素的表达式列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-633">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="e67e2-634">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，它构造一个包含指定元素的集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="e67e2-635">集合的类型基于元素的通用类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-635">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="e67e2-636">如果不存在通用元素类型，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="e67e2-636">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="e67e2-637">使用指定的集合类型和参数的新 DbNewInstanceExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-637">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-638"><paramref name="elements" /> 为 null 或包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-638"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-639"><paramref name="elements" /> 为空，或包含不存在通用结果类型的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-639"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberSignature Language="F#" Value="static member NewEmptyCollection : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection collectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collectionType"><span data-ttu-id="e67e2-640">要创建的集合的类型元数据</span><span class="sxs-lookup"><span data-stu-id="e67e2-640">The type metadata for the collection to create</span></span></param>
        <summary><span data-ttu-id="e67e2-641">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，它构造一个指定集合类型的空集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-641">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span></span></summary>
        <returns><span data-ttu-id="e67e2-642">使用指定的集合类型和空 <paramref name="Arguments" /> 列表的新 DbNewInstanceExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-642">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-643"><paramref name="collectionType" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-643"><paramref name="collectionType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-644"><paramref name="collectionType" /> 不是集合集合类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-644"><paramref name="collectionType" /> is not a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberSignature Language="F#" Value="static member NewRow : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow columnValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="columnValues"><span data-ttu-id="e67e2-645">定义行结构和数值的“字符串-DbExpression 键-值”（string-DbExpression key-value）对列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-645">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span></span></param>
        <summary><span data-ttu-id="e67e2-646">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，它生成具有指定的命名列和给定值的行，该行被指定为表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-646">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span></span></summary>
        <returns><span data-ttu-id="e67e2-647">表示行构造的新 DbNewInstanceExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-647">A new DbNewInstanceExpression that represents the construction of the row.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-648"><paramref name="columnValues" /> 为 null，或者包含具有 null 列名或表达式的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-648"><paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-649"><paramref name="columnValues" /> 为空，或者包含重复的或无效的列名称。</span><span class="sxs-lookup"><span data-stu-id="e67e2-649"><paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Not : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbNotExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-650">一个指定参数的布尔表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-650">A Boolean expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-651">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />，它对给定的参数执行逻辑非运算。</span><span class="sxs-lookup"><span data-stu-id="e67e2-651">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-652">使用指定参数的新 DbNotExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-652">A new DbNotExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-653"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-653"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-654"><paramref name="argument" /> 没有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-654"><paramref name="argument" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member NotEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-655">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-655">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-656">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-656">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-657">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，它比较左侧参数和右侧参数是否不等。</span><span class="sxs-lookup"><span data-stu-id="e67e2-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span></span></summary>
        <returns><span data-ttu-id="e67e2-658">表示不相等比较的新 DbComparisonExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-658">A new DbComparisonExpression representing the inequality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-659"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-659"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-660"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用的可进行相等比较的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-660">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberSignature Language="F#" Value="static member Null : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null nullType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="nullType"><span data-ttu-id="e67e2-661">null 值的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-661">The type of the null value.</span></span></param>
        <summary><span data-ttu-id="e67e2-662">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />，它表示具有类型的 null 值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span></span></summary>
        <returns><span data-ttu-id="e67e2-663">DbNullExpression 的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-663">An instance of DbNullExpression.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-664"><paramref name="nullType" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-664"><paramref name="nullType" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-665">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-665">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="e67e2-666">要使输入集的元素包括在结果集中，该元素必须具有的类型的类型元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-666">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="e67e2-667">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />，它从指定的输入集生成属于指定类型的元素集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-667">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span></span></summary>
        <returns><span data-ttu-id="e67e2-668">使用指定的集参数和类型的新 DbOfTypeExpression，以及 <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" /> 的 ExpressionKind。</span><span class="sxs-lookup"><span data-stu-id="e67e2-668">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-669">DbOfTypeExpression 要求具有具有多 `argument` 态元素类型的集合结果类型，并且这 `type` 是与该元素类型属于同一类型层次结构的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-669">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-670"><paramref name="argument" /> 或 <paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-670"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-671"><paramref name="argument" /> 没有集合结果类型，或者 <paramref name="type" /> 不是 <paramref name="argument" /> 的集合结果类型的元素类型所在类型层次结构中的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-671"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfTypeOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-672">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-672">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="e67e2-673">要使输入集的元素包括在结果集中，该元素必须严格匹配的类型的类型元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-673">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="e67e2-674">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />，它从指定的输入集生成完全为指定类型的元素集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span></span></summary>
        <returns><span data-ttu-id="e67e2-675">使用指定的集参数和类型的新 DbOfTypeExpression，以及 <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" /> 的 ExpressionKind。</span><span class="sxs-lookup"><span data-stu-id="e67e2-675">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-676">DbOfTypeExpression 要求具有具有多 `argument` 态元素类型的集合结果类型，并且这 `type` 是与该元素类型属于同一类型层次结构的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-676">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-677"><paramref name="argument" /> 或 <paramref name="type" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-677"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-678"><paramref name="argument" /> 没有集合结果类型，或者 <paramref name="type" /> 不是 <paramref name="argument" /> 的集合结果类型的元素类型所在类型层次结构中的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-678"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Or : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbOrExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-679">一个指定左侧参数的布尔表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-679">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-680">一个指定右侧参数的布尔表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-680">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-681">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />，它对左侧参数和右侧参数执行逻辑“或”运算。</span><span class="sxs-lookup"><span data-stu-id="e67e2-681">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="e67e2-682">使用指定参数的新 DbOrExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-682">A new DbOrExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-683"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-683"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-684"><paramref name="left" /> 或 <paramref name="right" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-684"><paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-685">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它使用升序排序顺序和默认排序规则按照指定排序关键字对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-685">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-686">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-686">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="e67e2-687">一个方法，该方法指定如何在给定输入集成员时，派生排序键表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-687">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-688">此方法必须生成一个可比较顺序的结果类型的表达式，提供排序键定义。</span><span class="sxs-lookup"><span data-stu-id="e67e2-688">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="e67e2-689">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它使用升序排序顺序和默认排序规则按照指定排序关键字对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-690">表示整个按顺序的操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-690">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-691"><paramref name="source" /> 或 <paramref name="sortKey" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-691"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="e67e2-692">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-692">-or-</span></span>

<span data-ttu-id="e67e2-693">由 <paramref name="sortKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-693">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-694"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-694"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-695">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-695">-or-</span></span>

<span data-ttu-id="e67e2-696"><paramref name="sortKey" /> 生成的表达式没有可比较顺序的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-696">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-697">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-697">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="e67e2-698">一个方法，该方法指定如何在给定输入集成员时，派生排序键表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-698">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-699">此方法必须生成一个可比较顺序的结果类型的表达式，提供排序键定义。</span><span class="sxs-lookup"><span data-stu-id="e67e2-699">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="e67e2-700">排序所依据的排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-700">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="e67e2-701">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它使用升序排序顺序和指定排序规则按照指定排序关键字对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-701">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-702">表示整个按顺序的操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-702">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-703"><paramref name="source" />、<paramref name="sortKey" /> 或 <paramref name="collation" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-703"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="e67e2-704">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-704">-or-</span></span> 
<span data-ttu-id="e67e2-705">由 <paramref name="sortKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-705">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-706"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-706"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-707">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-707">-or-</span></span>

<span data-ttu-id="e67e2-708"><paramref name="sortKey" /> 生成的表达式没有可比较顺序的字符串结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-708">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67e2-709"><paramref name="collation" /> 为空，或者只包含空白字符。</span><span class="sxs-lookup"><span data-stu-id="e67e2-709"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-710">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它使用降序排序顺序和默认排序规则按照指定排序关键字对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-710">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-711">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-711">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="e67e2-712">一个方法，该方法指定如何在给定输入集成员时，派生排序键表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-712">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-713">此方法必须生成一个可比较顺序的结果类型的表达式，提供排序键定义。</span><span class="sxs-lookup"><span data-stu-id="e67e2-713">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="e67e2-714">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它使用降序排序顺序和默认排序规则按照指定排序关键字对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-714">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-715">表示整个按顺序的操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-715">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-716"><paramref name="source" /> 或 <paramref name="sortKey" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-716"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="e67e2-717">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-717">-or-</span></span>

<span data-ttu-id="e67e2-718">由 <paramref name="sortKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-718">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-719"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-719"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-720">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-720">-or-</span></span>

<span data-ttu-id="e67e2-721"><paramref name="sortKey" /> 生成的表达式没有可比较顺序的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-721">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-722">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-722">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="e67e2-723">一个方法，该方法指定如何在给定输入集成员时，派生排序键表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-723">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-724">此方法必须生成一个可比较顺序的结果类型的表达式，提供排序键定义。</span><span class="sxs-lookup"><span data-stu-id="e67e2-724">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="e67e2-725">排序所依据的排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-725">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="e67e2-726">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它使用降序排序顺序和指定排序规则按照指定排序关键字对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-726">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-727">表示整个按顺序的操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-727">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-728"><paramref name="source" />、<paramref name="sortKey" /> 或 <paramref name="collation" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-728"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="e67e2-729">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-729">-or-</span></span>

<span data-ttu-id="e67e2-730">由 <paramref name="sortKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-730">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-731"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-731"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-732">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-732">-or-</span></span>

<span data-ttu-id="e67e2-733"><paramref name="sortKey" /> 生成的表达式没有可比较顺序的字符串结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-733">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67e2-734"><paramref name="collation" /> 为空，或者只包含空白字符。</span><span class="sxs-lookup"><span data-stu-id="e67e2-734"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-735">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，它为每个给定输入集元素计算一次指定的 <paramref name="apply" /> 表达式，并生成具有相应 input 和 apply 列的行集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-736">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-736">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="e67e2-737">一个方法，指定要针对每个输入集成员计算一次的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-737">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-738">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，它为每个给定输入集元素计算一次指定的 <paramref name="apply" /> 表达式，并生成具有相应 input 和 apply 列的行集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-738">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="e67e2-739">对于 <paramref name="apply" /> 计算结果为空集的行，其 apply 列的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-739">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-740">使用指定输入、应用绑定和 OuterApply <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-740">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-741"><paramref name="source" /> 或 <paramref name="apply" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-741"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="e67e2-742">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-742">-or-</span></span> 
<span data-ttu-id="e67e2-743"><paramref name="apply" /> 的结果包含为 null 的名称或表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-743">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-744"><paramref name="Source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-744"><paramref name="Source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-745">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-745">-or-</span></span>

<span data-ttu-id="e67e2-746"><paramref name="apply" /> 的结果包含在表达式绑定中无效的名称或表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-746">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-747">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-747">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="e67e2-748">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定要针对每个输入集成员计算一次的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-748">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-749">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，它为每个给定输入集元素计算一次指定的 <paramref name="apply" /> 表达式，并生成具有相应 input 和 apply 列的行集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-749">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="e67e2-750">对于 <paramref name="apply" /> 计算结果为空集的行，其 apply 列的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-750">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-751">使用指定输入、应用绑定和 OuterApply <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-751">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-752"><paramref name="input" /> 或 <paramref name="apply" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-752"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Parameter : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbParameterReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e67e2-753">被引用参数的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-753">The type of the referenced parameter.</span></span></param>
        <param name="name"><span data-ttu-id="e67e2-754">所引用的参数的名称。</span><span class="sxs-lookup"><span data-stu-id="e67e2-754">The name of the referenced parameter.</span></span></param>
        <summary><span data-ttu-id="e67e2-755">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />，它使用指定的名称和类型引用参数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-755">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="e67e2-756">以指定名称和类型表示参数的引用的 DbParameterReferenceExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-756">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span></span> <span data-ttu-id="e67e2-757">该表达式的结果类型将与 <paramref name="type" /> 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="e67e2-757">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Plus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-758">一个指定左侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-758">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-759">一个指定右侧参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-759">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-760">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，它将左侧参数与右侧参数相加。</span><span class="sxs-lookup"><span data-stu-id="e67e2-760">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-761">表示加法运算的新 DbArithmeticExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-761">A new DbArithmeticExpression representing the addition operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-762"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-762"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-763"><paramref name="left" /> 与 <paramref name="right" /> 之间不存在任何常用数值结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-763">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberSignature Language="F#" Value="static member Project : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project (input, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-764">一个指定输入集的表达式绑定。</span><span class="sxs-lookup"><span data-stu-id="e67e2-764">An expression binding that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="e67e2-765">要对集投影的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-765">An expression to project over the set.</span></span></param>
        <summary><span data-ttu-id="e67e2-766">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，它对给定的输入集投影指定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-766">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-767">表示投影运算的新 DbProjectExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-767">A new DbProjectExpression that represents the projection operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-768"><paramref name="input" /> 或 <paramref name="projection" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-768"><paramref name="input" /> or <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-769">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，它表示对指定属性的检索。</span><span class="sxs-lookup"><span data-stu-id="e67e2-769">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EdmProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="e67e2-770">要从中检索属性的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-770">The instance from which to retrieve the property.</span></span> <span data-ttu-id="e67e2-771">如果该属性为静态，则可能为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-771">May be null if the property is static.</span></span></param>
        <param name="propertyMetadata"><span data-ttu-id="e67e2-772">要检索的属性的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-772">Metadata for the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="e67e2-773">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，它表示对指定属性的检索。</span><span class="sxs-lookup"><span data-stu-id="e67e2-773">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
        <returns><span data-ttu-id="e67e2-774">表示属性检索的新 DbPropertyExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-774">A new DbPropertyExpression representing the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-775"><paramref name="propertyMetadata" /> 为 null，或者 <paramref name="instance" /> 为 null 且属性并非静态。</span><span class="sxs-lookup"><span data-stu-id="e67e2-775"><paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, navigationProperty As NavigationProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.NavigationProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, navigationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="e67e2-776">要从中检索导航属性的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-776">The instance from which to retrieve the navigation property.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="e67e2-777">要检索的导航属性的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-777">Metadata for the navigation property to retrieve.</span></span></param>
        <summary><span data-ttu-id="e67e2-778">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，它表示对指定导航属性的检索。</span><span class="sxs-lookup"><span data-stu-id="e67e2-778">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span></span></summary>
        <returns><span data-ttu-id="e67e2-779">表示导航属性检索的新 DbPropertyExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-779">A new DbPropertyExpression representing the navigation property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-780"><paramref name="navigationProperty" /> 或 <paramref name="instance" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-780"><paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, relationshipEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="e67e2-781">要从中检索关系端成员的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-781">The instance from which to retrieve the relationship end member.</span></span></param>
        <param name="relationshipEnd"><span data-ttu-id="e67e2-782">要检索的关系端成员的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-782">Metadata for the relationship end member to retrieve.</span></span></param>
        <summary><span data-ttu-id="e67e2-783">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，它表示对指定关系端成员的检索。</span><span class="sxs-lookup"><span data-stu-id="e67e2-783">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span></span></summary>
        <returns><span data-ttu-id="e67e2-784">表示关系端成员检索的新 DbPropertyExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-784">A new DbPropertyExpression representing the relationship end member retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-785"><paramref name="relationshipEnd" /> 为 null，或者 <paramref name="instance" /> 为 null 且属性并非静态。</span><span class="sxs-lookup"><span data-stu-id="e67e2-785"><paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="e67e2-786">要从中检索属性的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-786">The instance from which to retrieve the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="e67e2-787">要检索的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e67e2-787">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="e67e2-788">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，它表示从给定实例中检索具有指定名称的实例属性。</span><span class="sxs-lookup"><span data-stu-id="e67e2-788">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span></span></summary>
        <returns><span data-ttu-id="e67e2-789">新 DbPropertyExpression 表示属性检索。</span><span class="sxs-lookup"><span data-stu-id="e67e2-789">A new DbPropertyExpression that represents the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-790"><paramref name="propertyName" /> 为 null，或者 <paramref name="instance" /> 为 null 且属性并非静态。</span><span class="sxs-lookup"><span data-stu-id="e67e2-790"><paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67e2-791">没有具有指定名称的属性是由 <paramref name="instance" /> 声明的。</span><span class="sxs-lookup"><span data-stu-id="e67e2-791">No property with the specified name is declared by the type of <paramref name="instance" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-792">创建新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它按照键值对特定实体的引用进行编码。</span><span class="sxs-lookup"><span data-stu-id="e67e2-792">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RefFromKey (entitySet As EntitySet, keyRow As DbExpression) As DbRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="e67e2-793">引用元素所在的“实体”。</span><span class="sxs-lookup"><span data-stu-id="e67e2-793">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="e67e2-794">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，构造具有与实体类型所引用键属性相匹配（编号、类型和顺序）的列的记录。</span><span class="sxs-lookup"><span data-stu-id="e67e2-794">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <summary><span data-ttu-id="e67e2-795">创建新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它按照键值对特定实体的引用进行编码。</span><span class="sxs-lookup"><span data-stu-id="e67e2-795">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="e67e2-796">使用指定实体集中的指定键值引用元素的新 DbRefExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-796">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-797">`keyRow`应为一个表达式，该表达式指定标识给定实体集中的被引用实体的键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-797">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="e67e2-798">的结果类型 `keyRow` 应包含实体类型定义的每个键属性对应的列 `entitySet's` 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-798">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-799"><paramref name="entitySet" /> 或 <paramref name="keyRow" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-799"><paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-800"><paramref name="keyRow" /> 没有与引用的实体集的实体类别匹配的记录结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-800"><paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RefFromKey (entitySet As EntitySet, keyRow As DbExpression, entityType As EntityType) As DbRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EntityType -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="e67e2-801">引用元素所在的“实体”。</span><span class="sxs-lookup"><span data-stu-id="e67e2-801">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="e67e2-802">一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，构造具有与实体类型所引用键属性相匹配（编号、类型和顺序）的列的记录。</span><span class="sxs-lookup"><span data-stu-id="e67e2-802">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <param name="entityType"><span data-ttu-id="e67e2-803">引用所指的实体的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-803">The type of the Entity that the reference should refer to.</span></span></param>
        <summary><span data-ttu-id="e67e2-804">创建新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它按照键值对特定实体的引用进行编码。</span><span class="sxs-lookup"><span data-stu-id="e67e2-804">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="e67e2-805">使用指定实体集中的指定键值引用元素的新 DbRefExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-805">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-806">`keyRow`应为一个表达式，该表达式指定标识给定实体集中的被引用实体的键值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-806">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="e67e2-807">的结果类型 `keyRow` 应包含实体类型定义的每个键属性对应的列 `entitySet's` 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-807">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-808"><paramref name="entitySet" />、<paramref name="keyRow" /> 或 <paramref name="entityType" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-808"><paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-809"><paramref name="entityType" /> 与实体集的实体类型不在同一类型层次结构中，或者 <paramref name="keyRow" /> 没有与引用的实体集的实体类型匹配的记录结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-809"><paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberSignature Language="F#" Value="static member Scan : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Common.CommandTrees.DbScanExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan targetSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="targetSet"><span data-ttu-id="e67e2-810">要引用的实体集或关系集的元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-810">Metadata for the entity or relationship set to reference.</span></span></param>
        <summary><span data-ttu-id="e67e2-811">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />，它引用指定的实体集或关系集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-811">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-812">基于指定的实体或关系集的新 DbScanExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-812">A new DbScanExpression based on the specified entity or relationship set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-813"><paramref name="targetSet" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-813"><paramref name="targetSet" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, 'Projection&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select (source, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection"><span data-ttu-id="e67e2-814"><paramref name="projection" /> 的方法结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-814">The method result type of <paramref name="projection" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e67e2-815">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-815">An expression that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="e67e2-816">一个方法，指定如何从输入集的成员派生投影表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-816">A method that specifies how to derive the projected expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-817">此方法必须生成与 Select 兼容且可以解析为 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-817">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="e67e2-818">“备注”中介绍了有关 <c>TProjection</c> 的兼容性要求。</span><span class="sxs-lookup"><span data-stu-id="e67e2-818">Compatibility requirements for <c>TProjection</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="e67e2-819">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，它对给定的输入集选择指定的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-819">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-820">表示选择操作的新 DbProjectExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-820">A new DbProjectExpression that represents the select operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-821">若要与 Select 兼容， `TProjection` 则必须是从派生的 <xref:System.Data.Common.CommandTrees.DbExpression> ，或者必须是具有 DbExpression 派生属性的匿名类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-821">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="e67e2-822">以下是支持的类型的示例 `TProjection` ：</span><span class="sxs-lookup"><span data-stu-id="e67e2-822">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="e67e2-823">`TProjection`为 <xref:System.Data.Common.CommandTrees.DbPropertyExpression>) 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-823">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="e67e2-824"> (`TProjection` 是) 的 DbExpression 派生属性的匿名类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-824">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-825"><paramref name="source" /> 或 <paramref name="projection" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-825"><paramref name="source" /> or <paramref name="projection" /> is null.</span></span>

<span data-ttu-id="e67e2-826">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-826">-or-</span></span>

<span data-ttu-id="e67e2-827"><paramref name="projection" /> 的结果为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-827">The result of <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-828">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-828">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="e67e2-829">一个方法，表示要针对每个输入集成员计算一次的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-829">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="e67e2-830">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，它为每个给定输入集元素计算一次指定的 <paramref name="apply" /> 表达式，并生成具有相应 input 和 apply 列的行集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="e67e2-831">不包括 <paramref name="apply" /> 计算结果为空集的行。</span><span class="sxs-lookup"><span data-stu-id="e67e2-831">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="e67e2-832">然后创建了 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，它从每一行选择 <paramref name="apply" /> 列，从而生成整个<paramref name="apply" /> 结果集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-832">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span></span></summary>
        <returns><span data-ttu-id="e67e2-833">从指定输入、应用绑定和 CrossApply <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression 中选定应用程序列的新 DbProjectExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-833">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-834"><paramref name="source" /> 或 <paramref name="apply" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-834"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="e67e2-835">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-835">-or-</span></span>

<span data-ttu-id="e67e2-836">由 <paramref name="apply" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-836">The expression produced by <paramref name="apply" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-837"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-837"><paramref name="source" />  does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-838">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-838">-or-</span></span>

<span data-ttu-id="e67e2-839"><paramref name="apply" /> 生成的表达式没有集合类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-839">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="e67e2-840"><paramref name="selector" /> 的方法结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-840">The method result type of <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e67e2-841">指定输入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-841">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="e67e2-842">一个方法，表示要针对每个输入集成员计算一次的逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-842">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <param name="selector"><span data-ttu-id="e67e2-843">一个方法，指定如何在给定输入集元素和应用集元素的情况下派生结果集的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-843">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span></span> <span data-ttu-id="e67e2-844">此方法必须生成与 SelectMany 兼容且可以解析为 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="e67e2-844">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="e67e2-845">备注中介绍了有关 <typeparamref name="TSelector" /> 的兼容性要求。</span><span class="sxs-lookup"><span data-stu-id="e67e2-845">Compatibility requirements for <typeparamref name="TSelector" /> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="e67e2-846">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，它为每个给定输入集元素计算一次指定的 <paramref name="apply" /> 表达式，并生成具有相应 input 和 apply 列的行集合。</span><span class="sxs-lookup"><span data-stu-id="e67e2-846">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="e67e2-847">不包括 <paramref name="apply" /> 计算结果为空集的行。</span><span class="sxs-lookup"><span data-stu-id="e67e2-847">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="e67e2-848">然后创建了 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，它在每一行上选择指定的 <paramref name="selector" />，从而生成整个结果集。</span><span class="sxs-lookup"><span data-stu-id="e67e2-848">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span></span></summary>
        <returns><span data-ttu-id="e67e2-849">从指定输入、应用绑定和 CrossApply <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression 中选定给定选择器结果的新 DbProjectExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-849">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-850">若要与 SelectMany 兼容， `TSelector` 必须从派生 <xref:System.Data.Common.CommandTrees.DbExpression> ，或者必须是具有 DbExpression 派生属性的匿名类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-850">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="e67e2-851">以下是支持的类型的示例 `TSelector` ：</span><span class="sxs-lookup"><span data-stu-id="e67e2-851">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="e67e2-852">`TSelector`)  (<xref:System.Data.Common.CommandTrees.DbPropertyExpression> 。</span><span class="sxs-lookup"><span data-stu-id="e67e2-852">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="e67e2-853"> (`TSelector` 是) 的 DbExpression 派生属性的匿名类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-853">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-854"><paramref name="source" />、<paramref name="apply" /> 或 <paramref name="selector" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-854"><paramref name="source" />,  <paramref name="apply" /> or <paramref name="selector" /> is null.</span></span>

<span data-ttu-id="e67e2-855">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-855">-or-</span></span>

<span data-ttu-id="e67e2-856">由 <paramref name="apply" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-856">The expression produced by <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="e67e2-857">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-857">-or-</span></span>

<span data-ttu-id="e67e2-858">在进行到 DbExpression 的转换时，<paramref name="selector" /> 的结果 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-858">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-859"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-859"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-860">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-860">-or-</span></span> 
<span data-ttu-id="e67e2-861"><paramref name="apply" /> 生成的表达式没有集合类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-861">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span> <span data-ttu-id="e67e2-862">没有集合类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-862">does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-863">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />，它在跳过指定数目的元素之前，按照指定的排序规范对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-863">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbSortExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-864">指定有序输入集的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-864">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span></span></param>
        <param name="count"><span data-ttu-id="e67e2-865">一个表达式，指定要在有序集中跳过的元素个数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-865">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="e67e2-866">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />，它在给定的有序输入集中跳过指定数量的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-866">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span></span></summary>
        <returns><span data-ttu-id="e67e2-867">表示跳过操作的新 DbSkipExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-867">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-868"><paramref name="argument" /> 或 <paramref name="count" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-868"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-869"><paramref name="count" /> 不是 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 或 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> 对象，或者具有不等同于或不能提升为 64 位整数类型的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-869"><paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (input, sortOrder, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-870">一个指定输入集的表达式绑定。</span><span class="sxs-lookup"><span data-stu-id="e67e2-870">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="e67e2-871">确定应如何对输入集元素排序的排序规范列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-871">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <param name="count"><span data-ttu-id="e67e2-872">一个表达式，指定要在有序集中跳过的元素个数。</span><span class="sxs-lookup"><span data-stu-id="e67e2-872">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="e67e2-873">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />，它在跳过指定数目的元素之前，按照指定的排序规范对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="e67e2-874">表示跳过操作的新 DbSkipExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-874">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-875"><paramref name="input" />、<paramref name="sortOrder" /> 或 <paramref name="count" />为 null，或者 <paramref name="sortOrder" /> 包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-875"><paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-876"><paramref name="sortOrder" /> 为空，或者 <paramref name="count" /> 不是 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 或 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> 或具有不等同于或不能提升为 64 位整数类型的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-876"><paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberSignature Language="F#" Value="static member Sort : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort (input, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e67e2-877">一个指定输入集的表达式绑定。</span><span class="sxs-lookup"><span data-stu-id="e67e2-877">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="e67e2-878">确定应如何对输入集元素排序的排序规范列表。</span><span class="sxs-lookup"><span data-stu-id="e67e2-878">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <summary><span data-ttu-id="e67e2-879">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它按照指定的排序规范对给定的输入集进行排序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-879">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span></span></summary>
        <returns><span data-ttu-id="e67e2-880">表示排序操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-880">A new DbSortExpression that represents the sort operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-881"><paramref name="input" /> 或 <paramref name="sortOrder" /> 为 null，或者 <paramref name="sortOrder" /> 包含 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-881"><paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-882"><paramref name="sortOrder" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="e67e2-882"><paramref name="sortOrder" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-883">一个指定输入集合的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-883">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="e67e2-884">指定限制值的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-884">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="e67e2-885">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> 对象，该对象将参数集合中的元素个数限制为指定计数限定值。</span><span class="sxs-lookup"><span data-stu-id="e67e2-885">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="e67e2-886">输出中不包括等值结果。</span><span class="sxs-lookup"><span data-stu-id="e67e2-886">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="e67e2-887">使用指定的不包括绑定的结果的参数和计数上限值的新 DbLimitExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-887">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-888"><paramref name="argument" /> 或 <paramref name="count" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-888"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-889"><paramref name="argument" /> 没有集合结果类型，<paramref name="count" /> 没有等同于或可提升为 64 位整数类型的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-889"><paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-890">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序顺序包含给定顺序输入集的排序顺序、升序排序顺序的指定排序关键字以及默认排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-890">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-891">一个指定有序输入集的 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-891">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="e67e2-892">一个方法，该方法指定如何在给定输入集成员时，派生附加的排序键表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-892">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-893">此方法必须生成一个可比较顺序的结果类型的表达式，提供排序键定义。</span><span class="sxs-lookup"><span data-stu-id="e67e2-893">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="e67e2-894">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序顺序包含给定顺序输入集的排序顺序、升序排序顺序的指定排序关键字以及默认排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-895">表示整个按顺序的新操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-895">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-896"><paramref name="source" /> 或 <paramref name="sortKey" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-896"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="e67e2-897">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-897">-or-</span></span>

<span data-ttu-id="e67e2-898">由 <paramref name="sortKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-898">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-899"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-899"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-900">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-900">-or-</span></span>

<span data-ttu-id="e67e2-901"><paramref name="sortKey" /> 没有可比较顺序的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-901"><paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-902">一个指定有序输入集的 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-902">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="e67e2-903">一个方法，该方法指定如何在给定输入集成员时，派生附加的排序键表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-903">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-904">此方法必须生成一个可比较顺序的结果类型的表达式，提供排序键定义。</span><span class="sxs-lookup"><span data-stu-id="e67e2-904">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="e67e2-905">排序所依据的排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-905">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="e67e2-906">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序顺序包含给定顺序输入集的排序顺序、升序排序顺序的指定排序关键字以及指定排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-907">表示整个按顺序的新操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-907">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-908"><paramref name="source" />、<paramref name="sortKey" /> 或 <paramref name="collation" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-908"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="e67e2-909">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-909">-or-</span></span> 
<span data-ttu-id="e67e2-910">由 <paramref name="sortKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-910">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-911"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-911"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-912">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-912">-or-</span></span>

<span data-ttu-id="e67e2-913"><paramref name="sortKey" /> 生成的表达式没有可比较顺序的字符串结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-913">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67e2-914"><paramref name="collation" /> 为空，或者只包含空白字符。</span><span class="sxs-lookup"><span data-stu-id="e67e2-914"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-915">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序顺序包含给定顺序输入集的排序顺序、降序排序顺序的指定排序关键字以及默认排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-915">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-916">一个指定有序输入集的 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-916">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="e67e2-917">一个方法，该方法指定如何在给定输入集成员时，派生附加的排序键表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-917">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-918">此方法必须生成一个可比较顺序的结果类型的表达式，提供排序键定义。</span><span class="sxs-lookup"><span data-stu-id="e67e2-918">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="e67e2-919">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序顺序包含给定顺序输入集的排序顺序、降序排序顺序的指定排序关键字以及默认排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-919">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-920">表示整个按顺序的新操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-920">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-921"><paramref name="source" /> 或 <paramref name="sortKey" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-921"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="e67e2-922">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-922">-or-</span></span>

<span data-ttu-id="e67e2-923">由 <paramref name="sortKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-923">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-924"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-924"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-925">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-925">-or-</span></span> 
<span data-ttu-id="e67e2-926"><paramref name="sortKey" /> 生成的表达式没有可比较顺序的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-926">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-927">一个指定有序输入集的 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-927">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="e67e2-928">一个方法，该方法指定如何在给定输入集成员时，派生附加的排序键表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-928">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="e67e2-929">此方法必须生成一个可比较顺序的结果类型的表达式，提供排序键定义。</span><span class="sxs-lookup"><span data-stu-id="e67e2-929">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="e67e2-930">排序所依据的排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-930">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="e67e2-931">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序顺序包含给定顺序输入集的排序顺序、降序排序顺序的指定排序关键字以及指定排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-931">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-932">表示整个按顺序的新操作的新 DbSortExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-932">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-933"><paramref name="source" />、<paramref name="sortKey" /> 或 <paramref name="collation" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-933"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="e67e2-934">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-934">-or-</span></span>

<span data-ttu-id="e67e2-935">由 <paramref name="sortKey" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-935">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-936"><paramref name="source" /> 没有集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-936"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="e67e2-937">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-937">-or-</span></span> 
<span data-ttu-id="e67e2-938"><paramref name="sortKey" /> 生成的表达式没有可比较顺序的字符串结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-938">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67e2-939"><paramref name="collation" /> 为空，或者只包含空白字符。</span><span class="sxs-lookup"><span data-stu-id="e67e2-939"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-940">使用升序排序顺序和默认排序规则创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-940">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e67e2-941">定义排序键的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-941">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="e67e2-942">使用升序排序顺序和默认排序规则创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-942">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-943">使用给定的排序关键字和升序排序顺序的新排序子句。</span><span class="sxs-lookup"><span data-stu-id="e67e2-943">A new sort clause with the given sort key and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-944"><paramref name="key" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-944"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-945"><paramref name="key" /> 没有可比较顺序的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-945"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e67e2-946">定义排序键的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-946">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="e67e2-947">排序所依据的排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-947">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="e67e2-948">使用升序排序顺序和指定排序规则创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-948">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-949">使用给定的排序关键字和排序规则的新排序子句，使用升序排序顺序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-949">A new sort clause with the given sort key and collation, and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-950"><paramref name="key" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-950"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67e2-951"><paramref name="collation" /> 为空，或者只包含空白字符。</span><span class="sxs-lookup"><span data-stu-id="e67e2-951"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-952"><paramref name="key" /> 没有可比较顺序的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-952"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67e2-953">使用降序排序顺序和默认排序规则创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-953">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e67e2-954">定义排序键的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-954">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="e67e2-955">使用降序排序顺序和默认排序规则创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-955">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-956">使用给定的排序关键字和降序排序顺序的新排序子句。</span><span class="sxs-lookup"><span data-stu-id="e67e2-956">A new sort clause with the given sort key and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-957"><paramref name="key" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-957"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-958"><paramref name="key" /> 没有可比较顺序的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-958"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e67e2-959">定义排序键的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-959">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="e67e2-960">排序所依据的排序规则。</span><span class="sxs-lookup"><span data-stu-id="e67e2-960">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="e67e2-961">使用降序排序顺序和指定排序规则创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-961">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="e67e2-962">使用给定的排序关键字和排序规则的新排序子句，使用降序排序顺序。</span><span class="sxs-lookup"><span data-stu-id="e67e2-962">A new sort clause with the given sort key and collation, and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-963"><paramref name="key" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-963"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e67e2-964"><paramref name="collation" /> 为空，或者只包含空白字符。</span><span class="sxs-lookup"><span data-stu-id="e67e2-964"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-965"><paramref name="key" /> 没有可比较顺序的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-965"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberSignature Language="F#" Value="static member TreatAs : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbTreatExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs (argument, treatType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-966">一个指定实例的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-966">An expression that specifies the instance.</span></span></param>
        <param name="treatType"><span data-ttu-id="e67e2-967">Treat-as 类型的类型元数据。</span><span class="sxs-lookup"><span data-stu-id="e67e2-967">Type metadata for the treat-as type.</span></span></param>
        <summary><span data-ttu-id="e67e2-968">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-968">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e67e2-969">使用指定的参数和类型的新 DbTreatExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-969">A new DbTreatExpression with the specified argument and type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67e2-970">DbTreatExpression 要求 `argument` 具有多态结果类型，并且这 `treatType` 是与该结果类型属于同一类型层次结构的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-970">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-971"><paramref name="argument" /> 或 <paramref name="treatType" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-971"><paramref name="argument" /> or <paramref name="treatType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-972"><paramref name="treatType" /> 不与 <paramref name="argument" /> 的结果类型相同处于相同的类型层次结构中。</span><span class="sxs-lookup"><span data-stu-id="e67e2-972"><paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.True : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e67e2-973">获取一个具有 <see langword="true" /> 布尔值的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-973">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="e67e2-974">一个具有 <see langword="true" /> 布尔值的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span><span class="sxs-lookup"><span data-stu-id="e67e2-974">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member UnaryMinus : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e67e2-975">一个指定参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-975">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-976">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，它对参数值求反。</span><span class="sxs-lookup"><span data-stu-id="e67e2-976">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="e67e2-977">表示求反运算的新 DbArithmeticExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-977">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-978"><paramref name="argument" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-978"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-979"><paramref name="argument" /> 不存在任何数值结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-979">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Union : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-980">一个定义左侧集参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-980">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-981">一个定义右侧集参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-981">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-982">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，该对象计算左侧集参数和右侧集参数的并集，并移除重复项。</span><span class="sxs-lookup"><span data-stu-id="e67e2-982">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span></span></summary>
        <returns><span data-ttu-id="e67e2-983">一个新的 DbExpression，计算左参数和右参数并集，不包含重复部分。</span><span class="sxs-lookup"><span data-stu-id="e67e2-983">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-984"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-984"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-985"><paramref name="left" /> 和 <paramref name="right" /> 之间不存在具有可进行相等比较的元素类型的任何常用集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-985">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member UnionAll : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbUnionAllExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e67e2-986">一个定义左侧集参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-986">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="e67e2-987">一个定义右侧集参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-987">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="e67e2-988">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />，它计算左侧集参数和右侧集参数的并集且不移除重复项。</span><span class="sxs-lookup"><span data-stu-id="e67e2-988">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span></span></summary>
        <returns><span data-ttu-id="e67e2-989">一个新的 DbUnionAllExpression，计算左参数和右参数的并集，包含重复部分。</span><span class="sxs-lookup"><span data-stu-id="e67e2-989">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-990"><paramref name="left" /> 或 <paramref name="right" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-990"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-991"><paramref name="left" /> 和 <paramref name="right" /> 之间不存在具有可进行相等比较的元素类型的任何常用集合结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-991">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Variable : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbVariableReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e67e2-992">被引用变量的类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-992">The type of the referenced variable.</span></span></param>
        <param name="name"><span data-ttu-id="e67e2-993">所引用的变量的名称。</span><span class="sxs-lookup"><span data-stu-id="e67e2-993">The name of the referenced variable.</span></span></param>
        <summary><span data-ttu-id="e67e2-994">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />，它使用指定的名称和类型引用变量。</span><span class="sxs-lookup"><span data-stu-id="e67e2-994">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="e67e2-995">以指定名称和类型表示变量的引用的 DbVariableReferenceExpression。</span><span class="sxs-lookup"><span data-stu-id="e67e2-995">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span></span> <span data-ttu-id="e67e2-996">该表达式的结果类型将与 <paramref name="type" /> 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="e67e2-996">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e67e2-997">一个指定输入集的表达式。</span><span class="sxs-lookup"><span data-stu-id="e67e2-997">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="e67e2-998">一个方法，表示要针对每个输入集成员计算的谓词。</span><span class="sxs-lookup"><span data-stu-id="e67e2-998">A method representing the predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="e67e2-999">此方法必须生成一个结果类型为 Boolean 的表达式，该表达式提供谓词逻辑。</span><span class="sxs-lookup"><span data-stu-id="e67e2-999">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="e67e2-1000">创建一个新的 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />，它使用指定的谓词筛选给定输入集中的元素。</span><span class="sxs-lookup"><span data-stu-id="e67e2-1000">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="e67e2-1001">新 DbQuantifierExpression 表示任何操作。</span><span class="sxs-lookup"><span data-stu-id="e67e2-1001">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e67e2-1002"><paramref name="source" /> 或 <paramref name="predicate" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-1002"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="e67e2-1003">-或-</span><span class="sxs-lookup"><span data-stu-id="e67e2-1003">-or-</span></span> 
<span data-ttu-id="e67e2-1004">由 <paramref name="predicate" /> 生成的表达式为 null。</span><span class="sxs-lookup"><span data-stu-id="e67e2-1004">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e67e2-1005">由 <paramref name="predicate" /> 生成的表达式不具有布尔结果类型。</span><span class="sxs-lookup"><span data-stu-id="e67e2-1005">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
