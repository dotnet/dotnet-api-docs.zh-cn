<Type Name="DefaultServiceProviderFactory" FullName="Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acd877b864590e817e4d27566fd7b90b3787efb3" /><Meta Name="ms.sourcegitcommit" Value="1fa2c0427e25fa9a43f9ddb13597e15452878d33" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/13/2021" /><Meta Name="ms.locfileid" Value="103420518" /></Metadata><TypeSignature Language="C#" Value="public class DefaultServiceProviderFactory : Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultServiceProviderFactory extends System.Object implements class Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1&lt;class Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultServiceProviderFactory&#xA;Implements IServiceProviderFactory(Of IServiceCollection)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultServiceProviderFactory : Microsoft::Extensions::DependencyInjection::IServiceProviderFactory&lt;Microsoft::Extensions::DependencyInjection::IServiceCollection ^&gt;" />
  <TypeSignature Language="F#" Value="type DefaultServiceProviderFactory = class&#xA;    interface IServiceProviderFactory&lt;IServiceCollection&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" /> 的默认实现。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultServiceProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultServiceProviderFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认选项初始化 <see cref="T:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:Microsoft.Extensions.DependencyInjection.ServiceProviderOptions.Default" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultServiceProviderFactory (Microsoft.Extensions.DependencyInjection.ServiceProviderOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.ServiceProviderOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.#ctor(Microsoft.Extensions.DependencyInjection.ServiceProviderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As ServiceProviderOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultServiceProviderFactory(Microsoft::Extensions::DependencyInjection::ServiceProviderOptions ^ options);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory : Microsoft.Extensions.DependencyInjection.ServiceProviderOptions -&gt; Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory" Usage="new Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.DependencyInjection.ServiceProviderOptions" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="options">用于此实例的选项。</param>
        <summary>使用指定的 <see cref="T:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory" /> 初始化 <paramref name="options" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.IServiceCollection CreateBuilder (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection CreateBuilder(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::DependencyInjection::IServiceCollection ^ CreateBuilder(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="abstract member CreateBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection&#xA;override this.CreateBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="defaultServiceProviderFactory.CreateBuilder services" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>从 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> 创建容器生成器。</summary>
        <returns>可用于创建 <see cref="T:System.IServiceProvider" /> 的容器生成器。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateServiceProvider (Microsoft.Extensions.DependencyInjection.IServiceCollection containerBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IServiceProvider CreateServiceProvider(class Microsoft.Extensions.DependencyInjection.IServiceCollection containerBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateServiceProvider (containerBuilder As IServiceCollection) As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IServiceProvider ^ CreateServiceProvider(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ containerBuilder);" />
      <MemberSignature Language="F#" Value="abstract member CreateServiceProvider : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; IServiceProvider&#xA;override this.CreateServiceProvider : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; IServiceProvider" Usage="defaultServiceProviderFactory.CreateServiceProvider containerBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1.CreateServiceProvider(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerBuilder" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="containerBuilder">To be added.</param>
        <summary>从容器生成器创建 <see cref="T:System.IServiceProvider" />。</summary>
        <returns>新创建的服务提供程序。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
