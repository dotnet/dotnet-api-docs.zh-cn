<Type Name="IVbcHostObject5" FullName="Microsoft.Build.Tasks.Hosting.IVbcHostObject5">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e389724047b03c83fac5293263df27f0b4f1ef4" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89945165" /></Metadata><TypeSignature Language="C#" Value="public interface IVbcHostObject5 : Microsoft.Build.Framework.ITaskHost, Microsoft.Build.Tasks.Hosting.IVbcHostObject4" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVbcHostObject5 implements class Microsoft.Build.Framework.ITaskHost, class Microsoft.Build.Tasks.Hosting.IVbcHostObject, class Microsoft.Build.Tasks.Hosting.IVbcHostObject2, class Microsoft.Build.Tasks.Hosting.IVbcHostObject3, class Microsoft.Build.Tasks.Hosting.IVbcHostObject4" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject5" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVbcHostObject5&#xA;Implements ITaskHost, IVbcHostObject4" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVbcHostObject5 : Microsoft::Build::Framework::ITaskHost, Microsoft::Build::Tasks::Hosting::IVbcHostObject4" />
  <TypeSignature Language="F#" Value="type IVbcHostObject5 = interface&#xA;    interface IVbcHostObject4&#xA;    interface IVbcHostObject3&#xA;    interface IVbcHostObject2&#xA;    interface IVbcHostObject&#xA;    interface ITaskHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Tasks.Hosting.IVbcHostObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Tasks.Hosting.IVbcHostObject2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Tasks.Hosting.IVbcHostObject3</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Tasks.Hosting.IVbcHostObject4</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("5ACF41FF-6F2B-4623-8146-740C89212B21")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("5ACF41FF-6F2B-4623-8146-740C89212B21")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义提供自由线程主机对象的接口，该对象允许后台线程直接调用 (避免封送到 UI 线程。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CompileAsync">
      <MemberSignature Language="C#" Value="public int CompileAsync (out IntPtr buildSucceededEvent, out IntPtr buildFailedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompileAsync([out] native int&amp; buildSucceededEvent, [out] native int&amp; buildFailedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.CompileAsync(System.IntPtr@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileAsync (ByRef buildSucceededEvent As IntPtr, ByRef buildFailedEvent As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompileAsync([Runtime::InteropServices::Out] IntPtr % buildSucceededEvent, [Runtime::InteropServices::Out] IntPtr % buildFailedEvent);" />
      <MemberSignature Language="F#" Value="abstract member CompileAsync : nativeint * nativeint -&gt; int" Usage="iVbcHostObject5.CompileAsync (buildSucceededEvent, buildFailedEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildSucceededEvent" Type="System.IntPtr" RefType="out" />
        <Parameter Name="buildFailedEvent" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buildSucceededEvent">[out] 生成成功事件。</param>
        <param name="buildFailedEvent">[out] 生成失败事件。</param>
        <summary>此代码在 UI 线程上仅调用并开始使 VB 的实际生成。</summary>
        <returns>如果该方法成功，则返回 0。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCompile">
      <MemberSignature Language="C#" Value="public int EndCompile (bool buildSuccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndCompile(bool buildSuccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.EndCompile(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndCompile (buildSuccess As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndCompile(bool buildSuccess);" />
      <MemberSignature Language="F#" Value="abstract member EndCompile : bool -&gt; int" Usage="iVbcHostObject5.EndCompile buildSuccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildSuccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buildSuccess">指示生成是否已成功的标志。 值 <see langword="true" /> 成功。</param>
        <summary>在编译结尾处执行函数。</summary>
        <returns>如果该方法成功，则返回 0。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFreeThreadedHostObject">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded GetFreeThreadedHostObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded GetFreeThreadedHostObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.GetFreeThreadedHostObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFreeThreadedHostObject () As IVbcHostObjectFreeThreaded" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Tasks::Hosting::IVbcHostObjectFreeThreaded ^ GetFreeThreadedHostObject();" />
      <MemberSignature Language="F#" Value="abstract member GetFreeThreadedHostObject : unit -&gt; Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded" Usage="iVbcHostObject5.GetFreeThreadedHostObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取允许后台线程直接调用的自由线程主机对象。 避免封送到 UI 线程。</summary>
        <returns>自由线程的主机对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHighEntropyVA">
      <MemberSignature Language="C#" Value="public bool SetHighEntropyVA (bool highEntropyVA);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetHighEntropyVA(bool highEntropyVA) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetHighEntropyVA(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetHighEntropyVA (highEntropyVA As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetHighEntropyVA(bool highEntropyVA);" />
      <MemberSignature Language="F#" Value="abstract member SetHighEntropyVA : bool -&gt; bool" Usage="iVbcHostObject5.SetHighEntropyVA highEntropyVA" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highEntropyVA" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="highEntropyVA">如果将 <c>/highentropyva</c> 设置为指示支持高熵地址空间布局随机化 (ASLR)，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
        <summary>按照说明，设置 <c>/highentropyva</c> 值。</summary>
        <returns>如果方法成功，则为 <see langword="True" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlatformWith32BitPreference">
      <MemberSignature Language="C#" Value="public bool SetPlatformWith32BitPreference (string platformWith32BitPreference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPlatformWith32BitPreference(string platformWith32BitPreference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetPlatformWith32BitPreference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPlatformWith32BitPreference (platformWith32BitPreference As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetPlatformWith32BitPreference(System::String ^ platformWith32BitPreference);" />
      <MemberSignature Language="F#" Value="abstract member SetPlatformWith32BitPreference : string -&gt; bool" Usage="iVbcHostObject5.SetPlatformWith32BitPreference platformWith32BitPreference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platformWith32BitPreference" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="platformWith32BitPreference">如果将 <c>/platform</c> 值设置为 <see langword="AnyCPU32BitPreferred" />，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
        <summary>将 <c>/platform</c> 值设置为 <see langword="AnyCPU32BitPreferred" />。</summary>
        <returns>如果该方法成功，则返回 <see langword="True" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果对 <xref:Microsoft.Build.Tasks.ManagedCompiler.Prefer32Bit%2A> 项目设置了该属性，则 <xref:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetPlatformWith32BitPreference%2A> 会更改 `/platform` 值 `AnyCPU` 或默认平台值 (`null` 或 "" ) 为 `AnyCPU32BitPreferred` 。 有关详细信息，请参阅 [/platform (Visual Basic)](/dotnet/visual-basic/reference/command-line-compiler/platform)。 `AnyCPU` `/platform`) 的切换设置 (将 `/platform:AnyCPU` 应用程序作为64位进程运行，并在可能的情况下，回退到仅限32位系统的32位。 但是，将应用程序作为32位运行通常是64首选的，因为64位应用程序可能会占用更多内存。 此 `AnyCPU32BitPreferred` 设置类似于 `AnyCPU` ，只不过其默认操作是在支持32位或64位模式的系统上以32位模式运行应用程序。 此设置可适应将来可能没有回退32位模式的处理器。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSubsystemVersion">
      <MemberSignature Language="C#" Value="public bool SetSubsystemVersion (string subsystemVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSubsystemVersion(string subsystemVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetSubsystemVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetSubsystemVersion (subsystemVersion As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetSubsystemVersion(System::String ^ subsystemVersion);" />
      <MemberSignature Language="F#" Value="abstract member SetSubsystemVersion : string -&gt; bool" Usage="iVbcHostObject5.SetSubsystemVersion subsystemVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subsystemVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subsystemVersion">子系统版本。</param>
        <summary>设置指定的子系统版本。</summary>
        <returns>如果该成功，则返回 <see langword="true" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
