<Type Name="ChannelOptions" FullName="System.Threading.Channels.ChannelOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f52d608c2ce24333e43aa1fb2e608f8a23d58f8" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89900415" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChannelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Channels.ChannelOptions" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelOptions abstract" />
  <TypeSignature Language="F#" Value="type ChannelOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Channels</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="37ece-101">提供用于控制通道实例的行为的选项。</span><span class="sxs-lookup"><span data-stu-id="37ece-101">Provides options that control the behavior of channel instances.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Channels.ChannelOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Channels</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37ece-102">初始化 <see cref="T:System.Threading.Channels.ChannelOptions" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="37ece-102">Initializes an instance of the <see cref="T:System.Threading.Channels.ChannelOptions" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSynchronousContinuations">
      <MemberSignature Language="C#" Value="public bool AllowSynchronousContinuations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSynchronousContinuations" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSynchronousContinuations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSynchronousContinuations { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSynchronousContinuations : bool with get, set" Usage="System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Channels</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37ece-103">如果通道上执行的操作可能以同步方式调用已订阅挂起异步操作的通知的延续，则为 <see langword="true" />；如果应以异步方式调用所有延续，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="37ece-103"><see langword="true" /> if operations performed on a channel may synchronously invoke continuations subscribed to notifications of pending async operations; <see langword="false" /> if all continuations should be invoked asynchronously.</span></span></summary>
        <value>To be added.</value>
        <remarks><span data-ttu-id="37ece-104">如果将此选项设置为，则 <see langword="true" /> 可以通过避免计划其他工作项来提高吞吐量。</span><span class="sxs-lookup"><span data-stu-id="37ece-104">Setting this option to <see langword="true" /> can provide measurable throughput improvements by avoiding scheduling additional work items.</span></span> <span data-ttu-id="37ece-105">但是，这可能会降低并行性的成本，例如，制造者可能会执行与使用者关联的工作，如果未完成周全，这可能会导致意外的交互。</span><span class="sxs-lookup"><span data-stu-id="37ece-105">However, it may come at the cost of reduced parallelism, as for example a producer may then be the one to execute work associated with a consumer, and if not done thoughtfully, this can lead to unexpected interactions.</span></span> <span data-ttu-id="37ece-106">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="37ece-106">The default is <see langword="false" />.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleReader">
      <MemberSignature Language="C#" Value="public bool SingleReader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleReader" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Channels.ChannelOptions.SingleReader" />
      <MemberSignature Language="VB.NET" Value="Public Property SingleReader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleReader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SingleReader : bool with get, set" Usage="System.Threading.Channels.ChannelOptions.SingleReader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Channels</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37ece-107">如果通道中的读取器保证一次最多仅执行一个读取操作，则为 <see langword="true" />；如果未保证此类约束，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="37ece-107"><see langword="true" /> readers from the channel guarantee that there will only ever be at most one read operation at a time; <see langword="false" /> if no such constraint is guaranteed.</span></span></summary>
        <value>To be added.</value>
        <remarks><span data-ttu-id="37ece-108">如果 <see langword="true" /> 为，则通道可能能够根据了解单一读取器保证来优化特定操作。</span><span class="sxs-lookup"><span data-stu-id="37ece-108">If <see langword="true" />, the channel may be able to optimize certain operations based on knowing about the single-reader guarantee.</span></span>
<span data-ttu-id="37ece-109">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="37ece-109">The default is <see langword="false" />.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleWriter">
      <MemberSignature Language="C#" Value="public bool SingleWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleWriter" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Channels.ChannelOptions.SingleWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property SingleWriter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleWriter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SingleWriter : bool with get, set" Usage="System.Threading.Channels.ChannelOptions.SingleWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Channels</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37ece-110">如果写入到通道的编写器保证一次最多仅执行一个写入操作，则为 <see langword="true" />；如果未保证此类约束，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="37ece-110"><see langword="true" /> if writers to the channel guarantee that there will only ever be at most one write operation at a time; <see langword="false" /> if no such constraint is guaranteed.</span></span></summary>
        <value>To be added.</value>
        <remarks><span data-ttu-id="37ece-111">如果 <see langword="true" /> 为，则通道可能能够根据单个编写器保证来优化特定操作。</span><span class="sxs-lookup"><span data-stu-id="37ece-111">If <see langword="true" />, the channel may be able to optimize certain operations based on knowing about the single-writer guarantee.</span></span>
<span data-ttu-id="37ece-112">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="37ece-112">The default is <see langword="false" />.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
