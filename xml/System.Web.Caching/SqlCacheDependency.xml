<Type Name="SqlCacheDependency" FullName="System.Web.Caching.SqlCacheDependency">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ee09a7a016452417a369ebc73d40c1d5d0e6b1b" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86352753" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlCacheDependency : System.Web.Caching.CacheDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCacheDependency extends System.Web.Caching.CacheDependency" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.SqlCacheDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCacheDependency&#xA;Inherits CacheDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCacheDependency sealed : System::Web::Caching::CacheDependency" />
  <TypeSignature Language="F#" Value="type SqlCacheDependency = class&#xA;    inherit CacheDependency" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Caching.CacheDependency</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在存储于 ASP.NET 应用程序的 <see cref="T:System.Web.Caching.Cache" /> 对象中的项与特定 SQL Server 数据库表或 SQL Server 2005 的查询结果之间建立关系。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 在所有受支持版本的 SQL Server (Microsoft SQL Server 7.0、Microsoft SQL Server 2000 和 SQL Server 2005) <xref:System.Web.Caching.SqlCacheDependency> 该类监视特定的 SQL Server 数据库表。 当表更改时，将从中移除与该表关联的项 <xref:System.Web.Caching.Cache> ，并将该项的新版本添加到中 <xref:System.Web.Caching.Cache> 。

 <xref:System.Web.Caching.SqlCacheDependency>使用数据库时，类还支持与 <xref:System.Data.SqlClient.SqlDependency?displayProperty=nameWithType> 类的集成 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 。 的查询通知机制将 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 检测对数据的更改，这些更改会使 sql 查询的结果失效，并从中删除与 sql 查询关联的任何缓存项 <xref:System.Web.Caching.Cache?displayProperty=nameWithType> 。

 使用时，可以使用 <xref:System.Web.Caching.SqlCacheDependency> 类将项添加到应用程序 <xref:System.Web.Caching.Cache> 中，这些项依赖于 SQL Server 数据库表或 SQL 查询 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 。 你还可以将此类与指令一起使用，以使输出缓存页或依赖于 SQL Server 数据库表的用户控件。 最后，可以将 <xref:System.Web.Caching.SqlCacheDependency> 类与 page 指令一起使用，使输出缓存的页依赖于在使用时的 SQL 查询的结果 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 。 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)]对于用户控件的指令，不支持使用查询通知。

> [!NOTE]
>  要使此类在使用基于表的通知时正常工作，必须为要依赖于的数据库和任何表启用通知。 可以通过调用类的方法 <xref:System.Web.Caching.SqlCacheDependencyAdmin> 或使用命令行工具来启用通知。 此外，应用程序的 Web.config 文件中必须包含正确的配置设置。
>
>  在 <xref:System.Web.Caching.SqlCacheDependency> [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 查询通知中使用对象不需要任何显式配置。 有关 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 使用查询通知时允许的 transact-sql 查询类型的限制的信息，请参阅联机丛书。

 下面的示例演示了一个 ASP.NET Web.config 文件，该文件对 SQL Server 数据库表启用了基于表的依赖项。

```
<configuration>
  <connectionStrings>
    <add name="Northwind" connectionString="Data Source=(local); Initial Catalog=northwind; Integrated Security=true"; providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <caching>
      <sqlCacheDependency enabled = "true" pollTime = "60000" >
        <databases>
          <add name="northwind"
            connectionStringName="Northwind"
            pollTime="9000000"
            />
        </databases>
      </sqlCacheDependency>
    </caching>
  </system.web>
</configuration>
```



## Examples
 下面的代码示例使用 <xref:System.Web.UI.WebControls.SqlDataSource> 和 <xref:System.Web.UI.WebControls.GridView> 控件来显示数据库表。 加载页面时，页面将尝试创建 <xref:System.Web.Caching.SqlCacheDependency> 对象。 <xref:System.Web.Caching.SqlCacheDependency>创建对象后，页面会将项添加到中， `Cache` 并对对象具有依赖关系 <xref:System.Web.Caching.SqlCacheDependency> 。 应使用类似于此处所示的异常处理。

 [!code-aspx-csharp[CachingSamples_SqlCacheDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CachingSamples_SqlCacheDependency/CS/sqlcachedepsamplecs.aspx#1)]
 [!code-aspx-vb[CachingSamples_SqlCacheDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_SqlCacheDependency/VB/sqlcachedepsamplevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Caching.SqlCacheDependencyAdmin" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">缓存应用程序数据</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 类的新实例。</summary>
        <altmember cref="T:System.Web.Caching.SqlCacheDependencyAdmin" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">缓存应用程序数据</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCacheDependency (System.Data.SqlClient.SqlCommand sqlCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand sqlCmd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.SqlCacheDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sqlCmd As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCacheDependency(System::Data::SqlClient::SqlCommand ^ sqlCmd);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.SqlCacheDependency : System.Data.SqlClient.SqlCommand -&gt; System.Web.Caching.SqlCacheDependency" Usage="new System.Web.Caching.SqlCacheDependency sqlCmd" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sqlCmd" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="sqlCmd">用于创建 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 对象的 <see cref="T:System.Data.SqlClient.SqlCommand" />。</param>
        <summary>初始化 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 类的新实例，并使用提供的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 创建缓存键依赖项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此构造函数用于创建 <xref:System.Web.Caching.SqlCacheDependency> 使用产品的查询通知功能的对象 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 。

 与参数相关联的 SQL 语句 `sqlCmd` 必须包括以下各项：

-   完全限定的表名称，包括表所有者的名称。 例如，若要引用数据库所有者拥有的名为 Customers 的表，则 SQL 语句必须引用 `dbo.customers` 。

-   Select 语句中的显式列名称。 不能使用星号 ( * ) 通配符从表中选择所有列。 例如， `select * from dbo.customers` 必须使用，而不是 `select name, address, city, state from dbo.customers` 。

 此构造函数不能用于将 <xref:System.Data.SqlClient.SqlCommand> 实例与 <xref:System.Web.Caching.SqlCacheDependency> 页面上的实例关联，将 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 查询通知与页面级输出缓存一起使用。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sqlCmd" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Data.SqlClient.SqlCommand" /> 实例的 <see cref="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" /> 属性设置为 <see langword="true" />，且页上存在 <see langword="SqlDependency" /> 特性设置为 CommandNotification<c></c> 的指令。</exception>
        <altmember cref="M:System.Web.Caching.SqlCacheDependency.#ctor(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCacheDependency (string databaseEntryName, string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string databaseEntryName, string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.SqlCacheDependency.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (databaseEntryName As String, tableName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCacheDependency(System::String ^ databaseEntryName, System::String ^ tableName);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.SqlCacheDependency : string * string -&gt; System.Web.Caching.SqlCacheDependency" Usage="new System.Web.Caching.SqlCacheDependency (databaseEntryName, tableName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="databaseEntryName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseEntryName">在应用程序的 Web.config 文件的数据库元素中定义的数据库的名称。</param>
        <param name="tableName">与 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 关联的数据库表的名称。</param>
        <summary>初始化 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 类的新实例，并使用提供的参数创建缓存键依赖项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此构造函数用于创建 <xref:System.Web.Caching.SqlCacheDependency> SQL Server 7.0 和 SQL Server 2000 产品的对象。

 传递给参数的数据库名称 `database` 必须在应用程序的 Web.config 文件中定义。 例如，下面的 Web.config 文件为更改通知定义了一个名为 pubs 的数据库 <xref:System.Web.Caching.SqlCacheDependency> 。

```
<configuration>
  <connectionStrings>
    <add name="Pubs" connectionString="Data Source=(local); Initial Catalog=pubs; Integrated Security=true"; providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <caching>
      <sqlCacheDependency enabled = "true" pollTime = "60000" >
        <databases>
          <add name="pubs"
            connectionStringName="pubs"
            pollTime="9000000"
            />
        </databases>
      </sqlCacheDependency>
    </caching>
  </system.web>
</configuration>
```

 使用此构造函数时，通常会引发两个异常： <xref:System.Web.Caching.DatabaseNotEnabledForNotificationException> 和 <xref:System.Web.Caching.TableNotEnabledForNotificationException> 。 如果 <xref:System.Web.Caching.DatabaseNotEnabledForNotificationException> 引发了，则可以 <xref:System.Web.Caching.SqlCacheDependencyAdmin.EnableNotifications%2A?displayProperty=nameWithType> 在异常处理代码中调用该方法，或使用命令行工具为通知设置数据库。 如果 <xref:System.Web.Caching.TableNotEnabledForNotificationException> 引发了，则可以调用方法， <xref:System.Web.Caching.SqlCacheDependencyAdmin.EnableTableForNotifications%2A?displayProperty=nameWithType> 或使用来设置表中的通知。



## Examples
 下面的代码示例使用此构造函数创建 <xref:System.Web.Caching.SqlCacheDependency> 类的实例，该类与名为 Northwind 的 SQL Server 数据库中名为 "类别" 的数据库表相关联。

 [!code-csharp[CachingSamples_SqlCacheDependency#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CachingSamples_SqlCacheDependency/CS/sqlcachedepsamplecs.aspx#2)]
 [!code-vb[CachingSamples_SqlCacheDependency#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_SqlCacheDependency/VB/sqlcachedepsamplevb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Data.SqlClient.SqlClientPermission" /> 的内部检查失败。

-或-

在为基于表的通知配置的数据库的列表中未找到 <paramref name="databaseEntryName" />。

-或-

<see cref="T:System.Web.Caching.SqlCacheDependency" /> 对象在初始化过程中未能连接到数据库。

-或-

<see cref="T:System.Web.Caching.SqlCacheDependency" /> 对象在数据库或支持 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 对象的数据库存储过程上遇到权限拒绝错误。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tableName" /> 参数为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未对 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 启用轮询。

-或-

轮询间隔配置不正确。

-或-

在应用程序的配置文件中未指定连接字符串。

-或-

未能找到在应用程序的配置文件中指定的连接字符串。

-或-

在应用程序的配置文件中指定的连接字符串为空字符串。</exception>
        <exception cref="T:System.Web.Caching.DatabaseNotEnabledForNotificationException">没有为 <paramref name="databaseEntryName" /> 参数中指定的数据库启用更改通知。</exception>
        <exception cref="T:System.Web.Caching.TableNotEnabledForNotificationException">没有为 <paramref name="tableName" /> 参数中指定的数据库表启用更改通知。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="databaseEntryName" /> 为 <see langword="null" />。

- 或 -

 <paramref name="tableName" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.Caching.SqlCacheDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      </Docs>
    </Member>
    <Member MemberName="CreateOutputCacheDependency">
      <MemberSignature Language="C#" Value="public static System.Web.Caching.CacheDependency CreateOutputCacheDependency (string dependency);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Caching.CacheDependency CreateOutputCacheDependency(string dependency) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency(System.String)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOutputCacheDependency (dependency As String) As CacheDependency" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Caching::CacheDependency ^ CreateOutputCacheDependency(System::String ^ dependency);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member CreateOutputCacheDependency : string -&gt; System.Web.Caching.CacheDependency" Usage="System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency dependency" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependency" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dependency">输出缓存依赖项指令。</param>
        <summary>创建 ASP.NET 应用程序的 <see cref="T:System.Web.Caching.OutputCache" /> 对象中存储的项与 SQL Server 数据库表之间的依赖关系。</summary>
        <returns>新的依赖项对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 下面的标记显示了典型的输出缓存依赖项指令。

```
<%@ OutputCache Duration="3600" SqlDependency="Northwind:Employees" VaryByParam="none" %>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyDispose">
      <MemberSignature Language="C#" Value="protected override void DependencyDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DependencyDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.SqlCacheDependency.DependencyDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DependencyDispose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DependencyDispose();" />
      <MemberSignature Language="F#" Value="override this.DependencyDispose : unit -&gt; unit" Usage="sqlCacheDependency.DependencyDispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueID">
      <MemberSignature Language="C#" Value="public override string GetUniqueID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUniqueID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.SqlCacheDependency.GetUniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUniqueID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUniqueID();" />
      <MemberSignature Language="F#" Value="override this.GetUniqueID : unit -&gt; string" Usage="sqlCacheDependency.GetUniqueID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 对象的唯一标识符。</summary>
        <returns>如果有，则为 <see cref="T:System.Web.Caching.SqlCacheDependency" /> 对象的唯一标识符；如果无法生成任何标识符，则为 Null。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Caching.SqlCacheDependency>方法返回一个标识符，该标识符用于唯一跟踪 <xref:System.Web.Caching.SqlCacheDependency> 与项或应用程序关联的对象。 使用基于表的通知时生成的唯一标识符部分依赖于数据库生成的更改标识符。

 使用基于 SQL Server 2005 的查询通知时，唯一标识符是 `null` 因为 [!INCLUDE[sqprsqlong](~/includes/sqprsqlong-md.md)] 不支持返回单个查询通知的唯一标识符。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
