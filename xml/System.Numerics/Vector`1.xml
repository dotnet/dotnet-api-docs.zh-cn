<Type Name="Vector&lt;T&gt;" FullName="System.Numerics.Vector&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c13fb878de6e8b5e2404f7553341c2ddfdfb6422" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100288509" /></Metadata><TypeSignature Language="C#" Value="public struct Vector&lt;T&gt; : IEquatable&lt;System.Numerics.Vector&lt;T&gt;&gt;, IFormattable where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Vector`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Numerics.Vector`1&lt;!T&gt;&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.Vector`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Vector(Of T)&#xA;Implements IEquatable(Of Vector(Of T)), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Vector : IEquatable&lt;System::Numerics::Vector&lt;T&gt;&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type Vector&lt;'T (requires 'T : struct)&gt; = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Numerics.Vectors</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.5.0</AssemblyVersion>
    <AssemblyVersion>4.1.6.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Numerics.Vectors" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.Vector&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="35dad-101">向量类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-101">The vector type.</span></span> <span data-ttu-id="35dad-102"><c>T</c> 可以是任何基元数值类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-102"><c>T</c> can be any primitive numeric type.</span></span></typeparam>
    <summary><span data-ttu-id="35dad-103">表示指定数值类型（适用于并行算法的低级别优化）的单个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-103">Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-104"><xref:System.Numerics.Vector%601> 是一个不可变的结构，它表示指定数值类型的单个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-104"><xref:System.Numerics.Vector%601> is an immutable structure that represents a single vector of a specified numeric type.</span></span> <span data-ttu-id="35dad-105">实例的计数 <xref:System.Numerics.Vector%601> 是固定的，但其上限是 CPU 寄存器相关的。</span><span class="sxs-lookup"><span data-stu-id="35dad-105">The count of <xref:System.Numerics.Vector%601> instances is fixed, but its upper limit is CPU-register dependent.</span></span> <span data-ttu-id="35dad-106">它旨在用作向量化大型算法的构建基块，因此不能直接用作任意长度矢量或 tensor。</span><span class="sxs-lookup"><span data-stu-id="35dad-106">It's intended to be used as a building block for vectorizing large algorithms, and therefore cannot be used directly as an arbitrary length vector or tensor.</span></span>
  
 <span data-ttu-id="35dad-107"><xref:System.Numerics.Vector%601>结构为硬件加速提供支持。</span><span class="sxs-lookup"><span data-stu-id="35dad-107">The <xref:System.Numerics.Vector%601> structure provides support for hardware acceleration.</span></span>
 
 <span data-ttu-id="35dad-108">本文中的 " *基元数值数据类型* " 一词是指 CPU 直接支持的数值数据类型，并具有可用于处理这些数据类型的指令。</span><span class="sxs-lookup"><span data-stu-id="35dad-108">The term *primitive numeric data type* in this article refers to numeric data types that are directly supported by the CPU and have instructions that can manipulate those data types.</span></span> <span data-ttu-id="35dad-109">下表显示了哪些基元数值数据类型和操作组合使用内部指令来实现更快的执行：</span><span class="sxs-lookup"><span data-stu-id="35dad-109">The following table shows which primitive numeric data type and operation combination uses intrinsic instructions for faster execution:</span></span>
 
| <span data-ttu-id="35dad-110">基元类型</span><span class="sxs-lookup"><span data-stu-id="35dad-110">Primitive type</span></span> | `+` | `-` | `*` | `/` |
| --- | :---: | :---: | :---: | :---: |
|`sbyte` | <span data-ttu-id="35dad-111">是</span><span class="sxs-lookup"><span data-stu-id="35dad-111">Yes</span></span> | <span data-ttu-id="35dad-112">是</span><span class="sxs-lookup"><span data-stu-id="35dad-112">Yes</span></span> | <span data-ttu-id="35dad-113">否</span><span class="sxs-lookup"><span data-stu-id="35dad-113">No</span></span> | <span data-ttu-id="35dad-114">否</span><span class="sxs-lookup"><span data-stu-id="35dad-114">No</span></span> |
|`byte` | <span data-ttu-id="35dad-115">是</span><span class="sxs-lookup"><span data-stu-id="35dad-115">Yes</span></span> | <span data-ttu-id="35dad-116">是</span><span class="sxs-lookup"><span data-stu-id="35dad-116">Yes</span></span> | <span data-ttu-id="35dad-117">否</span><span class="sxs-lookup"><span data-stu-id="35dad-117">No</span></span> | <span data-ttu-id="35dad-118">否</span><span class="sxs-lookup"><span data-stu-id="35dad-118">No</span></span> |
|`short` | <span data-ttu-id="35dad-119">是</span><span class="sxs-lookup"><span data-stu-id="35dad-119">Yes</span></span> | <span data-ttu-id="35dad-120">是</span><span class="sxs-lookup"><span data-stu-id="35dad-120">Yes</span></span> | <span data-ttu-id="35dad-121">是</span><span class="sxs-lookup"><span data-stu-id="35dad-121">Yes</span></span> | <span data-ttu-id="35dad-122">No</span><span class="sxs-lookup"><span data-stu-id="35dad-122">No</span></span> |
|`ushort` | <span data-ttu-id="35dad-123">是</span><span class="sxs-lookup"><span data-stu-id="35dad-123">Yes</span></span> | <span data-ttu-id="35dad-124">是</span><span class="sxs-lookup"><span data-stu-id="35dad-124">Yes</span></span> | <span data-ttu-id="35dad-125">否</span><span class="sxs-lookup"><span data-stu-id="35dad-125">No</span></span> | <span data-ttu-id="35dad-126">否</span><span class="sxs-lookup"><span data-stu-id="35dad-126">No</span></span> |
| `int` | <span data-ttu-id="35dad-127">是</span><span class="sxs-lookup"><span data-stu-id="35dad-127">Yes</span></span> | <span data-ttu-id="35dad-128">是</span><span class="sxs-lookup"><span data-stu-id="35dad-128">Yes</span></span> | <span data-ttu-id="35dad-129">是</span><span class="sxs-lookup"><span data-stu-id="35dad-129">Yes</span></span> | <span data-ttu-id="35dad-130">No</span><span class="sxs-lookup"><span data-stu-id="35dad-130">No</span></span> |
| `uint` | <span data-ttu-id="35dad-131">是</span><span class="sxs-lookup"><span data-stu-id="35dad-131">Yes</span></span> | <span data-ttu-id="35dad-132">是</span><span class="sxs-lookup"><span data-stu-id="35dad-132">Yes</span></span> | <span data-ttu-id="35dad-133">否</span><span class="sxs-lookup"><span data-stu-id="35dad-133">No</span></span> | <span data-ttu-id="35dad-134">否</span><span class="sxs-lookup"><span data-stu-id="35dad-134">No</span></span> |
| `long` | <span data-ttu-id="35dad-135">是</span><span class="sxs-lookup"><span data-stu-id="35dad-135">Yes</span></span> | <span data-ttu-id="35dad-136">是</span><span class="sxs-lookup"><span data-stu-id="35dad-136">Yes</span></span> | <span data-ttu-id="35dad-137">否</span><span class="sxs-lookup"><span data-stu-id="35dad-137">No</span></span> | <span data-ttu-id="35dad-138">否</span><span class="sxs-lookup"><span data-stu-id="35dad-138">No</span></span> |
| `ulong` | <span data-ttu-id="35dad-139">是</span><span class="sxs-lookup"><span data-stu-id="35dad-139">Yes</span></span> | <span data-ttu-id="35dad-140">是</span><span class="sxs-lookup"><span data-stu-id="35dad-140">Yes</span></span> | <span data-ttu-id="35dad-141">否</span><span class="sxs-lookup"><span data-stu-id="35dad-141">No</span></span> | <span data-ttu-id="35dad-142">否</span><span class="sxs-lookup"><span data-stu-id="35dad-142">No</span></span> |
| `float` | <span data-ttu-id="35dad-143">是</span><span class="sxs-lookup"><span data-stu-id="35dad-143">Yes</span></span> | <span data-ttu-id="35dad-144">是</span><span class="sxs-lookup"><span data-stu-id="35dad-144">Yes</span></span> | <span data-ttu-id="35dad-145">是</span><span class="sxs-lookup"><span data-stu-id="35dad-145">Yes</span></span> | <span data-ttu-id="35dad-146">是</span><span class="sxs-lookup"><span data-stu-id="35dad-146">Yes</span></span> |
| `double` | <span data-ttu-id="35dad-147">是</span><span class="sxs-lookup"><span data-stu-id="35dad-147">Yes</span></span> | <span data-ttu-id="35dad-148">是</span><span class="sxs-lookup"><span data-stu-id="35dad-148">Yes</span></span> | <span data-ttu-id="35dad-149">是</span><span class="sxs-lookup"><span data-stu-id="35dad-149">Yes</span></span> | <span data-ttu-id="35dad-150">是</span><span class="sxs-lookup"><span data-stu-id="35dad-150">Yes</span></span> |

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="35dad-151">创建 <see cref="T:System.Numerics.Vector`1" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="35dad-151">Creates an instance of <see cref="T:System.Numerics.Vector`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="35dad-152">类型 `T` 可以是以下任意数值类型：</span><span class="sxs-lookup"><span data-stu-id="35dad-152">The type `T` can be any of the following numeric types:</span></span>

| <span data-ttu-id="35dad-153">C# 关键字</span><span class="sxs-lookup"><span data-stu-id="35dad-153">C# keywords</span></span> | <span data-ttu-id="35dad-154">框架类型</span><span class="sxs-lookup"><span data-stu-id="35dad-154">Framework Type</span></span>       |
| ----------- | -------------------- |
| `sbyte`     | <xref:System.SByte>  |
| `byte`      | <xref:System.Byte>   |
| `short`     | <xref:System.Int16>  |
| `ushort`    | <xref:System.UInt16> |
| `int`       | <xref:System.Int32>  |
| `uint`      | <xref:System.UInt32> |
| `long`      | <xref:System.Int64>  |
| `ulong`     | <xref:System.UInt64> |
| `float`     | <xref:System.Single> |
| `double`    | <xref:System.Double> |

          ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (ReadOnlySpan&lt;byte&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(ReadOnlySpan&lt;System::Byte&gt; values);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : ReadOnlySpan&lt;byte&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="35dad-155">一个只读字节跨度，其中包含要添加到矢量的值。</span><span class="sxs-lookup"><span data-stu-id="35dad-155">A read-only span of bytes that contains the values to add to the vector.</span></span> <span data-ttu-id="35dad-156">跨度必须包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素，且仅使用前面 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-156">The span must contain at least <see cref="P:System.Numerics.Vector`1.Count" /> elements and only the first <see cref="P:System.Numerics.Vector`1.Count" /> elements are used.</span></span></param>
        <summary><span data-ttu-id="35dad-157">根据给定的只读字节跨度构造一个矢量。</span><span class="sxs-lookup"><span data-stu-id="35dad-157">Constructs a vector from the given read-only span of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

 <span data-ttu-id="35dad-158">仅将第一个 <xref:System.Numerics.Vector%601.Count%2A> 元素添加到向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-158">Only the first <xref:System.Numerics.Vector%601.Count%2A> elements are added to the vector.</span></span> <span data-ttu-id="35dad-159">将忽略余数。</span><span class="sxs-lookup"><span data-stu-id="35dad-159">The remainders are ignored.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="35dad-160"><paramref name="values" /> 未包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-160"><paramref name="values" /> did not contain at least <see cref="P:System.Numerics.Vector`1.Count" /> elements.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-161">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-161">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (ReadOnlySpan&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As ReadOnlySpan(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(ReadOnlySpan&lt;T&gt; values);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.ReadOnlySpan&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="35dad-162">要添加到矢量的值，以 <see langword="T" /> 类型对象只读范围形式表示。</span><span class="sxs-lookup"><span data-stu-id="35dad-162">The values to add to the vector, as a read-only span of objects of type <see langword="T" />.</span></span> <span data-ttu-id="35dad-163">跨度必须包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素，且仅使用前面 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-163">The span must contain at least <see cref="P:System.Numerics.Vector`1.Count" /> elements and only the first <see cref="P:System.Numerics.Vector`1.Count" /> elements are used.</span></span></param>
        <summary><span data-ttu-id="35dad-164">根据给定的 <see cref="T:System.ReadOnlySpan`1" /> 构造一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-164">Constructs a vector from the given <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

 <span data-ttu-id="35dad-165">仅将第一个 <xref:System.Numerics.Vector%601.Count%2A> 元素添加到向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-165">Only the first <xref:System.Numerics.Vector%601.Count%2A> elements are added to the vector.</span></span> <span data-ttu-id="35dad-166">将忽略余数。</span><span class="sxs-lookup"><span data-stu-id="35dad-166">The remainders are ignored.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="35dad-167"><paramref name="values" /> 未包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-167"><paramref name="values" /> did not contain at least <see cref="P:System.Numerics.Vector`1.Count" /> elements.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-168">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-168">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (Span&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Span`1&lt;!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Span(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(Span&lt;T&gt; values);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : Span&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Span&lt;T&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="35dad-169">要添加到矢量的值，作为类型为 T 的对象的跨度。此跨度必须包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素，且仅使用前面 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-169">The values to add to the vector, as a span of objects of type T. The span must contain at least <see cref="P:System.Numerics.Vector`1.Count" /> elements and only the first <see cref="P:System.Numerics.Vector`1.Count" /> elements are used.</span></span></param>
        <summary><span data-ttu-id="35dad-170">根据给定的 <see cref="T:System.Span`1" /> 构造一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-170">Constructs a vector from the given <see cref="T:System.Span`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

 <span data-ttu-id="35dad-171">仅将第一个 <xref:System.Numerics.Vector%601.Count%2A> 元素添加到向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-171">Only the first <xref:System.Numerics.Vector%601.Count%2A> elements are added to the vector.</span></span> <span data-ttu-id="35dad-172">将忽略余数。</span><span class="sxs-lookup"><span data-stu-id="35dad-172">The remainders are ignored.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="35dad-173"><paramref name="values" /> 未包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-173"><paramref name="values" /> did not contain at least <see cref="P:System.Numerics.Vector`1.Count" /> elements.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-174">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-174">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(T value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : 'T -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-175">定义向量中的组件类型的数值类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-175">The numeric type that defines the type of the components in the vector.</span></span></param>
        <summary><span data-ttu-id="35dad-176">创建其组件为指定类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-176">Creates a vector whose components are of a specified type.</span></span></summary>
        <remarks>To be added. </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-177">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-177">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(cli::array &lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : 'T[] -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="35dad-178">要添加到矢量的值，作为类型为 T 的对象的数组。此数组必须包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素，且仅使用前面 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-178">The values to add to the vector, as an array of objects of type T. The array must contain at least <see cref="P:System.Numerics.Vector`1.Count" /> elements and only the first <see cref="P:System.Numerics.Vector`1.Count" /> elements are used.</span></span></param>
        <summary><span data-ttu-id="35dad-179">从指定数组创建一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-179">Creates a vector from a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="35dad-180">仅将第一个 <xref:System.Numerics.Vector%601.Count%2A> 元素添加到向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-180">Only the first <xref:System.Numerics.Vector%601.Count%2A> elements are added to the vector.</span></span> <span data-ttu-id="35dad-181">将忽略余数。</span><span class="sxs-lookup"><span data-stu-id="35dad-181">The remainders are ignored.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="35dad-182"><paramref name="values" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-182"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-183">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-183">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T[] values, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] values, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(cli::array &lt;T&gt; ^ values, int index);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; : 'T[] * int -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="new System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; (values, index)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="35dad-184">要添加到矢量的值，作为类型为 T 的对象的数组。此数组必须包含指定索引中的至少 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素，且仅使用前面 <see cref="P:System.Numerics.Vector`1.Count" /> 个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-184">The values to add to the vector, as an array of objects of type T. The array must contain at least <see cref="P:System.Numerics.Vector`1.Count" /> elements from the specified index and only the first <see cref="P:System.Numerics.Vector`1.Count" /> elements are used.</span></span></param>
        <param name="index"><span data-ttu-id="35dad-185">从其创建向量的起始索引位置。</span><span class="sxs-lookup"><span data-stu-id="35dad-185">The starting index position from which to create the vector.</span></span></param>
        <summary><span data-ttu-id="35dad-186">于指定索引位置开始，从指定数组创建一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-186">Creates a vector from a specified array starting at a specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

 <span data-ttu-id="35dad-187">仅将第一个 <xref:System.Numerics.Vector%601.Count%2A> 元素添加到向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-187">Only the first <xref:System.Numerics.Vector%601.Count%2A> elements are added to the vector.</span></span> <span data-ttu-id="35dad-188">将忽略余数。</span><span class="sxs-lookup"><span data-stu-id="35dad-188">The remainders are ignored.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="35dad-189"><paramref name="values" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-189"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="35dad-190"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="35dad-190"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="35dad-191">- 或 -</span><span class="sxs-lookup"><span data-stu-id="35dad-191">-or-</span></span> 
<span data-ttu-id="35dad-192"><paramref name="values" /> 的长度减去 <paramref name="index" /> 小于 <see cref="P:System.Numerics.Vector`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-192">The length of <paramref name="values" /> minus <paramref name="index" /> is less than <see cref="P:System.Numerics.Vector`1.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-193">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-193">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Span&lt;byte&gt; -&gt; unit" Usage="vector.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="35dad-194">复制值的目标跨度。</span><span class="sxs-lookup"><span data-stu-id="35dad-194">The destination span to which the values are copied.</span></span> <span data-ttu-id="35dad-195">目标跨度大小必须至少为 <see cref="P:System.Numerics.Vector`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-195">The destination span must be at least size <see cref="P:System.Numerics.Vector`1.Count" />.</span></span></param>
        <summary><span data-ttu-id="35dad-196">将向量复制到给定的 <see cref="T:System.Span`1" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-196">Copies the vector to the given <see cref="T:System.Span`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="35dad-197">源向量中的元素个数大于目标跨度中可用的元素个数。</span><span class="sxs-lookup"><span data-stu-id="35dad-197">The number of elements in the source vector is greater than those available in the destination span.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-198">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-198">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Span&lt;T&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Span`1&lt;!T&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Span(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Span&lt;T&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Span&lt;'T (requires 'T : struct)&gt; -&gt; unit" Usage="vector.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="35dad-199">复制值的目标跨度。</span><span class="sxs-lookup"><span data-stu-id="35dad-199">The destination span to which the values are copied.</span></span> <span data-ttu-id="35dad-200">目标跨度大小必须至少为 <see cref="P:System.Numerics.Vector`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-200">The destination span must be at least size <see cref="P:System.Numerics.Vector`1.Count" />.</span></span></param>
        <summary><span data-ttu-id="35dad-201">请将向量复制到给定跨度。</span><span class="sxs-lookup"><span data-stu-id="35dad-201">Copies the vector to the given span.</span></span> <span data-ttu-id="35dad-202">。</span><span class="sxs-lookup"><span data-stu-id="35dad-202">.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="35dad-203">源向量中的元素个数大于目标跨度中可用的元素个数。</span><span class="sxs-lookup"><span data-stu-id="35dad-203">The number of elements in the source vector is greater than those available in the destination span.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-204">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-204">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] -&gt; unit" Usage="vector.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="35dad-205">要接收矢量值的副本的数组。</span><span class="sxs-lookup"><span data-stu-id="35dad-205">The array to receive a copy of the vector values.</span></span></param>
        <summary><span data-ttu-id="35dad-206">将向量实例复制到指定的目标数组。</span><span class="sxs-lookup"><span data-stu-id="35dad-206">Copies the vector instance to a specified destination array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-207">复制操作从的索引0开始 `destination` 。</span><span class="sxs-lookup"><span data-stu-id="35dad-207">The copy operation begins at index 0 of `destination`.</span></span> <span data-ttu-id="35dad-208">目标数组必须至少具有个 <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> 元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-208">The destination array must have at least <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="35dad-209"><paramref name="destination" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-209"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="35dad-210">当前向量中的元素数目大于 <paramref name="destination" /> 数组中的可用元素数目。</span><span class="sxs-lookup"><span data-stu-id="35dad-210">The number of elements in the current vector is greater than the number of elements available in the <paramref name="destination" /> array.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-211">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-211">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T(), startIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="vector.CopyTo (destination, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="35dad-212">要接收矢量值的副本的数组。</span><span class="sxs-lookup"><span data-stu-id="35dad-212">The array to receive a copy of the vector values.</span></span></param>
        <param name="startIndex"><span data-ttu-id="35dad-213">在 <paramref name="destination" /> 中的起始索引，要于此处开始复制操作。</span><span class="sxs-lookup"><span data-stu-id="35dad-213">The starting index in <paramref name="destination" /> at which to begin the copy operation.</span></span></param>
        <summary><span data-ttu-id="35dad-214">从指定索引位置开始，将向量实例复制到指定的目标数组中。</span><span class="sxs-lookup"><span data-stu-id="35dad-214">Copies the vector instance to a specified destination array starting at a specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-215">复制操作从的索引处 `startIndex` 开始 `destination` 。</span><span class="sxs-lookup"><span data-stu-id="35dad-215">The copy operation begins at index `startIndex` of `destination`.</span></span> <span data-ttu-id="35dad-216">目标数组必须至少具有个 `startIndex`  +  <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> 元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-216">The destination array must have at least `startIndex` + <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="35dad-217"><paramref name="destination" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-217"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="35dad-218">当前实例中的元素数目大于从 <paramref name="startIndex" /> 到 <paramref name="destination" /> 数组末尾之间的可用元素数目。</span><span class="sxs-lookup"><span data-stu-id="35dad-218">The number of elements in the current instance is greater than the number of elements available from <paramref name="startIndex" /> to the end of the <paramref name="destination" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="35dad-219"><paramref name="index" /> 小于零或大于 <paramref name="destination" /> 中的最后一个索引。</span><span class="sxs-lookup"><span data-stu-id="35dad-219"><paramref name="index" /> is less than zero or greater than the last index in <paramref name="destination" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-220">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-220">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35dad-221">返回存储在向量中的元素数量。</span><span class="sxs-lookup"><span data-stu-id="35dad-221">Returns the number of elements stored in the vector.</span></span></summary>
        <value><span data-ttu-id="35dad-222">存储在向量中的元素数量。</span><span class="sxs-lookup"><span data-stu-id="35dad-222">The number of elements stored in the vector.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-223">不支持通过反射访问属性 getter。</span><span class="sxs-lookup"><span data-stu-id="35dad-223">Access to the property getter via reflection is not supported.</span></span>
        
<span data-ttu-id="35dad-224">- 或 -</span><span class="sxs-lookup"><span data-stu-id="35dad-224">-or-</span></span> 
<span data-ttu-id="35dad-225">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-225">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.Vector&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.Vector`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::Vector&lt;T&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="vector.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="35dad-226">要与此实例进行比较的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-226">The vector to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="35dad-227">返回一个值，该值指示此实例是否与指定的向量相等。</span><span class="sxs-lookup"><span data-stu-id="35dad-227">Returns a value that indicates whether this instance is equal to a specified vector.</span></span></summary>
        <returns><span data-ttu-id="35dad-228">如果当前实例与 <paramref name="other" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-228"><see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-229">如果两个向量的类型相同，则两个向量相等，并且当前实例中的每个值都等于中的相应值 `other` 。</span><span class="sxs-lookup"><span data-stu-id="35dad-229">Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-230">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-230">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="vector.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="35dad-231">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="35dad-231">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="35dad-232">返回一个值，该值指示此实例是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="35dad-232">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="35dad-233">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-233"><see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="35dad-234">如果 <paramref name="obj" /> 为 null，或者如果 <paramref name="obj" /> 是与当前实例类型不同的向量，则该方法将返回 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="35dad-234">The method returns <see langword="false" /> if <paramref name="obj" /> is null, or if <paramref name="obj" /> is a vector of a different type than the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-235">如果两个向量的类型相同，则两个向量相等，并且当前实例中的每个值都等于中的相应值 `other` 。</span><span class="sxs-lookup"><span data-stu-id="35dad-235">Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-236">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-236">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="vector.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35dad-237">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="35dad-237">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="35dad-238">哈希代码。</span><span class="sxs-lookup"><span data-stu-id="35dad-238">The hash code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-239">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-239">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="35dad-240">要返回的元素的索引。</span><span class="sxs-lookup"><span data-stu-id="35dad-240">The index of the element to return.</span></span></param>
        <summary><span data-ttu-id="35dad-241">获取指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-241">Gets the element at a specified index.</span></span></summary>
        <value><span data-ttu-id="35dad-242">索引 <paramref name="index" /> 处的元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-242">The element at index <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="35dad-243"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="35dad-243"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="35dad-244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="35dad-244">-or-</span></span> 
 <span data-ttu-id="35dad-245"><paramref name="index" /> 大于或等于 <see cref="P:System.Numerics.Vector`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-245"><paramref name="index" /> is greater than or equal to <see cref="P:System.Numerics.Vector`1.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-246">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-246">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Vector`1&lt;!T&gt; One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Vector&lt;T&gt; One { System::Numerics::Vector&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.One : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35dad-247">返回一个包含所有 1 的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-247">Returns a vector containing all ones.</span></span></summary>
        <value><span data-ttu-id="35dad-248">一个包含所有 1 的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-248">A vector containing all ones.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-249">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-249">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator + (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Addition(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator +(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-250">要相加的第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-250">The first vector to add.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-251">要相加的第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-251">The second vector to add.</span></span></param>
        <summary><span data-ttu-id="35dad-252">将两个向量相加。</span><span class="sxs-lookup"><span data-stu-id="35dad-252">Adds two vectors together.</span></span></summary>
        <returns><span data-ttu-id="35dad-253">总和向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-253">The summed vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-254"><xref:System.Numerics.Vector%601.op_Addition%2A>方法定义对象的加法运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-254">The <xref:System.Numerics.Vector%601.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-255">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-255">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator &amp; (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_BitwiseAnd(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator &amp;(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-256">第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-256">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-257">第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-257">The second vector.</span></span></param>
        <summary><span data-ttu-id="35dad-258">通过在两个向量中的每个元素上执行按位 <see langword="And" /> 运算，返回一个新向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-258">Returns a new vector by performing a bitwise <see langword="And" /> operation on each of the elements in two vectors.</span></span></summary>
        <returns><span data-ttu-id="35dad-259">从 <paramref name="left" /> 和 <paramref name="right" /> 的按位 <see langword="And" /> 得到的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-259">The vector that results from the bitwise <see langword="And" /> of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-260"><xref:System.Numerics.Vector%601.op_BitwiseAnd%2A>方法定义对象的按位 `And` 运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-260">The <xref:System.Numerics.Vector%601.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-261">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-261">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator | (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_BitwiseOr(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator |(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-262">第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-262">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-263">第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-263">The second vector.</span></span></param>
        <summary><span data-ttu-id="35dad-264">通过在两个向量中的每个元素上执行按位 <see langword="Or" /> 运算，返回一个新向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-264">Returns a new vector by performing a bitwise <see langword="Or" /> operation on each of the elements in two vectors.</span></span></summary>
        <returns><span data-ttu-id="35dad-265">从 <paramref name="left" /> 和 <paramref name="right" /> 中的元素的按位 <see langword="Or" /> 得到的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-265">The vector that results from the bitwise <see langword="Or" /> of the elements in <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-266"><xref:System.Numerics.Vector%601.op_BitwiseOr%2A>方法定义对象的按位 `Or` 运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-266">The <xref:System.Numerics.Vector%601.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-267">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-267">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator / (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Division(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator /(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left / right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-268">第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-268">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-269">第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-269">The second vector.</span></span></param>
        <summary><span data-ttu-id="35dad-270">将第一个向量除以第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-270">Divides the first vector by the second.</span></span></summary>
        <returns><span data-ttu-id="35dad-271">将 <paramref name="left" /> 除以 <paramref name="right" /> 得到的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-271">The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-272"><xref:System.Numerics.Vector%601.op_Division%2A>方法定义对象的除法运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-272">The <xref:System.Numerics.Vector%601.op_Division%2A> method defines the division operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-273">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-273">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Vector(Of T), right As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-274">要比较的第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-274">The first vector to compare.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-275">要比较的第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-275">The second vector to compare.</span></span></param>
        <summary><span data-ttu-id="35dad-276">返回一个值，该值指示两个指定向量中的每对元素是否相等。</span><span class="sxs-lookup"><span data-stu-id="35dad-276">Returns a value that indicates whether each pair of elements in two specified vectors are equal.</span></span></summary>
        <returns><span data-ttu-id="35dad-277">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-277"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-278">如果两个向量的类型相同，则两个向量相等，并且中的每个值 `left` 都等于中的相应值 `right` 。</span><span class="sxs-lookup"><span data-stu-id="35dad-278">Two vectors are equal if they are of the same type, have the same number of values, and each value in `left` is equal to the corresponding value in `right`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-279">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-279">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator ^ (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_ExclusiveOr(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator ^(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left ^^^ right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-280">第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-280">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-281">第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-281">The second vector.</span></span></param>
        <summary><span data-ttu-id="35dad-282">通过在两个向量中的每个元素上执行按位 <see langword="XOr" /> 运算，返回一个新向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-282">Returns a new vector by performing a bitwise <see langword="XOr" /> operation on each of the elements in two vectors.</span></span></summary>
        <returns><span data-ttu-id="35dad-283">从 <paramref name="left" /> 和 <paramref name="right" /> 中的元素的按位 <see langword="XOr" /> 得到的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-283">The vector that results from the bitwise <see langword="XOr" /> of the elements in <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-284"><xref:System.Numerics.Vector%601.op_ExclusiveOr%2A>方法定义对象的按位 `XOr` 运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-284">The <xref:System.Numerics.Vector%601.op_ExclusiveOr%2A> method defines the bitwise `XOr` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-285">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-285">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;byte&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::Byte&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;byte&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-286">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-286">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-287">将指定向量的位重新解释为 <see cref="T:System.Byte" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-287">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Byte" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-288">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-288">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-289"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-289">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-290">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-290">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;double&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;float64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;double&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;double&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-291">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-291">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-292">将指定向量的位重新解释为 <see cref="T:System.Double" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-292">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-293">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-293">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-294"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-294">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-295">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-295">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;short&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int16&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;short&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;int16&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-296">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-296">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-297">将指定向量的位重新解释为 <see cref="T:System.Int16" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-297">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-298">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-298">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-299"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-299">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-300">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-300">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;int&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;int&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;int&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-301">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-301">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-302">将指定向量的位重新解释为 <see cref="T:System.Int32" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-302">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-303">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-303">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-304"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-304">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-305">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-305">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;long&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;long&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;int64&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-306">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-306">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-307">将指定向量的位重新解释为 <see cref="T:System.Int64" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-307">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-308">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-308">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-309"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-309">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-310">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-310">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;sbyte&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int8&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::SByte&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;sbyte&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-311">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-311">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-312">将指定向量的位重新解释为 <see cref="T:System.SByte" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-312">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.SByte" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-313">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-313">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-314"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-314">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-315">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-315">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;float&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;float32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;float&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;single&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-316">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-316">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-317">将指定向量的位重新解释为 <see cref="T:System.Single" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-317">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-318">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-318">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-319"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-319">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-320">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-320">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;ushort&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt16&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;uint16&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-321">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-321">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-322">将指定向量的位重新解释为 <see cref="T:System.UInt16" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-322">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt16" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-323">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-323">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-324"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-324">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-325">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-325">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;uint&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt32&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;uint32&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-326">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-326">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-327">将指定向量的位重新解释为 <see cref="T:System.UInt32" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-327">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-328">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-328">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-329"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-329">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-330">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-330">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;ulong&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt64&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;uint64&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-331">要重新解释的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-331">The vector to reinterpret.</span></span></param>
        <summary><span data-ttu-id="35dad-332">将指定向量的位重新解释为 <see cref="T:System.UInt64" /> 类型的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-332">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-333">重新解释后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-333">The reinterpreted vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-334"><xref:System.Numerics.Vector%601.op_Explicit%2A>运算符定义收缩转换; 它要求在 c # 中 (强制转换运算符 ) 或 Visual Basic) 中 (转换方法。</span><span class="sxs-lookup"><span data-stu-id="35dad-334">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-335">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-335">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Vector(Of T), right As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-336">要比较的第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-336">The first vector to compare.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-337">要比较的第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-337">The second vector to compare.</span></span></param>
        <summary><span data-ttu-id="35dad-338">返回一个值，该值指示指定向量中的任意元素对是否相等。</span><span class="sxs-lookup"><span data-stu-id="35dad-338">Returns a value that indicates whether any single pair of elements in the specified vectors is equal.</span></span></summary>
        <returns><span data-ttu-id="35dad-339">如果左侧和右侧的任意元素对相等，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-339"><see langword="true" /> if any element pairs in left and right are equal.</span></span> <span data-ttu-id="35dad-340">如果没有元素对相等，则为 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="35dad-340"><see langword="false" /> if no element pairs are equal.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-341">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-341">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-342">第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-342">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-343">第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-343">The second vector.</span></span></param>
        <summary><span data-ttu-id="35dad-344">返回一个新向量，其值是两个指定向量中的每对元素的乘积。</span><span class="sxs-lookup"><span data-stu-id="35dad-344">Returns a new vector whose values are the product of each pair of elements in two specified vectors.</span></span></summary>
        <returns><span data-ttu-id="35dad-345">元素方面的乘积向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-345">The element-wise product vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-346"><xref:System.Numerics.Vector%601.op_Multiply%2A>方法定义对象的乘法运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-346">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-347">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-347">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (System.Numerics.Vector&lt;T&gt; value, T factor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(valuetype System.Numerics.Vector`1&lt;!T&gt; value, !T factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (value As Vector(Of T), factor As T) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(System::Numerics::Vector&lt;T&gt; value, T factor);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * 'T -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="value * factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="factor" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-348">源向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-348">The source vector.</span></span></param>
        <param name="factor"><span data-ttu-id="35dad-349">标量值。</span><span class="sxs-lookup"><span data-stu-id="35dad-349">A scalar value.</span></span></param>
        <summary><span data-ttu-id="35dad-350">将向量乘以指定标量值。</span><span class="sxs-lookup"><span data-stu-id="35dad-350">Multiplies a vector by a specified scalar value.</span></span></summary>
        <returns><span data-ttu-id="35dad-351">缩放后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-351">The scaled vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-352"><xref:System.Numerics.Vector%601.op_Multiply%2A>方法定义对象的乘法运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-352">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-353">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-353">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (T factor, System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(!T factor, valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (factor As T, value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(T factor, System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member ( * ) : 'T * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="factor * value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="T" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="35dad-354">标量值。</span><span class="sxs-lookup"><span data-stu-id="35dad-354">The scalar value.</span></span></param>
        <param name="value"><span data-ttu-id="35dad-355">源向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-355">The source vector.</span></span></param>
        <summary><span data-ttu-id="35dad-356">将向量乘以指定标量值。</span><span class="sxs-lookup"><span data-stu-id="35dad-356">Multiplies a vector by a specified scalar value.</span></span></summary>
        <returns><span data-ttu-id="35dad-357">缩放后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-357">The scaled vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-358"><xref:System.Numerics.Vector%601.op_Multiply%2A>方法定义对象的乘法运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-358">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-359">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-359">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator ~ (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_OnesComplement(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator ~(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.op_OnesComplement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-360">源向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-360">The source vector.</span></span></param>
        <summary><span data-ttu-id="35dad-361">返回一个新向量，其元素是通过取用指定向量的元素的二进制反码来获取的。</span><span class="sxs-lookup"><span data-stu-id="35dad-361">Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</span></span></summary>
        <returns><span data-ttu-id="35dad-362">二进制反码向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-362">The one's complement vector.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-363">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-363">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator - (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Subtraction(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator -(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; * System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="35dad-364">第一个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-364">The first vector.</span></span></param>
        <param name="right"><span data-ttu-id="35dad-365">第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-365">The second vector.</span></span></param>
        <summary><span data-ttu-id="35dad-366">从第一个向量中减去第二个向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-366">Subtracts the second vector from the first.</span></span></summary>
        <returns><span data-ttu-id="35dad-367">从 <paramref name="left" /> 中减去 <paramref name="right" /> 得到的结果向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-367">The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-368"><xref:System.Numerics.Vector%601.op_Subtraction%2A>方法为对象定义减法运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-368">The <xref:System.Numerics.Vector%601.op_Subtraction%2A> method defines the subtraction operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-369">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-369">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator - (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_UnaryNegation(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator -(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt; -&gt; System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="35dad-370">要求反的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-370">The vector to negate.</span></span></param>
        <summary><span data-ttu-id="35dad-371">对给定向量求反。</span><span class="sxs-lookup"><span data-stu-id="35dad-371">Negates a given vector.</span></span></summary>
        <returns><span data-ttu-id="35dad-372">求反后的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-372">The negated vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-373"><xref:System.Numerics.Vector%601.op_UnaryNegation%2A>方法定义对象的一元求反运算 <xref:System.Numerics.Vector%601> 。</span><span class="sxs-lookup"><span data-stu-id="35dad-373">The <xref:System.Numerics.Vector%601.op_UnaryNegation%2A> method defines the unary negation operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-374">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-374">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="vector.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35dad-375">通过使用默认格式设置，返回此向量的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="35dad-375">Returns the string representation of this vector using default formatting.</span></span></summary>
        <returns><span data-ttu-id="35dad-376">此向量的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="35dad-376">The string representation of this vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-377">此方法返回一个字符串，其中，矢量的每个元素均使用 "G" (常规) 格式字符串和当前线程区域性的格式设置约定进行格式化。</span><span class="sxs-lookup"><span data-stu-id="35dad-377">This method returns a string in which each element of the vector is formatted using the "G" (general) format string and the formatting conventions of the current thread culture.</span></span> <span data-ttu-id="35dad-378">当前区域性的 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> 属性后跟一个空格用于分隔每个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-378">The current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-379">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-379">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="vector.ToString format" />
      <MemberSignature Language="C#" Value="public string ToString (string? format);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="35dad-380">一个  或  定义各个元素的格式的。</span><span class="sxs-lookup"><span data-stu-id="35dad-380">A  or  that defines the format of individual elements.</span></span></param>
        <summary><span data-ttu-id="35dad-381">通过使用指定格式字符串设置各个元素的格式，来返回此向量的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="35dad-381">Returns the string representation of this vector using the specified format string to format individual elements.</span></span></summary>
        <returns><span data-ttu-id="35dad-382">当前实例的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="35dad-382">The string representation of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-383">此方法返回一个字符串，其中使用向量的每个元素 `format` 以及当前区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="35dad-383">This method returns a string in which each element of the vector is formatted using `format` and the current culture's formatting conventions.</span></span> <span data-ttu-id="35dad-384">当前区域性的 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> 属性后跟一个空格用于分隔每个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-384">The current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-385">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-385">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="vector.ToString (format, formatProvider)" />
      <MemberSignature Language="C#" Value="public string ToString (string? format, IFormatProvider? formatProvider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="35dad-386">一个  或  定义各个元素的格式的。</span><span class="sxs-lookup"><span data-stu-id="35dad-386">A  or  that defines the format of individual elements.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="35dad-387">一个提供特定于区域性的格式设置信息的格式提供程序。</span><span class="sxs-lookup"><span data-stu-id="35dad-387">A format provider that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="35dad-388">通过使用指定格式字符串设置各个元素的格式并使用指定格式提供程序定义特定于区域性的格式设置，来返回此向量的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="35dad-388">Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</span></span></summary>
        <returns><span data-ttu-id="35dad-389">当前实例的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="35dad-389">The string representation of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35dad-390">此方法返回一个字符串，其中，矢量的每个元素都使用和进行格式设置 `format` `formatProvider` ，格式设置提供程序的 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> 属性后跟一个空格用于分隔每个元素。</span><span class="sxs-lookup"><span data-stu-id="35dad-390">This method returns a string in which each element of the vector is formatted using `format` and `formatProvider`, and the format provider's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-391">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-391">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryCopyTo">
      <MemberSignature Language="C#" Value="public bool TryCopyTo (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCopyTo(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCopyTo (destination As Span(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCopyTo(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.TryCopyTo : Span&lt;byte&gt; -&gt; bool" Usage="vector.TryCopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="35dad-392">复制值的目标跨度。</span><span class="sxs-lookup"><span data-stu-id="35dad-392">The destination span to which the values are copied.</span></span> <span data-ttu-id="35dad-393">目标跨度大小必须至少为 <see cref="P:System.Numerics.Vector`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-393">The destination span must be at least size <see cref="P:System.Numerics.Vector`1.Count" />.</span></span></param>
        <summary><span data-ttu-id="35dad-394">请尝试将向量复制到给定字节跨度。</span><span class="sxs-lookup"><span data-stu-id="35dad-394">Attempts to copy the vector to the given byte span.</span></span></summary>
        <returns><span data-ttu-id="35dad-395">如果源向量成功复制到 <paramref name="destination" />，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-395"><see langword="true" /> if the source vector was successfully copied to <paramref name="destination" />.</span></span> <span data-ttu-id="35dad-396">如果 <paramref name="destination" /> 不足以保存源向量，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-396"><see langword="false" /> if <paramref name="destination" /> is not large enough to hold the source vector.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-397">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-397">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryCopyTo">
      <MemberSignature Language="C#" Value="public bool TryCopyTo (Span&lt;T&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCopyTo(valuetype System.Span`1&lt;!T&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCopyTo (destination As Span(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCopyTo(Span&lt;T&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.TryCopyTo : Span&lt;'T (requires 'T : struct)&gt; -&gt; bool" Usage="vector.TryCopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;T&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="35dad-398">复制值的目标跨度。</span><span class="sxs-lookup"><span data-stu-id="35dad-398">The destination span to which the values are copied.</span></span> <span data-ttu-id="35dad-399">目标跨度大小必须至少为 <see cref="P:System.Numerics.Vector`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-399">The destination span must be at least size <see cref="P:System.Numerics.Vector`1.Count" />.</span></span></param>
        <summary><span data-ttu-id="35dad-400">请尝试将向量复制到给定的 <see cref="T:System.Span`1" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-400">Attempts to copy the vector to the given <see cref="T:System.Span`1" />.</span></span></summary>
        <returns><span data-ttu-id="35dad-401">如果源向量成功复制到 <paramref name="destination" />，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-401"><see langword="true" /> if the source vector was successfully copied to <paramref name="destination" />.</span></span> <span data-ttu-id="35dad-402">如果 <paramref name="destination" /> 不足以保存源向量，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35dad-402"><see langword="false" /> if <paramref name="destination" /> is not large enough to hold the source vector.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-403">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-403">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Vector`1&lt;!T&gt; Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Vector&lt;T&gt; Zero { System::Numerics::Vector&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;" Usage="System.Numerics.Vector&lt;'T (requires 'T : struct)&gt;.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.1.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35dad-404">返回一个包含所有 0 的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-404">Returns a vector containing all zeroes.</span></span></summary>
        <value><span data-ttu-id="35dad-405">一个包含所有 0 的向量。</span><span class="sxs-lookup"><span data-stu-id="35dad-405">A vector containing all zeroes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35dad-406">.NET 5.0 及更高版本：不支持 <see langword="T" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="35dad-406">.NET 5.0 and later: Type <see langword="T" /> is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
