<Type Name="XmlDocument" FullName="System.Xml.XmlDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86c1f569478065fb8706cd2e8992154337a71504" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90697897" /></Metadata><TypeSignature Language="C#" Value="public class XmlDocument : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDocument extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDocument&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDocument : System::Xml::XmlNode" />
  <TypeSignature Language="F#" Value="type XmlDocument = class&#xA;    inherit XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlDocument" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlDocument" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlDocument" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlDocument" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a8f58-101">表示 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-101">Represents an XML document.</span></span> <span data-ttu-id="a8f58-102">可使用此类在文档中加载、验证、编辑、添加和放置 XML。</span><span class="sxs-lookup"><span data-stu-id="a8f58-102">You can use this class to load, validate, edit, add, and position XML in a document.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="Remarks"></a><span data-ttu-id="a8f58-103"><xref:System.Xml.XmlDocument>类是 XML 文档的内存中表示形式。</span><span class="sxs-lookup"><span data-stu-id="a8f58-103">The <xref:System.Xml.XmlDocument> class is an in-memory representation of an XML document.</span></span> <span data-ttu-id="a8f58-104">它实现 W3C [XML 文档对象模型 (DOM) ](/dotnet/standard/data/xml/xml-document-object-model-dom) 级别1核心和核心 DOM 级别2。</span><span class="sxs-lookup"><span data-stu-id="a8f58-104">It implements the W3C [XML Document Object Model (DOM)](/dotnet/standard/data/xml/xml-document-object-model-dom) Level 1 Core and the Core DOM Level 2.</span></span>  
  
 <span data-ttu-id="a8f58-105">*DOM* 代表 *文档对象模型*。</span><span class="sxs-lookup"><span data-stu-id="a8f58-105">*DOM* stands for *document object model*.</span></span> <span data-ttu-id="a8f58-106">若要了解有关详细信息，请参阅 [XML 文档对象模型 (DOM) ](/dotnet/standard/data/xml/xml-document-object-model-dom)。</span><span class="sxs-lookup"><span data-stu-id="a8f58-106">To read more about it, see [XML Document Object Model (DOM)](/dotnet/standard/data/xml/xml-document-object-model-dom).</span></span>  
  
 <span data-ttu-id="a8f58-107">您可以使用类将 XML 加载到 DOM 中 <xref:System.Xml.XmlDocument> ，然后在文档中以编程方式读取、修改和删除 xml。</span><span class="sxs-lookup"><span data-stu-id="a8f58-107">You can load XML into the DOM by using the <xref:System.Xml.XmlDocument> class, and then programmatically read, modify, and remove XML in the document.</span></span>  
  
 <span data-ttu-id="a8f58-108">如果要撬开 <xref:System.Xml.XmlDocument> 该类并查看其实现方式，请参阅 [引用源](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12)。</span><span class="sxs-lookup"><span data-stu-id="a8f58-108">If you want to pry open the <xref:System.Xml.XmlDocument> class and see how it's implemented, see the [Reference Source](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12).</span></span>  
  
<a name="Common"></a>   
## <a name="tasks"></a><span data-ttu-id="a8f58-109">任务</span><span class="sxs-lookup"><span data-stu-id="a8f58-109">Tasks</span></span>  
  
-   [<span data-ttu-id="a8f58-110">将 XML 加载到文档对象模型</span><span class="sxs-lookup"><span data-stu-id="a8f58-110">Load XML into the document object model</span></span>](#Load)  
  
-   [<span data-ttu-id="a8f58-111">根据架构对其进行验证</span><span class="sxs-lookup"><span data-stu-id="a8f58-111">Validate it against a schema</span></span>](#Validation)  
  
-   [<span data-ttu-id="a8f58-112">在文档树中导航</span><span class="sxs-lookup"><span data-stu-id="a8f58-112">Navigate the document tree</span></span>](#Navigate)  
  
-   [<span data-ttu-id="a8f58-113">查找节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-113">Find nodes</span></span>](#Find)  
  
-   [<span data-ttu-id="a8f58-114">编辑节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-114">Edit nodes</span></span>](#Edit)  
  
-   [<span data-ttu-id="a8f58-115">添加节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-115">Add nodes</span></span>](#Add)  
  
-   [<span data-ttu-id="a8f58-116">删除节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-116">Remove nodes</span></span>](#Remove)  
  
-   [<span data-ttu-id="a8f58-117">位置节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-117">Position nodes</span></span>](#Position)  
  
<a name="Load"></a>   
## <a name="load-xml-into-the-document-object-model"></a><span data-ttu-id="a8f58-118">将 XML 加载到文档对象模型</span><span class="sxs-lookup"><span data-stu-id="a8f58-118">Load XML into the document object model</span></span>  
 <span data-ttu-id="a8f58-119">从一个 XML 文档开始，其中包含集合中的一些书籍。</span><span class="sxs-lookup"><span data-stu-id="a8f58-119">Start with an XML document like this one that has a few books in a collection.</span></span> <span data-ttu-id="a8f58-120">它包含您在任何 XML 文档中可以找到的基本内容，其中包括命名空间、表示数据的元素以及用于描述数据的特性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-120">It contains the basic things that you'd find in any XML document, including a namespace, elements that represent data, and attributes that describe the data.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<books xmlns="http://www.contoso.com/books">  
  <book genre="novel" ISBN="1-861001-57-8" publicationdate="1823-01-28">  
    <title>Pride And Prejudice</title>  
    <price>24.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861002-30-1" publicationdate="1985-01-01">  
    <title>The Handmaid's Tale</title>  
    <price>29.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861001-45-3" publicationdate="1811-01-01">  
    <title>Sense and Sensibility</title>  
    <price>19.95</price>  
  </book>  
</books>  
```  
  
 <span data-ttu-id="a8f58-121">接下来，将此数据加载到 DOM 中，以便可以在内存中使用它。</span><span class="sxs-lookup"><span data-stu-id="a8f58-121">Next, load this data into the DOM so that you can work with it in memory.</span></span> <span data-ttu-id="a8f58-122">要执行此操作，最常见的方法是引用本地计算机或网络上的文件。</span><span class="sxs-lookup"><span data-stu-id="a8f58-122">The most popular way to do this is refer to a file on your local computer or on a network.</span></span>  
  
 <span data-ttu-id="a8f58-123">此示例从文件加载 XML。</span><span class="sxs-lookup"><span data-stu-id="a8f58-123">This example loads XML from a file.</span></span> <span data-ttu-id="a8f58-124">如果该文件不存在，则只生成一些 XML 并加载。</span><span class="sxs-lookup"><span data-stu-id="a8f58-124">If the file doesn't exist, it just generates some XML and loads that.</span></span>  
  
 [!code-cpp[XMLProcessingApp#1](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#1)]
 [!code-csharp[XMLProcessingApp#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#1)]
 [!code-vb[XMLProcessingApp#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#1)]  
  
 <span data-ttu-id="a8f58-125">**完整示例：** [使用 xml 类和其他相关类型在内存中操作 XML](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="a8f58-125">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="a8f58-126">**了解详细信息：** [将 XML 文档读入 DOM](/dotnet/standard/data/xml/reading-an-xml-document-into-the-dom)</span><span class="sxs-lookup"><span data-stu-id="a8f58-126">**Learn more:** [Reading an XML Document into the DOM](/dotnet/standard/data/xml/reading-an-xml-document-into-the-dom)</span></span>  
  
<a name="Validation"></a>   
## <a name="validate-it-against-a-schema"></a><span data-ttu-id="a8f58-127">根据架构对其进行验证</span><span class="sxs-lookup"><span data-stu-id="a8f58-127">Validate it against a schema</span></span>  
 <span data-ttu-id="a8f58-128">从此类 XML 架构开始。</span><span class="sxs-lookup"><span data-stu-id="a8f58-128">Start with an XML schema like this one.</span></span> <span data-ttu-id="a8f58-129">此架构定义 XML 中的数据类型以及所需的属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-129">This schema defines the data types in the XML and which attributes are required.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"  
  attributeFormDefault="unqualified"   
  elementFormDefault="qualified"  
  targetNamespace="http://www.contoso.com/books">   
  <xs:element name="books">  
    <xs:complexType>  
      <xs:sequence>  
        <xs:element maxOccurs="unbounded" name="book">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="title" type="xs:string" />  
              <xs:element name="price" type="xs:decimal" />  
            </xs:sequence>  
            <xs:attribute name="genre" type="xs:string" use="required" />  
            <xs:attribute name="ISBN" type="xs:string" use="required" />  
            <xs:attribute name="publicationdate" type="xs:date" use="required" />  
          </xs:complexType>  
        </xs:element>  
      </xs:sequence>  
    </xs:complexType>  
  </xs:element>  
</xs:schema>  
```  
  
 <span data-ttu-id="a8f58-130"><xref:System.Xml.XmlReader>使用架构创建对象，然后将该对象加载到 DOM。</span><span class="sxs-lookup"><span data-stu-id="a8f58-130">Create an <xref:System.Xml.XmlReader> object by using your schema, and then load that object into the DOM.</span></span> <span data-ttu-id="a8f58-131">创建一个事件处理程序，该事件处理程序在代码尝试使用违反架构规则的方式修改 XML 文件时执行。</span><span class="sxs-lookup"><span data-stu-id="a8f58-131">Create an event handler that executes when code attempts to modify your XML file in ways that violate the rules of the schema.</span></span>  
  
 <span data-ttu-id="a8f58-132">这些代码块显示执行所有此操作的帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-132">These blocks of code show helper methods that do all of this.</span></span>  
  
 [!code-cpp[XMLProcessingApp#2](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#2)]
 [!code-csharp[XMLProcessingApp#2](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#2)]
 [!code-vb[XMLProcessingApp#2](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#2)]  
  
 <span data-ttu-id="a8f58-133">**完整示例：** [使用 xml 类和其他相关类型在内存中操作 XML](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="a8f58-133">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="a8f58-134">**了解详细信息：** [在 DOM 中验证 XML 文档](/dotnet/standard/data/xml/validating-an-xml-document-in-the-dom)</span><span class="sxs-lookup"><span data-stu-id="a8f58-134">**Learn more:** [Validating an XML Document in the DOM](/dotnet/standard/data/xml/validating-an-xml-document-in-the-dom)</span></span>  
  
<a name="Navigate"></a>   
## <a name="navigate-the-document-tree"></a><span data-ttu-id="a8f58-135">在文档树中导航</span><span class="sxs-lookup"><span data-stu-id="a8f58-135">Navigate the document tree</span></span>  
 <span data-ttu-id="a8f58-136">您可以使用属性来浏览 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-136">You can use properties to navigate around an XML document.</span></span> <span data-ttu-id="a8f58-137">但在使用其中任何一个之前，让我们快速回顾几个术语。</span><span class="sxs-lookup"><span data-stu-id="a8f58-137">But before you use any of them, let's quickly review a few terms.</span></span> <span data-ttu-id="a8f58-138">文档由节点组成。</span><span class="sxs-lookup"><span data-stu-id="a8f58-138">Your document is composed of nodes.</span></span> <span data-ttu-id="a8f58-139">每个节点在其上都有一个直接的 *父* 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-139">Each node has as single *parent* node directly above it.</span></span> <span data-ttu-id="a8f58-140">唯一没有父节点的节点是文档根，因为它是顶级节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-140">The only node that does not have a parent node is the document root, as it is the top-level node.</span></span> <span data-ttu-id="a8f58-141">大多数节点可以有 *子* 节点，子节点直接位于其下。</span><span class="sxs-lookup"><span data-stu-id="a8f58-141">Most nodes can have *child* nodes, which are nodes directly below them.</span></span> <span data-ttu-id="a8f58-142">处于相同级别的节点是 *同级*节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-142">Nodes that are at the same level are *siblings*.</span></span>  
  
 <span data-ttu-id="a8f58-143">下面的示例演示如何获取根节点，跳转到根节点的第一个子节点，访问其任何子节点，返回到父节点，然后在同级节点之间导航。</span><span class="sxs-lookup"><span data-stu-id="a8f58-143">The following examples show you how to obtain the root node, jump to the first child node of the root node, access any of its child nodes, get back out to the parent node, and then navigate across sibling nodes.</span></span>  
  
 <span data-ttu-id="a8f58-144">**从根节点开始**</span><span class="sxs-lookup"><span data-stu-id="a8f58-144">**Start with the root node**</span></span>  
  
 <span data-ttu-id="a8f58-145">此示例获取根节点，然后使用该节点将文档内容输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="a8f58-145">This example gets the root node and then uses that node to output the contents of the document to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-146">**获取子节点**</span><span class="sxs-lookup"><span data-stu-id="a8f58-146">**Get child nodes**</span></span>  
  
 <span data-ttu-id="a8f58-147">此示例跳转到根节点的第一个子节点，然后循环访问该节点的子节点（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-147">This example jumps to the first child node of the root node and then iterates through the child nodes of that node if any exist.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-148">**返回父节点**</span><span class="sxs-lookup"><span data-stu-id="a8f58-148">**Get back to the parent node**</span></span>  
  
 <span data-ttu-id="a8f58-149">使用 <xref:System.Xml.XmlDocument.ParentNode%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-149">Use the <xref:System.Xml.XmlDocument.ParentNode%2A> property.</span></span>  
  
 <span data-ttu-id="a8f58-150">**请参阅最后一个子节点**</span><span class="sxs-lookup"><span data-stu-id="a8f58-150">**Refer to the last child node**</span></span>  
  
 <span data-ttu-id="a8f58-151">此示例将书籍的价格写入控制台。</span><span class="sxs-lookup"><span data-stu-id="a8f58-151">This example writes the price of a book to the console.</span></span> <span data-ttu-id="a8f58-152">"价格" 节点是 book 节点的最后一个子级。</span><span class="sxs-lookup"><span data-stu-id="a8f58-152">The price node is the last child of a book node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-153">**在同级之间向前导航**</span><span class="sxs-lookup"><span data-stu-id="a8f58-153">**Navigate forward across siblings**</span></span>  
  
 <span data-ttu-id="a8f58-154">此示例将书籍中的前移。</span><span class="sxs-lookup"><span data-stu-id="a8f58-154">This example moves forward from book to book.</span></span> <span data-ttu-id="a8f58-155">Book 节点彼此同级。</span><span class="sxs-lookup"><span data-stu-id="a8f58-155">Book nodes are siblings to one another.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-156">**在同级之间向后导航**</span><span class="sxs-lookup"><span data-stu-id="a8f58-156">**Navigate backwards across siblings**</span></span>  
  
 <span data-ttu-id="a8f58-157">此示例将书籍向后移动。</span><span class="sxs-lookup"><span data-stu-id="a8f58-157">This example moves backwards from book to book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
<a name="Find"></a>   
## <a name="find-nodes"></a><span data-ttu-id="a8f58-158">查找节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-158">Find nodes</span></span>  
 <span data-ttu-id="a8f58-159">查找一个或多个数据节点的最常用方法是使用 XPath 查询字符串，但也存在不需要的方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-159">The most popular way to find one or more nodes of data is to use an XPath query string, but there are also methods that don't require one.</span></span>  
  
 <span data-ttu-id="a8f58-160">**获取单个节点**</span><span class="sxs-lookup"><span data-stu-id="a8f58-160">**Get a single node**</span></span>  
  
 <span data-ttu-id="a8f58-161">此示例使用 ISBN 编号定位书籍。</span><span class="sxs-lookup"><span data-stu-id="a8f58-161">This example locates a book by using the ISBN number.</span></span>  
  
 [!code-cpp[XMLProcessingApp#3](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#3)]
 [!code-csharp[XMLProcessingApp#3](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#3)]
 [!code-vb[XMLProcessingApp#3](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#3)]  
  
 <span data-ttu-id="a8f58-162">本示例中使用的字符串是 Xpath 查询。</span><span class="sxs-lookup"><span data-stu-id="a8f58-162">The string used in this example is an Xpath query.</span></span> <span data-ttu-id="a8f58-163">可在此处找到更多示例：   [XPath 示例](https://msdn.microsoft.com/library/ms256086.aspx)。</span><span class="sxs-lookup"><span data-stu-id="a8f58-163">You can find more examples of them here:   [XPath examples](https://msdn.microsoft.com/library/ms256086.aspx).</span></span>  
  
 <span data-ttu-id="a8f58-164">你还可以使用 <xref:System.Xml.XmlDocument.GetElementById%2A> 检索节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-164">You can also use the <xref:System.Xml.XmlDocument.GetElementById%2A> to retrieve nodes.</span></span> <span data-ttu-id="a8f58-165">若要使用此方法，您必须在 XML 文件的文档类型定义声明中定义 ID。</span><span class="sxs-lookup"><span data-stu-id="a8f58-165">To use this approach, you'll have to define ID's in the document type definition declarations of your XML file.</span></span>  
  
 <span data-ttu-id="a8f58-166">获得节点后，将获得属性或子节点的值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-166">After you get a node, you get the value of attributes or child nodes.</span></span> <span data-ttu-id="a8f58-167">此示例使用 book 节点执行此功能。</span><span class="sxs-lookup"><span data-stu-id="a8f58-167">This example does that with a book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#4](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#4)]
 [!code-csharp[XMLProcessingApp#4](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#4)]
 [!code-vb[XMLProcessingApp#4](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#4)]  
  
 <span data-ttu-id="a8f58-168">**获取节点的集合**</span><span class="sxs-lookup"><span data-stu-id="a8f58-168">**Get a collection of nodes**</span></span>  
  
 <span data-ttu-id="a8f58-169">此示例选择作者姓氏为 **Austen**的所有书籍，然后更改这些书籍的价格。</span><span class="sxs-lookup"><span data-stu-id="a8f58-169">This example selects all books where the author's last name is **Austen**, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-170">还可以通过使用节点的名称获取节点的集合。</span><span class="sxs-lookup"><span data-stu-id="a8f58-170">You can also get a collection of nodes by using the name of the node.</span></span> <span data-ttu-id="a8f58-171">例如，此示例获取所有书名的集合。</span><span class="sxs-lookup"><span data-stu-id="a8f58-171">For example, this example gets a collection of all book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-172">**完整示例：** [使用 xml 类和其他相关类型在内存中操作 XML](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="a8f58-172">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="a8f58-173">**了解详细信息：** [使用 XPath 导航选择节点](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation)</span><span class="sxs-lookup"><span data-stu-id="a8f58-173">**Learn more:** [Select Nodes Using XPath Navigation](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation)</span></span>  
  
<a name="Edit"></a>   
## <a name="edit-nodes"></a><span data-ttu-id="a8f58-174">编辑节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-174">Edit nodes</span></span>  
 <span data-ttu-id="a8f58-175">此示例编辑书籍节点及其属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-175">This example edits a book node and its attributes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#7](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#7)]
 [!code-csharp[XMLProcessingApp#7](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#7)]
 [!code-vb[XMLProcessingApp#7](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#7)]  
  
 <span data-ttu-id="a8f58-176">**了解详细信息：** [修改 XML 文档中的节点、内容和值](/dotnet/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document)</span><span class="sxs-lookup"><span data-stu-id="a8f58-176">**Learn more:** [Modifying Nodes, Content, and Values in an XML Document](/dotnet/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document)</span></span>  
  
 <span data-ttu-id="a8f58-177">**完整示例：** [使用 xml 类和其他相关类型在内存中操作 XML](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="a8f58-177">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
<a name="Add"></a>   
## <a name="add-nodes"></a><span data-ttu-id="a8f58-178">添加节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-178">Add nodes</span></span>  
 <span data-ttu-id="a8f58-179">若要添加节点，请使用 <xref:System.Xml.XmlDocument.CreateElement%2A> 方法或 <xref:System.Xml.XmlDocument.CreateNode%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-179">To add a node, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method or the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="a8f58-180">若要添加数据节点（如书籍），请使用 <xref:System.Xml.XmlDocument.CreateElement%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-180">To add a data node such as a book, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method.</span></span>  
  
 <span data-ttu-id="a8f58-181">对于任何其他类型的节点，如注释、空白节点或 CDATA 节点，请使用 <xref:System.Xml.XmlDocument.CreateNode%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-181">For any other type of node such as a comment, whitespace node, or CDATA node, use the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="a8f58-182">此示例将创建一个 book 节点，将属性添加到该节点，然后将该节点添加到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-182">This example creates a book node, adds attributes to that node, and then adds that node to the document.</span></span>  
  
 [!code-cpp[XMLProcessingApp#5](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#5)]
 [!code-csharp[XMLProcessingApp#5](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#5)]
 [!code-vb[XMLProcessingApp#5](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#5)]  
  
 <span data-ttu-id="a8f58-183">**完整示例：** [使用 xml 类和其他相关类型在内存中操作 XML](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="a8f58-183">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="a8f58-184">**了解详细信息：** [将节点插入 XML 文档](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document)</span><span class="sxs-lookup"><span data-stu-id="a8f58-184">**Learn more:** [Inserting Nodes into an XML Document](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document)</span></span>  
  
<a name="Remove"></a>   
## <a name="remove-nodes"></a><span data-ttu-id="a8f58-185">删除节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-185">Remove nodes</span></span>  
 <span data-ttu-id="a8f58-186">若要删除节点，请使用 <xref:System.Xml.XmlNode.RemoveChild%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-186">To remove a node, use the <xref:System.Xml.XmlNode.RemoveChild%2A> method.</span></span>  
  
 <span data-ttu-id="a8f58-187">此示例将从文档中删除书籍，并删除紧靠书籍节点之前出现的任何空白。</span><span class="sxs-lookup"><span data-stu-id="a8f58-187">This example removes a book from the document and any whitespace that appears just before the book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#6](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#6)]
 [!code-csharp[XMLProcessingApp#6](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#6)]
 [!code-vb[XMLProcessingApp#6](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#6)]  
  
 <span data-ttu-id="a8f58-188">**完整示例：** [使用 xml 类和其他相关类型在内存中操作 XML](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="a8f58-188">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="a8f58-189">**了解详细信息：** [从 XML 文档中删除节点、内容和值](/dotnet/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document)</span><span class="sxs-lookup"><span data-stu-id="a8f58-189">**Learn more:** [Removing Nodes, Content, and Values from an XML Document](/dotnet/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document)</span></span>  
  
<a name="Position"></a>   
## <a name="position-nodes"></a><span data-ttu-id="a8f58-190">位置节点</span><span class="sxs-lookup"><span data-stu-id="a8f58-190">Position nodes</span></span>  
 <span data-ttu-id="a8f58-191">您可以使用和方法选择要在文档中显示节点的位置 <xref:System.Xml.XmlNode.InsertBefore%2A> <xref:System.Xml.XmlNode.InsertAfter%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-191">You can choose where you want a node to appear in your document by using the <xref:System.Xml.XmlNode.InsertBefore%2A> and <xref:System.Xml.XmlNode.InsertAfter%2A> methods.</span></span>  
  
 <span data-ttu-id="a8f58-192">此示例演示两个帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-192">This example shows two helper methods.</span></span> <span data-ttu-id="a8f58-193">其中一项将在列表中向上移动一个节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-193">One of them moves a node higher in a list.</span></span> <span data-ttu-id="a8f58-194">另一个节点将移动一个节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-194">The other one moves a node lower.</span></span>  
  
 <span data-ttu-id="a8f58-195">可以在应用程序中使用这些方法，使用户能够在书籍列表中上下移动书籍。</span><span class="sxs-lookup"><span data-stu-id="a8f58-195">These methods could be used in an application that enables users to move books up and down in a list of books.</span></span> <span data-ttu-id="a8f58-196">当用户选择一本书并按向上或向下按钮时，您的代码就可以调用类似于这样的方法，以便在其他书节点之前或之后定位相应的书籍节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-196">When a user chooses a book and presses an up or down button, your code could call methods like these to position the corresponding book node before or after other book nodes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#8](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#8)]
 [!code-csharp[XMLProcessingApp#8](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#8)]
 [!code-vb[XMLProcessingApp#8](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#8)]  
  
 <span data-ttu-id="a8f58-197">**完整示例：** [使用 xml 类和其他相关类型在内存中操作 XML](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="a8f58-197">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlNodeChangedEventHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-198">初始化 <see cref="T:System.Xml.XmlDocument" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8f58-198">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8f58-199">初始化 <see cref="T:System.Xml.XmlDocument" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8f58-199">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8f58-200">下面是加载时间验证的示例。</span><span class="sxs-lookup"><span data-stu-id="a8f58-200">The following is an example of load-time validation.</span></span> <span data-ttu-id="a8f58-201">文档类型定义 (DTD) 验证 <xref:System.Xml.XmlReader> 传递给 <xref:System.Xml.XmlDocument.Load%2A> 方法，并 <xref:System.Xml.Schema.ValidationEventHandler> 提供以通知用户任何验证错误。</span><span class="sxs-lookup"><span data-stu-id="a8f58-201">A document type definition (DTD) validating <xref:System.Xml.XmlReader> is passed to the <xref:System.Xml.XmlDocument.Load%2A> method and a <xref:System.Xml.Schema.ValidationEventHandler> is provided to notify users of any validation errors.</span></span> <span data-ttu-id="a8f58-202">在此示例中，发现了一个验证错误，但仍加载了该文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-202">In this example a validation error is found, but the document is still loaded.</span></span> <span data-ttu-id="a8f58-203">或者，您可以定义一个验证 <xref:System.Xml.XmlReader> 以引发异常，并在通过不指定的情况下发现验证错误来停止加载进程 <xref:System.Xml.Schema.ValidationEventHandler> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-203">Alternatively, you can define a validating <xref:System.Xml.XmlReader> to throw an exception and stop the load process when a validation error is found by not specifying the <xref:System.Xml.Schema.ValidationEventHandler>.</span></span> <span data-ttu-id="a8f58-204">有关验证 XML 数据的详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-204">For more information about validating XML data, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 [!code-cpp[XmlDocument.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.cctor/CPP/docload.cpp#1)]
 [!code-csharp[XmlDocument.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.cctor/CS/docload.cs#1)]
 [!code-vb[XmlDocument.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.cctor/VB/docload.vb#1)]  
  
 <span data-ttu-id="a8f58-205">示例使用 `bookDTD.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-205">The example uses the `bookDTD.xml` file as input.</span></span>  
  
 [!code-xml[XmlDocument.cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.cctor/XML/bookdtd.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlDocument.Load(System.String)" />
        <altmember cref="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlDocument (System.Xml.XmlImplementation imp);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlImplementation imp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (imp As XmlImplementation)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlDocument(System::Xml::XmlImplementation ^ imp);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDocument : System.Xml.XmlImplementation -&gt; System.Xml.XmlDocument" Usage="new System.Xml.XmlDocument imp" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imp" Type="System.Xml.XmlImplementation" />
      </Parameters>
      <Docs>
        <param name="imp"><span data-ttu-id="a8f58-206">要使用的 <see langword="XmlImplementation" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-206">The <see langword="XmlImplementation" /> to use.</span></span></param>
        <summary><span data-ttu-id="a8f58-207">使用指定的 <see langword="XmlDocument" /> 初始化 <see cref="T:System.Xml.XmlImplementation" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8f58-207">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlImplementation" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument(System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDocument : System.Xml.XmlNameTable -&gt; System.Xml.XmlDocument" Usage="new System.Xml.XmlDocument nt" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt"><span data-ttu-id="a8f58-208">要使用的 <see langword="XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-208">The <see langword="XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="a8f58-209">使用指定的 <see langword="XmlDocument" /> 初始化 <see cref="T:System.Xml.XmlNameTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8f58-209">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlDocument.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-210">获取当前节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="a8f58-210">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="a8f58-211">从其加载节点的位置。</span><span class="sxs-lookup"><span data-stu-id="a8f58-211">The location from which the node was loaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-212">联网的 XML 文档包含使用各种 W3C 标准包含机制聚合的数据块，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-212">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="a8f58-213">`BaseURI`会告诉你这些节点的来源。</span><span class="sxs-lookup"><span data-stu-id="a8f58-213">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="a8f58-214">对于文档节点， `BaseURI` 返回 XML 文档的位置。</span><span class="sxs-lookup"><span data-stu-id="a8f58-214">For Document nodes, `BaseURI` returns the location of the XML document.</span></span> <span data-ttu-id="a8f58-215">例如，如果 `XmlDocument` 是使用以下调用加载的，则 `doc.Load("http://server/mydata.xml")` `BaseURI` 文档节点的为 `http://server/mydata.xml` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-215">For example, if the `XmlDocument` was loaded using the following call `doc.Load("http://server/mydata.xml")`, the `BaseURI` for the document node is `http://server/mydata.xml`.</span></span> <span data-ttu-id="a8f58-216">但是，如果该 <xref:System.Xml.XmlDocument.Load%2A> 方法被服务器重定向到另一个 uri，则 `BaseURI` 返回传递给该方法的原始 URI `Load` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-216">However, if the <xref:System.Xml.XmlDocument.Load%2A> method is redirected by server to a different URI, `BaseURI` returns the original URI passed to the `Load` method.</span></span>  
  
 <span data-ttu-id="a8f58-217">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-217">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="a8f58-218">有关 `BaseURI` 以及它如何与其他节点类型一起工作的其他信息，请参阅 <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-218">For additional information on `BaseURI` and how it behaves with other node types, see <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlDocument.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep"><span data-ttu-id="a8f58-219">若要递归地克隆指定节点下的子树，则为 <see langword="true" />；若仅克隆节点本身，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-219"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="a8f58-220">创建此节点的副本。</span><span class="sxs-lookup"><span data-stu-id="a8f58-220">Creates a duplicate of this node.</span></span></summary>
        <returns><span data-ttu-id="a8f58-221">克隆的 <see langword="XmlDocument" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-221">The cloned <see langword="XmlDocument" /> node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-222">此方法用作节点的复制构造函数。</span><span class="sxs-lookup"><span data-stu-id="a8f58-222">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="a8f58-223">克隆的节点没有父 (<xref:System.Xml.XmlNode.ParentNode%2A> 返回 `null`) 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-223">The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="a8f58-224">如果 `deep` 为 `true` ，则克隆的节点包括所有子节点，否则仅 `XmlDocument` 克隆节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-224">If `deep` is `true`, the cloned node includes all the child nodes, otherwise only the `XmlDocument` node is cloned.</span></span> <span data-ttu-id="a8f58-225">请参阅 <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType> 方法，查看此方法如何在其他节点类型上起作用。</span><span class="sxs-lookup"><span data-stu-id="a8f58-225">See the <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType> method to see how this method behaves on other node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-226">下面的示例显示了深层和浅层克隆之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a8f58-226">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-227">创建具有指定名称的 <see cref="T:System.Xml.XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-227">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateAttribute : string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8f58-228">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-228">The qualified name of the attribute.</span></span> <span data-ttu-id="a8f58-229">如果名称包含冒号，则 <see cref="P:System.Xml.XmlNode.Prefix" /> 属性反映名称中第一个冒号之前的部分，<see cref="P:System.Xml.XmlDocument.LocalName" /> 属性反映名称中第一个冒号之后的部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-229">If the name contains a colon, the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the first colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name following the first colon.</span></span> <span data-ttu-id="a8f58-230"><see cref="P:System.Xml.XmlNode.NamespaceURI" /> 保持为空，除非该前缀是一个可识别的内置前缀，例如 xmlns。</span><span class="sxs-lookup"><span data-stu-id="a8f58-230">The <see cref="P:System.Xml.XmlNode.NamespaceURI" /> remains empty unless the prefix is a recognized built-in prefix such as xmlns.</span></span> <span data-ttu-id="a8f58-231">在此情况下，<see langword="NamespaceURI" /> 的值为 <c>http://www.w3.org/2000/xmlns/</c>。</span><span class="sxs-lookup"><span data-stu-id="a8f58-231">In this case <see langword="NamespaceURI" /> has a value of <c>http://www.w3.org/2000/xmlns/</c>.</span></span></param>
        <summary><span data-ttu-id="a8f58-232">创建具有指定 <see cref="P:System.Xml.XmlDocument.Name" /> 的 <see cref="T:System.Xml.XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-232">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-233">新的 <see langword="XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-233">The new <see langword="XmlAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-234">`XmlAttribute`可以使用方法将添加到 <xref:System.Xml.XmlElement> <xref:System.Xml.XmlElement.SetAttributeNode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-234">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-235">下面的示例创建一个属性，并将其添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-235">The following creates an attribute and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string qualifiedName, string namespaceURI);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (qualifiedName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="member this.CreateAttribute : string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute (qualifiedName, namespaceURI)" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string qualifiedName, string? namespaceURI);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName"><span data-ttu-id="a8f58-236">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-236">The qualified name of the attribute.</span></span> <span data-ttu-id="a8f58-237">如果名称包含冒号，则 <see cref="P:System.Xml.XmlNode.Prefix" /> 属性将反映名称中位于冒号前的部分，而 <see cref="P:System.Xml.XmlDocument.LocalName" /> 属性将反映名称中位于冒号后的部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-237">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-238">属性的 namespaceURI。</span><span class="sxs-lookup"><span data-stu-id="a8f58-238">The namespaceURI of the attribute.</span></span> <span data-ttu-id="a8f58-239">如果限定名称包含前缀 xmlns，则该参数必须是 <c>http://www.w3.org/2000/xmlns/</c>。</span><span class="sxs-lookup"><span data-stu-id="a8f58-239">If the qualified name includes a prefix of xmlns, then this parameter must be <c>http://www.w3.org/2000/xmlns/</c>.</span></span></param>
        <summary><span data-ttu-id="a8f58-240">创建具有指定限定名和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-240">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-241">新的 <see langword="XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-241">The new <see langword="XmlAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-242">`XmlAttribute`可以使用方法将添加到 <xref:System.Xml.XmlElement> <xref:System.Xml.XmlElement.SetAttributeNode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-242">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute CreateAttribute (string prefix, string localName, string namespaceURI);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute CreateAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateAttribute : string * string * string -&gt; System.Xml.XmlAttribute&#xA;override this.CreateAttribute : string * string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateAttribute (prefix, localName, namespaceURI)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute CreateAttribute (string? prefix, string localName, string? namespaceURI);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a8f58-243">属性的前缀（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-243">The prefix of the attribute (if any).</span></span> <span data-ttu-id="a8f58-244">String.Empty 与 <see langword="null" /> 等效。</span><span class="sxs-lookup"><span data-stu-id="a8f58-244">String.Empty and <see langword="null" /> are equivalent.</span></span></param>
        <param name="localName"><span data-ttu-id="a8f58-245">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-245">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-246">属性的命名空间 URI（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-246">The namespace URI of the attribute (if any).</span></span> <span data-ttu-id="a8f58-247">String.Empty 与 <see langword="null" /> 等效。</span><span class="sxs-lookup"><span data-stu-id="a8f58-247">String.Empty and <see langword="null" /> are equivalent.</span></span> <span data-ttu-id="a8f58-248">如果 <paramref name="prefix" /> 为 xmlns，则此参数必须是 <c>http://www.w3.org/2000/xmlns/</c>；否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a8f58-248">If <paramref name="prefix" /> is xmlns, then this parameter must be <c>http://www.w3.org/2000/xmlns/</c>; otherwise an exception is thrown.</span></span></param>
        <summary><span data-ttu-id="a8f58-249">创建一个具有指定的 <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-249">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-250">新的 <see langword="XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-250">The new <see langword="XmlAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-251">`XmlAttribute`可以使用方法将添加到 <xref:System.Xml.XmlElement> <xref:System.Xml.XmlElement.SetAttributeNode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-251">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 <span data-ttu-id="a8f58-252">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-252">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCDataSection">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlCDataSection CreateCDataSection (string data);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlCDataSection CreateCDataSection(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateCDataSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCDataSection (data As String) As XmlCDataSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlCDataSection ^ CreateCDataSection(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateCDataSection : string -&gt; System.Xml.XmlCDataSection&#xA;override this.CreateCDataSection : string -&gt; System.Xml.XmlCDataSection" Usage="xmlDocument.CreateCDataSection data" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlCDataSection CreateCDataSection (string? data);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlCDataSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a8f58-253">新 <see langword="XmlCDataSection" /> 的内容。</span><span class="sxs-lookup"><span data-stu-id="a8f58-253">The content of the new <see langword="XmlCDataSection" />.</span></span></param>
        <summary><span data-ttu-id="a8f58-254">创建包含指定数据的 <see cref="T:System.Xml.XmlCDataSection" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-254">Creates an <see cref="T:System.Xml.XmlCDataSection" /> containing the specified data.</span></span></summary>
        <returns><span data-ttu-id="a8f58-255">新的 <see langword="XmlCDataSection" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-255">The new <see langword="XmlCDataSection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-256">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-256">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-257">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-257">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-258">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，当 entityreference 节点不是属性节点的子节点时，允许在元素节点和 entityreference 节点内使用 CDataSection 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-258">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), CDataSection nodes are allowed within Element nodes and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-259">下面的示例创建一个 CDATA 节点并将其添加到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-259">The following example creates a CDATA node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlComment CreateComment (string data);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlComment CreateComment(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateComment (data As String) As XmlComment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlComment ^ CreateComment(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateComment : string -&gt; System.Xml.XmlComment&#xA;override this.CreateComment : string -&gt; System.Xml.XmlComment" Usage="xmlDocument.CreateComment data" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlComment CreateComment (string? data);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlComment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a8f58-260">新 <see langword="XmlComment" /> 的内容。</span><span class="sxs-lookup"><span data-stu-id="a8f58-260">The content of the new <see langword="XmlComment" />.</span></span></param>
        <summary><span data-ttu-id="a8f58-261">创建包含指定数据的 <see cref="T:System.Xml.XmlComment" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-261">Creates an <see cref="T:System.Xml.XmlComment" /> containing the specified data.</span></span></summary>
        <returns><span data-ttu-id="a8f58-262">新的 <see langword="XmlComment" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-262">The new <see langword="XmlComment" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-263">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-263">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-264">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-264">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-265">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，当 EntityReference 节点不是属性节点的子节点时，仅允许在文档、元素和 EntityReference 节点内使用注释节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-265">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), Comment nodes are only allowed within Document, Element and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-266">下面的示例创建一个注释并将其添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-266">The following example creates a comment and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlAttribute CreateDefaultAttribute (string? prefix, string localName, string? namespaceURI);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlAttribute CreateDefaultAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDefaultAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XmlAttribute ^ CreateDefaultAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateDefaultAttribute : string * string * string -&gt; System.Xml.XmlAttribute&#xA;override this.CreateDefaultAttribute : string * string * string -&gt; System.Xml.XmlAttribute" Usage="xmlDocument.CreateDefaultAttribute (prefix, localName, namespaceURI)" />
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlAttribute CreateDefaultAttribute (string prefix, string localName, string namespaceURI);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a8f58-267">属性的前缀（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-267">The prefix of the attribute (if any).</span></span></param>
        <param name="localName"><span data-ttu-id="a8f58-268">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-268">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-269">属性的命名空间 URI（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-269">The namespace URI of the attribute (if any).</span></span></param>
        <summary><span data-ttu-id="a8f58-270">创建具有指定前缀、本地名称和命名空间 URI 的默认属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-270">Creates a default attribute with the specified prefix, local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="a8f58-271">新的 <see cref="T:System.Xml.XmlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-271">The new <see cref="T:System.Xml.XmlAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-272">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-272">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentFragment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentFragment CreateDocumentFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentFragment CreateDocumentFragment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentFragment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentFragment () As XmlDocumentFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentFragment ^ CreateDocumentFragment();" />
      <MemberSignature Language="F#" Value="abstract member CreateDocumentFragment : unit -&gt; System.Xml.XmlDocumentFragment&#xA;override this.CreateDocumentFragment : unit -&gt; System.Xml.XmlDocumentFragment" Usage="xmlDocument.CreateDocumentFragment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentFragment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8f58-273">创建 <see cref="T:System.Xml.XmlDocumentFragment" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-273">Creates an <see cref="T:System.Xml.XmlDocumentFragment" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-274">新的 <see langword="XmlDocumentFragment" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-274">The new <see langword="XmlDocumentFragment" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-275">不能将 DocumentFragment 节点插入文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-275">DocumentFragment nodes cannot be inserted into a document.</span></span> <span data-ttu-id="a8f58-276">但是，可以将 DocumentFragment 节点的子级插入文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-276">However, you can insert children of the DocumentFragment node into a document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-277">下面的示例将新节点添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-277">The following example adds new nodes to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType? CreateDocumentType (string? name, string publicId, string systemId, string internalSubset);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentType CreateDocumentType(string name, string publicId, string systemId, string internalSubset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentType (name As String, publicId As String, systemId As String, internalSubset As String) As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentType ^ CreateDocumentType(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ internalSubset);" />
      <MemberSignature Language="F#" Value="abstract member CreateDocumentType : string * string * string * string -&gt; System.Xml.XmlDocumentType&#xA;override this.CreateDocumentType : string * string * string * string -&gt; System.Xml.XmlDocumentType" Usage="xmlDocument.CreateDocumentType (name, publicId, systemId, internalSubset)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType CreateDocumentType (string name, string publicId, string systemId, string internalSubset);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="publicId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="systemId" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="internalSubset" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8f58-278">此文档类型的名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-278">Name of the document type.</span></span></param>
        <param name="publicId"><span data-ttu-id="a8f58-279">此文档类型的公共标识符或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-279">The public identifier of the document type or <see langword="null" />.</span></span> <span data-ttu-id="a8f58-280">你可以指定一个公共 URI 以及一个系统标识符以标识外部 DTD 子集的位置。</span><span class="sxs-lookup"><span data-stu-id="a8f58-280">You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</span></span></param>
        <param name="systemId"><span data-ttu-id="a8f58-281">此文档类型的系统标识符或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-281">The system identifier of the document type or <see langword="null" />.</span></span> <span data-ttu-id="a8f58-282">指定外部 DTD 子集的文件位置的 URL。</span><span class="sxs-lookup"><span data-stu-id="a8f58-282">Specifies the URL of the file location for the external DTD subset.</span></span></param>
        <param name="internalSubset"><span data-ttu-id="a8f58-283">此文档类型的 DTD 内部子集或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-283">The DTD internal subset of the document type or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a8f58-284">返回新 <see cref="T:System.Xml.XmlDocumentType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-284">Returns a new <see cref="T:System.Xml.XmlDocumentType" /> object.</span></span></summary>
        <returns><span data-ttu-id="a8f58-285">新的 <see langword="XmlDocumentType" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-285">The new <see langword="XmlDocumentType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-286">返回的节点将分析 <xref:System.Xml.XmlDocumentType.Entities%2A> 和 <xref:System.Xml.XmlDocumentType.Notations%2A> 集合。</span><span class="sxs-lookup"><span data-stu-id="a8f58-286">The returned node will have parsed <xref:System.Xml.XmlDocumentType.Entities%2A> and <xref:System.Xml.XmlDocumentType.Notations%2A> collections.</span></span>  
  
 <span data-ttu-id="a8f58-287">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-287">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-288">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-288">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-289">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，只允许在文档节点内使用 DocumentType 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-289">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), DocumentType nodes are only allowed within Document nodes.</span></span> <span data-ttu-id="a8f58-290">每个只能 <xref:System.Xml.XmlDocument> 有一个 DocumentType 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-290">Each <xref:System.Xml.XmlDocument> can have only one DocumentType node.</span></span> <span data-ttu-id="a8f58-291">还必须在 (的根元素之前插入 DocumentType 节点 `XmlDocument` 。如果该文档已具有根元素，则不能将 DocumentType 节点添加) 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-291">The DocumentType node must also be inserted before the root element of the `XmlDocument` (if the document already has a root element, you cannot add a DocumentType node).</span></span>    
 <span data-ttu-id="a8f58-292">如果传递的参数未进行组合以生成有效的 `XmlDocumentType` ，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a8f58-292">If the passed parameters do not combine to build a valid `XmlDocumentType`, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-293">下面的示例创建一个 DocumentType 节点并将其添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-293">The following example creates a DocumentType node and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8f58-294">此方法具有继承要求。</span><span class="sxs-lookup"><span data-stu-id="a8f58-294">This method has an inheritance demand.</span></span> <span data-ttu-id="a8f58-295">需要完全信任才能重写 <see langword="CreateDocumentType" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-295">Full trust is required to override the <see langword="CreateDocumentType" /> method.</span></span>  
  
<span data-ttu-id="a8f58-296">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-296">This method is a Microsoft extension to the Document Object Model (DOM).</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-297">创建 <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-297">Creates an <see cref="T:System.Xml.XmlElement" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateElement : string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8f58-298">元素的限定名。</span><span class="sxs-lookup"><span data-stu-id="a8f58-298">The qualified name of the element.</span></span> <span data-ttu-id="a8f58-299">如果名称包含冒号，则 <see cref="P:System.Xml.XmlNode.Prefix" /> 属性反映名称中位于冒号之前的部分，<see cref="P:System.Xml.XmlDocument.LocalName" /> 属性反映名称中位于冒号之后的部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-299">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name after the colon.</span></span> <span data-ttu-id="a8f58-300">限定名称不能包含“xmlns”前缀。</span><span class="sxs-lookup"><span data-stu-id="a8f58-300">The qualified name cannot include a prefix of 'xmlns'.</span></span></param>
        <summary><span data-ttu-id="a8f58-301">创建具有指定名称的元素。</span><span class="sxs-lookup"><span data-stu-id="a8f58-301">Creates an element with the specified name.</span></span></summary>
        <returns><span data-ttu-id="a8f58-302">新的 <see langword="XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-302">The new <see langword="XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-303">请注意，返回的实例实现了 `XmlElement` 接口，因此将在返回的对象上直接创建默认特性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-303">Note that the instance returned implements the `XmlElement` interface, so default attributes would be created directly on the returned object.</span></span>  
  
 <span data-ttu-id="a8f58-304">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-304">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-305">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-305">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-306">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，在文档和元素节点内允许元素节点，而在 entityreference 节点不是属性节点的子节点时，则在 entityreference 节点中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-306">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-307">下面的示例创建一个新的元素，并将其添加到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-307">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string qualifiedName, string namespaceURI);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (qualifiedName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="member this.CreateElement : string * string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement (qualifiedName, namespaceURI)" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string qualifiedName, string? namespaceURI);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName"><span data-ttu-id="a8f58-308">元素的限定名。</span><span class="sxs-lookup"><span data-stu-id="a8f58-308">The qualified name of the element.</span></span> <span data-ttu-id="a8f58-309">如果名称包含冒号，则 <see cref="P:System.Xml.XmlNode.Prefix" /> 属性将反映名称中位于冒号前的部分，而 <see cref="P:System.Xml.XmlDocument.LocalName" /> 属性将反映名称中位于冒号后的部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-309">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span></span> <span data-ttu-id="a8f58-310">限定名称不能包含“xmlns”前缀。</span><span class="sxs-lookup"><span data-stu-id="a8f58-310">The qualified name cannot include a prefix of 'xmlns'.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-311">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="a8f58-311">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="a8f58-312">创建具有限定名和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-312">Creates an <see cref="T:System.Xml.XmlElement" /> with the qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-313">新的 <see langword="XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-313">The new <see langword="XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-314">下面的 c # 代码</span><span class="sxs-lookup"><span data-stu-id="a8f58-314">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy:item", "urn:abc");  
```  
  
 <span data-ttu-id="a8f58-315">生成与以下 XML 文本等效的元素。</span><span class="sxs-lookup"><span data-stu-id="a8f58-315">results in an element that is equivalent to the following XML text.</span></span>  
  
```  
<xy:item  
       xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="a8f58-316">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-316">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-317">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-317">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-318">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，在文档和元素节点内允许元素节点，而在 entityreference 节点不是属性节点的子节点时，则在 entityreference 节点中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-318">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateElement : string * string * string -&gt; System.Xml.XmlElement&#xA;override this.CreateElement : string * string * string -&gt; System.Xml.XmlElement" Usage="xmlDocument.CreateElement (prefix, localName, namespaceURI)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement CreateElement (string? prefix, string localName, string? namespaceURI);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a8f58-319">新元素的前缀（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-319">The prefix of the new element (if any).</span></span> <span data-ttu-id="a8f58-320">String.Empty 与 <see langword="null" /> 等效。</span><span class="sxs-lookup"><span data-stu-id="a8f58-320">String.Empty and <see langword="null" /> are equivalent.</span></span></param>
        <param name="localName"><span data-ttu-id="a8f58-321">新元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-321">The local name of the new element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-322">新元素的命名空间 URI（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-322">The namespace URI of the new element (if any).</span></span> <span data-ttu-id="a8f58-323">String.Empty 与 <see langword="null" /> 等效。</span><span class="sxs-lookup"><span data-stu-id="a8f58-323">String.Empty and <see langword="null" /> are equivalent.</span></span></param>
        <summary><span data-ttu-id="a8f58-324">创建具有指定 <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的元素。</span><span class="sxs-lookup"><span data-stu-id="a8f58-324">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-325">新的 <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-325">The new <see cref="T:System.Xml.XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-326">下面的 c # 代码</span><span class="sxs-lookup"><span data-stu-id="a8f58-326">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy", "item", "urn:abc");  
```  
  
 <span data-ttu-id="a8f58-327">创建等效于以下 XML 文本的元素：</span><span class="sxs-lookup"><span data-stu-id="a8f58-327">creates an element equivalent to the following XML text:</span></span>  
  
```  
<xy:item xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="a8f58-328">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-328">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-329">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-329">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-330">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，在文档和元素节点内允许元素节点，并且当 Entityreference 在属性节点外时，还允许在 entityreference 节点中使用元素节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-330">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference is outside an Attribute node.</span></span>  
  
 <span data-ttu-id="a8f58-331">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-331">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-332">下面的示例将一个新元素添加到现有的 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-332">The following example adds a new element to the existing XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateEntityReference : string -&gt; System.Xml.XmlEntityReference&#xA;override this.CreateEntityReference : string -&gt; System.Xml.XmlEntityReference" Usage="xmlDocument.CreateEntityReference name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8f58-333">实体引用的名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-333">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="a8f58-334">创建具有指定名称的 <see cref="T:System.Xml.XmlEntityReference" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-334">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></summary>
        <returns><span data-ttu-id="a8f58-335">新的 <see langword="XmlEntityReference" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-335">The new <see langword="XmlEntityReference" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-336">如果已知引用的实体，则该节点的子列表与相应节点的子列表 `XmlEntityReference` 相同 <xref:System.Xml.XmlEntity> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-336">If the referenced entity is known, the child list of the `XmlEntityReference` node is made the same as that of the corresponding <xref:System.Xml.XmlEntity> node.</span></span>  
  
 <span data-ttu-id="a8f58-337">实体引用的替换文本中使用的命名空间在第一次设置实体引用节点的父项时绑定 (例如，在将实体引用节点插入到文档) 时进行绑定。</span><span class="sxs-lookup"><span data-stu-id="a8f58-337">The namespaces used in the replacement text for the entity reference are bound at the time the parent of the entity reference node is first set (for example, when the entity reference node is inserted into the document).</span></span> <span data-ttu-id="a8f58-338">例如，给定以下实体：</span><span class="sxs-lookup"><span data-stu-id="a8f58-338">For example, given the following entity:</span></span>  
  
```  
<!ENTITY a "<b>test</b>">  
```  
  
 <span data-ttu-id="a8f58-339">如果调用 `CreateEntityReference("a")` ，则会返回类型为 EntityReference 且无子项的单个节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-339">If you call `CreateEntityReference("a")` you get back a single node of type EntityReference with no children.</span></span> <span data-ttu-id="a8f58-340">如果将此节点追加为以下节点的子节点，</span><span class="sxs-lookup"><span data-stu-id="a8f58-340">If you append this node as a child of the following node,</span></span>  
  
```  
<item xmlns="urn:1"/>  
```  
  
 <span data-ttu-id="a8f58-341">然后，在调用时 <xref:System.Xml.XmlNode.AppendChild%2A> ，将设置新创建的实体引用节点的父节点，并在此命名空间上下文中展开子项。</span><span class="sxs-lookup"><span data-stu-id="a8f58-341">then, at the time of calling <xref:System.Xml.XmlNode.AppendChild%2A>, the parent of the newly created entity reference node is set and the children are expanded in this namespace context.</span></span> <span data-ttu-id="a8f58-342">子元素节点的 `b` NamespaceURI 将等于 `urn:1` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-342">The child element node `b` will have NamespaceURI equal to `urn:1`.</span></span> <span data-ttu-id="a8f58-343">即使将实体引用移动到文档中具有不同默认命名空间上下文的位置，实体引用的子节点仍保持不变。</span><span class="sxs-lookup"><span data-stu-id="a8f58-343">The child nodes of the entity reference remain the same even if you move the entity reference to a place in the document that has a different default namespace context.</span></span> <span data-ttu-id="a8f58-344">当你删除并插入现有实体引用节点时，或为你用克隆的实体引用删除它们时，不会发生这种情况 <xref:System.Xml.XmlDocument.CloneNode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-344">This does not happen for existing entity reference nodes when you remove and insert them or for entity references that you clone with <xref:System.Xml.XmlDocument.CloneNode%2A>.</span></span> <span data-ttu-id="a8f58-345">它仅在新创建的实体引用时发生。</span><span class="sxs-lookup"><span data-stu-id="a8f58-345">It only happens for newly created entity references.</span></span>  
  
 <span data-ttu-id="a8f58-346">如果添加实体引用节点时 DocumentType 中未定义相应的实体，因为未定义实体引用，其唯一子节点将为空文本节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-346">If the corresponding entity is not defined in the DocumentType when the entity reference node is added, because the entity reference is not defined, its only child node will be an empty text node.</span></span>  
  
 <span data-ttu-id="a8f58-347">内置实体 amp、lt、gt、中和 q 也是允许的，它们具有一个具有适当展开字符值的子文本节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-347">The built-in entities amp, lt, gt, apos, and quot are also allowed, and they will have a child text node with the appropriate expanded character value.</span></span>  
  
 <span data-ttu-id="a8f58-348">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-348">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-349">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-349">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-350">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，只允许在元素、属性和 EntityReference 节点内使用 EntityReference 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-350">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), EntityReference nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-351">下面的示例创建两个实体引用节点并将其插入到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-351">The following example creates two entity reference nodes and inserts them into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8f58-352">名称无效（例如，以“#”开头的名称无效。）</span><span class="sxs-lookup"><span data-stu-id="a8f58-352">The name is invalid (for example, names starting with'#' are invalid.)</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-353">创建一个用于导航此文档的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-353">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public override System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDocument.CreateNavigator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8f58-354">创建一个用于导航此文档的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-354">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span></span></summary>
        <returns><span data-ttu-id="a8f58-355">一个 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-355">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-356">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-356">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-357"><xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType>有关使用此方法的示例，请参阅。</span><span class="sxs-lookup"><span data-stu-id="a8f58-357">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XPath.XPathNavigator? CreateNavigator (System.Xml.XmlNode node);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : System.Xml.XmlNode -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDocument.CreateNavigator node" />
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="a8f58-358">希望导航器最初定位在的 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-358">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span></span></param>
        <summary><span data-ttu-id="a8f58-359">创建 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象，以定位位于指定的 <see cref="T:System.Xml.XmlNode" /> 上的此文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-359">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document positioned on the <see cref="T:System.Xml.XmlNode" /> specified.</span></span></summary>
        <returns><span data-ttu-id="a8f58-360">一个 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-360">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-361">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-361">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-362"><xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType>有关使用此方法的示例，请参阅。</span><span class="sxs-lookup"><span data-stu-id="a8f58-362">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-363">创建 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-363">Creates an <see cref="T:System.Xml.XmlNode" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (string nodeTypeString, string name, string namespaceURI);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(string nodeTypeString, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (nodeTypeString As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::String ^ nodeTypeString, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : string * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : string * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (nodeTypeString, name, namespaceURI)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (string nodeTypeString, string name, string? namespaceURI);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeTypeString" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeTypeString"><span data-ttu-id="a8f58-364">新节点的 <see cref="T:System.Xml.XmlNodeType" /> 的字符串版本。</span><span class="sxs-lookup"><span data-stu-id="a8f58-364">String version of the <see cref="T:System.Xml.XmlNodeType" /> of the new node.</span></span> <span data-ttu-id="a8f58-365">该参数必须是下表中列出的值之一。</span><span class="sxs-lookup"><span data-stu-id="a8f58-365">This parameter must be one of the values listed in the table below.</span></span></param>
        <param name="name"><span data-ttu-id="a8f58-366">新节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-366">The qualified name of the new node.</span></span> <span data-ttu-id="a8f58-367">如果名称包含一个冒号，则将它解析为 <see cref="P:System.Xml.XmlNode.Prefix" /> 和 <see cref="P:System.Xml.XmlDocument.LocalName" /> 两部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-367">If the name contains a colon, it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-368">新节点的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="a8f58-368">The namespace URI of the new node.</span></span></param>
        <summary><span data-ttu-id="a8f58-369">创建具有指定的节点类型、<see cref="P:System.Xml.XmlDocument.Name" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-369">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified node type, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-370">新的 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-370">The new <see langword="XmlNode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-371">`nodeTypeString`参数区分大小写，并且必须是下表中的值之一。</span><span class="sxs-lookup"><span data-stu-id="a8f58-371">The `nodeTypeString` parameter is case sensitive and must be one of the values in the following table.</span></span>  
  
|<span data-ttu-id="a8f58-372">nodeTypeString</span><span class="sxs-lookup"><span data-stu-id="a8f58-372">nodeTypeString</span></span>|<span data-ttu-id="a8f58-373">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="a8f58-373">XmlNodeType</span></span>|  
|--------------------|-----------------|  
|<span data-ttu-id="a8f58-374">attribute</span><span class="sxs-lookup"><span data-stu-id="a8f58-374">attribute</span></span>|<span data-ttu-id="a8f58-375">Attribute</span><span class="sxs-lookup"><span data-stu-id="a8f58-375">Attribute</span></span>|  
|<span data-ttu-id="a8f58-376">cdatasection</span><span class="sxs-lookup"><span data-stu-id="a8f58-376">cdatasection</span></span>|<span data-ttu-id="a8f58-377">CDATA</span><span class="sxs-lookup"><span data-stu-id="a8f58-377">CDATA</span></span>|  
|<span data-ttu-id="a8f58-378">comment</span><span class="sxs-lookup"><span data-stu-id="a8f58-378">comment</span></span>|<span data-ttu-id="a8f58-379">评论</span><span class="sxs-lookup"><span data-stu-id="a8f58-379">Comment</span></span>|  
|<span data-ttu-id="a8f58-380">文档</span><span class="sxs-lookup"><span data-stu-id="a8f58-380">document</span></span>|<span data-ttu-id="a8f58-381">文档</span><span class="sxs-lookup"><span data-stu-id="a8f58-381">Document</span></span>|  
|<span data-ttu-id="a8f58-382">documentfragment</span><span class="sxs-lookup"><span data-stu-id="a8f58-382">documentfragment</span></span>|<span data-ttu-id="a8f58-383">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="a8f58-383">DocumentFragment</span></span>|  
|<span data-ttu-id="a8f58-384">documenttype</span><span class="sxs-lookup"><span data-stu-id="a8f58-384">documenttype</span></span>|<span data-ttu-id="a8f58-385">DocumentType</span><span class="sxs-lookup"><span data-stu-id="a8f58-385">DocumentType</span></span>|  
|<span data-ttu-id="a8f58-386">element</span><span class="sxs-lookup"><span data-stu-id="a8f58-386">element</span></span>|<span data-ttu-id="a8f58-387">元素</span><span class="sxs-lookup"><span data-stu-id="a8f58-387">Element</span></span>|  
|<span data-ttu-id="a8f58-388">entityreference</span><span class="sxs-lookup"><span data-stu-id="a8f58-388">entityreference</span></span>|<span data-ttu-id="a8f58-389">EntityReference</span><span class="sxs-lookup"><span data-stu-id="a8f58-389">EntityReference</span></span>|  
|<span data-ttu-id="a8f58-390">processinginstruction</span><span class="sxs-lookup"><span data-stu-id="a8f58-390">processinginstruction</span></span>|<span data-ttu-id="a8f58-391">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="a8f58-391">ProcessingInstruction</span></span>|  
|<span data-ttu-id="a8f58-392">significantwhitespace</span><span class="sxs-lookup"><span data-stu-id="a8f58-392">significantwhitespace</span></span>|<span data-ttu-id="a8f58-393">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="a8f58-393">SignificantWhitespace</span></span>|  
|<span data-ttu-id="a8f58-394">text</span><span class="sxs-lookup"><span data-stu-id="a8f58-394">text</span></span>|<span data-ttu-id="a8f58-395">文本</span><span class="sxs-lookup"><span data-stu-id="a8f58-395">Text</span></span>|  
|<span data-ttu-id="a8f58-396">whitespace</span><span class="sxs-lookup"><span data-stu-id="a8f58-396">whitespace</span></span>|<span data-ttu-id="a8f58-397">空格</span><span class="sxs-lookup"><span data-stu-id="a8f58-397">Whitespace</span></span>|  
  
 <span data-ttu-id="a8f58-398">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-398">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-399">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-399">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-400">下表显示了根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，另一个 nodetype [column] 内允许的 nodetype [row] 的内容。</span><span class="sxs-lookup"><span data-stu-id="a8f58-400">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="a8f58-401">文档</span><span class="sxs-lookup"><span data-stu-id="a8f58-401">Document</span></span>|<span data-ttu-id="a8f58-402">DocumentType</span><span class="sxs-lookup"><span data-stu-id="a8f58-402">DocumentType</span></span>|<span data-ttu-id="a8f58-403">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="a8f58-403">XmlDeclaration</span></span>|<span data-ttu-id="a8f58-404">元素</span><span class="sxs-lookup"><span data-stu-id="a8f58-404">Element</span></span>|<span data-ttu-id="a8f58-405">Attribute</span><span class="sxs-lookup"><span data-stu-id="a8f58-405">Attribute</span></span>|<span data-ttu-id="a8f58-406">文本</span><span class="sxs-lookup"><span data-stu-id="a8f58-406">Text</span></span>|<span data-ttu-id="a8f58-407">CDATA</span><span class="sxs-lookup"><span data-stu-id="a8f58-407">CDATA</span></span>|<span data-ttu-id="a8f58-408">标记</span><span class="sxs-lookup"><span data-stu-id="a8f58-408">Markup</span></span>|<span data-ttu-id="a8f58-409">EntityReference</span><span class="sxs-lookup"><span data-stu-id="a8f58-409">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="a8f58-410">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-410">no</span></span>|<span data-ttu-id="a8f58-411">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-411">no</span></span>|<span data-ttu-id="a8f58-412">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-412">no</span></span>|<span data-ttu-id="a8f58-413">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-413">no</span></span>|<span data-ttu-id="a8f58-414">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-414">no</span></span>|<span data-ttu-id="a8f58-415">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-415">no</span></span>|<span data-ttu-id="a8f58-416">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-416">no</span></span>|<span data-ttu-id="a8f58-417">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-417">no</span></span>|<span data-ttu-id="a8f58-418">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-418">no</span></span>|  
|`DocumentType`|<span data-ttu-id="a8f58-419">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-419">yes</span></span>|<span data-ttu-id="a8f58-420">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-420">no</span></span>|<span data-ttu-id="a8f58-421">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-421">no</span></span>|<span data-ttu-id="a8f58-422">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-422">no</span></span>|<span data-ttu-id="a8f58-423">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-423">no</span></span>|<span data-ttu-id="a8f58-424">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-424">no</span></span>|<span data-ttu-id="a8f58-425">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-425">no</span></span>|<span data-ttu-id="a8f58-426">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-426">no</span></span>|<span data-ttu-id="a8f58-427">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-427">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="a8f58-428">是\*</span><span class="sxs-lookup"><span data-stu-id="a8f58-428">yes\*</span></span>|<span data-ttu-id="a8f58-429">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-429">no</span></span>|<span data-ttu-id="a8f58-430">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-430">no</span></span>|<span data-ttu-id="a8f58-431">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-431">no</span></span>|<span data-ttu-id="a8f58-432">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-432">no</span></span>|<span data-ttu-id="a8f58-433">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-433">no</span></span>|<span data-ttu-id="a8f58-434">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-434">no</span></span>|<span data-ttu-id="a8f58-435">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-435">no</span></span>|<span data-ttu-id="a8f58-436">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-436">no</span></span>|  
|`Element`|<span data-ttu-id="a8f58-437">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-437">yes</span></span>|<span data-ttu-id="a8f58-438">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-438">no</span></span>|<span data-ttu-id="a8f58-439">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-439">no</span></span>|<span data-ttu-id="a8f58-440">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-440">yes</span></span>|<span data-ttu-id="a8f58-441">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-441">no</span></span>|<span data-ttu-id="a8f58-442">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-442">no</span></span>|<span data-ttu-id="a8f58-443">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-443">no</span></span>|<span data-ttu-id="a8f58-444">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-444">no</span></span>|<span data-ttu-id="a8f58-445">是 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-445">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="a8f58-446">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-446">no</span></span>|<span data-ttu-id="a8f58-447">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-447">no</span></span>|<span data-ttu-id="a8f58-448">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-448">no</span></span>|<span data-ttu-id="a8f58-449">是 \* \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-449">yes\*\*\*\*</span></span>|<span data-ttu-id="a8f58-450">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-450">no</span></span>|<span data-ttu-id="a8f58-451">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-451">no</span></span>|<span data-ttu-id="a8f58-452">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-452">no</span></span>|<span data-ttu-id="a8f58-453">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-453">no</span></span>|<span data-ttu-id="a8f58-454">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-454">no</span></span>|  
|`Text`|<span data-ttu-id="a8f58-455">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-455">no</span></span>|<span data-ttu-id="a8f58-456">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-456">no</span></span>|<span data-ttu-id="a8f58-457">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-457">no</span></span>|<span data-ttu-id="a8f58-458">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-458">yes</span></span>|<span data-ttu-id="a8f58-459">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-459">yes</span></span>|<span data-ttu-id="a8f58-460">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-460">no</span></span>|<span data-ttu-id="a8f58-461">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-461">no</span></span>|<span data-ttu-id="a8f58-462">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-462">no</span></span>|<span data-ttu-id="a8f58-463">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-463">yes</span></span>|  
|`CDATA`|<span data-ttu-id="a8f58-464">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-464">no</span></span>|<span data-ttu-id="a8f58-465">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-465">no</span></span>|<span data-ttu-id="a8f58-466">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-466">no</span></span>|<span data-ttu-id="a8f58-467">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-467">yes</span></span>|<span data-ttu-id="a8f58-468">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-468">no</span></span>|<span data-ttu-id="a8f58-469">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-469">no</span></span>|<span data-ttu-id="a8f58-470">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-470">no</span></span>|<span data-ttu-id="a8f58-471">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-471">no</span></span>|<span data-ttu-id="a8f58-472">是 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-472">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="a8f58-473">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-473">yes</span></span>|<span data-ttu-id="a8f58-474">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-474">no</span></span>|<span data-ttu-id="a8f58-475">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-475">no</span></span>|<span data-ttu-id="a8f58-476">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-476">yes</span></span>|<span data-ttu-id="a8f58-477">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-477">no</span></span>|<span data-ttu-id="a8f58-478">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-478">no</span></span>|<span data-ttu-id="a8f58-479">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-479">no</span></span>|<span data-ttu-id="a8f58-480">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-480">no</span></span>|<span data-ttu-id="a8f58-481">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-481">no</span></span>|  
|`EntityReference`|<span data-ttu-id="a8f58-482">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-482">no</span></span>|<span data-ttu-id="a8f58-483">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-483">no</span></span>|<span data-ttu-id="a8f58-484">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-484">no</span></span>|<span data-ttu-id="a8f58-485">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-485">yes</span></span>|<span data-ttu-id="a8f58-486">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-486">yes</span></span>|<span data-ttu-id="a8f58-487">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-487">no</span></span>|<span data-ttu-id="a8f58-488">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-488">no</span></span>|<span data-ttu-id="a8f58-489">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-489">no</span></span>|<span data-ttu-id="a8f58-490">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-490">yes</span></span>|  
  
 <span data-ttu-id="a8f58-491">\* XmlDeclaration 节点必须是文档节点的第一个子级。</span><span class="sxs-lookup"><span data-stu-id="a8f58-491">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="a8f58-492">\* \* 标记包括 ProcessingInstruction 和注释节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-492">\*\* Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="a8f58-493">仅当 EntityReference 节点不是属性节点的子节点时，才允许在 EntityReference 节点中使用元素和 CDATA 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-493">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="a8f58-494">特性不是元素节点的子项。</span><span class="sxs-lookup"><span data-stu-id="a8f58-494">\*\*\*\* Attributes are not children of an Element node.</span></span> <span data-ttu-id="a8f58-495">特性包含在属于元素节点的特性集合中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-495">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="a8f58-496">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-496">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-497">下面的示例创建一个新元素并将其插入到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-497">The following example creates a new element and inserts it into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8f58-498">未提供名称，而 <see langword="XmlNodeType" /> 需要名称；或者 <paramref name="nodeTypeString" /> 不是下列字符串之一。</span><span class="sxs-lookup"><span data-stu-id="a8f58-498">The name was not provided and the <see langword="XmlNodeType" /> requires a name; or <paramref name="nodeTypeString" /> is not one of the strings listed below.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string name, string namespaceURI);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : System.Xml.XmlNodeType * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : System.Xml.XmlNodeType * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (type, name, namespaceURI)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string name, string? namespaceURI);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a8f58-499">新节点的 <see langword="XmlNodeType" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-499">The <see langword="XmlNodeType" /> of the new node.</span></span></param>
        <param name="name"><span data-ttu-id="a8f58-500">新节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-500">The qualified name of the new node.</span></span> <span data-ttu-id="a8f58-501">如果名称包含一个冒号，则将其解析为 <see cref="P:System.Xml.XmlNode.Prefix" /> 和 <see cref="P:System.Xml.XmlDocument.LocalName" /> 两部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-501">If the name contains a colon then it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-502">新节点的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="a8f58-502">The namespace URI of the new node.</span></span></param>
        <summary><span data-ttu-id="a8f58-503">创建一个具有指定的 <see cref="T:System.Xml.XmlNodeType" />、<see cref="P:System.Xml.XmlDocument.Name" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-503">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-504">新的 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-504">The new <see langword="XmlNode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-505">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-505">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-506">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-506">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-507">下表显示了根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，另一个 nodetype [column] 内允许的 nodetype [row] 的内容。</span><span class="sxs-lookup"><span data-stu-id="a8f58-507">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="a8f58-508">文档</span><span class="sxs-lookup"><span data-stu-id="a8f58-508">Document</span></span>|<span data-ttu-id="a8f58-509">DocumentType</span><span class="sxs-lookup"><span data-stu-id="a8f58-509">DocumentType</span></span>|<span data-ttu-id="a8f58-510">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="a8f58-510">XmlDeclaration</span></span>|<span data-ttu-id="a8f58-511">元素</span><span class="sxs-lookup"><span data-stu-id="a8f58-511">Element</span></span>|<span data-ttu-id="a8f58-512">Attribute</span><span class="sxs-lookup"><span data-stu-id="a8f58-512">Attribute</span></span>|<span data-ttu-id="a8f58-513">文本</span><span class="sxs-lookup"><span data-stu-id="a8f58-513">Text</span></span>|<span data-ttu-id="a8f58-514">CDATA</span><span class="sxs-lookup"><span data-stu-id="a8f58-514">CDATA</span></span>|<span data-ttu-id="a8f58-515">标记</span><span class="sxs-lookup"><span data-stu-id="a8f58-515">Markup</span></span>|<span data-ttu-id="a8f58-516">EntityReference</span><span class="sxs-lookup"><span data-stu-id="a8f58-516">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="a8f58-517">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-517">no</span></span>|<span data-ttu-id="a8f58-518">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-518">no</span></span>|<span data-ttu-id="a8f58-519">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-519">no</span></span>|<span data-ttu-id="a8f58-520">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-520">no</span></span>|<span data-ttu-id="a8f58-521">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-521">no</span></span>|<span data-ttu-id="a8f58-522">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-522">no</span></span>|<span data-ttu-id="a8f58-523">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-523">no</span></span>|<span data-ttu-id="a8f58-524">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-524">no</span></span>|<span data-ttu-id="a8f58-525">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-525">no</span></span>|  
|`DocumentType`|<span data-ttu-id="a8f58-526">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-526">yes</span></span>|<span data-ttu-id="a8f58-527">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-527">no</span></span>|<span data-ttu-id="a8f58-528">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-528">no</span></span>|<span data-ttu-id="a8f58-529">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-529">no</span></span>|<span data-ttu-id="a8f58-530">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-530">no</span></span>|<span data-ttu-id="a8f58-531">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-531">no</span></span>|<span data-ttu-id="a8f58-532">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-532">no</span></span>|<span data-ttu-id="a8f58-533">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-533">no</span></span>|<span data-ttu-id="a8f58-534">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-534">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="a8f58-535">是\*</span><span class="sxs-lookup"><span data-stu-id="a8f58-535">yes\*</span></span>|<span data-ttu-id="a8f58-536">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-536">no</span></span>|<span data-ttu-id="a8f58-537">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-537">no</span></span>|<span data-ttu-id="a8f58-538">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-538">no</span></span>|<span data-ttu-id="a8f58-539">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-539">no</span></span>|<span data-ttu-id="a8f58-540">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-540">no</span></span>|<span data-ttu-id="a8f58-541">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-541">no</span></span>|<span data-ttu-id="a8f58-542">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-542">no</span></span>|<span data-ttu-id="a8f58-543">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-543">no</span></span>|  
|`Element`|<span data-ttu-id="a8f58-544">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-544">yes</span></span>|<span data-ttu-id="a8f58-545">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-545">no</span></span>|<span data-ttu-id="a8f58-546">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-546">no</span></span>|<span data-ttu-id="a8f58-547">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-547">yes</span></span>|<span data-ttu-id="a8f58-548">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-548">no</span></span>|<span data-ttu-id="a8f58-549">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-549">no</span></span>|<span data-ttu-id="a8f58-550">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-550">no</span></span>|<span data-ttu-id="a8f58-551">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-551">no</span></span>|<span data-ttu-id="a8f58-552">是 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-552">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="a8f58-553">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-553">no</span></span>|<span data-ttu-id="a8f58-554">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-554">no</span></span>|<span data-ttu-id="a8f58-555">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-555">no</span></span>|<span data-ttu-id="a8f58-556">是 \* \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-556">yes\*\*\*\*</span></span>|<span data-ttu-id="a8f58-557">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-557">no</span></span>|<span data-ttu-id="a8f58-558">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-558">no</span></span>|<span data-ttu-id="a8f58-559">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-559">no</span></span>|<span data-ttu-id="a8f58-560">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-560">no</span></span>|<span data-ttu-id="a8f58-561">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-561">no</span></span>|  
|`Text`|<span data-ttu-id="a8f58-562">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-562">no</span></span>|<span data-ttu-id="a8f58-563">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-563">no</span></span>|<span data-ttu-id="a8f58-564">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-564">no</span></span>|<span data-ttu-id="a8f58-565">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-565">yes</span></span>|<span data-ttu-id="a8f58-566">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-566">yes</span></span>|<span data-ttu-id="a8f58-567">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-567">no</span></span>|<span data-ttu-id="a8f58-568">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-568">no</span></span>|<span data-ttu-id="a8f58-569">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-569">no</span></span>|<span data-ttu-id="a8f58-570">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-570">yes</span></span>|  
|`CDATA`|<span data-ttu-id="a8f58-571">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-571">no</span></span>|<span data-ttu-id="a8f58-572">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-572">no</span></span>|<span data-ttu-id="a8f58-573">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-573">no</span></span>|<span data-ttu-id="a8f58-574">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-574">yes</span></span>|<span data-ttu-id="a8f58-575">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-575">no</span></span>|<span data-ttu-id="a8f58-576">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-576">no</span></span>|<span data-ttu-id="a8f58-577">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-577">no</span></span>|<span data-ttu-id="a8f58-578">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-578">no</span></span>|<span data-ttu-id="a8f58-579">是 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-579">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="a8f58-580">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-580">yes</span></span>|<span data-ttu-id="a8f58-581">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-581">no</span></span>|<span data-ttu-id="a8f58-582">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-582">no</span></span>|<span data-ttu-id="a8f58-583">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-583">yes</span></span>|<span data-ttu-id="a8f58-584">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-584">no</span></span>|<span data-ttu-id="a8f58-585">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-585">no</span></span>|<span data-ttu-id="a8f58-586">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-586">no</span></span>|<span data-ttu-id="a8f58-587">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-587">no</span></span>|<span data-ttu-id="a8f58-588">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-588">no</span></span>|  
|`EntityReference`|<span data-ttu-id="a8f58-589">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-589">no</span></span>|<span data-ttu-id="a8f58-590">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-590">no</span></span>|<span data-ttu-id="a8f58-591">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-591">no</span></span>|<span data-ttu-id="a8f58-592">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-592">yes</span></span>|<span data-ttu-id="a8f58-593">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-593">yes</span></span>|<span data-ttu-id="a8f58-594">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-594">no</span></span>|<span data-ttu-id="a8f58-595">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-595">no</span></span>|<span data-ttu-id="a8f58-596">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-596">no</span></span>|<span data-ttu-id="a8f58-597">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-597">yes</span></span>|  
  
 <span data-ttu-id="a8f58-598">\* XmlDeclaration 节点必须是文档节点的第一个子级。</span><span class="sxs-lookup"><span data-stu-id="a8f58-598">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="a8f58-599">\* \* 标记包括 ProcessingInstruction 和注释节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-599">\*\* Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="a8f58-600">仅当 EntityReference 节点不是属性节点的子节点时，才允许在 EntityReference 节点中使用元素和 CDATA 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-600">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="a8f58-601">特性不是元素节点的子项。</span><span class="sxs-lookup"><span data-stu-id="a8f58-601">\*\*\*\* Attributes are not children of an Element node.</span></span> <span data-ttu-id="a8f58-602">特性包含在属于元素节点的特性集合中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-602">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="a8f58-603">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-603">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-604">下面的示例创建一个新元素并将其插入到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-604">The following example creates a new element and inserts it into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8f58-605">未提供名称，而 <see langword="XmlNodeType" /> 需要名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-605">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, prefix As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ prefix, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : System.Xml.XmlNodeType * string * string * string -&gt; System.Xml.XmlNode&#xA;override this.CreateNode : System.Xml.XmlNodeType * string * string * string -&gt; System.Xml.XmlNode" Usage="xmlDocument.CreateNode (type, prefix, name, namespaceURI)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string? prefix, string name, string? namespaceURI);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a8f58-606">新节点的 <see langword="XmlNodeType" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-606">The <see langword="XmlNodeType" /> of the new node.</span></span></param>
        <param name="prefix"><span data-ttu-id="a8f58-607">新节点的前缀。</span><span class="sxs-lookup"><span data-stu-id="a8f58-607">The prefix of the new node.</span></span></param>
        <param name="name"><span data-ttu-id="a8f58-608">新节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-608">The local name of the new node.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-609">新节点的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="a8f58-609">The namespace URI of the new node.</span></span></param>
        <summary><span data-ttu-id="a8f58-610">创建一个具有指定的<see cref="T:System.Xml.XmlNodeType" />、<see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.Name" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-610">Creates a <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-611">新的 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-611">The new <see langword="XmlNode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-612">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-612">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-613">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-613">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-614">下表显示了根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，另一个 nodetype [column] 内允许的 nodetype [row] 的内容。</span><span class="sxs-lookup"><span data-stu-id="a8f58-614">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="a8f58-615">文档</span><span class="sxs-lookup"><span data-stu-id="a8f58-615">Document</span></span>|<span data-ttu-id="a8f58-616">DocumentType</span><span class="sxs-lookup"><span data-stu-id="a8f58-616">DocumentType</span></span>|<span data-ttu-id="a8f58-617">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="a8f58-617">XmlDeclaration</span></span>|<span data-ttu-id="a8f58-618">元素</span><span class="sxs-lookup"><span data-stu-id="a8f58-618">Element</span></span>|<span data-ttu-id="a8f58-619">Attribute</span><span class="sxs-lookup"><span data-stu-id="a8f58-619">Attribute</span></span>|<span data-ttu-id="a8f58-620">文本</span><span class="sxs-lookup"><span data-stu-id="a8f58-620">Text</span></span>|<span data-ttu-id="a8f58-621">CDATA</span><span class="sxs-lookup"><span data-stu-id="a8f58-621">CDATA</span></span>|<span data-ttu-id="a8f58-622">标记</span><span class="sxs-lookup"><span data-stu-id="a8f58-622">Markup</span></span>|<span data-ttu-id="a8f58-623">EntityReference</span><span class="sxs-lookup"><span data-stu-id="a8f58-623">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="a8f58-624">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-624">no</span></span>|<span data-ttu-id="a8f58-625">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-625">no</span></span>|<span data-ttu-id="a8f58-626">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-626">no</span></span>|<span data-ttu-id="a8f58-627">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-627">no</span></span>|<span data-ttu-id="a8f58-628">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-628">no</span></span>|<span data-ttu-id="a8f58-629">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-629">no</span></span>|<span data-ttu-id="a8f58-630">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-630">no</span></span>|<span data-ttu-id="a8f58-631">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-631">no</span></span>|<span data-ttu-id="a8f58-632">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-632">no</span></span>|  
|`DocumentType`|<span data-ttu-id="a8f58-633">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-633">yes</span></span>|<span data-ttu-id="a8f58-634">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-634">no</span></span>|<span data-ttu-id="a8f58-635">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-635">no</span></span>|<span data-ttu-id="a8f58-636">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-636">no</span></span>|<span data-ttu-id="a8f58-637">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-637">no</span></span>|<span data-ttu-id="a8f58-638">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-638">no</span></span>|<span data-ttu-id="a8f58-639">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-639">no</span></span>|<span data-ttu-id="a8f58-640">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-640">no</span></span>|<span data-ttu-id="a8f58-641">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-641">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="a8f58-642">是\*</span><span class="sxs-lookup"><span data-stu-id="a8f58-642">yes\*</span></span>|<span data-ttu-id="a8f58-643">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-643">no</span></span>|<span data-ttu-id="a8f58-644">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-644">no</span></span>|<span data-ttu-id="a8f58-645">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-645">no</span></span>|<span data-ttu-id="a8f58-646">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-646">no</span></span>|<span data-ttu-id="a8f58-647">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-647">no</span></span>|<span data-ttu-id="a8f58-648">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-648">no</span></span>|<span data-ttu-id="a8f58-649">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-649">no</span></span>|<span data-ttu-id="a8f58-650">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-650">no</span></span>|  
|`Element`|<span data-ttu-id="a8f58-651">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-651">yes</span></span>|<span data-ttu-id="a8f58-652">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-652">no</span></span>|<span data-ttu-id="a8f58-653">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-653">no</span></span>|<span data-ttu-id="a8f58-654">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-654">yes</span></span>|<span data-ttu-id="a8f58-655">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-655">no</span></span>|<span data-ttu-id="a8f58-656">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-656">no</span></span>|<span data-ttu-id="a8f58-657">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-657">no</span></span>|<span data-ttu-id="a8f58-658">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-658">no</span></span>|<span data-ttu-id="a8f58-659">是 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-659">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="a8f58-660">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-660">no</span></span>|<span data-ttu-id="a8f58-661">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-661">no</span></span>|<span data-ttu-id="a8f58-662">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-662">no</span></span>|<span data-ttu-id="a8f58-663">是 \* \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-663">yes\*\*\*\*</span></span>|<span data-ttu-id="a8f58-664">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-664">no</span></span>|<span data-ttu-id="a8f58-665">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-665">no</span></span>|<span data-ttu-id="a8f58-666">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-666">no</span></span>|<span data-ttu-id="a8f58-667">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-667">no</span></span>|<span data-ttu-id="a8f58-668">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-668">no</span></span>|  
|`Text`|<span data-ttu-id="a8f58-669">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-669">no</span></span>|<span data-ttu-id="a8f58-670">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-670">no</span></span>|<span data-ttu-id="a8f58-671">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-671">no</span></span>|<span data-ttu-id="a8f58-672">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-672">yes</span></span>|<span data-ttu-id="a8f58-673">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-673">yes</span></span>|<span data-ttu-id="a8f58-674">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-674">no</span></span>|<span data-ttu-id="a8f58-675">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-675">no</span></span>|<span data-ttu-id="a8f58-676">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-676">no</span></span>|<span data-ttu-id="a8f58-677">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-677">yes</span></span>|  
|`CDATA`|<span data-ttu-id="a8f58-678">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-678">no</span></span>|<span data-ttu-id="a8f58-679">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-679">no</span></span>|<span data-ttu-id="a8f58-680">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-680">no</span></span>|<span data-ttu-id="a8f58-681">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-681">yes</span></span>|<span data-ttu-id="a8f58-682">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-682">no</span></span>|<span data-ttu-id="a8f58-683">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-683">no</span></span>|<span data-ttu-id="a8f58-684">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-684">no</span></span>|<span data-ttu-id="a8f58-685">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-685">no</span></span>|<span data-ttu-id="a8f58-686">是 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="a8f58-686">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="a8f58-687">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-687">yes</span></span>|<span data-ttu-id="a8f58-688">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-688">no</span></span>|<span data-ttu-id="a8f58-689">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-689">no</span></span>|<span data-ttu-id="a8f58-690">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-690">yes</span></span>|<span data-ttu-id="a8f58-691">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-691">no</span></span>|<span data-ttu-id="a8f58-692">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-692">no</span></span>|<span data-ttu-id="a8f58-693">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-693">no</span></span>|<span data-ttu-id="a8f58-694">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-694">no</span></span>|<span data-ttu-id="a8f58-695">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-695">no</span></span>|  
|`EntityReference`|<span data-ttu-id="a8f58-696">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-696">no</span></span>|<span data-ttu-id="a8f58-697">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-697">no</span></span>|<span data-ttu-id="a8f58-698">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-698">no</span></span>|<span data-ttu-id="a8f58-699">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-699">yes</span></span>|<span data-ttu-id="a8f58-700">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-700">yes</span></span>|<span data-ttu-id="a8f58-701">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-701">no</span></span>|<span data-ttu-id="a8f58-702">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-702">no</span></span>|<span data-ttu-id="a8f58-703">否</span><span class="sxs-lookup"><span data-stu-id="a8f58-703">no</span></span>|<span data-ttu-id="a8f58-704">是</span><span class="sxs-lookup"><span data-stu-id="a8f58-704">yes</span></span>|  
  
 <span data-ttu-id="a8f58-705">\* XmlDeclaration 节点必须是文档节点的第一个子级。</span><span class="sxs-lookup"><span data-stu-id="a8f58-705">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="a8f58-706">\* \* 标记包括 ProcessingInstruction 和注释节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-706">\*\* Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="a8f58-707">仅当 EntityReference 节点不是属性节点的子节点时，才允许在 EntityReference 节点中使用元素和 CDATA 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-707">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="a8f58-708">特性不是元素节点的子项。</span><span class="sxs-lookup"><span data-stu-id="a8f58-708">\*\*\*\* Attributes are not children of an Element node.</span></span> <span data-ttu-id="a8f58-709">特性包含在属于元素节点的特性集合中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-709">Attributes are contained inside an attribute collection that belongs to the Element node.</span></span>  
  
 <span data-ttu-id="a8f58-710">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-710">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-711">下面的示例将一个新元素添加到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-711">The following example adds a new element to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8f58-712">未提供名称，而 <see langword="XmlNodeType" /> 需要名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-712">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProcessingInstruction">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlProcessingInstruction CreateProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlProcessingInstruction CreateProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateProcessingInstruction (target As String, data As String) As XmlProcessingInstruction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlProcessingInstruction ^ CreateProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member CreateProcessingInstruction : string * string -&gt; System.Xml.XmlProcessingInstruction&#xA;override this.CreateProcessingInstruction : string * string -&gt; System.Xml.XmlProcessingInstruction" Usage="xmlDocument.CreateProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlProcessingInstruction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a8f58-713">处理指令的名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-713">The name of the processing instruction.</span></span></param>
        <param name="data"><span data-ttu-id="a8f58-714">处理指令的数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-714">The data for the processing instruction.</span></span></param>
        <summary><span data-ttu-id="a8f58-715">创建一个具有指定名称和数据的 <see cref="T:System.Xml.XmlProcessingInstruction" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-715">Creates an <see cref="T:System.Xml.XmlProcessingInstruction" /> with the specified name and data.</span></span></summary>
        <returns><span data-ttu-id="a8f58-716">新的 <see langword="XmlProcessingInstruction" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-716">The new <see langword="XmlProcessingInstruction" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-717">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-717">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-718">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-718">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-719">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，当 EntityReference 节点不是属性节点的子节点时，只允许在文档、元素和 EntityReference 节点内使用 ProcessingInstruction 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-719">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction nodes are only allowed within Document, Element, and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-720">下面的示例创建一个 ProcessingInstruction 节点并将其添加到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-720">The following example creates a ProcessingInstruction node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignificantWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace (string text);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSignificantWhitespace (text As String) As XmlSignificantWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlSignificantWhitespace ^ CreateSignificantWhitespace(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateSignificantWhitespace : string -&gt; System.Xml.XmlSignificantWhitespace&#xA;override this.CreateSignificantWhitespace : string -&gt; System.Xml.XmlSignificantWhitespace" Usage="xmlDocument.CreateSignificantWhitespace text" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace (string? text);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSignificantWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a8f58-721">此字符串只能包含下列字符：&amp;#20、&amp;#10、&amp;#13 和 &amp;#9</span><span class="sxs-lookup"><span data-stu-id="a8f58-721">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span></span></param>
        <summary><span data-ttu-id="a8f58-722">创建一个 <see cref="T:System.Xml.XmlSignificantWhitespace" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-722">Creates an <see cref="T:System.Xml.XmlSignificantWhitespace" /> node.</span></span></summary>
        <returns><span data-ttu-id="a8f58-723">一个新的 <see langword="XmlSignificantWhitespace" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-723">A new <see langword="XmlSignificantWhitespace" /> node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-724">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-724">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="a8f58-725">如果要手动设置文档格式，则可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-725">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="a8f58-726">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-726">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-727">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-727">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-728">下面的示例向文档中添加了重要的空白区域。</span><span class="sxs-lookup"><span data-stu-id="a8f58-728">The following example adds significant white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlText CreateTextNode (string text);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlText CreateTextNode(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateTextNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTextNode (text As String) As XmlText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlText ^ CreateTextNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateTextNode : string -&gt; System.Xml.XmlText&#xA;override this.CreateTextNode : string -&gt; System.Xml.XmlText" Usage="xmlDocument.CreateTextNode text" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlText CreateTextNode (string? text);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a8f58-729">Text 节点的文本。</span><span class="sxs-lookup"><span data-stu-id="a8f58-729">The text for the Text node.</span></span></param>
        <summary><span data-ttu-id="a8f58-730">创建具有指定文本的 <see cref="T:System.Xml.XmlText" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-730">Creates an <see cref="T:System.Xml.XmlText" /> with the specified text.</span></span></summary>
        <returns><span data-ttu-id="a8f58-731">新的 <see langword="XmlText" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-731">The new <see langword="XmlText" /> node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-732">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-732">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-733">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-733">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-734">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，仅在元素、属性和 EntityReference 节点内允许文本节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-734">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), Text nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-735">下面的示例创建一个新的元素，并将其添加到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-735">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWhitespace CreateWhitespace (string text);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWhitespace CreateWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateWhitespace (text As String) As XmlWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWhitespace ^ CreateWhitespace(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member CreateWhitespace : string -&gt; System.Xml.XmlWhitespace&#xA;override this.CreateWhitespace : string -&gt; System.Xml.XmlWhitespace" Usage="xmlDocument.CreateWhitespace text" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWhitespace CreateWhitespace (string? text);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="a8f58-736">此字符串只能包含下列字符：&amp;#20、&amp;#10、&amp;#13 和 &amp;#9</span><span class="sxs-lookup"><span data-stu-id="a8f58-736">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span></span></param>
        <summary><span data-ttu-id="a8f58-737">创建一个 <see cref="T:System.Xml.XmlWhitespace" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-737">Creates an <see cref="T:System.Xml.XmlWhitespace" /> node.</span></span></summary>
        <returns><span data-ttu-id="a8f58-738">一个新的 <see langword="XmlWhitespace" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-738">A new <see langword="XmlWhitespace" /> node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-739">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-739">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="a8f58-740">如果要手动设置文档格式，则可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-740">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="a8f58-741">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-741">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-742">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-742">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-743">下面的示例将空白添加到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-743">The following example adds white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlDeclaration">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDeclaration CreateXmlDeclaration (string version, string encoding, string standalone);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDeclaration CreateXmlDeclaration(string version, string encoding, string standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateXmlDeclaration (version As String, encoding As String, standalone As String) As XmlDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDeclaration ^ CreateXmlDeclaration(System::String ^ version, System::String ^ encoding, System::String ^ standalone);" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlDeclaration : string * string * string -&gt; System.Xml.XmlDeclaration&#xA;override this.CreateXmlDeclaration : string * string * string -&gt; System.Xml.XmlDeclaration" Usage="xmlDocument.CreateXmlDeclaration (version, encoding, standalone)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDeclaration CreateXmlDeclaration (string version, string? encoding, string? standalone);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="standalone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="a8f58-744">版本必须为“1.0”。</span><span class="sxs-lookup"><span data-stu-id="a8f58-744">The version must be "1.0".</span></span></param>
        <param name="encoding"><span data-ttu-id="a8f58-745">编码属性的值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-745">The value of the encoding attribute.</span></span> <span data-ttu-id="a8f58-746">这是当将 <see cref="T:System.Xml.XmlDocument" /> 保存到文件或流时使用的编码方式；因此必须将其设置为 <see cref="T:System.Text.Encoding" /> 类支持的字符串，否则 <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="a8f58-746">This is the encoding that is used when you save the <see cref="T:System.Xml.XmlDocument" /> to a file or a stream; therefore, it must be set to a string supported by the <see cref="T:System.Text.Encoding" /> class, otherwise <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> fails.</span></span> <span data-ttu-id="a8f58-747">如果这是 <see langword="null" /> 或 String.Empty，则 <see langword="Save" /> 方法不在 XML 声明上写出编码方式特性，因此将使用默认的编码方式 UTF-8。</span><span class="sxs-lookup"><span data-stu-id="a8f58-747">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.</span></span>  
  
<span data-ttu-id="a8f58-748">注意：如果将 <see langword="XmlDocument" /> 保存到 <see cref="T:System.IO.TextWriter" /> 或 <see cref="T:System.Xml.XmlTextWriter" />，则放弃该编码值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-748">Note: If the <see langword="XmlDocument" /> is saved to either a <see cref="T:System.IO.TextWriter" /> or an <see cref="T:System.Xml.XmlTextWriter" />, this encoding value is discarded.</span></span> <span data-ttu-id="a8f58-749">而改用 <see langword="TextWriter" /> 或 <see langword="XmlTextWriter" /> 的编码方式。</span><span class="sxs-lookup"><span data-stu-id="a8f58-749">Instead, the encoding of the <see langword="TextWriter" /> or the <see langword="XmlTextWriter" /> is used.</span></span> <span data-ttu-id="a8f58-750">这会确保可以使用正确的编码读回写出的 XML。</span><span class="sxs-lookup"><span data-stu-id="a8f58-750">This ensures that the XML written out can be read back using the correct encoding.</span></span></param>
        <param name="standalone"><span data-ttu-id="a8f58-751">该值必须是“yes”或“no”。</span><span class="sxs-lookup"><span data-stu-id="a8f58-751">The value must be either "yes" or "no".</span></span> <span data-ttu-id="a8f58-752">如果这是 <see langword="null" /> 或 String.Empty，<see langword="Save" /> 方法不在 XML 声明上写出独立特性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-752">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write a standalone attribute on the XML declaration.</span></span></param>
        <summary><span data-ttu-id="a8f58-753">创建一个具有指定值的 <see cref="T:System.Xml.XmlDeclaration" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-753">Creates an <see cref="T:System.Xml.XmlDeclaration" /> node with the specified values.</span></span></summary>
        <returns><span data-ttu-id="a8f58-754">新的 <see langword="XmlDeclaration" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-754">The new <see langword="XmlDeclaration" /> node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-755">特性作为节点上的特殊属性公开 `XmlDeclaration` ，而不是作为 <xref:System.Xml.XmlAttribute> 节点公开。</span><span class="sxs-lookup"><span data-stu-id="a8f58-755">The attributes are exposed as special properties on the `XmlDeclaration` node, and not as <xref:System.Xml.XmlAttribute> nodes.</span></span>  
  
 <span data-ttu-id="a8f58-756">尽管此方法会在文档的上下文中创建新的对象，但它不会自动将新对象添加到文档树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-756">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="a8f58-757">若要添加新的对象，则必须显式调用某个节点插入方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-757">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="a8f58-758">根据 W3C [可扩展标记语言 (XML) 1.0 建议](https://www.w3.org/TR/1998/REC-xml-19980210)，该 `XmlDeclaration` 节点必须是文档中的第一个节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-758">According to the W3C [Extensible Markup Language (XML) 1.0 recommendation](https://www.w3.org/TR/1998/REC-xml-19980210), the `XmlDeclaration` node must be the first node in the document.</span></span>  
  
 <span data-ttu-id="a8f58-759">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-759">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-760">下面的示例创建一个 XML 声明，并将其添加到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-760">The following example creates an XML declaration and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8f58-761"><paramref name="version" /> 或 <paramref name="standalone" /> 的值是除上面指定的值以外的值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-761">The values of <paramref name="version" /> or <paramref name="standalone" /> are something other than the ones specified above.</span></span></exception>
        <altmember cref="T:System.Xml.XmlDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="DocumentElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement DocumentElement { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement DocumentElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentElement As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ DocumentElement { System::Xml::XmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentElement : System.Xml.XmlElement" Usage="System.Xml.XmlDocument.DocumentElement" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement? DocumentElement { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-762">获取文档的根 <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-762">Gets the root <see cref="T:System.Xml.XmlElement" /> for the document.</span></span></summary>
        <value><span data-ttu-id="a8f58-763">表示 XML 文档树的根的 <see langword="XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-763">The <see langword="XmlElement" /> that represents the root of the XML document tree.</span></span> <span data-ttu-id="a8f58-764">如果不存在根，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-764">If no root exists, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8f58-765">下面的示例显示 XML 文档的根元素。</span><span class="sxs-lookup"><span data-stu-id="a8f58-765">The following example displays the root element of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-766">**输出：**</span><span class="sxs-lookup"><span data-stu-id="a8f58-766">**Output:**</span></span>  
  
```  
<book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book>   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType? DocumentType { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocumentType DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DocumentType As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocumentType ^ DocumentType { System::Xml::XmlDocumentType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentType : System.Xml.XmlDocumentType" Usage="System.Xml.XmlDocument.DocumentType" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType DocumentType { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-767">获取包含 DOCTYPE 声明的节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-767">Gets the node containing the DOCTYPE declaration.</span></span></summary>
        <value><span data-ttu-id="a8f58-768">包含 DocumentType（DOCTYPE 声明）的 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-768">The <see cref="T:System.Xml.XmlNode" /> containing the DocumentType (DOCTYPE declaration).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-769">`XmlDocument`可以有一个且只有一个子元素 <xref:System.Xml.XmlNodeType> 等于 DocumentType。</span><span class="sxs-lookup"><span data-stu-id="a8f58-769">An `XmlDocument` can have one and only one child with <xref:System.Xml.XmlNodeType> equal to DocumentType.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-770">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="a8f58-770">This property is read-only.</span></span> <span data-ttu-id="a8f58-771">若要更改 DocumentType 节点，请删除现有节点，使用方法创建一个新节点， <xref:System.Xml.XmlDocument.CreateDocumentType%2A> 并将新节点添加到该文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-771">To change the DocumentType node, delete the existing node, create a new one using the <xref:System.Xml.XmlDocument.CreateDocumentType%2A> method, and add the new node to the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-772">下面的示例获取并显示文档的 DOCTYPE 声明。</span><span class="sxs-lookup"><span data-stu-id="a8f58-772">The following example gets and displays the DOCTYPE declaration for the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement? GetElementById (string elementId);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetElementById(string elementId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementById (elementId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetElementById(System::String ^ elementId);" />
      <MemberSignature Language="F#" Value="abstract member GetElementById : string -&gt; System.Xml.XmlElement&#xA;override this.GetElementById : string -&gt; System.Xml.XmlElement" Usage="xmlDocument.GetElementById elementId" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetElementById (string elementId);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementId" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="elementId"><span data-ttu-id="a8f58-773">要匹配的属性 ID。</span><span class="sxs-lookup"><span data-stu-id="a8f58-773">The attribute ID to match.</span></span></param>
        <summary><span data-ttu-id="a8f58-774">获取具有指定 ID 的 <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-774">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span></summary>
        <returns><span data-ttu-id="a8f58-775">具有匹配 ID 的 <see langword="XmlElement" />；如果未找到匹配的元素，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-775">The <see langword="XmlElement" /> with the matching ID or <see langword="null" /> if no matching element is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-776">如果文档具有多个具有匹配 ID 的元素，则此方法将返回文档中的第一个匹配元素。</span><span class="sxs-lookup"><span data-stu-id="a8f58-776">If the document has multiple elements with the matching ID, this method returns the first matching element in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-777">DOM 实现必须具有定义 ID 类型的属性的信息。</span><span class="sxs-lookup"><span data-stu-id="a8f58-777">The DOM implementation must have information which defines which attributes are of type ID.</span></span> <span data-ttu-id="a8f58-778">尽管可在 XSD 架构或 Dtd 中定义 ID 类型的属性，但此版本的产品仅支持 Dtd 中定义的属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-778">Although attributes of type ID can be defined in either XSD schemas or DTDs, this version of the product only supports those defined in DTDs.</span></span> <span data-ttu-id="a8f58-779">名称为 "ID" 的属性不属于 ID 类型，除非在 DTD 中定义了。</span><span class="sxs-lookup"><span data-stu-id="a8f58-779">Attributes with the name "ID" are not of type ID unless so defined in the DTD.</span></span> <span data-ttu-id="a8f58-780">一种实现，在这种情况下，它不会返回类型 ID 的属性是否应返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-780">Implementations where it is unknown whether the attributes are of type ID are expected to return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-781">下面的示例使用 `GetElementById` 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-781">The following example uses the `GetElementById` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-782">该示例使用文件 `ids.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-782">The example uses the file, `ids.xml`, as input.</span></span>  
  
```xml  
<!DOCTYPE root [  
  <!ELEMENT root ANY>   
  <!ELEMENT Person ANY>   
  <!ELEMENT Customer EMPTY>  
  <!ELEMENT Team EMPTY>  
  <!ATTLIST Person SSN ID #REQUIRED>  
  <!ATTLIST Customer id IDREF #REQUIRED >  
  <!ATTLIST Team members IDREFS #REQUIRED>]>  
<root>  
  <Person SSN='A111' Name='Fred'/>  
  <Person SSN='A222' Name='Tom'/>  
  <Customer id='A222334444'/>  
  <Team members='A222334444 A333445555'/>  
</root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-783">返回一个 <see cref="T:System.Xml.XmlNodeList" />，它包含与指定名称匹配的所有子代元素的列表。</span><span class="sxs-lookup"><span data-stu-id="a8f58-783">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string -&gt; System.Xml.XmlNodeList&#xA;override this.GetElementsByTagName : string -&gt; System.Xml.XmlNodeList" Usage="xmlDocument.GetElementsByTagName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8f58-784">要匹配的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-784">The qualified name to match.</span></span> <span data-ttu-id="a8f58-785">它针对匹配节点的 <see langword="Name" /> 属性进行匹配。</span><span class="sxs-lookup"><span data-stu-id="a8f58-785">It is matched against the <see langword="Name" /> property of the matching node.</span></span> <span data-ttu-id="a8f58-786">特殊值“\*”匹配所有标记。</span><span class="sxs-lookup"><span data-stu-id="a8f58-786">The special value "\*" matches all tags.</span></span></param>
        <summary><span data-ttu-id="a8f58-787">返回一个 <see cref="T:System.Xml.XmlNodeList" />，它包含与指定 <see cref="P:System.Xml.XmlDocument.Name" /> 匹配的所有子代元素的列表。</span><span class="sxs-lookup"><span data-stu-id="a8f58-787">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-788"><see cref="T:System.Xml.XmlNodeList" />，包含所有匹配节点的列表。</span><span class="sxs-lookup"><span data-stu-id="a8f58-788">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span> <span data-ttu-id="a8f58-789">如果没有任何节点与 <paramref name="name" /> 匹配，则返回的集合将为空。</span><span class="sxs-lookup"><span data-stu-id="a8f58-789">If no nodes match <paramref name="name" />, the returned collection will be empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-790">节点按其在文档中的遇到顺序排列。</span><span class="sxs-lookup"><span data-stu-id="a8f58-790">The nodes are placed in the order in which they would be encountered in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-791">建议使用 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 或 <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> 方法，而不是 <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-791">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-792">下面的示例创建一个 `XmlDocument` 对象，并使用 `GetElementsByTagName` 方法和生成的 <xref:System.Xml.XmlNodeList> 对象来显示所有书名。</span><span class="sxs-lookup"><span data-stu-id="a8f58-792">The following example creates a `XmlDocument` object and uses the `GetElementsByTagName` method and the resulting <xref:System.Xml.XmlNodeList> object to display all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-793">示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-793">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string * string -&gt; System.Xml.XmlNodeList&#xA;override this.GetElementsByTagName : string * string -&gt; System.Xml.XmlNodeList" Usage="xmlDocument.GetElementsByTagName (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="a8f58-794">要匹配的 LocalName。</span><span class="sxs-lookup"><span data-stu-id="a8f58-794">The LocalName to match.</span></span> <span data-ttu-id="a8f58-795">特殊值“\*”匹配所有标记。</span><span class="sxs-lookup"><span data-stu-id="a8f58-795">The special value "\*" matches all tags.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a8f58-796">要匹配的 NamespaceURI。</span><span class="sxs-lookup"><span data-stu-id="a8f58-796">NamespaceURI to match.</span></span></param>
        <summary><span data-ttu-id="a8f58-797">返回一个 <see cref="T:System.Xml.XmlNodeList" />，它包含与指定 <see cref="P:System.Xml.XmlDocument.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 匹配的所有子代元素的列表。</span><span class="sxs-lookup"><span data-stu-id="a8f58-797">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="a8f58-798"><see cref="T:System.Xml.XmlNodeList" />，包含所有匹配节点的列表。</span><span class="sxs-lookup"><span data-stu-id="a8f58-798">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span> <span data-ttu-id="a8f58-799">如果没有任何节点与指定的 <paramref name="localName" /> 和 <paramref name="namespaceURI" /> 匹配，则返回的集合将为空。</span><span class="sxs-lookup"><span data-stu-id="a8f58-799">If no nodes match the specified <paramref name="localName" /> and <paramref name="namespaceURI" />, the returned collection will be empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-800">节点按照它们在文档树中出现的顺序放置。</span><span class="sxs-lookup"><span data-stu-id="a8f58-800">The nodes are placed in the order in which they would be encountered in the document tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-801">建议使用 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 或 <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> 方法，而不是 <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-801">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public System.Xml.XmlImplementation Implementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlImplementation Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Implementation As XmlImplementation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlImplementation ^ Implementation { System::Xml::XmlImplementation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : System.Xml.XmlImplementation" Usage="System.Xml.XmlDocument.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlImplementation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-802">获取当前文档的 <see cref="T:System.Xml.XmlImplementation" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-802">Gets the <see cref="T:System.Xml.XmlImplementation" /> object for the current document.</span></span></summary>
        <value><span data-ttu-id="a8f58-803">当前文档的 <see langword="XmlImplementation" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-803">The <see langword="XmlImplementation" /> object for the current document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-804">`XmlDocument` 从同一 `XmlImplementation` 共享创建的对象是相同 <xref:System.Xml.XmlNameTable> 的。</span><span class="sxs-lookup"><span data-stu-id="a8f58-804">`XmlDocument` objects created from the same `XmlImplementation` share the same <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="a8f58-805">这允许用户将属性和元素名称比较为对象而不是字符串。</span><span class="sxs-lookup"><span data-stu-id="a8f58-805">This allows users to compare attribute and element names as objects rather than strings.</span></span>  
  
 <span data-ttu-id="a8f58-806">尽管 `XmlDocument` 对象共享相同的实现，但若要将节点从一个文档移到另一个文档，则必须使用 <xref:System.Xml.XmlDocument.ImportNode%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-806">Although the `XmlDocument` objects share the same implementation, to move nodes from one document to another you must use the <xref:System.Xml.XmlDocument.ImportNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-807">下面的示例 `XmlDocument` 使用另一个文档的实现创建新的。</span><span class="sxs-lookup"><span data-stu-id="a8f58-807">The following example creates a new `XmlDocument` using another document's implementation.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ImportNode (System.Xml.XmlNode node, bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ImportNode(class System.Xml.XmlNode node, bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportNode (node As XmlNode, deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ImportNode(System::Xml::XmlNode ^ node, bool deep);" />
      <MemberSignature Language="F#" Value="abstract member ImportNode : System.Xml.XmlNode * bool -&gt; System.Xml.XmlNode&#xA;override this.ImportNode : System.Xml.XmlNode * bool -&gt; System.Xml.XmlNode" Usage="xmlDocument.ImportNode (node, deep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="a8f58-808">正在被导入的节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-808">The node being imported.</span></span></param>
        <param name="deep"><span data-ttu-id="a8f58-809">如果执行深层克隆，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-809"><see langword="true" /> to perform a deep clone; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a8f58-810">将节点从另一个文档导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-810">Imports a node from another document to the current document.</span></span></summary>
        <returns><span data-ttu-id="a8f58-811">导入的 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-811">The imported <see cref="T:System.Xml.XmlNode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-812">返回的节点没有父级。</span><span class="sxs-lookup"><span data-stu-id="a8f58-812">The returned node has no parent.</span></span> <span data-ttu-id="a8f58-813">源节点未更改或已从原始文档中删除; `ImportNode` 创建源节点的副本。</span><span class="sxs-lookup"><span data-stu-id="a8f58-813">The source node is not altered or removed from the original document; `ImportNode` creates a copy of the source node.</span></span>  
  
 <span data-ttu-id="a8f58-814">导入节点会创建一个 `XmlNode` 对象，该对象由导入文档拥有， <xref:System.Xml.XmlNode.Name%2A> 并与 <xref:System.Xml.XmlNode.NodeType%2A> 源节点相同。</span><span class="sxs-lookup"><span data-stu-id="a8f58-814">Importing a node creates an `XmlNode` object owned by the importing document, with <xref:System.Xml.XmlNode.Name%2A> and <xref:System.Xml.XmlNode.NodeType%2A> identical to the source node.</span></span> <span data-ttu-id="a8f58-815">新对象还包含与命名空间相关的属性 (<xref:System.Xml.XmlNode.Prefix%2A> 、 <xref:System.Xml.XmlNode.LocalName%2A> 和 <xref:System.Xml.XmlNode.NamespaceURI%2A>) 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-815">The new object also has the attributes related to namespaces (<xref:System.Xml.XmlNode.Prefix%2A>, <xref:System.Xml.XmlNode.LocalName%2A>, and <xref:System.Xml.XmlNode.NamespaceURI%2A>).</span></span>  
  
 <span data-ttu-id="a8f58-816">根据导入节点的节点类型和参数的值 `deep` ，将根据需要复制其他信息。</span><span class="sxs-lookup"><span data-stu-id="a8f58-816">Depending on the node type of the imported node and the value of the `deep` parameter, additional information is copied as appropriate.</span></span> <span data-ttu-id="a8f58-817">如果将 XML 或 HTML 源的片段从一个文档复制到另一个文档，则此方法会尝试镜像预期的行为， (认识到，在 XML 情况下，这两个文档的 Dtd) 可能不同。</span><span class="sxs-lookup"><span data-stu-id="a8f58-817">This method attempts to mirror the behavior expected if a fragment of XML or HTML source was copied from one document to another (recognizing that, in the XML case, the two documents could have different DTDs).</span></span>  
  
 <span data-ttu-id="a8f58-818">下表描述了每个的特定行为 <xref:System.Xml.XmlNodeType> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-818">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="a8f58-819">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="a8f58-819">XmlNodeType</span></span>|<span data-ttu-id="a8f58-820">ImportNode (true) </span><span class="sxs-lookup"><span data-stu-id="a8f58-820">ImportNode(true)</span></span>|<span data-ttu-id="a8f58-821">ImportNode (false) </span><span class="sxs-lookup"><span data-stu-id="a8f58-821">ImportNode(false)</span></span>|  
|-----------------|------------------------|-------------------------|  
|<span data-ttu-id="a8f58-822">Attribute</span><span class="sxs-lookup"><span data-stu-id="a8f58-822">Attribute</span></span>|<span data-ttu-id="a8f58-823">在 <xref:System.Xml.XmlAttribute.Specified%2A> `true` 生成的上，属性设置为 <xref:System.Xml.XmlAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-823">The <xref:System.Xml.XmlAttribute.Specified%2A> property is set to `true` on the generated <xref:System.Xml.XmlAttribute>.</span></span> <span data-ttu-id="a8f58-824">将 `XmlAttribute` 以递归方式导入源的子代，并重组生成的节点，以构成相应的子树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-824">The descendants of the source `XmlAttribute` are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="a8f58-825">`deep`参数不适用于 `XmlAttribute` 节点; 在导入后，它们始终携带其子代。</span><span class="sxs-lookup"><span data-stu-id="a8f58-825">The `deep` parameter does not apply to `XmlAttribute` nodes; they always carry their children with them when imported.</span></span>|  
|<span data-ttu-id="a8f58-826">CData</span><span class="sxs-lookup"><span data-stu-id="a8f58-826">CData</span></span>|<span data-ttu-id="a8f58-827">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-827">Copies the node, including its data.</span></span>|<span data-ttu-id="a8f58-828">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-828">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="a8f58-829">评论</span><span class="sxs-lookup"><span data-stu-id="a8f58-829">Comment</span></span>|<span data-ttu-id="a8f58-830">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-830">Copies the node, including its data.</span></span>|<span data-ttu-id="a8f58-831">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-831">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="a8f58-832">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="a8f58-832">DocumentFragment</span></span>|<span data-ttu-id="a8f58-833">递归导入源节点的子代，并重组生成的节点，以构成相应的子树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-833">The descendants of the source node are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="a8f58-834">生成一个空的 <xref:System.Xml.XmlDocumentFragment> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-834">An empty <xref:System.Xml.XmlDocumentFragment> is generated.</span></span>|  
|<span data-ttu-id="a8f58-835">DocumentType</span><span class="sxs-lookup"><span data-stu-id="a8f58-835">DocumentType</span></span>|<span data-ttu-id="a8f58-836">复制该节点，包括复制其数据。\*</span><span class="sxs-lookup"><span data-stu-id="a8f58-836">Copies the node, including its data.\*</span></span>|<span data-ttu-id="a8f58-837">复制该节点，包括复制其数据。\*</span><span class="sxs-lookup"><span data-stu-id="a8f58-837">Copies the node, including its data.\*</span></span>|  
|<span data-ttu-id="a8f58-838">元素</span><span class="sxs-lookup"><span data-stu-id="a8f58-838">Element</span></span>|<span data-ttu-id="a8f58-839">将以递归方式导入源元素及其指定属性节点的子代，并重组生成的节点，以构成相应的子树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-839">The descendants of the source element and its specified attribute nodes are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span><br /><br /> <span data-ttu-id="a8f58-840">注意：不会复制默认属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-840">Note: Default attributes are not copied.</span></span> <span data-ttu-id="a8f58-841">如果导入到的文档定义该元素名称的默认属性，则分配这些默认属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-841">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|<span data-ttu-id="a8f58-842">将导入源元素的指定属性节点，并将生成的 `XmlAttribute` 节点附加到生成的 <xref:System.Xml.XmlElement> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-842">Specified attribute nodes of the source element are imported, and the generated `XmlAttribute` nodes are attached to the generated <xref:System.Xml.XmlElement>.</span></span><br /><br /> <span data-ttu-id="a8f58-843">注意：不会复制默认属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-843">Note: Default attributes are not copied.</span></span> <span data-ttu-id="a8f58-844">如果导入到的文档定义该元素名称的默认属性，则分配这些默认属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-844">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|  
|<span data-ttu-id="a8f58-845">EntityReference</span><span class="sxs-lookup"><span data-stu-id="a8f58-845">EntityReference</span></span>|<span data-ttu-id="a8f58-846">因为源文档和目标文档可能以不同的方式定义实体，所以此方法只复制 <xref:System.Xml.XmlEntityReference> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-846">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="a8f58-847">不包括替换文本。</span><span class="sxs-lookup"><span data-stu-id="a8f58-847">The replacement text is not included.</span></span> <span data-ttu-id="a8f58-848">如果目标文档定义了实体，则给它赋值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-848">If the destination document has the entity defined, its value is assigned.</span></span>|<span data-ttu-id="a8f58-849">因为源文档和目标文档可能以不同的方式定义实体，所以此方法只复制 <xref:System.Xml.XmlEntityReference> 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-849">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="a8f58-850">不包括替换文本。</span><span class="sxs-lookup"><span data-stu-id="a8f58-850">The replacement text is not included.</span></span> <span data-ttu-id="a8f58-851">如果目标文档定义了实体，则给它赋值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-851">If the destination document has the entity defined, its value is assigned.</span></span>|  
|<span data-ttu-id="a8f58-852">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="a8f58-852">ProcessingInstruction</span></span>|<span data-ttu-id="a8f58-853">从导入的节点复制目标和数据值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-853">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="a8f58-854">从导入的节点复制目标和数据值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-854">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="a8f58-855">文本</span><span class="sxs-lookup"><span data-stu-id="a8f58-855">Text</span></span>|<span data-ttu-id="a8f58-856">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-856">Copies the node, including its data.</span></span>|<span data-ttu-id="a8f58-857">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-857">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="a8f58-858">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="a8f58-858">SignificantWhitespace</span></span>|<span data-ttu-id="a8f58-859">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-859">Copies the node, including its data.</span></span>|<span data-ttu-id="a8f58-860">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-860">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="a8f58-861">空格</span><span class="sxs-lookup"><span data-stu-id="a8f58-861">Whitespace</span></span>|<span data-ttu-id="a8f58-862">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-862">Copies the node, including its data.</span></span>|<span data-ttu-id="a8f58-863">复制该节点，包括复制其数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-863">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="a8f58-864">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="a8f58-864">XmlDeclaration</span></span>|<span data-ttu-id="a8f58-865">从导入的节点复制目标和数据值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-865">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="a8f58-866">从导入的节点复制目标和数据值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-866">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="a8f58-867">所有其他节点类型。</span><span class="sxs-lookup"><span data-stu-id="a8f58-867">All other node types.</span></span>|<span data-ttu-id="a8f58-868">不能导入这些节点类型。</span><span class="sxs-lookup"><span data-stu-id="a8f58-868">These node types cannot be imported.</span></span>|<span data-ttu-id="a8f58-869">不能导入这些节点类型。</span><span class="sxs-lookup"><span data-stu-id="a8f58-869">These node types cannot be imported.</span></span>|  
  
 <span data-ttu-id="a8f58-870">\* 尽管可以导入 DocumentType 的节点，但文档只能有一个 DocumentType。</span><span class="sxs-lookup"><span data-stu-id="a8f58-870">\*Although DocumentType nodes can be imported, a document can only have one DocumentType.</span></span> <span data-ttu-id="a8f58-871">如果文档当前具有 DocumentType 节点，则必须先将其删除，然后再添加一个新节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-871">If the document currently has a DocumentType node, it must be removed before adding a new one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-872">下面的示例将一个 book 节点从另一个 XML 文档导入到原始 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-872">The following example imports a book node from a second XML document into the original XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-873">该示例使用文件 `books.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-873">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8f58-874">在无法导入的节点类型上调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-874">Calling this method on a node type which cannot be imported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText {  void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string" Usage="System.Xml.XmlDocument.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-875">在所有情况下引发 <see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-875">Throws an <see cref="T:System.InvalidOperationException" /> in all cases.</span></span></summary>
        <value><span data-ttu-id="a8f58-876">节点及其所有子节点的值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-876">The values of the node and all its child nodes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-877">不实现此属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-877">This property is not implemented.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8f58-878">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="a8f58-878">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlDocument.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-879">获取或设置表示当前节点的子级的标记。</span><span class="sxs-lookup"><span data-stu-id="a8f58-879">Gets or sets the markup representing the children of the current node.</span></span></summary>
        <value><span data-ttu-id="a8f58-880">当前节点的子级的标记。</span><span class="sxs-lookup"><span data-stu-id="a8f58-880">The markup of the children of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-881">设置此属性会将节点的子级替换为给定字符串的已分析内容。</span><span class="sxs-lookup"><span data-stu-id="a8f58-881">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="a8f58-882">分析在当前命名空间上下文中完成。</span><span class="sxs-lookup"><span data-stu-id="a8f58-882">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="a8f58-883">`InnerXml` 删除多余的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="a8f58-883">`InnerXml` removes redundant namespace declarations.</span></span> <span data-ttu-id="a8f58-884">因此，大量的剪切和粘贴操作并不会使文档的大小因多余的命名空间声明而增加。</span><span class="sxs-lookup"><span data-stu-id="a8f58-884">As a result, numerous cut and paste operations do not increase the size of your document with redundant namespace declarations.</span></span> <span data-ttu-id="a8f58-885">请考虑以下 XSL 文档：</span><span class="sxs-lookup"><span data-stu-id="a8f58-885">Consider the following XSL document:</span></span>  
  
```xml  
<xsl:stylesheet version="1.0"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     <xsl:template match="stock">  
         ...  
     </xsl:template>  
    </xsl:stylesheet>  
```  
  
 <span data-ttu-id="a8f58-886">`InnerXml`样式表节点上的属性返回以下字符串：</span><span class="sxs-lookup"><span data-stu-id="a8f58-886">The `InnerXml` property on the stylesheet node returns the following string:</span></span>  
  
```xml  
<xsl:template match="stock"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     ...  
    </xsl:template>  
```  
  
 <span data-ttu-id="a8f58-887">请注意用于保留节点标识的其他 xmlns： xsl 命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="a8f58-887">Notice the additional xmlns:xsl namespace declaration which is used to preserve the node identity.</span></span> <span data-ttu-id="a8f58-888">如果重新插入此内部 XML 字符串，将返回原始文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-888">If you re-insert this inner XML string, you will get back your original document.</span></span> <span data-ttu-id="a8f58-889">换句话说，如果 `InnerXml` 父 xsl： stylesheet 元素已经具有 xmlns： xsl 命名空间声明，则认为 xmlns： xsl 命名空间声明是冗余的，因此将其删除。</span><span class="sxs-lookup"><span data-stu-id="a8f58-889">In other words, `InnerXml` recognizes that the xmlns:xsl namespace declaration is redundant, given that the parent xsl:stylesheet element already has the xmlns:xsl namespace declaration, and therefore removes it.</span></span>  
  
 <span data-ttu-id="a8f58-890">如果 `InnerXml` 从不带默认命名空间的文档移动到带有默认命名空间的文档，则该行为将稍有不同。</span><span class="sxs-lookup"><span data-stu-id="a8f58-890">If you move `InnerXml` from a document with no default namespace to a document with a default namespace, the behavior is a little different.</span></span> <span data-ttu-id="a8f58-891">请考虑以下 XML 字符串：</span><span class="sxs-lookup"><span data-stu-id="a8f58-891">Consider the following XML string:</span></span>  
  
```xml  
<test>  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="a8f58-892">`InnerXml` 返回无命名空间声明的纯 XML 字符串：</span><span class="sxs-lookup"><span data-stu-id="a8f58-892">`InnerXml` returns a plain XML string with no namespace declarations:</span></span>  
  
```xml  
<item>123</item>  
```  
  
 <span data-ttu-id="a8f58-893">如果随后将此字符串插入到具有默认命名空间的文档中，如下所示：</span><span class="sxs-lookup"><span data-stu-id="a8f58-893">If you then insert this string into a document that does have a default namespace, such as the following:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
    </test>  
```  
  
 <span data-ttu-id="a8f58-894">`InnerXml` 分析上下文中的字符串，新节点选取 urn：1命名空间。</span><span class="sxs-lookup"><span data-stu-id="a8f58-894">`InnerXml` parses the string in context, and the new nodes pick up the urn:1 namespace.</span></span> <span data-ttu-id="a8f58-895">结果类似以下形式：</span><span class="sxs-lookup"><span data-stu-id="a8f58-895">The result looks like this:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="a8f58-896">现在，当你请求 `InnerXml` 获取以下内容时：</span><span class="sxs-lookup"><span data-stu-id="a8f58-896">Now when you ask for the `InnerXml` you get back the following:</span></span>  
  
```xml  
<item xmlns="urn:1">123</item>  
```  
  
 <span data-ttu-id="a8f58-897">如果您明确希望插入的项保留它来自没有命名空间的文档，则需要手动添加 xmlns = "" 声明并插入生成的字符串：</span><span class="sxs-lookup"><span data-stu-id="a8f58-897">If you explicitly want the inserted item to preserve the fact that it came from a document that had no namespace then you need to manually add an xmlns= "" declaration and insert the resulting string:</span></span>  
  
```xml  
<item xmlns="">123</item>  
```  
  
 <span data-ttu-id="a8f58-898">所有这些操作的最终效果如下所示：</span><span class="sxs-lookup"><span data-stu-id="a8f58-898">The net effect of all this is as follows:</span></span>  
  
1.  <span data-ttu-id="a8f58-899">在 `InnerXml` 不使用命名空间的文档之间进行剪切和粘贴非常简单，而且不会在字符串中创建 "xmlns" 冗余。</span><span class="sxs-lookup"><span data-stu-id="a8f58-899">Cutting and pasting `InnerXml` among documents that do not use namespaces is clean and simple and does not create "xmlns" redundancy in your strings.</span></span>  
  
2.  <span data-ttu-id="a8f58-900">`InnerXml` 还可用于在多个命名空间 (为 XSL 样式表) 的文档之间进行剪切和粘贴。</span><span class="sxs-lookup"><span data-stu-id="a8f58-900">`InnerXml` can also be used to cut and paste between documents which have more than one namespace (that is XSL stylesheets).</span></span>  
  
3.  <span data-ttu-id="a8f58-901">xmlns： xsl 声明自动显示在您的字符串中，并在您的节点层次结构中消失。</span><span class="sxs-lookup"><span data-stu-id="a8f58-901">xmlns:xsl declarations automatically appear in your strings and disappear in your node hierarchies.</span></span>  
  
4.  <span data-ttu-id="a8f58-902">如果 `InnerXml` 从没有默认命名空间的文档移动到具有默认命名空间的文档，新节点将选取新的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="a8f58-902">In the case where you are moving `InnerXml` from a document that has no default namespace to a document that does have a default namespace, the new nodes will pick up the new default namespace.</span></span>  
  
 <span data-ttu-id="a8f58-903">如果 `InnerXml` 设置的文本包含文档中当前未定义的实体引用，则生成的树将包含空的 EntityReference 节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-903">If `InnerXml` is set with text containing entity references that are not currently defined in the document, the resulting tree will contain empty EntityReference nodes.</span></span>  
  
 <span data-ttu-id="a8f58-904">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-904">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-905">设置此属性时指定的 XML 格式不正确。</span><span class="sxs-lookup"><span data-stu-id="a8f58-905">The XML specified when setting this property is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlDocument.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-906">获取一个值，该值指示当前节点是否是只读的。</span><span class="sxs-lookup"><span data-stu-id="a8f58-906">Gets a value indicating whether the current node is read-only.</span></span></summary>
        <value><span data-ttu-id="a8f58-907">如果当前节点为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-907"><see langword="true" /> if the current node is read-only; otherwise <see langword="false" />.</span></span> <span data-ttu-id="a8f58-908"><see langword="XmlDocument" /> 节点始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-908"><see langword="XmlDocument" /> nodes always return <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-909">只读节点是指无法更改其属性、特性或子级的节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-909">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="a8f58-910">可以从树中删除只读节点并将其插入到其他位置。</span><span class="sxs-lookup"><span data-stu-id="a8f58-910">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 <span data-ttu-id="a8f58-911">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-911">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-912">下面的示例演示如何使用 `IsReadOnly` 属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-912">The following example shows how to use the `IsReadOnly` property.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-913">从 <see cref="T:System.IO.Stream" />、URL、<see cref="T:System.IO.TextReader" /> 或 <see cref="T:System.Xml.XmlReader" /> 加载指定的 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-913">Loads the specified XML data from a <see cref="T:System.IO.Stream" />, a URL, a <see cref="T:System.IO.TextReader" />, or an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::Stream ^ inStream);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.IO.Stream -&gt; unit&#xA;override this.Load : System.IO.Stream -&gt; unit" Usage="xmlDocument.Load inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream"><span data-ttu-id="a8f58-914">包含要加载的 XML 文档的流。</span><span class="sxs-lookup"><span data-stu-id="a8f58-914">The stream containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="a8f58-915">从指定的流加载 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-915">Loads the XML document from the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-916">`Load`方法始终保留有效的空白区域。</span><span class="sxs-lookup"><span data-stu-id="a8f58-916">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="a8f58-917"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>属性确定是否保留无关紧要的空白（在元素内容中为空格）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-917">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="a8f58-918">默认值为 `false` ; 不保留元素内容中的空格。</span><span class="sxs-lookup"><span data-stu-id="a8f58-918">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="a8f58-919">如果要进行验证，可以 <xref:System.Xml.XmlReader> 使用 <xref:System.Xml.XmlReaderSettings> 类和方法创建验证实例 <xref:System.Xml.XmlReader.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-919">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a8f58-920">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-920">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a8f58-921">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-921">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="a8f58-922">此方法自动检测输入 XML 的字符串格式 (例如，UTF-8、ANSI 等) 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-922">This method automatically detects the string format of the input XML (for example, UTF-8, ANSI, and so on).</span></span> <span data-ttu-id="a8f58-923">如果你的应用程序需要知道使用哪种编码来读取流，请考虑使用 <xref:System.Xml.XmlTextReader> 对象读取流，然后使用 <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType> 属性来确定编码。</span><span class="sxs-lookup"><span data-stu-id="a8f58-923">If your application needs to know which encoding is used to read the stream, consider using an <xref:System.Xml.XmlTextReader> object to read the stream, and then use the <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span> <span data-ttu-id="a8f58-924">如果需要使用 <xref:System.Xml.XmlDocument> 对象来处理 XML，可以使用 <xref:System.Xml.XmlTextReader> 对象创建一个。</span><span class="sxs-lookup"><span data-stu-id="a8f58-924">If you need to use a <xref:System.Xml.XmlDocument> object to work with XML, you can use the <xref:System.Xml.XmlTextReader> object to create one.</span></span> <span data-ttu-id="a8f58-925">有关详细信息，请参阅 [使用 XPathDocument 和 Xml 读取 XML 数据](/dotnet/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument)。</span><span class="sxs-lookup"><span data-stu-id="a8f58-925">For more information, see [Reading XML Data using XPathDocument and XmlDocument](/dotnet/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-926">XML 中存在加载或分析错误。</span><span class="sxs-lookup"><span data-stu-id="a8f58-926">There is a load or parse error in the XML.</span></span> <span data-ttu-id="a8f58-927">在这种情况下，将引发 <see cref="T:System.IO.FileNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-927">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::TextReader ^ txtReader);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.IO.TextReader -&gt; unit&#xA;override this.Load : System.IO.TextReader -&gt; unit" Usage="xmlDocument.Load txtReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader"><span data-ttu-id="a8f58-928">用于将 XML 数据输送到文档中的 <see langword="TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-928">The <see langword="TextReader" /> used to feed the XML data into the document.</span></span></param>
        <summary><span data-ttu-id="a8f58-929">从指定的 <see cref="T:System.IO.TextReader" /> 加载 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-929">Loads the XML document from the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-930">`Load`方法始终保留有效的空白区域。</span><span class="sxs-lookup"><span data-stu-id="a8f58-930">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="a8f58-931"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>属性确定是否保留无关紧要的空白（在元素内容中为空格）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-931">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="a8f58-932">默认值为 `false` ; 不保留元素内容中的空格。</span><span class="sxs-lookup"><span data-stu-id="a8f58-932">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="a8f58-933">如果要进行验证，可以 <xref:System.Xml.XmlReader> 使用 <xref:System.Xml.XmlReaderSettings> 类和方法创建验证实例 <xref:System.Xml.XmlReader.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-933">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a8f58-934">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-934">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a8f58-935">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-935">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-936">下面的示例使用 <xref:System.IO.StringReader> 类将 XML 数据的字符串加载到 `XmlDocument` 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-936">The following example uses the <xref:System.IO.StringReader> class to load a string of XML data into the `XmlDocument` object.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-937">XML 中存在加载或分析错误。</span><span class="sxs-lookup"><span data-stu-id="a8f58-937">There is a load or parse error in the XML.</span></span> <span data-ttu-id="a8f58-938">在这种情况下，该文档保留为空。</span><span class="sxs-lookup"><span data-stu-id="a8f58-938">In this case, the document remains empty.</span></span></exception>
        <altmember cref="T:System.IO.StreamReader" />
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member Load : string -&gt; unit&#xA;override this.Load : string -&gt; unit" Usage="xmlDocument.Load filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="a8f58-939">含要加载的 XML 文档的文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="a8f58-939">URL for the file containing the XML document to load.</span></span> <span data-ttu-id="a8f58-940">URL 既可以是本地文件，也可以是 HTTP URL（Web 地址）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-940">The URL can be either a local file or an HTTP URL (a Web address).</span></span></param>
        <summary><span data-ttu-id="a8f58-941">从指定的 URL 加载 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-941">Loads the XML document from the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-942">`Load`方法始终保留有效的空白区域。</span><span class="sxs-lookup"><span data-stu-id="a8f58-942">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="a8f58-943"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>属性确定是否保留无关紧要的空白（在元素内容中为空格）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-943">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="a8f58-944">默认值为 `false` ; 不保留元素内容中的空格。</span><span class="sxs-lookup"><span data-stu-id="a8f58-944">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="a8f58-945">如果要进行验证，可以 <xref:System.Xml.XmlReader> 使用 <xref:System.Xml.XmlReaderSettings> 类和方法创建验证实例 <xref:System.Xml.XmlReader.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-945">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a8f58-946">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-946">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a8f58-947">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-947">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-948">XML 中存在加载或分析错误。</span><span class="sxs-lookup"><span data-stu-id="a8f58-948">There is a load or parse error in the XML.</span></span> <span data-ttu-id="a8f58-949">在这种情况下，将引发 <see cref="T:System.IO.FileNotFoundException" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-949">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8f58-950"><paramref name="filename" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="a8f58-950"><paramref name="filename" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8f58-951"><paramref name="filename" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-951"><paramref name="filename" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="a8f58-952">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="a8f58-952">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="a8f58-953">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-953">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a8f58-954">打开文件时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="a8f58-954">An I/O error occurred while opening the file.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="a8f58-955"><paramref name="filename" /> 指定了一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="a8f58-955"><paramref name="filename" /> specified a file that is read-only.</span></span>  
  
<span data-ttu-id="a8f58-956">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a8f58-956">-or-</span></span> 
<span data-ttu-id="a8f58-957">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="a8f58-957">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="a8f58-958">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a8f58-958">-or-</span></span> 
 <span data-ttu-id="a8f58-959"><paramref name="filename" /> 指定了一个目录。</span><span class="sxs-lookup"><span data-stu-id="a8f58-959"><paramref name="filename" /> specified a directory.</span></span>  
  
<span data-ttu-id="a8f58-960">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a8f58-960">-or-</span></span> 
<span data-ttu-id="a8f58-961">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="a8f58-961">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="a8f58-962">未找到 <paramref name="filename" /> 中指定的文件。</span><span class="sxs-lookup"><span data-stu-id="a8f58-962">The file specified in <paramref name="filename" /> was not found.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8f58-963"><paramref name="filename" /> 的格式无效。</span><span class="sxs-lookup"><span data-stu-id="a8f58-963"><paramref name="filename" /> is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a8f58-964">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="a8f58-964">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Xml.XmlReader -&gt; unit&#xA;override this.Load : System.Xml.XmlReader -&gt; unit" Usage="xmlDocument.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a8f58-965">用于将 XML 数据输送到文档中的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-965">The <see langword="XmlReader" /> used to feed the XML data into the document.</span></span></param>
        <summary><span data-ttu-id="a8f58-966">从指定的 <see cref="T:System.Xml.XmlReader" /> 加载 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-966">Loads the XML document from the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-967">`Load`方法始终保留有效的空白区域。</span><span class="sxs-lookup"><span data-stu-id="a8f58-967">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="a8f58-968"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A>属性确定是否保留无关紧要的空白（在元素内容中为空格）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-968">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="a8f58-969">默认值为 `false` ; 不保留元素内容中的空格。</span><span class="sxs-lookup"><span data-stu-id="a8f58-969">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="a8f58-970">如果读取器处于初始状态 (<xref:System.Xml.XmlReader.ReadState%2A> =ReadState.Initial) ，则将 `Load` 使用读取器的全部内容，并根据所找到的内容生成 DOM。</span><span class="sxs-lookup"><span data-stu-id="a8f58-970">If the reader is in the initial state (<xref:System.Xml.XmlReader.ReadState%2A> =ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="a8f58-971">如果读取器已位于深度为 "n" 的某个节点上，则此方法会将该节点及其所有后续同级加载到结束标记（关闭深度 "n"）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-971">If the reader is already positioned on some node at depth "n", this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="a8f58-972">这会产生以下结果。</span><span class="sxs-lookup"><span data-stu-id="a8f58-972">This has the following results.</span></span>  
  
 <span data-ttu-id="a8f58-973">如果当前节点及其同级的外观如下所示：</span><span class="sxs-lookup"><span data-stu-id="a8f58-973">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="a8f58-974">`Load` 引发异常，因为文档不能有两个根级别元素。</span><span class="sxs-lookup"><span data-stu-id="a8f58-974">`Load` throws an exception because a document cannot have two root level elements.</span></span> <span data-ttu-id="a8f58-975">如果当前节点及其同级的外观如下所示：</span><span class="sxs-lookup"><span data-stu-id="a8f58-975">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><?process instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="a8f58-976">`Load` 成功，但有一个不完整的 DOM 树，因为没有根级别元素。</span><span class="sxs-lookup"><span data-stu-id="a8f58-976">`Load` succeeds, but you have an incomplete DOM tree because there is no root level element.</span></span> <span data-ttu-id="a8f58-977">在保存文档之前，必须添加根级别元素，否则 <xref:System.Xml.XmlDocument.Save%2A> 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a8f58-977">Before you save the document, you must add a root level element, otherwise <xref:System.Xml.XmlDocument.Save%2A> will throw an exception.</span></span>  
  
 <span data-ttu-id="a8f58-978">如果读取器定位在对文档根级别无效的叶节点上（例如，空白或属性节点），则读取器将继续读取，直到将其定位到可用于根的节点上。</span><span class="sxs-lookup"><span data-stu-id="a8f58-978">If the reader is positioned on a leaf node that is invalid for the root level of a document, for example a white space or attribute node, the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="a8f58-979">文档在此时开始加载。</span><span class="sxs-lookup"><span data-stu-id="a8f58-979">The document begins loading at this point.</span></span>  
  
 <span data-ttu-id="a8f58-980">如果要进行验证，可以 <xref:System.Xml.XmlReader> 使用 <xref:System.Xml.XmlReaderSettings> 类和方法创建验证实例 <xref:System.Xml.XmlReader.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-980">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a8f58-981">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-981">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a8f58-982">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-982">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-983">下面的示例将文件的最后一个 book 节点加载 `books.xml` 到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-983">The following example loads the last book node of the `books.xml` file into the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-984">该示例使用文件 `books.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-984">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-985">XML 中存在加载或分析错误。</span><span class="sxs-lookup"><span data-stu-id="a8f58-985">There is a load or parse error in the XML.</span></span> <span data-ttu-id="a8f58-986">在这种情况下，该文档保留为空。</span><span class="sxs-lookup"><span data-stu-id="a8f58-986">In this case, the document remains empty.</span></span></exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public virtual void LoadXml (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadXml (xml As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadXml(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : string -&gt; unit&#xA;override this.LoadXml : string -&gt; unit" Usage="xmlDocument.LoadXml xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="a8f58-987">包含要加载的 XML 文档的字符串。</span><span class="sxs-lookup"><span data-stu-id="a8f58-987">String containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="a8f58-988">从指定的字符串加载 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-988">Loads the XML document from the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-989">默认情况下，该 `LoadXml` 方法不保留空格或有效空白。</span><span class="sxs-lookup"><span data-stu-id="a8f58-989">By default the `LoadXml` method does not preserve white space or significant white space.</span></span>  
  
 <span data-ttu-id="a8f58-990">此方法解析 Dtd，但不执行 DTD 或架构验证。</span><span class="sxs-lookup"><span data-stu-id="a8f58-990">This method parses DTDs, but does not do DTD or Schema validation.</span></span> <span data-ttu-id="a8f58-991">如果要进行验证，可以 <xref:System.Xml.XmlReader> 使用 <xref:System.Xml.XmlReaderSettings> 类和方法创建验证实例 <xref:System.Xml.XmlReader.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-991">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a8f58-992">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="a8f58-992">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a8f58-993">如果要从、、或加载，请 <xref:System.IO.Stream> <xref:System.String> <xref:System.IO.TextReader> <xref:System.Xml.XmlReader> 使用 load 方法，而不是使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-993">If you want to load from a <xref:System.IO.Stream>, <xref:System.String>, <xref:System.IO.TextReader>, or <xref:System.Xml.XmlReader>, use the Load method instead of this method.</span></span>  
  
 <span data-ttu-id="a8f58-994">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-994">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-995">下面的示例将 XML 加载到 `XmlDocument` 对象中，并将其保存到文件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-995">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-996">XML 中存在加载或分析错误。</span><span class="sxs-lookup"><span data-stu-id="a8f58-996">There is a load or parse error in the XML.</span></span> <span data-ttu-id="a8f58-997">在这种情况下，该文档保留为空。</span><span class="sxs-lookup"><span data-stu-id="a8f58-997">In this case, the document remains empty.</span></span></exception>
        <altmember cref="P:System.Xml.XmlDocument.PreserveWhitespace" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlDocument.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-998">获取节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-998">Gets the local name of the node.</span></span></summary>
        <value><span data-ttu-id="a8f58-999">对于 <see langword="XmlDocument" /> 节点，本地名称是 #document。</span><span class="sxs-lookup"><span data-stu-id="a8f58-999">For <see langword="XmlDocument" /> nodes, the local name is #document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1000">返回的本地名称取决于 <xref:System.Xml.XmlDocument.NodeType%2A> 节点的。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1000">The local name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="a8f58-1001">若要查看描述为每个节点类型返回的本地名称的表，请参阅 <xref:System.Xml.XmlNode.LocalName%2A> 类中的属性 <xref:System.Xml.XmlNode> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1001">To see a table describing the local name returned for each of the node types, see the <xref:System.Xml.XmlNode.LocalName%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlDocument.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1002">获取节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1002">Gets the qualified name of the node.</span></span></summary>
        <value><span data-ttu-id="a8f58-1003">对于 <see langword="XmlDocument" /> 节点，该名称是 #document。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1003">For <see langword="XmlDocument" /> nodes, the name is #document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1004">返回的名称取决于 <xref:System.Xml.XmlDocument.NodeType%2A> 节点的。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1004">The name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="a8f58-1005">若要查看描述为每个节点类型返回的名称的表，请参阅 <xref:System.Xml.XmlNode.Name%2A> 类中的属性 <xref:System.Xml.XmlNode> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1005">To see a table describing the name returned for each of the node types, see the <xref:System.Xml.XmlNode.Name%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlDocument.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1006">获取与此实现关联的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1006">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="a8f58-1007"><see langword="XmlNameTable" />，它使您能够获取该文档中字符串的原子化版本。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1007">An <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1008">每个 `XmlDocument` 对象都有一个 <xref:System.Xml.NameTable> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1008">Each `XmlDocument` object has a <xref:System.Xml.NameTable> object.</span></span> <span data-ttu-id="a8f58-1009">元素和属性名称作为原子化字符串存储在中 `NameTable` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1009">Element and attribute names are stored in the `NameTable` as atomized strings.</span></span> <span data-ttu-id="a8f58-1010">这意味着，即使在文档中多次引用某个名称，它也只会在中存储一次 `NameTable` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1010">This means that even if a name is referenced in the document multiple times it is stored only once in the `NameTable`.</span></span> <span data-ttu-id="a8f58-1011">例如，如果文档具有多个名称为 "Customer" 的元素， `NameTable` 则每当接收到该名称的请求时，都将返回相同的对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1011">For example, if the document had multiple elements with the name "Customer", `NameTable` returns the same object whenever it receives a request for that name.</span></span> <span data-ttu-id="a8f58-1012">因此，用户可以在这些字符串上使用对象比较来编写代码，而不是使用更昂贵的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1012">As a result, users can write code using object comparisons on these strings rather than the more expensive string comparisons.</span></span>  
  
 <span data-ttu-id="a8f58-1013">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1013">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 <span data-ttu-id="a8f58-1014">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1014">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanged">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanged As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanged;" />
      <MemberSignature Language="F#" Value="member this.NodeChanged : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeChanged : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1015">当属于该文档的节点的 <see cref="P:System.Xml.XmlNode.Value" /> 已被更改时发生。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1015">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document has been changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1016">此事件仅适用于具有值的节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1016">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="a8f58-1017">此文档创建的所有节点（无论是否已插入到文档中）都包含在此事件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1017">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanging">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanging As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanging;" />
      <MemberSignature Language="F#" Value="member this.NodeChanging : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeChanging : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1018">当属于该文档的节点的 <see cref="P:System.Xml.XmlNode.Value" /> 将被更改时发生。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1018">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document is about to be changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1019">此事件允许用户执行额外检查，如有必要，将引发异常来停止操作。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1019">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="a8f58-1020">如果引发异常，则 `XmlDocument` 返回到其原始状态。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1020">If an exception is thrown the `XmlDocument` returns to its original state.</span></span> <span data-ttu-id="a8f58-1021">此事件仅适用于具有值的节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1021">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="a8f58-1022">此文档创建的所有节点（无论是否已插入到文档中）都包含在此事件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1022">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserted">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserted" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserted As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserted;" />
      <MemberSignature Language="F#" Value="member this.NodeInserted : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeInserted : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1023">将属于该文档的节点插入另一个节点时发生。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1023">Occurs when a node belonging to this document has been inserted into another node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1024">此文档创建的所有节点（无论是否已插入到文档中）都包含在此事件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1024">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserting">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserting" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserting As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserting;" />
      <MemberSignature Language="F#" Value="member this.NodeInserting : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeInserting : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1025">当属于该文档的节点将被插入另一个节点时发生。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1025">Occurs when a node belonging to this document is about to be inserted into another node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1026">此事件允许用户执行额外检查，如有必要，将引发异常来停止操作。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1026">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="a8f58-1027">如果引发异常，则 `XmlDocument` 返回到其原始状态。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1027">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="a8f58-1028">此文档创建的所有节点（无论是否已插入到文档中）都包含在此事件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1028">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoved">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoved As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoved;" />
      <MemberSignature Language="F#" Value="member this.NodeRemoved : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeRemoved : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1029">当属于该文档的节点已从其父级中移除时发生。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1029">Occurs when a node belonging to this document has been removed from its parent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1030">此文档创建的所有节点（无论是否已插入到文档中）都包含在此事件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1030">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoving">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoving" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoving As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoving;" />
      <MemberSignature Language="F#" Value="member this.NodeRemoving : System.Xml.XmlNodeChangedEventHandler " Usage="member this.NodeRemoving : System.Xml.XmlNodeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1031">当属于该文档的节点将从文档中移除时发生。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1031">Occurs when a node belonging to this document is about to be removed from the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1032">此事件允许用户执行额外检查，如有必要，将引发异常来停止操作。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1032">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="a8f58-1033">如果引发异常，则 `XmlDocument` 返回到其原始状态。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1033">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="a8f58-1034">此文档创建的所有节点（无论是否已插入到文档中）都包含在此事件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1034">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlDocument.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1035">获取当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1035">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="a8f58-1036">节点类型。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1036">The node type.</span></span> <span data-ttu-id="a8f58-1037">对于 <see langword="XmlDocument" /> 节点，该值是 XmlNodeType.Document。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1037">For <see langword="XmlDocument" /> nodes, this value is XmlNodeType.Document.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlDocument.OwnerDocument" />
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument? OwnerDocument { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1038">获取当前节点所属的 <see cref="T:System.Xml.XmlDocument" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1038">Gets the <see cref="T:System.Xml.XmlDocument" /> to which the current node belongs.</span></span></summary>
        <value><span data-ttu-id="a8f58-1039">对于 <see langword="XmlDocument" /> 节点（<see cref="P:System.Xml.XmlDocument.NodeType" /> 等于 XmlNodeType.Document），该属性总是返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1039">For <see langword="XmlDocument" /> nodes (<see cref="P:System.Xml.XmlDocument.NodeType" /> equals XmlNodeType.Document), this property always returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlDocument.ParentNode" />
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode? ParentNode { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1040">获取该节点的父节点（针对可以拥有父级的节点）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1040">Gets the parent node of this node (for nodes that can have parents).</span></span></summary>
        <value><span data-ttu-id="a8f58-1041">始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1041">Always returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="public bool PreserveWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.PreserveWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveWhitespace : bool with get, set" Usage="System.Xml.XmlDocument.PreserveWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1042">获取或设置一个值，该值指示是否在元素内容中保留空白区域。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1042">Gets or sets a value indicating whether to preserve white space in element content.</span></span></summary>
        <value><span data-ttu-id="a8f58-1043"><see langword="true" /> 表示保留空白；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1043"><see langword="true" /> to preserve white space; otherwise <see langword="false" />.</span></span> <span data-ttu-id="a8f58-1044">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1044">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1045">此属性确定如何在加载和保存过程中处理空白。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1045">This property determines how white space is handled during the load and save process.</span></span>  
  
 <span data-ttu-id="a8f58-1046">如果 `PreserveWhitespace` `true` 在 <xref:System.Xml.XmlDocument.Load%2A> 调用之前或之前，将 <xref:System.Xml.XmlDocument.LoadXml%2A> 保留空白节点; 否则，如果此属性为 `false` ，则保留有效空白，而不会保留空白。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1046">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A> is called, white space nodes are preserved; otherwise, if this property is `false`, significant white space is preserved, white space is not.</span></span>  
  
 <span data-ttu-id="a8f58-1047">如果 `PreserveWhitespace` 在 `true` 调用之前为，则会 <xref:System.Xml.XmlDocument.Save%2A> 在输出中保留文档中的空白; 否则，如果此属性为 `false` ，则 `XmlDocument` 自动缩进输出。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1047">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Save%2A> is called, white space in the document is preserved in the output; otherwise, if this property is `false`, `XmlDocument` auto-indents the output.</span></span>  
  
 <span data-ttu-id="a8f58-1048">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1048">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1049">下面的示例演示如何从文件中去除空格。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1049">The following example shows how to strip white space from a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-1050">该示例使用文件 `book.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1050">The example uses the file `book.xml` as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.PreserveWhitespace Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReadNode (System.Xml.XmlReader reader);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReadNode(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadNode (reader As XmlReader) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReadNode(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadNode : System.Xml.XmlReader -&gt; System.Xml.XmlNode&#xA;override this.ReadNode : System.Xml.XmlReader -&gt; System.Xml.XmlNode" Usage="xmlDocument.ReadNode reader" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? ReadNode (System.Xml.XmlReader reader);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a8f58-1051">XML 源</span><span class="sxs-lookup"><span data-stu-id="a8f58-1051">The XML source</span></span></param>
        <summary><span data-ttu-id="a8f58-1052">根据 <see cref="T:System.Xml.XmlReader" /> 中的信息创建一个 <see cref="T:System.Xml.XmlNode" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1052">Creates an <see cref="T:System.Xml.XmlNode" /> object based on the information in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="a8f58-1053">读取器必须定位在节点或属性上。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1053">The reader must be positioned on a node or attribute.</span></span></summary>
        <returns><span data-ttu-id="a8f58-1054">新的 <see langword="XmlNode" />；如果不存在其他节点，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1054">The new <see langword="XmlNode" /> or <see langword="null" /> if no more nodes exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1055">`XmlNode`从给定的读取器读取一个，并将读取器定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1055">Reads one `XmlNode` from the given reader and positions the reader on the next node.</span></span> <span data-ttu-id="a8f58-1056">此方法创建与 `XmlNode` <xref:System.Xml.XmlNode.NodeType%2A> 读取器当前定位在其上的匹配的类型。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1056">This method creates the type of `XmlNode` matching the <xref:System.Xml.XmlNode.NodeType%2A> on which the reader is currently positioned.</span></span> <span data-ttu-id="a8f58-1057"> (如果读取器处于初始状态，则 `ReadNode` 将读取器前进到第一个节点，然后对该节点进行操作。 ) </span><span class="sxs-lookup"><span data-stu-id="a8f58-1057">(If the reader is in the initial state, `ReadNode` advances the reader to the first node and then operates on that node.)</span></span>  
  
 <span data-ttu-id="a8f58-1058">如果读取器定位在元素的开头，则 `ReadNode` 读取所有属性和所有子节点，直到并且包括当前节点的结束标记。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1058">If the reader is positioned on the start of an element, `ReadNode` reads all the attributes and any child nodes, up to and including the end tag of the current node.</span></span> <span data-ttu-id="a8f58-1059">`XmlNode`返回的包含表示所读取的所有内容的子树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1059">The `XmlNode` returned contains the sub-tree representing everything read.</span></span> <span data-ttu-id="a8f58-1060">读取器位于结束标记后。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1060">The reader is positioned immediately after the end tag.</span></span>  
  
 <span data-ttu-id="a8f58-1061">`ReadNode` 还可以读取属性，但在这种情况下，它不会将读取器推进到下一个属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1061">`ReadNode` can also read attributes, but in this case it does not advance the reader to the next attribute.</span></span> <span data-ttu-id="a8f58-1062">这允许你编写以下 c # 代码：</span><span class="sxs-lookup"><span data-stu-id="a8f58-1062">This allows you to write the following C# code:</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
while (reader.MoveToNextAttribute())  
{  
  XmlNode a = doc.ReadNode(reader);  
  // Do some more processing.  
}  
```  
  
 <span data-ttu-id="a8f58-1063">`ReadNode` 虽然使用特性值，这意味着在 `ReadNode` 对属性调用后， <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1063">`ReadNode` does consume the attribute value though, which means after calling `ReadNode` on an attribute, <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType> returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1064">下面的示例使用 `ReadNode` 创建一个新的节点，然后将新节点插入到文档中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1064">The following example uses `ReadNode` to create a new node and then inserts the new node into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-1065">该示例使用文件 `cd.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1065">The example uses the file, `cd.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.ReadNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="a8f58-1066">此读取器位于未转换为有效的 DOM 节点（例如，EndElement 或 EndEntity）的节点类型上。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1066">The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8f58-1067">此方法具有继承要求。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1067">This method has an inheritance demand.</span></span> <span data-ttu-id="a8f58-1068">需要完全信任才能重写 <see langword="ReadNode" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1068">Full trust is required to override the <see langword="ReadNode" /> method.</span></span>  
  
<span data-ttu-id="a8f58-1069">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1069">This method is a Microsoft extension to the Document Object Model (DOM).</span></span></para></block>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-1070">将 XML 文档保存到指定的位置。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1070">Saves the XML document to the specified location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream outStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream outStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (outStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ outStream);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.IO.Stream -&gt; unit&#xA;override this.Save : System.IO.Stream -&gt; unit" Usage="xmlDocument.Save outStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outStream"><span data-ttu-id="a8f58-1071">要保存到其中的流。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1071">The stream to which you want to save.</span></span></param>
        <summary><span data-ttu-id="a8f58-1072">将 XML 文档保存到指定的流。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1072">Saves the XML document to the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1073">仅当设置为时，才保留空白 <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1073">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="a8f58-1074">当前对象的 XmlDeclaration `XmlDocument` 确定已保存文档中的编码属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1074">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="a8f58-1075">编码特性的值是从属性获取的 <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1075">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a8f58-1076">如果没有 `XmlDocument` XmlDeclaration，或者 XmlDeclaration 没有编码属性，则保存的文档不会有任何一个。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1076">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="a8f58-1077">保存文档时，会生成 xmlns 特性来持久保存节点标识 (本地名称 + 命名空间 URI) 正确保存。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1077">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="a8f58-1078">例如，下面的 c # 代码</span><span class="sxs-lookup"><span data-stu-id="a8f58-1078">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="a8f58-1079">生成此 xml 属性 `<item xmls="urn:1"/>` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1079">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="a8f58-1080">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1080">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="a8f58-1081">请注意，只有 <xref:System.Xml.XmlDocument.Save%2A> 方法强制执行格式正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1081">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="a8f58-1082">所有其他 `Save` 重载只保证格式正确的片段。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1082">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-1083">该操作不会生成格式标准的 XML 文档（例如，没有文档元素或 XML 声明重复）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1083">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.IO.TextWriter -&gt; unit&#xA;override this.Save : System.IO.TextWriter -&gt; unit" Usage="xmlDocument.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a8f58-1084">要保存到其中的 <see langword="TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1084">The <see langword="TextWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="a8f58-1085">将 XML 文档保存到指定的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1085">Saves the XML document to the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1086">上的编码 `TextWriter` 决定了写出的编码 (将 XmlDeclaration 节点的编码替换为) 的编码 `TextWriter` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1086">The encoding on the `TextWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `TextWriter`).</span></span> <span data-ttu-id="a8f58-1087">如果未在上指定编码，则 `TextWriter` `XmlDocument` 会保存但不使用编码属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1087">If there was no encoding specified on the `TextWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="a8f58-1088">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1088">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="a8f58-1089">请注意，只有 <xref:System.Xml.XmlDocument.Save%2A> 方法强制执行格式正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1089">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="a8f58-1090">所有其他 `Save` 重载只保证格式正确的片段。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1090">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-1091">该操作不会生成格式标准的 XML 文档（例如，没有文档元素或 XML 声明重复）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1091">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member Save : string -&gt; unit&#xA;override this.Save : string -&gt; unit" Usage="xmlDocument.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="a8f58-1092">要将文档保存到其中的文件的位置。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1092">The location of the file where you want to save the document.</span></span></param>
        <summary><span data-ttu-id="a8f58-1093">将 XML 文档保存到指定的文件。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1093">Saves the XML document to the specified file.</span></span> <span data-ttu-id="a8f58-1094">如果存在指定文件，则此方法会覆盖它。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1094">If the specified file exists, this method overwrites it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1095">只有在设置为时，才会在输出文件中保留空白 <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1095">White space is preserved in the output file only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="a8f58-1096">当前对象的 XmlDeclaration `XmlDocument` 确定已保存文档中的编码属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1096">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="a8f58-1097">编码特性的值是从属性获取的 <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1097">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a8f58-1098">如果没有 `XmlDocument` XmlDeclaration，或者 XmlDeclaration 没有编码属性，则保存的文档不会有任何一个。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1098">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="a8f58-1099">保存文档时，会生成 xmlns 特性来持久保存节点标识 (本地名称 + 命名空间 URI) 正确保存。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1099">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="a8f58-1100">例如，下面的 c # 代码</span><span class="sxs-lookup"><span data-stu-id="a8f58-1100">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="a8f58-1101">生成此 xml 属性 `<item xmls="urn:1"/>` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1101">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="a8f58-1102">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1102">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="a8f58-1103">请注意，只有 <xref:System.Xml.XmlDocument.Save%2A> 方法强制执行格式正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1103">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="a8f58-1104">所有其他 `Save` 重载只保证格式正确的片段。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1104">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1105">下面的示例将 XML 加载到一个 XML 对象中，对其进行修改，然后将其保存到名为 data.xml 的文件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1105">The following example loads XML into an XmlDocument object, modifies it, and then saves it to a file named data.xml.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a8f58-1106">data.xml 文件将包含以下 XML： `<item><name>wrench</name><price>10.95</price></item>` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1106">The data.xml file will contain the following XML: `<item><name>wrench</name><price>10.95</price></item>`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-1107">该操作不会生成格式标准的 XML 文档（例如，没有文档元素或 XML 声明重复）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1107">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Xml.XmlWriter -&gt; unit&#xA;override this.Save : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.Save w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="a8f58-1108">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1108">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="a8f58-1109">将 XML 文档保存到指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1109">Saves the XML document to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1110">仅当设置为时，才保留空白 <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1110">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="a8f58-1111">上的编码 `XmlWriter` 决定了写出的编码 (将 XmlDeclaration 节点的编码替换为) 的编码 `XmlWriter` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1111">The encoding on the `XmlWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `XmlWriter`).</span></span> <span data-ttu-id="a8f58-1112">如果未在上指定编码，则 `XmlWriter` `XmlDocument` 会保存但不使用编码属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1112">If there was no encoding specified on the `XmlWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="a8f58-1113">保存文档时，会生成 xmlns 特性，以将节点标识 (LocalName + NamespaceURI 正确保存) 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1113">When the document is saved, xmlns attributes are generated to persist the node identity (LocalName + NamespaceURI) correctly.</span></span> <span data-ttu-id="a8f58-1114">例如，下面的 c # 代码</span><span class="sxs-lookup"><span data-stu-id="a8f58-1114">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="a8f58-1115">生成此 xml 属性：</span><span class="sxs-lookup"><span data-stu-id="a8f58-1115">generates this xmls attribute:</span></span>  
  
```xml  
<item  
    xmls="urn:1"/>  
```  
  
 <span data-ttu-id="a8f58-1116">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1116">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="a8f58-1117">请注意，只有 <xref:System.Xml.XmlDocument.Save%2A> 方法强制执行格式正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1117">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="a8f58-1118">所有其他 `Save` 重载只保证格式正确的片段。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1118">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1119">下面的示例将 XML 加载到 `XmlDocument` 对象中，并将其保存到文件中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1119">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-1120">该操作不会生成格式标准的 XML 文档（例如，没有文档元素或 XML 声明重复）。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1120">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlDocument.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1121">返回节点的后架构验证信息集 (PSVI)。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1121">Returns the Post-Schema-Validation-Infoset (PSVI) of the node.</span></span></summary>
        <value><span data-ttu-id="a8f58-1122">表示节点的 PSVI 的 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1122">The <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object representing the PSVI of the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1123">在验证节点后，将设置此属性的 PSVI 内容。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1123">The PSVI contents of this property are set after the node has been validated.</span></span>  
  
 <span data-ttu-id="a8f58-1124">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1124">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlDocument.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1125">获取或设置与此 <see cref="T:System.Xml.XmlDocument" /> 关联的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1125">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object associated with this <see cref="T:System.Xml.XmlDocument" />.</span></span></summary>
        <value><span data-ttu-id="a8f58-1126">为一个包含与此 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 关联的 XML 架构定义语言 (XSD) 架构的 <see cref="T:System.Xml.XmlDocument" /> 对象；否则，为一个空 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1126">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the XML Schema Definition Language (XSD) schemas associated with this <see cref="T:System.Xml.XmlDocument" />; otherwise, an empty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1127"><xref:System.Xml.Schema.XmlSchemaSet>当执行的方法时，与对象关联的对象中包含的架构 <xref:System.Xml.XmlDocument> 用于验证 <xref:System.Xml.XmlDocument.Validate%2A> <xref:System.Xml.XmlDocument> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1127">The schemas contained in an <xref:System.Xml.Schema.XmlSchemaSet> object associated with an <xref:System.Xml.XmlDocument> object are used for validation when the <xref:System.Xml.XmlDocument.Validate%2A> method of an <xref:System.Xml.XmlDocument> is executed.</span></span>  
  
 <span data-ttu-id="a8f58-1128"><xref:System.Xml.XmlDocument>使用对象中的 XML 数据初始化对象时 <xref:System.Xml.XmlReader> ， <xref:System.Xml.Schema.XmlSchemaSet> 会从对象的属性加载对象 <xref:System.Xml.XmlReaderSettings.Schemas%2A> <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1128">When an <xref:System.Xml.XmlDocument> object is initialized with XML data from an <xref:System.Xml.XmlReader> object, the <xref:System.Xml.Schema.XmlSchemaSet> object is loaded from the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property of the <xref:System.Xml.XmlReader> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8f58-1129">验证 <see cref="T:System.Xml.XmlDocument" /> 是不是 <see cref="P:System.Xml.XmlDocument.Schemas" /> 属性中包含的 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1129">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (validationEventHandler As ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberSignature Language="F#" Value="member this.Validate : System.Xml.Schema.ValidationEventHandler -&gt; unit" Usage="xmlDocument.Validate validationEventHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler"><span data-ttu-id="a8f58-1130">接收有关架构验证警告和错误的信息的 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1130">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span></span></param>
        <summary><span data-ttu-id="a8f58-1131">验证 <see cref="T:System.Xml.XmlDocument" /> 是不是 <see cref="P:System.Xml.XmlDocument.Schemas" /> 属性中包含的 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1131">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1132"><xref:System.Xml.XmlDocument.Validate%2A>方法 <xref:System.Xml.XmlDocument> 根据属性中包含的架构验证中的 XML 数据 <xref:System.Xml.XmlDocument.Schemas%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1132">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlDocument> against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="a8f58-1133"><xref:System.Xml.XmlDocument.Validate%2A>方法执行信息集补充。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1133">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="a8f58-1134">具体而言，在成功验证后，将应用架构默认值，根据需要将文本值转换为原子值，并将类型信息与已验证的信息项关联。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1134">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="a8f58-1135">结果是中以前的未类型化的 XML 子树替换为 <xref:System.Xml.XmlDocument> 类型化的子树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1135">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="a8f58-1136">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.XmlDocument.Validate%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1136">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="a8f58-1137">忽略或等架构位置提示 `xsi:schemaLocation` `xsi:noNamespaceSchemaLocation` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1137">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="a8f58-1138">将忽略内联架构。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1138">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="a8f58-1139">如果在验证期间发生架构验证错误，则 <xref:System.Xml.XmlDocument> 将以部分验证包含正确类型信息的节点进行部分验证，而不会进行部分验证。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1139">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
-   <span data-ttu-id="a8f58-1140">验证过程包括检查唯一性和引用约束 (`xs:ID` 、 `xs:IDREF` 、 `xs:key` 、 `xs:keyref` 和 `xs:unique`) 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1140">The validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1141">下面的示例阐释了 <xref:System.Xml.XmlDocument.Validate%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1141">The following example illustrates use of the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span> <span data-ttu-id="a8f58-1142">该示例创建一个 <xref:System.Xml.XmlDocument> ，其中包含使用和对象的关联 XSD 架构 <xref:System.Xml.XmlReaderSettings> <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1142">The example creates an <xref:System.Xml.XmlDocument> that contains an associated XSD schema using the <xref:System.Xml.XmlReaderSettings> and <xref:System.Xml.XmlReader> objects.</span></span> <span data-ttu-id="a8f58-1143">然后，该示例使用 <xref:System.Xml.XPath.XPathNavigator> 类在生成架构验证错误的 XML 文档中错误地修改某个元素的类型化值。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1143">The example then uses the <xref:System.Xml.XPath.XPathNavigator> class to incorrectly modify the typed value of an element in the XML document generating a schema validation error.</span></span>  
  
 [!code-cpp[XPathValidation#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathValidation/CPP/XPathValidation.cpp#1)]
 [!code-csharp[XPathValidation#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathValidation/CS/XPathValidation.cs#1)]
 [!code-vb[XPathValidation#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathValidation/VB/XPathValidation.vb#1)]  
  
 <span data-ttu-id="a8f58-1144">该示例使用 `contosoBooks.xml` 和 `contosoBooks.xsd` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1144">The example takes the `contosoBooks.xml` and `contosoBooks.xsd` files as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="a8f58-1145">发生了架构验证事件并且没有指定任何 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1145">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler? validationEventHandler, System.Xml.XmlNode nodeToValidate);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler, class System.Xml.XmlNode nodeToValidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (validationEventHandler As ValidationEventHandler, nodeToValidate As XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler, System::Xml::XmlNode ^ nodeToValidate);" />
      <MemberSignature Language="F#" Value="member this.Validate : System.Xml.Schema.ValidationEventHandler * System.Xml.XmlNode -&gt; unit" Usage="xmlDocument.Validate (validationEventHandler, nodeToValidate)" />
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Xml.XmlNode nodeToValidate);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="nodeToValidate" Type="System.Xml.XmlNode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler"><span data-ttu-id="a8f58-1146">接收有关架构验证警告和错误的信息的 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1146">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span></span></param>
        <param name="nodeToValidate"><span data-ttu-id="a8f58-1147">从 <see cref="T:System.Xml.XmlDocument" /> 创建的要验证的 <see cref="T:System.Xml.XmlNode" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1147">The <see cref="T:System.Xml.XmlNode" /> object created from an <see cref="T:System.Xml.XmlDocument" /> to validate.</span></span></param>
        <summary><span data-ttu-id="a8f58-1148">根据 <see cref="P:System.Xml.XmlDocument.Schemas" /> 属性中的 XML 架构定义语言 (XSD) 架构，验证指定的 <see cref="T:System.Xml.XmlNode" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1148">Validates the <see cref="T:System.Xml.XmlNode" /> object specified against the XML Schema Definition Language (XSD) schemas in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1149"><xref:System.Xml.XmlDocument.Validate%2A>方法 <xref:System.Xml.XmlNode> 根据属性中包含的架构验证对象中的 XML 数据 <xref:System.Xml.XmlDocument.Schemas%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1149">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlNode> object against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="a8f58-1150"><xref:System.Xml.XmlDocument.Validate%2A>方法执行信息集补充。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1150">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="a8f58-1151">具体而言，在成功验证后，将应用架构默认值，根据需要将文本值转换为原子值，并将类型信息与已验证的信息项关联。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1151">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="a8f58-1152">结果是中以前的未类型化的 XML 子树替换为 <xref:System.Xml.XmlDocument> 类型化的子树。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1152">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="a8f58-1153">以下是使用方法时要考虑的重要注意事项 <xref:System.Xml.XmlDocument.Validate%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1153">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="a8f58-1154">忽略或等架构位置提示 `xsi:schemaLocation` `xsi:noNamespaceSchemaLocation` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1154">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="a8f58-1155">将忽略内联架构。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1155">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="a8f58-1156">如果在验证期间发生架构验证错误，则 <xref:System.Xml.XmlDocument> 将以部分验证包含正确类型信息的节点进行部分验证，而不会进行部分验证。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1156">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
 <span data-ttu-id="a8f58-1157">如果要验证的节点是根节点，则验证过程包括检查唯一性和引用约束 (`xs:ID` 、 `xs:IDREF` 、 `xs:key` 、 `xs:keyref` 和 `xs:unique`) ; 否则，将忽略唯一性和引用约束。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1157">If the node to validate is the root node, the validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`); otherwise, uniqueness and reference constraints are omitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1158">有关方法的示例 <xref:System.Xml.XmlDocument.Validate%2A> ，请参见 <xref:System.Xml.XmlDocument.Validate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1158">For an example of the <xref:System.Xml.XmlDocument.Validate%2A> method, see the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8f58-1159"><see cref="T:System.Xml.XmlNode" /> 对象参数不是从 <see cref="T:System.Xml.XmlDocument" /> 创建的。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1159">The <see cref="T:System.Xml.XmlNode" /> object parameter was not created from an <see cref="T:System.Xml.XmlDocument" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8f58-1160"><see cref="T:System.Xml.XmlNode" /> 对象参数不是元素、特性、文档片段或根节点。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1160">The <see cref="T:System.Xml.XmlNode" /> object parameter is not an element, attribute, document fragment, or the root node.</span></span></exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="a8f58-1161">发生了架构验证事件并且没有指定任何 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1161">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter xw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter xw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (xw As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ xw);" />
      <MemberSignature Language="F#" Value="override this.WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.WriteContentTo xw" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xw" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="xw"><span data-ttu-id="a8f58-1162">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1162">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="a8f58-1163">将 <see langword="XmlDocument" /> 节点的所有子级保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1163">Saves all the children of the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1164">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1164">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="a8f58-1165">它在功能上等效于 <xref:System.Xml.XmlDocument.InnerXml%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1165">It is functionally equivalent to the <xref:System.Xml.XmlDocument.InnerXml%2A> property.</span></span>  
  
 <span data-ttu-id="a8f58-1166"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>属性确定写出的编码。如果该 `Encoding` 属性没有值，则不使用 `XmlDocument` 编码属性写出。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1166">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1167">下面的示例在屏幕上显示文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1167">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlDocument.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="a8f58-1168">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1168">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="a8f58-1169">将 <see langword="XmlDocument" /> 节点保存到指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1169">Saves the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1170">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1170">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="a8f58-1171">它在功能上等效于 <xref:System.Xml.XmlNode.OuterXml%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1171">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
 <span data-ttu-id="a8f58-1172"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType>属性确定写出的编码。如果该 `Encoding` 属性没有值，则不使用 `XmlDocument` 编码属性写出。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1172">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1173">下面的示例在屏幕上显示文档。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1173">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlDocument.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8f58-1174">设置 <see cref="T:System.Xml.XmlResolver" /> 以用于解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1174">Sets the <see cref="T:System.Xml.XmlResolver" /> to use for resolving external resources.</span></span></summary>
        <value><span data-ttu-id="a8f58-1175">要使用的 <see langword="XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1175">The <see langword="XmlResolver" /> to use.</span></span>  
  
<span data-ttu-id="a8f58-1176">在 .NET Framework 1.1 版中，调用方必须受到完全信任才能指定 <see langword="XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1176">In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8f58-1177">`XmlResolver`可用于加载 dtd 或扩展实体引用。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1177">The `XmlResolver` can be used to load DTDs or expand entity references.</span></span> <span data-ttu-id="a8f58-1178">使用 <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> 属性，您可以在上设置凭据 `XmlResolver` 以访问存储在安全网络资源上的资源。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1178">Using the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property, you can set credentials on the `XmlResolver` to access resources stored on a secure network resource.</span></span>  
  
-   <span data-ttu-id="a8f58-1179">如果未使用 (加载文档，则为 <xref:System.Xml.XmlReader> ，如果该文档是使用流、文件等加载的) 则 `XmlResolver` `XmlDocument` 始终使用上的。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1179">If the document was not loaded using an <xref:System.Xml.XmlReader> (that is, if it was loaded using a stream, file, and so on) the `XmlResolver` on the `XmlDocument` is always used.</span></span>  
  
-   <span data-ttu-id="a8f58-1180">如果文档是使用加载的 <xref:System.Xml.XmlTextReader> ，则上的解析程序 `XmlTextReader` 用于解析 DocumentType 节点中的任何 DTD 引用。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1180">If the document was loaded with an <xref:System.Xml.XmlTextReader>, the resolver on the `XmlTextReader` is used to resolve any DTD references in the DocumentType node.</span></span> <span data-ttu-id="a8f58-1181">上的解析程序 `XmlDocument` 用于展开任何实体引用。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1181">The resolver on the `XmlDocument` is used to expand any entity references.</span></span>  
  
-   <span data-ttu-id="a8f58-1182">如果文档是使用加载的 <xref:System.Xml.XmlValidatingReader> ，则从不使用上的解析程序 `XmlDocument` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1182">If the document was loaded with an <xref:System.Xml.XmlValidatingReader>, the resolver on the `XmlDocument` is never used.</span></span>  
  
-   <span data-ttu-id="a8f58-1183">如果文档是使用扩展的类加载的， `XmlReader` 并且 `XmlReader` 无法解析 (返回) 的实体，则将 <xref:System.Xml.XmlReader.CanResolveEntity%2A> `false` `XmlResolver` `XmlDocument` 用于解析 DocumentType 节点中的任何引用并展开任何实体引用。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1183">If the document was loaded with a class that extends `XmlReader` and the `XmlReader` cannot resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A> returns `false`), the `XmlResolver` on the `XmlDocument` is used to resolve any references in the DocumentType node and to expand any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8f58-1184">如果 `XmlDocument` 使用设置了的 <xref:System.Xml.XmlReader> 来加载，则 `XmlResolver` `XmlResolver` 完成后，上的将 `XmlReader` 不会缓存 `XmlDocument` <xref:System.Xml.XmlDocument.Load%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1184">If the `XmlDocument` is loaded using an <xref:System.Xml.XmlReader> which had an `XmlResolver` set to it, the `XmlResolver` on the `XmlReader` is not cached by the `XmlDocument` after <xref:System.Xml.XmlDocument.Load%2A> completes.</span></span>  
  
 <span data-ttu-id="a8f58-1185">在 the.NET Framework 版本1.1 中，如果未设置此属性，则应用程序的信任级别将确定默认行为。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1185">In version 1.1 of the.NET Framework, if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="a8f58-1186">`Fully trusted code:` 文档使用默认 <xref:System.Xml.XmlUrlResolver> 没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1186">`Fully trusted code:` The document uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="a8f58-1187">如果需要身份验证才能访问网络资源，请使用 `XmlResolver` 属性指定 `XmlResolver` 具有必要凭据的。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1187">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="a8f58-1188">`Semi-trusted code:``XmlResolver`属性设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1188">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="a8f58-1189">不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1189">External resources are not resolved.</span></span>  
  
 <span data-ttu-id="a8f58-1190">有关安全性和属性的详细信息 `XmlResolver` ，请参阅 [解析外部资源](/dotnet/standard/data/xml/resolving-external-resources)。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1190">For more information on security and the `XmlResolver` property, see [Resolving External Resources](/dotnet/standard/data/xml/resolving-external-resources).</span></span>  
  
 <span data-ttu-id="a8f58-1191">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1191">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8f58-1192">下面的示例加载一个 XML 文档，该文档包含对 DTD 文件的引用。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1192">The following example loads an XML document which includes a reference to a DTD file.</span></span> <span data-ttu-id="a8f58-1193">`XmlResolver`属性用于设置访问网络资源所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1193">The `XmlResolver` property is used to set the credentials necessary to access the network resource.</span></span>  
  
 [!code-cpp[XmlDocument.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.XmlResolver/CPP/docresolver.cpp#1)]
 [!code-csharp[XmlDocument.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.XmlResolver/CS/docresolver.cs#1)]
 [!code-vb[XmlDocument.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.XmlResolver/VB/docresolver.vb#1)]  
  
 <span data-ttu-id="a8f58-1194">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1194">The example uses the following data files as input.</span></span>  
  
 `book5.xml`  
  
 [!code-xml[XmlDocument.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlDocument.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a8f58-1195">此属性设置为 <see langword="null" />，并且遇到了外部 DTD 或实体。</span><span class="sxs-lookup"><span data-stu-id="a8f58-1195">This property is set to <see langword="null" /> and an external DTD or entity is encountered.</span></span></exception>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
  </Members>
</Type>
