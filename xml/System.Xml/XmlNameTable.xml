<Type Name="XmlNameTable" FullName="System.Xml.XmlNameTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8847252f3b049efd9bf75e528d5f51b51b9fadc3" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89844348" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNameTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNameTable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNameTable abstract" />
  <TypeSignature Language="F#" Value="type XmlNameTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.ReaderWriter" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ed7f1-101">原子化字符串对象表。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-101">Table of atomized string objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed7f1-102">多个类（如 <xref:System.Xml.XmlDocument> 和 <xref:System.Xml.XmlReader> ） `XmlNameTable` 在内部使用类来存储特性和元素名称。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `XmlNameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="ed7f1-103">当 XML 文档中多次出现某个元素名或属性名时，该名称在 `XmlNameTable` 中只存储一次。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `XmlNameTable`.</span></span>  
  
 <span data-ttu-id="ed7f1-104">这些名称存储为公共语言运行时 (CLR) 对象类型。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="ed7f1-105">这使您能够对这些字符串进行对象比较，而不是开销更大的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="ed7f1-106">这些字符串对象称为 "原子化字符串"。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-106">These string objects are referred to as "atomized strings".</span></span>  
  
 <span data-ttu-id="ed7f1-107">`XmlNameTable` 在类中实现 <xref:System.Xml.NameTable> 。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-107">`XmlNameTable` is implemented in the <xref:System.Xml.NameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed7f1-108">下面的示例比较两个元素名称。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-108">The following example compares two element names.</span></span>  
  
 [!code-csharp[NameTable_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable_v2/CS/nametable.cs#1)]
 [!code-vb[NameTable_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable_v2/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.NameTable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlNameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlNameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ed7f1-109">初始化 <see cref="T:System.Xml.XmlNameTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-109">Initializes a new instance of the <see cref="T:System.Xml.XmlNameTable" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed7f1-110">当在派生类中被重写时，将指定的字符串原子化并将其添加到 <see langword="XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-110">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed7f1-111">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-111">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; string" Usage="xmlNameTable.Add array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ed7f1-112">要添加的名称。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-112">The name to add.</span></span></param>
        <summary><span data-ttu-id="ed7f1-113">当在派生类中被重写时，将指定的字符串原子化并将其添加到 <see langword="XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-113">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <returns><span data-ttu-id="ed7f1-114">新的原子化字符串；如果已存在原子化字符串，则为此现有的原子化字符串。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-114">The new atomized string or the existing one if it already exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed7f1-115">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-115">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ed7f1-116"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-116"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Add : char[] * int * int -&gt; string" Usage="xmlNameTable.Add (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ed7f1-117">包含要添加的名称的字符数组。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-117">The character array containing the name to add.</span></span></param>
        <param name="offset"><span data-ttu-id="ed7f1-118">数组中指定名称第一个字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-118">Zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="length"><span data-ttu-id="ed7f1-119">名称中的字符数。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-119">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="ed7f1-120">当在派生类中被重写时，将指定的字符串原子化并将其添加到 <see langword="XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-120">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <returns><span data-ttu-id="ed7f1-121">新的原子化字符串；如果已存在原子化字符串，则为此现有的原子化字符串。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-121">The new atomized string or the existing one if it already exists.</span></span> <span data-ttu-id="ed7f1-122">如果 length 为零，则返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-122">If length is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed7f1-123">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-123">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="ed7f1-124">0 &gt; <paramref name="offset" /></span><span class="sxs-lookup"><span data-stu-id="ed7f1-124">0 &gt; <paramref name="offset" /></span></span>  
  
<span data-ttu-id="ed7f1-125">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ed7f1-125">-or-</span></span> 
 <span data-ttu-id="ed7f1-126"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="ed7f1-126"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span></span> 
<span data-ttu-id="ed7f1-127">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ed7f1-127">-or-</span></span> 
 <span data-ttu-id="ed7f1-128"><paramref name="length" /> &gt; <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="ed7f1-128"><paramref name="length" /> &gt; <paramref name="array" />.Length</span></span> 
<span data-ttu-id="ed7f1-129">如果 <paramref name="length" /> =0，则上述条件不会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-129">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ed7f1-130"><paramref name="length" /> &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-130"><paramref name="length" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed7f1-131">当在派生类中被重写时，获取原子化字符串。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-131">When overridden in a derived class, gets the atomized string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed7f1-132">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-132">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; string" Usage="xmlNameTable.Get array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ed7f1-133">要查找的名称。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-133">The name to look up.</span></span></param>
        <summary><span data-ttu-id="ed7f1-134">当在派生类中被重写时，获取与指定的字符串包含相同值的原子化字符串。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-134">When overridden in a derived class, gets the atomized string containing the same value as the specified string.</span></span></summary>
        <returns><span data-ttu-id="ed7f1-135">原子化字符串；如果字符串尚未原子化，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-135">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed7f1-136">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-136">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ed7f1-137"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-137"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Get : char[] * int * int -&gt; string" Usage="xmlNameTable.Get (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ed7f1-138">包含要查找的名称的字符数组。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-138">The character array containing the name to look up.</span></span></param>
        <param name="offset"><span data-ttu-id="ed7f1-139">数组中指定名称第一个字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-139">The zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="length"><span data-ttu-id="ed7f1-140">名称中的字符数。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-140">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="ed7f1-141">当在派生类中被重写时，获取与给定数组中指定范围的字符包含相同字符的原子化字符串。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-141">When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.</span></span></summary>
        <returns><span data-ttu-id="ed7f1-142">原子化字符串；如果字符串尚未原子化，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-142">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span> <span data-ttu-id="ed7f1-143">如果 <paramref name="length" /> 为零，则返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-143">If <paramref name="length" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed7f1-144">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-144">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="ed7f1-145">0 &gt; <paramref name="offset" /></span><span class="sxs-lookup"><span data-stu-id="ed7f1-145">0 &gt; <paramref name="offset" /></span></span>  
  
<span data-ttu-id="ed7f1-146">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ed7f1-146">-or-</span></span> 
 <span data-ttu-id="ed7f1-147"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="ed7f1-147"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span></span> 
<span data-ttu-id="ed7f1-148">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ed7f1-148">-or-</span></span> 
 <span data-ttu-id="ed7f1-149"><paramref name="length" /> &gt; <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="ed7f1-149"><paramref name="length" /> &gt; <paramref name="array" />.Length</span></span> 
<span data-ttu-id="ed7f1-150">如果 <paramref name="length" /> =0，则上述条件不会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-150">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ed7f1-151"><paramref name="length" /> &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="ed7f1-151"><paramref name="length" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
