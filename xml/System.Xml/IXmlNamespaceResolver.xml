<Type Name="IXmlNamespaceResolver" FullName="System.Xml.IXmlNamespaceResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8567ad6c7a978c806f201ca648699facd60438fe" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83529041" /></Metadata><TypeSignature Language="C#" Value="public interface IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type IXmlNamespaceResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.ReaderWriter" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>提供对一组前缀和命名空间映射的只读访问。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="iXmlNamespaceResolver.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">一个 <see cref="T:System.Xml.XmlNamespaceScope" /> 值，指定要返回的命名空间节点的类型。</param>
        <summary>获取当前在范围内的已定义前缀/命名空间映射的集合。</summary>
        <returns>一个包含当前在范围内的命名空间的 <see cref="T:System.Collections.IDictionary" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 集合由前缀键控，可用于枚举当前范围内的命名空间。 该集合是当前命名空间列表的断开连接的副本。  
  
 下表列出了 <xref:System.Xml.XmlNamespaceScope> 值以及它如何影响 <xref:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope%2A> 方法是否返回默认值和内置命名空间。  
  
|XmlNamespaceScope 值|xmlns： xml|xmlns： xmlns|xmlns=""|  
|-----------------------------|---------------|-----------------|---------------|  
|<xref:System.Xml.XmlNamespaceScope.All>|是|no|no|  
|<xref:System.Xml.XmlNamespaceScope.ExcludeXml>|no|no|no|  
|<xref:System.Xml.XmlNamespaceScope.Local>|no|no|是|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string" Usage="iXmlNamespaceResolver.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">要查找其命名空间 URI 的前缀。</param>
        <summary>获取映射到指定前缀的命名空间 URI。</summary>
        <returns>映射到前缀的命名空间 URI；如果前缀未映射到命名空间 URI，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  命名空间 URI 到前缀的映射可以更改为 XML 文档中的节点和节点。 不能依赖于从一个节点到下一个节点的查找结果。  
  
 下表描述了 <xref:System.Xml.IXmlNamespaceResolver.LookupNamespace%2A> 方法如何处理默认命名空间和内置命名空间。  
  
|前缀|返回值|  
|------------|------------------|  
|xml|http://www.w3.org/XML/1998/namespace|  
|xmlns|http://www.w3.org/2000/xmlns/|  
|`String.Empty` （已分配默认命名空间）。|当前分配的默认命名空间。|  
|`String.Empty` （未显式分配默认命名空间）。|`String.Empty` （空白前缀与不在任何命名空间中的元素相关联）。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public string LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LookupPrefix (namespaceName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ LookupPrefix(System::String ^ namespaceName);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string" Usage="iXmlNamespaceResolver.LookupPrefix namespaceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">要查找其前缀的命名空间 URI。</param>
        <summary>获取映射到指定命名空间 URI 的前缀。</summary>
        <returns>映射到命名空间 URI 的前缀；如果命名空间 URI 未映射到前缀，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 命名空间 URI 可以映射到多个前缀。 由于前缀不是以可预测的方式映射的，因此，如果将命名空间 URI 映射到多个前缀，则不应依赖返回特定的前缀。  
  
> [!NOTE]
>  用于前缀映射的命名空间 URI 可以从节点更改为 XML 文档中的节点。 不能依赖于从一个节点到下一个节点的查找结果。  
  
 下表描述了 <xref:System.Xml.IXmlNamespaceResolver.LookupPrefix%2A> 方法如何处理默认命名空间和内置命名空间。  
  
|命名空间|返回值|  
|---------------|------------------|  
|http://www.w3.org/XML/1998/namespace|xml|  
|http://www.w3.org/2000/xmlns/|xmlns|  
|空命名空间。|尚未定义的默认命名空间。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
