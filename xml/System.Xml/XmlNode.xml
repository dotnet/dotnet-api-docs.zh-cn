<Type Name="XmlNode" FullName="System.Xml.XmlNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41e1831f2e8198ffa2cb26d7657ca248ce0e6635" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100291579" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlNode : System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : System::Collections::IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type XmlNode = class&#xA;    interface IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable, class System.Xml.XPath.IXPathNavigable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements ICloneable, IEnumerable, IXPathNavigable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : ICloneable, System::Collections::IEnumerable, System::Xml::XPath::IXPathNavigable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type XmlNode = class&#xA;    interface IEnumerable&#xA;    interface ICloneable&#xA;    interface IXPathNavigable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type XmlNode = class&#xA;    interface ICloneable&#xA;    interface IEnumerable&#xA;    interface IXPathNavigable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlDocument" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlDocument" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlDocument" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlDocument" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="93cc5-101">表示 XML 文档中的单个节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-101">Represents a single node in the XML document.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-102">此类实现 W3C 文档对象模型 (DOM) 级别1核心和核心 DOM 级别2。</span><span class="sxs-lookup"><span data-stu-id="93cc5-102">This class implements the W3C Document Object Model (DOM) Level 1 Core and the Core DOM Level 2.</span></span> <span data-ttu-id="93cc5-103">DOM 是 XML 文档的内存中（缓存）树表示形式。</span><span class="sxs-lookup"><span data-stu-id="93cc5-103">The DOM is an in-memory (cache) tree representation of an XML document.</span></span> <span data-ttu-id="93cc5-104">`XmlNode` 是 DOM 的 .NET 实现中的基类。</span><span class="sxs-lookup"><span data-stu-id="93cc5-104">`XmlNode` is the base class in the .NET implementation of the DOM.</span></span> <span data-ttu-id="93cc5-105">它支持 XPath 选择并提供编辑功能。</span><span class="sxs-lookup"><span data-stu-id="93cc5-105">It supports XPath selections and provides editing capabilities.</span></span> <span data-ttu-id="93cc5-106"><xref:System.Xml.XmlDocument>类扩展 `XmlNode` 并表示 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="93cc5-106">The <xref:System.Xml.XmlDocument> class extends `XmlNode` and represents an XML document.</span></span> <span data-ttu-id="93cc5-107">可以使用 `XmlDocument` 加载和保存 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="93cc5-107">You can use `XmlDocument` to load and save XML data.</span></span> <span data-ttu-id="93cc5-108">它还包括用于节点创建的方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-108">It also includes methods for node creation.</span></span> <span data-ttu-id="93cc5-109">有关详细信息，请参阅 [XML 文档对象模型 (DOM) ](/dotnet/standard/data/xml/xml-document-object-model-dom) 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-109">See [XML Document Object Model (DOM)](/dotnet/standard/data/xml/xml-document-object-model-dom) for more information.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93cc5-110">由于使用类而引发的异常 <xref:System.Xml.XmlNode> ，例如 <xref:System.Xml.XmlException> 类可能包含不应在不受信任的方案中公开的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="93cc5-110">Exceptions raised as a result of using the <xref:System.Xml.XmlNode> class, such as the <xref:System.Xml.XmlException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="93cc5-111">应正确处理异常，以便不受信任的情况下不公开此敏感信息。</span><span class="sxs-lookup"><span data-stu-id="93cc5-111">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
    <related type="Article" href="/dotnet/standard/data/xml/create-new-nodes-in-the-dom"><span data-ttu-id="93cc5-112">[ &lt; topic://cpconCreateNewNodesInDOM &gt; ]</span><span class="sxs-lookup"><span data-stu-id="93cc5-112">[&lt;topic://cpconCreateNewNodesInDOM&gt;]</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.AppendChild newChild" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? AppendChild (System.Xml.XmlNode newChild);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="93cc5-113">要添加的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-113">The node to add.</span></span> <span data-ttu-id="93cc5-114">要添加的节点的全部内容会移动到指定位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-114">All the contents of the node to be added are moved into the specified location.</span></span></param>
        <summary><span data-ttu-id="93cc5-115">将指定的节点添加到该节点的子节点列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="93cc5-115">Adds the specified node to the end of the list of child nodes, of this node.</span></span></summary>
        <returns><span data-ttu-id="93cc5-116">添加的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-116">The node added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-117">如果已 `newChild` 在树中，则会将其从其原始位置删除并添加到其目标位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-117">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="93cc5-118">有关插入节点的详细信息，请参阅 [将节点插入 XML 文档](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-118">For more information about inserting nodes, see [Inserting Nodes into an XML Document](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document).</span></span>  
  
 <span data-ttu-id="93cc5-119">如果要插入的节点是从其他文档创建的，则可以使用 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="93cc5-119">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="93cc5-120">然后，可以将导入的节点插入到当前文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-120">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-121">下面的示例将一个新节点添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-121">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="93cc5-122">**输出：**</span><span class="sxs-lookup"><span data-stu-id="93cc5-122">**Output:**</span></span>  
  
```  
Display the modified XML...  
<?xml version="1.0" encoding="IBM437"?>  
<book genre="novel" ISBN="1-861001-57-5">  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cc5-123">此节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-123">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
<span data-ttu-id="93cc5-124"><paramref name="newChild" /> 是此节点的上级节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-124">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93cc5-125"><paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-125">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
<span data-ttu-id="93cc5-126">该节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-126">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="93cc5-127">当在派生类中重写时 <see langword="AppendChild" /> ，为了正确引发事件，必须调用 <see langword="AppendChild" /> 基类的方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-127">When overriding <see langword="AppendChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="AppendChild" /> method of the base class.</span></span></para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <related type="Article" href="/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document"><span data-ttu-id="93cc5-128">将节点插入 XML 文档中</span><span class="sxs-lookup"><span data-stu-id="93cc5-128">Inserting Nodes into an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection Attributes { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Xml.XmlAttributeCollection" Usage="System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection? Attributes { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-129">获取一个 <see cref="T:System.Xml.XmlAttributeCollection" />，它包含该节点的特性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-129">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the attributes of this node.</span></span></summary>
        <value><span data-ttu-id="93cc5-130">一个 <see langword="XmlAttributeCollection" />，它包含该节点的特性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-130">An <see langword="XmlAttributeCollection" /> containing the attributes of the node.</span></span>  
  
<span data-ttu-id="93cc5-131">如果节点为 XmlNodeType.Element 类型，则返回该节点的属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-131">If the node is of type XmlNodeType.Element, the attributes of the node are returned.</span></span> <span data-ttu-id="93cc5-132">对于其他类型的单元格，此属性返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-132">Otherwise, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93cc5-133">下面的示例将新特性添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-133">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public virtual string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNode.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-134">获取当前节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="93cc5-134">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="93cc5-135">从其加载节点的位置；如果节点没有基 URI，则为 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="93cc5-135">The location from which the node was loaded or String.Empty if the node has no base URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-136">联网的 XML 文档包含使用各种 W3C 标准包含机制聚合的数据块，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-136">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="93cc5-137">`BaseURI`会告诉你这些节点的来源。</span><span class="sxs-lookup"><span data-stu-id="93cc5-137">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="93cc5-138">此属性的值根据节点类型的不同而异。</span><span class="sxs-lookup"><span data-stu-id="93cc5-138">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="93cc5-139">例如，文档节点返回对象的位置 <xref:System.Xml.XmlDocument> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-139">For example, Document nodes return the location of the <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="93cc5-140">作为外部 EntityReference 节点的子节点的节点返回实体本身的位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-140">Nodes which are child nodes of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="93cc5-141">例如，请看下面的 XML 文档：</span><span class="sxs-lookup"><span data-stu-id="93cc5-141">For example, consider the following XML document:</span></span>  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="93cc5-142">其中，外部实体 `a/b.xml` 包含 XML 文本： `<test>123</test>` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-142">where the external entity `a/b.xml` contains the XML text: `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="93cc5-143">如果从加载文档，则 `http://server/mydata.xml` `BaseURI` 返回以下内容：</span><span class="sxs-lookup"><span data-stu-id="93cc5-143">If the document is loaded from `http://server/mydata.xml`, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="93cc5-144">NodeType</span><span class="sxs-lookup"><span data-stu-id="93cc5-144">NodeType</span></span>|<span data-ttu-id="93cc5-145">名称</span><span class="sxs-lookup"><span data-stu-id="93cc5-145">Name</span></span>|<span data-ttu-id="93cc5-146">BaseURI</span><span class="sxs-lookup"><span data-stu-id="93cc5-146">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="93cc5-147">Attribute</span><span class="sxs-lookup"><span data-stu-id="93cc5-147">Attribute</span></span>|<span data-ttu-id="93cc5-148">num</span><span class="sxs-lookup"><span data-stu-id="93cc5-148">num</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="93cc5-149">文档</span><span class="sxs-lookup"><span data-stu-id="93cc5-149">Document</span></span>|<span data-ttu-id="93cc5-150">#document</span><span class="sxs-lookup"><span data-stu-id="93cc5-150">#document</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="93cc5-151">DocumentType</span><span class="sxs-lookup"><span data-stu-id="93cc5-151">DocumentType</span></span>|<span data-ttu-id="93cc5-152">item</span><span class="sxs-lookup"><span data-stu-id="93cc5-152">item</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="93cc5-153">实体</span><span class="sxs-lookup"><span data-stu-id="93cc5-153">Entity</span></span>|<span data-ttu-id="93cc5-154">xyz</span><span class="sxs-lookup"><span data-stu-id="93cc5-154">xyz</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="93cc5-155">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-155">Element</span></span>|<span data-ttu-id="93cc5-156">item</span><span class="sxs-lookup"><span data-stu-id="93cc5-156">item</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="93cc5-157">EntityReference</span><span class="sxs-lookup"><span data-stu-id="93cc5-157">EntityReference</span></span>|<span data-ttu-id="93cc5-158">xyz</span><span class="sxs-lookup"><span data-stu-id="93cc5-158">xyz</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="93cc5-159">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-159">Element</span></span>|<span data-ttu-id="93cc5-160">测试</span><span class="sxs-lookup"><span data-stu-id="93cc5-160">test</span></span>|`http://server/a/b.xml`|  
|<span data-ttu-id="93cc5-161">文本</span><span class="sxs-lookup"><span data-stu-id="93cc5-161">Text</span></span>|<span data-ttu-id="93cc5-162">#text</span><span class="sxs-lookup"><span data-stu-id="93cc5-162">#text</span></span>|`http://server/a/b.xml`|  
  
 <span data-ttu-id="93cc5-163">`BaseURI` 查找实体引用边界，因此，如果扩展实体，则不会保留此信息，并且此属性将返回 `XmlDocument` 对象在所有情况下的位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-163">`BaseURI` looks for entity reference boundaries, so if entities are expanded this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="93cc5-164">作为第二个示例，提供了以下 XML 文档：</span><span class="sxs-lookup"><span data-stu-id="93cc5-164">As a second example, given the following XML document:</span></span>  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="93cc5-165">其中 DTD 文件包含以下内容：</span><span class="sxs-lookup"><span data-stu-id="93cc5-165">where the DTD file contains the following:</span></span>  
  
```  
<!ENTITY xyz <E1>My Data</E1>  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="93cc5-166">如果从加载 XML 文档 `http://localhost/mydata.xml` ， `BaseURI` 则将为每个节点返回以下内容：</span><span class="sxs-lookup"><span data-stu-id="93cc5-166">If the XML document is loaded from `http://localhost/mydata.xml`, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="93cc5-167">NodeType</span><span class="sxs-lookup"><span data-stu-id="93cc5-167">NodeType</span></span>|<span data-ttu-id="93cc5-168">名称</span><span class="sxs-lookup"><span data-stu-id="93cc5-168">Name</span></span>|<span data-ttu-id="93cc5-169">BaseURI</span><span class="sxs-lookup"><span data-stu-id="93cc5-169">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="93cc5-170">文档</span><span class="sxs-lookup"><span data-stu-id="93cc5-170">Document</span></span>|<span data-ttu-id="93cc5-171">#document</span><span class="sxs-lookup"><span data-stu-id="93cc5-171">#document</span></span>|`http://localhost/mydata.xml`|  
|<span data-ttu-id="93cc5-172">DocumentType</span><span class="sxs-lookup"><span data-stu-id="93cc5-172">DocumentType</span></span>|<span data-ttu-id="93cc5-173">Mydata</span><span class="sxs-lookup"><span data-stu-id="93cc5-173">Mydata</span></span>|`http://localhost/mydata.xml`<br /><br /> <span data-ttu-id="93cc5-174"><xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType>或 <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> 属性可用于标识从中加载 DTD 文件的位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-174">The <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> properties can be used to identify where the DTD file was loaded from.</span></span>|  
|<span data-ttu-id="93cc5-175">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-175">Element</span></span>|<span data-ttu-id="93cc5-176">baa</span><span class="sxs-lookup"><span data-stu-id="93cc5-176">baa</span></span>|`http://localhost/mydata.xml`|  
|<span data-ttu-id="93cc5-177">实体</span><span class="sxs-lookup"><span data-stu-id="93cc5-177">Entity</span></span>|<span data-ttu-id="93cc5-178">xyz</span><span class="sxs-lookup"><span data-stu-id="93cc5-178">xyz</span></span>|`http://localhost/doctype.dtd`|  
|<span data-ttu-id="93cc5-179">EntityReference</span><span class="sxs-lookup"><span data-stu-id="93cc5-179">EntityReference</span></span>|<span data-ttu-id="93cc5-180">xyz</span><span class="sxs-lookup"><span data-stu-id="93cc5-180">xyz</span></span>|`http://localhost/mydata.xml`|  
|<span data-ttu-id="93cc5-181">Attribute</span><span class="sxs-lookup"><span data-stu-id="93cc5-181">Attribute</span></span>|<span data-ttu-id="93cc5-182">woof</span><span class="sxs-lookup"><span data-stu-id="93cc5-182">woof</span></span>|`http://localhost/mydata.xml`|  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-183">默认属性的基本 URI 与它们所属的元素的基 URI 相同。</span><span class="sxs-lookup"><span data-stu-id="93cc5-183">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="93cc5-184">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-184">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Xml.XmlNodeList" Usage="System.Xml.XmlNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-185">获取节点的所有子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-185">Gets all the child nodes of the node.</span></span></summary>
        <value><span data-ttu-id="93cc5-186">一个包含节点的所有子节点的对象。</span><span class="sxs-lookup"><span data-stu-id="93cc5-186">An object that contains all the child nodes of the node.</span></span>  
  
<span data-ttu-id="93cc5-187">如果没有子节点，该属性返回空 <see cref="T:System.Xml.XmlNodeList" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-187">If there are no child nodes, this property returns an empty <see cref="T:System.Xml.XmlNodeList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-188">有关子节点的信息，请参阅 [W3C DOM (Core) Level 1 规范](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="93cc5-188">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-189">下面的示例显示 root 元素的所有子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-189">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XmlNode&#xA;override this.Clone : unit -&gt; System.Xml.XmlNode" Usage="xmlNode.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cc5-190">创建此节点的副本。</span><span class="sxs-lookup"><span data-stu-id="93cc5-190">Creates a duplicate of this node.</span></span></summary>
        <returns><span data-ttu-id="93cc5-191">克隆的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-191">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-192">克隆将 <xref:System.Xml.XmlElement> 复制所有属性及其值，包括由 XML 处理器生成的用于表示默认属性的属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-192">Cloning an <xref:System.Xml.XmlElement> copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes.</span></span> <span data-ttu-id="93cc5-193">此方法以递归方式克隆节点及其下的子树。</span><span class="sxs-lookup"><span data-stu-id="93cc5-193">This method recursively clones the node and the subtree underneath it.</span></span>  
  
 <span data-ttu-id="93cc5-194">`Clone` 等效于调用 `CloneNode(true)` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-194">`Clone` is equivalent to calling `CloneNode(true)`.</span></span>  
  
 <span data-ttu-id="93cc5-195">下表描述了每个的特定行为 <xref:System.Xml.XmlNodeType> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-195">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="93cc5-196">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="93cc5-196">XmlNodeType</span></span>|<span data-ttu-id="93cc5-197">克隆</span><span class="sxs-lookup"><span data-stu-id="93cc5-197">Clone</span></span>|  
|-----------------|-----------|  
|<span data-ttu-id="93cc5-198">Attribute</span><span class="sxs-lookup"><span data-stu-id="93cc5-198">Attribute</span></span>|<span data-ttu-id="93cc5-199">克隆特性节点，包括子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-199">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="93cc5-200">CData</span><span class="sxs-lookup"><span data-stu-id="93cc5-200">CData</span></span>|<span data-ttu-id="93cc5-201">克隆 CData 节点，包括其数据内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-201">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="93cc5-202">评论</span><span class="sxs-lookup"><span data-stu-id="93cc5-202">Comment</span></span>|<span data-ttu-id="93cc5-203">克隆注释节点，包括其文本内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-203">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="93cc5-204">文档</span><span class="sxs-lookup"><span data-stu-id="93cc5-204">Document</span></span>|<span data-ttu-id="93cc5-205">克隆文档节点，包括任何子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-205">Clones the document node, including any child nodes.</span></span>|  
|<span data-ttu-id="93cc5-206">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="93cc5-206">DocumentFragment</span></span>|<span data-ttu-id="93cc5-207">克隆文档片段节点，包括任何子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-207">Clones the document fragment node, including any child nodes.</span></span>|  
|<span data-ttu-id="93cc5-208">DocumentType</span><span class="sxs-lookup"><span data-stu-id="93cc5-208">DocumentType</span></span>|<span data-ttu-id="93cc5-209">克隆文档类型节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-209">Clones the document type node.</span></span>|  
|<span data-ttu-id="93cc5-210">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-210">Element</span></span>|<span data-ttu-id="93cc5-211">克隆元素节点、其属性和任何子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-211">Clones the element node, its attributes, and any child nodes.</span></span>|  
|<span data-ttu-id="93cc5-212">实体</span><span class="sxs-lookup"><span data-stu-id="93cc5-212">Entity</span></span>|<span data-ttu-id="93cc5-213">无法克隆 Entity 节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-213">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="93cc5-214">EntityReference</span><span class="sxs-lookup"><span data-stu-id="93cc5-214">EntityReference</span></span>|<span data-ttu-id="93cc5-215">克隆实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-215">Clones the entity reference node.</span></span> <span data-ttu-id="93cc5-216">不包括替换文本。</span><span class="sxs-lookup"><span data-stu-id="93cc5-216">The replacement text is not included.</span></span>|  
|<span data-ttu-id="93cc5-217">表示法</span><span class="sxs-lookup"><span data-stu-id="93cc5-217">Notation</span></span>|<span data-ttu-id="93cc5-218">表示法节点无法克隆。</span><span class="sxs-lookup"><span data-stu-id="93cc5-218">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="93cc5-219">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="93cc5-219">ProcessingInstruction</span></span>|<span data-ttu-id="93cc5-220">克隆处理指令节点，包括其目标和数据。</span><span class="sxs-lookup"><span data-stu-id="93cc5-220">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="93cc5-221">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-221">SignificantWhitespace</span></span>|<span data-ttu-id="93cc5-222">克隆有效的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-222">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="93cc5-223">文本</span><span class="sxs-lookup"><span data-stu-id="93cc5-223">Text</span></span>|<span data-ttu-id="93cc5-224">克隆文本节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-224">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="93cc5-225">空格</span><span class="sxs-lookup"><span data-stu-id="93cc5-225">Whitespace</span></span>|<span data-ttu-id="93cc5-226">克隆空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-226">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="93cc5-227">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="93cc5-227">XmlDeclaration</span></span>|<span data-ttu-id="93cc5-228">克隆 XmlDeclaration 节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-228">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="93cc5-229">所有其他节点类型。</span><span class="sxs-lookup"><span data-stu-id="93cc5-229">All other node types.</span></span>|<span data-ttu-id="93cc5-230">无法克隆这些节点类型。</span><span class="sxs-lookup"><span data-stu-id="93cc5-230">These node types cannot be cloned.</span></span>|  
  
 <span data-ttu-id="93cc5-231">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-231">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-232">下面的示例克隆 XML 文档的根节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-232">The following example clones the root node of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="abstract member CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlNode.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep"><span data-ttu-id="93cc5-233">若要递归地克隆指定节点下的子树，则为 <see langword="true" />；若仅克隆节点本身，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-233"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="93cc5-234">当在派生类中被重写时，创建该节点的副本。</span><span class="sxs-lookup"><span data-stu-id="93cc5-234">Creates a duplicate of the node, when overridden in a derived class.</span></span></summary>
        <returns><span data-ttu-id="93cc5-235">克隆的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-235">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-236">此方法用作节点的复制构造函数。</span><span class="sxs-lookup"><span data-stu-id="93cc5-236">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="93cc5-237">重复节点没有父 (<xref:System.Xml.XmlNode.ParentNode%2A> 返回 `null`) 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-237">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="93cc5-238">下表描述了每个的特定行为 <xref:System.Xml.XmlNodeType> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-238">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="93cc5-239">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="93cc5-239">XmlNodeType</span></span>|<span data-ttu-id="93cc5-240">用 clonenode (true) </span><span class="sxs-lookup"><span data-stu-id="93cc5-240">CloneNode(true)</span></span>|<span data-ttu-id="93cc5-241">用 clonenode (false) </span><span class="sxs-lookup"><span data-stu-id="93cc5-241">CloneNode(false)</span></span>|  
|-----------------|-----------------------|------------------------|  
|<span data-ttu-id="93cc5-242">Attribute</span><span class="sxs-lookup"><span data-stu-id="93cc5-242">Attribute</span></span>|<span data-ttu-id="93cc5-243">克隆特性节点，包括子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-243">Clones the attribute node, including child nodes.</span></span>|<span data-ttu-id="93cc5-244">克隆特性节点，包括子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-244">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="93cc5-245">CData</span><span class="sxs-lookup"><span data-stu-id="93cc5-245">CData</span></span>|<span data-ttu-id="93cc5-246">克隆 CData 节点，包括其数据内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-246">Clones the CData node, including its data content.</span></span>|<span data-ttu-id="93cc5-247">克隆 CData 节点，包括其数据内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-247">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="93cc5-248">评论</span><span class="sxs-lookup"><span data-stu-id="93cc5-248">Comment</span></span>|<span data-ttu-id="93cc5-249">克隆注释节点，包括其文本内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-249">Clones the comment node, including its text content.</span></span>|<span data-ttu-id="93cc5-250">克隆注释节点，包括其文本内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-250">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="93cc5-251">文档</span><span class="sxs-lookup"><span data-stu-id="93cc5-251">Document</span></span>|<span data-ttu-id="93cc5-252">克隆文档节点，包括任何子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-252">Clones the document node, including any child nodes.</span></span>|<span data-ttu-id="93cc5-253">克隆文档节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-253">Clones the document node.</span></span>|  
|<span data-ttu-id="93cc5-254">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="93cc5-254">DocumentFragment</span></span>|<span data-ttu-id="93cc5-255">克隆文档片段节点，包括任何子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-255">Clones the document fragment node, including any child nodes.</span></span>|<span data-ttu-id="93cc5-256">克隆文档片段节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-256">Clones the document fragment node.</span></span>|  
|<span data-ttu-id="93cc5-257">DocumentType</span><span class="sxs-lookup"><span data-stu-id="93cc5-257">DocumentType</span></span>|<span data-ttu-id="93cc5-258">克隆文档类型节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-258">Clones the document type node.</span></span>|<span data-ttu-id="93cc5-259">克隆文档类型节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-259">Clones the document type node.</span></span>|  
|<span data-ttu-id="93cc5-260">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-260">Element</span></span>|<span data-ttu-id="93cc5-261">克隆元素节点、其属性和任何子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-261">Clones the element node, its attributes, and any child nodes.</span></span>|<span data-ttu-id="93cc5-262">克隆元素节点及其属性，包括任何默认属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-262">Clones the element node and its attributes, including any default attributes.</span></span>|  
|<span data-ttu-id="93cc5-263">实体</span><span class="sxs-lookup"><span data-stu-id="93cc5-263">Entity</span></span>|<span data-ttu-id="93cc5-264">无法克隆 Entity 节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-264">Entity nodes cannot be cloned.</span></span>|<span data-ttu-id="93cc5-265">无法克隆 Entity 节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-265">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="93cc5-266">EntityReference</span><span class="sxs-lookup"><span data-stu-id="93cc5-266">EntityReference</span></span>|<span data-ttu-id="93cc5-267">克隆实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-267">Clones the entity reference node.</span></span> <span data-ttu-id="93cc5-268">不包括替换文本。</span><span class="sxs-lookup"><span data-stu-id="93cc5-268">The replacement text is not included.</span></span>|<span data-ttu-id="93cc5-269">克隆实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-269">Clones the entity reference node.</span></span> <span data-ttu-id="93cc5-270">不包括替换文本。</span><span class="sxs-lookup"><span data-stu-id="93cc5-270">The replacement text is not included.</span></span>|  
|<span data-ttu-id="93cc5-271">表示法</span><span class="sxs-lookup"><span data-stu-id="93cc5-271">Notation</span></span>|<span data-ttu-id="93cc5-272">表示法节点无法克隆。</span><span class="sxs-lookup"><span data-stu-id="93cc5-272">Notation nodes cannot be cloned.</span></span>|<span data-ttu-id="93cc5-273">表示法节点无法克隆。</span><span class="sxs-lookup"><span data-stu-id="93cc5-273">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="93cc5-274">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="93cc5-274">ProcessingInstruction</span></span>|<span data-ttu-id="93cc5-275">克隆处理指令节点，包括其目标和数据。</span><span class="sxs-lookup"><span data-stu-id="93cc5-275">Clones the processing instruction node, including its target and data.</span></span>|<span data-ttu-id="93cc5-276">克隆处理指令节点，包括其目标和数据。</span><span class="sxs-lookup"><span data-stu-id="93cc5-276">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="93cc5-277">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-277">SignificantWhitespace</span></span>|<span data-ttu-id="93cc5-278">克隆有效的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-278">Clones the significant white space node, including its data value.</span></span>|<span data-ttu-id="93cc5-279">克隆有效的空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-279">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="93cc5-280">文本</span><span class="sxs-lookup"><span data-stu-id="93cc5-280">Text</span></span>|<span data-ttu-id="93cc5-281">克隆文本节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-281">Clones the text node, including its data value.</span></span>|<span data-ttu-id="93cc5-282">克隆文本节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-282">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="93cc5-283">空格</span><span class="sxs-lookup"><span data-stu-id="93cc5-283">Whitespace</span></span>|<span data-ttu-id="93cc5-284">克隆空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-284">Clones the white space node, including its data value.</span></span>|<span data-ttu-id="93cc5-285">克隆空白节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-285">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="93cc5-286">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="93cc5-286">XmlDeclaration</span></span>|<span data-ttu-id="93cc5-287">克隆 XmlDeclaration 节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-287">Clones the XmlDeclaration node, including its data value.</span></span>|<span data-ttu-id="93cc5-288">克隆 XmlDeclaration 节点，包括其数据值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-288">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="93cc5-289">所有其他节点类型。</span><span class="sxs-lookup"><span data-stu-id="93cc5-289">All other node types.</span></span>|<span data-ttu-id="93cc5-290">无法克隆这些节点类型。</span><span class="sxs-lookup"><span data-stu-id="93cc5-290">These node types cannot be cloned.</span></span>|<span data-ttu-id="93cc5-291">无法克隆这些节点类型。</span><span class="sxs-lookup"><span data-stu-id="93cc5-291">These node types cannot be cloned.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-292">下面的示例显示了深层和浅层克隆之间的差异。</span><span class="sxs-lookup"><span data-stu-id="93cc5-292">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cc5-293">在不能被克隆的节点类型上调用该方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-293">Calling this method on a node type that cannot be cloned.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator? CreateNavigator ();" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlNode.CreateNavigator " />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator CreateNavigator ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNavigator () As XPathNavigator" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cc5-294">创建 <see cref="T:System.Xml.XPath.XPathNavigator" /> 以浏览此对象。</span><span class="sxs-lookup"><span data-stu-id="93cc5-294">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this object.</span></span></summary>
        <returns><span data-ttu-id="93cc5-295">用于导航节点的 <see langword="XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="93cc5-295">An <see langword="XPathNavigator" /> object used to navigate the node.</span></span> <span data-ttu-id="93cc5-296"><see langword="XPathNavigator" /> 定位在从其调用方法的节点上。</span><span class="sxs-lookup"><span data-stu-id="93cc5-296">The <see langword="XPathNavigator" /> is positioned on the node from which the method was called.</span></span> <span data-ttu-id="93cc5-297">它不定位在文档的根上。</span><span class="sxs-lookup"><span data-stu-id="93cc5-297">It is not positioned on the root of the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-298">`XPathNavigator`提供对数据的只读随机访问。</span><span class="sxs-lookup"><span data-stu-id="93cc5-298">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="93cc5-299">由于它已针对 XSLT 转换进行了优化，因此它可在用作方法的输入机制时提供性能优势 <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-299">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="93cc5-300">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-300">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-301">下面的示例在执行 XSLT 转换之前加载并编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="93cc5-301">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode FirstChild { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ FirstChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? FirstChild { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-302">获取节点的第一个子级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-302">Gets the first child of the node.</span></span></summary>
        <value><span data-ttu-id="93cc5-303">节点的第一个子级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-303">The first child of the node.</span></span> <span data-ttu-id="93cc5-304">如果没有这样的节点，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-304">If there is no such node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-305">有关子节点的信息，请参阅 [W3C DOM (Core) Level 1 规范](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="93cc5-305">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-306">下面的示例显示 title 元素。</span><span class="sxs-lookup"><span data-stu-id="93cc5-306">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNode.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cc5-307">获取循环访问当前节点中子节点的枚举数。</span><span class="sxs-lookup"><span data-stu-id="93cc5-307">Gets an enumerator that iterates through the child nodes in the current node.</span></span></summary>
        <returns><span data-ttu-id="93cc5-308">一个 <see cref="T:System.Collections.IEnumerator" /> 对象，可用于循环访问当前节点中的子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-308">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the child nodes in the current node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-309">为中的节点上的 "for each" 样式迭代提供支持 `XmlNode` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-309">Provides support for the "for each" style iteration over the nodes in the `XmlNode`.</span></span>  
  
 <span data-ttu-id="93cc5-310">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-310">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-311">下面的示例显示 XML 文档中的所有书籍。</span><span class="sxs-lookup"><span data-stu-id="93cc5-311">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/VB/source.vb#1)]  
  
 <span data-ttu-id="93cc5-312">该示例使用文件 `books.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="93cc5-312">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceOfPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetNamespaceOfPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceOfPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaceOfPrefix (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespaceOfPrefix(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceOfPrefix : string -&gt; string&#xA;override this.GetNamespaceOfPrefix : string -&gt; string" Usage="xmlNode.GetNamespaceOfPrefix prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="93cc5-313">你想查找的命名空间 URI 的前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-313">The prefix whose namespace URI you want to find.</span></span></param>
        <summary><span data-ttu-id="93cc5-314">查找当前节点范围内离给定的前缀最近的 **xmlns** 声明，并返回声明中的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="93cc5-314">Looks up the closest **xmlns** declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.</span></span></summary>
        <returns><span data-ttu-id="93cc5-315">指定前缀的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="93cc5-315">The namespace URI of the specified prefix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-316">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-316">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-317">下面的示例将新特性添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-317">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefixOfNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetPrefixOfNamespace (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefixOfNamespace(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrefixOfNamespace (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrefixOfNamespace(System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetPrefixOfNamespace : string -&gt; string&#xA;override this.GetPrefixOfNamespace : string -&gt; string" Usage="xmlNode.GetPrefixOfNamespace namespaceURI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI"><span data-ttu-id="93cc5-318">要查找其前缀的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="93cc5-318">The namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="93cc5-319">查找当前节点范围内离给定的命名空间 URI 最近的 **xmlns** 声明，并返回声明中定义的前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-319">Looks up the closest **xmlns** declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.</span></span></summary>
        <returns><span data-ttu-id="93cc5-320">指定的命名空间 URI 的前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-320">The prefix for the specified namespace URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-321">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-321">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-322">下面的示例将一个新元素添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-322">The following example adds a new element to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildNodes : bool" Usage="System.Xml.XmlNode.HasChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-323">获取一个值，该值指示此节点是否有任何子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-323">Gets a value indicating whether this node has any child nodes.</span></span></summary>
        <value><span data-ttu-id="93cc5-324">如果该节点具有子节点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-324"><see langword="true" /> if the node has child nodes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-325">有关子节点的信息，请参阅 [W3C DOM (Core) Level 1 规范](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="93cc5-325">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-326">下面的示例显示 root 元素的所有子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-326">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlNode.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-327">获取或设置节点及其所有子节点的串连值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-327">Gets or sets the concatenated values of the node and all its child nodes.</span></span></summary>
        <value><span data-ttu-id="93cc5-328">节点及其所有子节点的串连值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-328">The concatenated values of the node and all its child nodes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-329">设置此属性会将所有子节点替换为给定字符串的已分析内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-329">Setting this property replaces all the child nodes with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="93cc5-330">对于叶节点， `InnerText` 返回与属性相同的内容 <xref:System.Xml.XmlNode.Value%2A> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-330">For leaf nodes, `InnerText` returns the same content as the <xref:System.Xml.XmlNode.Value%2A> property.</span></span>  
  
 <span data-ttu-id="93cc5-331">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-331">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-332">下面的示例对和属性进行了比较 `InnerText` <xref:System.Xml.XmlNode.InnerXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-332">The following example compares the `InnerText` and <xref:System.Xml.XmlNode.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 <span data-ttu-id="93cc5-333">**输出：**</span><span class="sxs-lookup"><span data-stu-id="93cc5-333">**Output:**</span></span>  
  
```  
Display the InnerText of the element...  
some textmore text  
Display the InnerXml of the element...  
some text<child />more text  
<elem>Text containing &lt;markup/&gt; will have char(&lt;) and char(&gt;) escape  
d.</elem>  
<elem>Text containing <markup />.</elem>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlNode.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-334">获取或设置仅表示该节点的子节点的标记。</span><span class="sxs-lookup"><span data-stu-id="93cc5-334">Gets or sets the markup representing only the child nodes of this node.</span></span></summary>
        <value><span data-ttu-id="93cc5-335">该节点的子节点的标记。</span><span class="sxs-lookup"><span data-stu-id="93cc5-335">The markup of the child nodes of this node.</span></span>  
  
 <block subset="none" type="note"><para><span data-ttu-id="93cc5-336"><see langword="InnerXml" /> 不返回默认特性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-336"><see langword="InnerXml" /> does not return default attributes.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-337">如果尝试从不具有子节点的节点（例如文本节点）设置此属性，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="93cc5-337">Attempting to set this property from a node that cannot have child nodes, for example a Text node, throws an exception.</span></span> <span data-ttu-id="93cc5-338">否则，设置会将 `InnerXml` 节点的子节点替换为给定字符串的已分析内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-338">Otherwise, setting `InnerXml` replaces the child nodes, of the node, with the parsed contents of the given string.</span></span> <span data-ttu-id="93cc5-339">分析在当前命名空间上下文中完成。</span><span class="sxs-lookup"><span data-stu-id="93cc5-339">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="93cc5-340">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-340">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-341">`InnerXml` 不是修改 DOM 的有效方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-341">`InnerXml` is not an efficient way to modify the DOM.</span></span> <span data-ttu-id="93cc5-342">替换复杂节点时可能存在性能问题。</span><span class="sxs-lookup"><span data-stu-id="93cc5-342">There may be performance issues when replacing complex nodes.</span></span> <span data-ttu-id="93cc5-343">构造节点并使用 `InsertBefore` 、 `InsertAfter` 、和等方法 `AppendChild` `RemoveChild` 修改 Xml 文档更为有效。</span><span class="sxs-lookup"><span data-stu-id="93cc5-343">It is more efficient to construct nodes and use methods such as `InsertBefore`, `InsertAfter`, `AppendChild`, and `RemoveChild` to modify the Xml document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-344">下面的示例对和属性进行了比较 <xref:System.Xml.XmlNode.InnerText%2A> `InnerXml` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-344">The following example compares the <xref:System.Xml.XmlNode.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cc5-345">在不能具有子节点的节点上设置该属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-345">Setting this property on a node that cannot have child nodes.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="93cc5-346">设置此属性时指定的 XML 格式不正确。</span><span class="sxs-lookup"><span data-stu-id="93cc5-346">The XML specified when setting this property is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertAfter (newChild, refChild)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode? refChild);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="93cc5-347">要插入的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-347">The node to insert.</span></span></param>
        <param name="refChild"><span data-ttu-id="93cc5-348">引用节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-348">The reference node.</span></span> <span data-ttu-id="93cc5-349"><paramref name="newChild" /> 放置在 <paramref name="refChild" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="93cc5-349"><paramref name="newChild" /> is placed after <paramref name="refChild" />.</span></span></param>
        <summary><span data-ttu-id="93cc5-350">将指定的节点紧接着插入指定的引用节点之后。</span><span class="sxs-lookup"><span data-stu-id="93cc5-350">Inserts the specified node immediately after the specified reference node.</span></span></summary>
        <returns><span data-ttu-id="93cc5-351">插入的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-351">The node being inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-352">如果 `refChild` 为 `null` ，则 `newChild` 在子节点列表的开头处插入。</span><span class="sxs-lookup"><span data-stu-id="93cc5-352">If `refChild` is `null`, insert `newChild` at the beginning of the list of child nodes.</span></span> <span data-ttu-id="93cc5-353">的所有内容 `newChild` 都以相同的顺序插入 `refChild` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-353">All the contents of the `newChild` are inserted, in the same order, after `refChild`.</span></span> <span data-ttu-id="93cc5-354">如果已 `newChild` 在树中，则会将其从其原始位置删除并添加到其目标位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-354">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="93cc5-355">有关插入节点的详细信息，请参阅 [将节点插入 XML 文档](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-355">For more information about inserting nodes, see [Inserting Nodes into an XML Document](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document).</span></span>  
  
 <span data-ttu-id="93cc5-356">如果要插入的节点是从其他文档创建的，则可以使用 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="93cc5-356">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="93cc5-357">然后，可以将导入的节点插入到当前文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-357">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="93cc5-358">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-358">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-359">下面的示例将一个新节点添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-359">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cc5-360">此节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-360">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
<span data-ttu-id="93cc5-361"><paramref name="newChild" /> 是此节点的上级节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-361">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93cc5-362"><paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-362">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
<span data-ttu-id="93cc5-363"><paramref name="refChild" /> 不是此节点的子级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-363">The <paramref name="refChild" /> is not a child of this node.</span></span>  
  
<span data-ttu-id="93cc5-364">该节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-364">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="93cc5-365">当在派生类中重写时 <see langword="InsertAfter" /> ，为了正确引发事件，必须调用 <see langword="InsertAfter" /> 基类的方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-365">When overriding <see langword="InsertAfter" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertAfter" /> method of the base class.</span></span></para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <related type="Article" href="/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document"><span data-ttu-id="93cc5-366">将节点插入 XML 文档中</span><span class="sxs-lookup"><span data-stu-id="93cc5-366">Inserting Nodes into an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertBefore (newChild, refChild)" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode? refChild);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="93cc5-367">要插入的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-367">The node to insert.</span></span></param>
        <param name="refChild"><span data-ttu-id="93cc5-368">引用节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-368">The reference node.</span></span> <span data-ttu-id="93cc5-369"><paramref name="newChild" /> 放置在该节点之前。</span><span class="sxs-lookup"><span data-stu-id="93cc5-369"><paramref name="newChild" /> is placed before this node.</span></span></param>
        <summary><span data-ttu-id="93cc5-370">将指定的节点紧接着插入指定的引用节点之前。</span><span class="sxs-lookup"><span data-stu-id="93cc5-370">Inserts the specified node immediately before the specified reference node.</span></span></summary>
        <returns><span data-ttu-id="93cc5-371">插入的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-371">The node being inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-372">如果 `refChild` 为 `null` ，则 `newChild` 在子节点列表的末尾插入。</span><span class="sxs-lookup"><span data-stu-id="93cc5-372">If `refChild` is `null`, insert `newChild` at the end of the list of child nodes.</span></span> <span data-ttu-id="93cc5-373">的所有内容 `newChild` 都以相同的顺序插入 `refChild` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-373">All the contents of the `newChild` are inserted, in the same order, before `refChild`.</span></span> <span data-ttu-id="93cc5-374">如果已 `newChild` 在树中，则会将其从其原始位置删除并添加到其目标位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-374">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="93cc5-375">有关插入节点的详细信息，请参阅 [将节点插入 XML 文档](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-375">For more information about inserting nodes, see [Inserting Nodes into an XML Document](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document).</span></span>  
  
 <span data-ttu-id="93cc5-376">如果要插入的节点是从其他文档创建的，则可以使用 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="93cc5-376">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="93cc5-377">然后，可以将导入的节点插入到当前文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-377">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-378">下面的示例将一个新节点添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-378">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cc5-379">当前节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-379">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
<span data-ttu-id="93cc5-380"><paramref name="newChild" /> 是此节点的上级节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-380">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93cc5-381"><paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-381">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
<span data-ttu-id="93cc5-382"><paramref name="refChild" /> 不是此节点的子级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-382">The <paramref name="refChild" /> is not a child of this node.</span></span>  
  
<span data-ttu-id="93cc5-383">该节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-383">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="93cc5-384">当在派生类中重写时 <see langword="InsertBefore" /> ，为了正确引发事件，必须调用 <see langword="InsertBefore" /> 基类的方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-384">When overriding <see langword="InsertBefore" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertBefore" /> method of the base class.</span></span></para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <related type="Article" href="/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document"><span data-ttu-id="93cc5-385">将节点插入 XML 文档中</span><span class="sxs-lookup"><span data-stu-id="93cc5-385">Inserting Nodes into an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlNode.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-386">获取指示节点是否只读的值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-386">Gets a value indicating whether the node is read-only.</span></span></summary>
        <value><span data-ttu-id="93cc5-387"><see langword="true" /> 如果节点是只读的，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-387"><see langword="true" /> if the node is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-388">只读节点是指无法更改其属性、特性或子节点的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-388">A read-only node is one whose properties, attributes, or child nodes cannot be changed.</span></span> <span data-ttu-id="93cc5-389">可以从树中删除只读节点并将其插入到其他位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-389">You can remove a read-only node from the tree and insert it somewhere else.</span></span> <span data-ttu-id="93cc5-390">例如，实体节点始终为只读。</span><span class="sxs-lookup"><span data-stu-id="93cc5-390">For example, Entity nodes are always read-only.</span></span>  
  
 <span data-ttu-id="93cc5-391">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-391">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93cc5-392">获取指定的子元素。</span><span class="sxs-lookup"><span data-stu-id="93cc5-392">Gets the specified child element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string name] { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^] { System::Xml::XmlElement ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement? this[string name] { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="93cc5-393">要检索的元素的限定名。</span><span class="sxs-lookup"><span data-stu-id="93cc5-393">The qualified name of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="93cc5-394">获取具有指定 <see cref="P:System.Xml.XmlNode.Name" /> 的第一个子元素。</span><span class="sxs-lookup"><span data-stu-id="93cc5-394">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.Name" />.</span></span></summary>
        <value><span data-ttu-id="93cc5-395">与指定名称匹配的第一个 <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-395">The first <see cref="T:System.Xml.XmlElement" /> that matches the specified name.</span></span> <span data-ttu-id="93cc5-396">如果没有匹配项，则它返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="93cc5-396">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-397">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-397">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-398">下面的示例显示 title 元素。</span><span class="sxs-lookup"><span data-stu-id="93cc5-398">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string localname, string ns] { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^, System::String ^] { System::Xml::XmlElement ^ get(System::String ^ localname, System::String ^ ns); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement? this[string localname, string ns] { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="93cc5-399">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-399">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="93cc5-400">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="93cc5-400">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="93cc5-401">获取具有指定 <see cref="P:System.Xml.XmlNode.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的第一个子元素。</span><span class="sxs-lookup"><span data-stu-id="93cc5-401">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <value><span data-ttu-id="93cc5-402">具有匹配的 <paramref name="localname" /> 和 <paramref name="ns" /> 的第一个 <see cref="T:System.Xml.XmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-402">The first <see cref="T:System.Xml.XmlElement" /> with the matching <paramref name="localname" /> and <paramref name="ns" />.</span></span> <span data-ttu-id="93cc5-403">如果没有匹配项，则它返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="93cc5-403">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-404">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-404">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode LastChild { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode LastChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ LastChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? LastChild { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-405">获取节点的最后一个子级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-405">Gets the last child of the node.</span></span></summary>
        <value><span data-ttu-id="93cc5-406">节点的最后一个子级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-406">The last child of the node.</span></span> <span data-ttu-id="93cc5-407">如果没有这样的节点，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-407">If there is no such node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93cc5-408">下面的示例显示 price 元素。</span><span class="sxs-lookup"><span data-stu-id="93cc5-408">The following example displays the price element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNode.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-409">当在派生类中被重写时，获取节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-409">Gets the local name of the node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="93cc5-410">移除了前缀的节点的名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-410">The name of the node with the prefix removed.</span></span> <span data-ttu-id="93cc5-411">例如， <see langword="LocalName" /> 对于元素 &lt; bk： book，是 book &gt; 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-411">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span></span>  
  
<span data-ttu-id="93cc5-412">返回的名称取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />：</span><span class="sxs-lookup"><span data-stu-id="93cc5-412">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="93cc5-413">类型</span><span class="sxs-lookup"><span data-stu-id="93cc5-413">Type</span></span> 
 </term><description> <span data-ttu-id="93cc5-414">名称</span><span class="sxs-lookup"><span data-stu-id="93cc5-414">Name</span></span> 
 </description></listheader><item><term> <span data-ttu-id="93cc5-415">Attribute</span><span class="sxs-lookup"><span data-stu-id="93cc5-415">Attribute</span></span> 
 </term><description> <span data-ttu-id="93cc5-416">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-416">The local name of the attribute.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-417">CDATA</span><span class="sxs-lookup"><span data-stu-id="93cc5-417">CDATA</span></span> 
 </term><description> <span data-ttu-id="93cc5-418">#cdata-section</span><span class="sxs-lookup"><span data-stu-id="93cc5-418">#cdata-section</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-419">评论</span><span class="sxs-lookup"><span data-stu-id="93cc5-419">Comment</span></span> 
 </term><description> <span data-ttu-id="93cc5-420">#comment</span><span class="sxs-lookup"><span data-stu-id="93cc5-420">#comment</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-421">文档</span><span class="sxs-lookup"><span data-stu-id="93cc5-421">Document</span></span> 
 </term><description> <span data-ttu-id="93cc5-422">#document</span><span class="sxs-lookup"><span data-stu-id="93cc5-422">#document</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-423">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="93cc5-423">DocumentFragment</span></span> 
 </term><description> <span data-ttu-id="93cc5-424">#document-fragment</span><span class="sxs-lookup"><span data-stu-id="93cc5-424">#document-fragment</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-425">DocumentType</span><span class="sxs-lookup"><span data-stu-id="93cc5-425">DocumentType</span></span> 
 </term><description> <span data-ttu-id="93cc5-426">文档类型名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-426">The document type name.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-427">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-427">Element</span></span> 
 </term><description> <span data-ttu-id="93cc5-428">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-428">The local name of the element.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-429">实体</span><span class="sxs-lookup"><span data-stu-id="93cc5-429">Entity</span></span> 
 </term><description> <span data-ttu-id="93cc5-430">实体的名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-430">The name of the entity.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-431">EntityReference</span><span class="sxs-lookup"><span data-stu-id="93cc5-431">EntityReference</span></span> 
 </term><description> <span data-ttu-id="93cc5-432">引用的实体的名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-432">The name of the entity referenced.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-433">表示法</span><span class="sxs-lookup"><span data-stu-id="93cc5-433">Notation</span></span> 
 </term><description> <span data-ttu-id="93cc5-434">表示法名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-434">The notation name.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-435">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="93cc5-435">ProcessingInstruction</span></span> 
 </term><description> <span data-ttu-id="93cc5-436">处理指令的目标。</span><span class="sxs-lookup"><span data-stu-id="93cc5-436">The target of the processing instruction.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-437">文本</span><span class="sxs-lookup"><span data-stu-id="93cc5-437">Text</span></span> 
 </term><description> <span data-ttu-id="93cc5-438">#text</span><span class="sxs-lookup"><span data-stu-id="93cc5-438">#text</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-439">空格</span><span class="sxs-lookup"><span data-stu-id="93cc5-439">Whitespace</span></span> 
 </term><description> <span data-ttu-id="93cc5-440">#whitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-440">#whitespace</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-441">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-441">SignificantWhitespace</span></span> 
 </term><description> <span data-ttu-id="93cc5-442">#significant-whitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-442">#significant-whitespace</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-443">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="93cc5-443">XmlDeclaration</span></span> 
 </term><description> <span data-ttu-id="93cc5-444">#xml-declaration</span><span class="sxs-lookup"><span data-stu-id="93cc5-444">#xml-declaration</span></span> 
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-445">如果该节点没有前缀，则 LocalName 与相同 <xref:System.Xml.XmlNode.Name%2A> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-445">If the node does not have a prefix, LocalName is the same as <xref:System.Xml.XmlNode.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlNode.Prefix" />
        <altmember cref="P:System.Xml.XmlNode.Name" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-446">当在派生类中被重写时，获取节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-446">Gets the qualified name of the node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="93cc5-447">节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-447">The qualified name of the node.</span></span> <span data-ttu-id="93cc5-448">返回的名称取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />：</span><span class="sxs-lookup"><span data-stu-id="93cc5-448">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="93cc5-449">类型</span><span class="sxs-lookup"><span data-stu-id="93cc5-449">Type</span></span> 
 </term><description> <span data-ttu-id="93cc5-450">名称</span><span class="sxs-lookup"><span data-stu-id="93cc5-450">Name</span></span> 
 </description></listheader><item><term> <span data-ttu-id="93cc5-451">Attribute</span><span class="sxs-lookup"><span data-stu-id="93cc5-451">Attribute</span></span> 
 </term><description> <span data-ttu-id="93cc5-452">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-452">The qualified name of the attribute.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-453">CDATA</span><span class="sxs-lookup"><span data-stu-id="93cc5-453">CDATA</span></span> 
 </term><description> <span data-ttu-id="93cc5-454">#cdata-section</span><span class="sxs-lookup"><span data-stu-id="93cc5-454">#cdata-section</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-455">评论</span><span class="sxs-lookup"><span data-stu-id="93cc5-455">Comment</span></span> 
 </term><description> <span data-ttu-id="93cc5-456">#comment</span><span class="sxs-lookup"><span data-stu-id="93cc5-456">#comment</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-457">文档</span><span class="sxs-lookup"><span data-stu-id="93cc5-457">Document</span></span> 
 </term><description> <span data-ttu-id="93cc5-458">#document</span><span class="sxs-lookup"><span data-stu-id="93cc5-458">#document</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-459">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="93cc5-459">DocumentFragment</span></span> 
 </term><description> <span data-ttu-id="93cc5-460">#document-fragment</span><span class="sxs-lookup"><span data-stu-id="93cc5-460">#document-fragment</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-461">DocumentType</span><span class="sxs-lookup"><span data-stu-id="93cc5-461">DocumentType</span></span> 
 </term><description> <span data-ttu-id="93cc5-462">文档类型名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-462">The document type name.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-463">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-463">Element</span></span> 
 </term><description> <span data-ttu-id="93cc5-464">元素的限定名。</span><span class="sxs-lookup"><span data-stu-id="93cc5-464">The qualified name of the element.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-465">实体</span><span class="sxs-lookup"><span data-stu-id="93cc5-465">Entity</span></span> 
 </term><description> <span data-ttu-id="93cc5-466">实体的名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-466">The name of the entity.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-467">EntityReference</span><span class="sxs-lookup"><span data-stu-id="93cc5-467">EntityReference</span></span> 
 </term><description> <span data-ttu-id="93cc5-468">引用的实体的名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-468">The name of the entity referenced.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-469">表示法</span><span class="sxs-lookup"><span data-stu-id="93cc5-469">Notation</span></span> 
 </term><description> <span data-ttu-id="93cc5-470">表示法名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-470">The notation name.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-471">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="93cc5-471">ProcessingInstruction</span></span> 
 </term><description> <span data-ttu-id="93cc5-472">处理指令的目标。</span><span class="sxs-lookup"><span data-stu-id="93cc5-472">The target of the processing instruction.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-473">文本</span><span class="sxs-lookup"><span data-stu-id="93cc5-473">Text</span></span> 
 </term><description> <span data-ttu-id="93cc5-474">#text</span><span class="sxs-lookup"><span data-stu-id="93cc5-474">#text</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-475">空格</span><span class="sxs-lookup"><span data-stu-id="93cc5-475">Whitespace</span></span> 
 </term><description> <span data-ttu-id="93cc5-476">#whitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-476">#whitespace</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-477">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-477">SignificantWhitespace</span></span> 
 </term><description> <span data-ttu-id="93cc5-478">#significant-whitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-478">#significant-whitespace</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-479">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="93cc5-479">XmlDeclaration</span></span> 
 </term><description> <span data-ttu-id="93cc5-480">#xml-declaration</span><span class="sxs-lookup"><span data-stu-id="93cc5-480">#xml-declaration</span></span> 
 </description></item></list></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public virtual string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNode.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-481">获取该节点的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="93cc5-481">Gets the namespace URI of this node.</span></span></summary>
        <value><span data-ttu-id="93cc5-482">该节点的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="93cc5-482">The namespace URI of this node.</span></span> <span data-ttu-id="93cc5-483">如果没有命名空间 URI，则此属性返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="93cc5-483">If there is no namespace URI, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-484">这是在创建时指定的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="93cc5-484">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="93cc5-485">例如， `NamespaceURI` 为元素的示例： \<bk:book xmlns:bk= "urn:samples"></span><span class="sxs-lookup"><span data-stu-id="93cc5-485">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
 <span data-ttu-id="93cc5-486">特性不会从其附加到的元素继承其命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-486">An attribute does not inherit its namespace from the element it is attached to.</span></span> <span data-ttu-id="93cc5-487">如果没有为属性显式给定命名空间，则它只是没有命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-487">If an attribute is not explicitly given a namespace, it simply has no namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode NextSibling { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? NextSibling { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-488">获取紧接在该节点之后的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-488">Gets the node immediately following this node.</span></span></summary>
        <value><span data-ttu-id="93cc5-489">下一个 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-489">The next <see langword="XmlNode" />.</span></span> <span data-ttu-id="93cc5-490">如果没有下一个节点，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-490">If there is no next node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93cc5-491">下面的示例显示 XML 文档中的所有书籍。</span><span class="sxs-lookup"><span data-stu-id="93cc5-491">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNode.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-492">当在派生类中被重写时，获取当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="93cc5-492">Gets the type of the current node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="93cc5-493"><see cref="T:System.Xml.XmlNodeType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="93cc5-493">One of the <see cref="T:System.Xml.XmlNodeType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-494">此属性绝不会返回 `XmlNodeType` EndElement、EndEntity 或 None。</span><span class="sxs-lookup"><span data-stu-id="93cc5-494">This property never returns the `XmlNodeType` EndElement, EndEntity or None.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Normalize();" />
      <MemberSignature Language="F#" Value="abstract member Normalize : unit -&gt; unit&#xA;override this.Normalize : unit -&gt; unit" Usage="xmlNode.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cc5-495">将此 XmlNode 下子树完全深度中的所有 XmlText 节点都转换成“正常”形式，在这种形式中只有标记（即标记、注释、处理指令、CDATA 节和实体引用）分隔 XmlText 节点，也就是说，没有相邻的 XmlText 节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-495">Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-496">此方法可用于确保文档的 DOM 视图与已保存并重新加载相同，并且在操作 (如需要使用特定文档树结构) 的 XPointer 查找时，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-496">This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string" Usage="System.Xml.XmlNode.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-497">获取包含此节点及其所有子节点的标记。</span><span class="sxs-lookup"><span data-stu-id="93cc5-497">Gets the markup containing this node and all its child nodes.</span></span></summary>
        <value><span data-ttu-id="93cc5-498">包含此节点及其所有子节点的标记。</span><span class="sxs-lookup"><span data-stu-id="93cc5-498">The markup containing this node and all its child nodes.</span></span>  
  
 <block subset="none" type="note"><para><span data-ttu-id="93cc5-499"><see langword="OuterXml" /> 不返回默认特性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-499"><see langword="OuterXml" /> does not return default attributes.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-500">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-500">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-501">下面的示例比较 <xref:System.Xml.XmlNode.InnerXml%2A> 和属性的输出 `OuterXml` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-501">The following example compares output from the <xref:System.Xml.XmlNode.InnerXml%2A> and `OuterXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument OwnerDocument { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument? OwnerDocument { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-502">获取此节点所属的 <see cref="T:System.Xml.XmlDocument" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-502">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span></summary>
        <value><span data-ttu-id="93cc5-503">该节点所属的 <see cref="T:System.Xml.XmlDocument" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-503">The <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span>  
  
<span data-ttu-id="93cc5-504">如果该节点是一个 <see cref="T:System.Xml.XmlDocument" />（NodeType 等于 XmlNodeType.Document），则此属性返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-504">If the node is an <see cref="T:System.Xml.XmlDocument" /> (NodeType equals XmlNodeType.Document), this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-505">将节点添加到当前节点时，请使用 <xref:System.Xml.XmlDocument> 属性返回的 <xref:System.Xml.XmlNode.OwnerDocument%2A> 来创建节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-505">When adding nodes to the current node, use the <xref:System.Xml.XmlDocument> returned by the <xref:System.Xml.XmlNode.OwnerDocument%2A> property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-506"><xref:System.Xml.XmlElement.OwnerDocument%2A>有关使用此属性的示例，请参阅 XmlElement 类) 中的 (。</span><span class="sxs-lookup"><span data-stu-id="93cc5-506">See <xref:System.Xml.XmlElement.OwnerDocument%2A> (in the XmlElement class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ParentNode { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? ParentNode { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-507">获取该节点的父级（针对可以拥有父级的节点）。</span><span class="sxs-lookup"><span data-stu-id="93cc5-507">Gets the parent of this node (for nodes that can have parents).</span></span></summary>
        <value><span data-ttu-id="93cc5-508">作为当前节点父级的 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-508">The <see langword="XmlNode" /> that is the parent of the current node.</span></span> <span data-ttu-id="93cc5-509">如果刚刚创建了一个节点且尚未将其添加到树中，或如果已从树中移除了该节点，则父级为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-509">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span></span> <span data-ttu-id="93cc5-510">对于所有其他节点，返回的值取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-510">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span></span> <span data-ttu-id="93cc5-511">下表描述了 <see langword="ParentNode" /> 属性可能的返回值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-511">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="93cc5-512">NodeType</span><span class="sxs-lookup"><span data-stu-id="93cc5-512">NodeType</span></span> 
 </term><description> <span data-ttu-id="93cc5-513">ParentNode 的返回值</span><span class="sxs-lookup"><span data-stu-id="93cc5-513">Return Value of ParentNode</span></span> 
 </description></listheader><item><term> <span data-ttu-id="93cc5-514">Attribute、Document、DocumentFragment、Entity、Notation</span><span class="sxs-lookup"><span data-stu-id="93cc5-514">Attribute, Document, DocumentFragment, Entity, Notation</span></span> 
 </term><description> <span data-ttu-id="93cc5-515">返回 <see langword="null" />；这些节点不具有父级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-515">Returns <see langword="null" />; these nodes do not have parents.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-516">CDATA</span><span class="sxs-lookup"><span data-stu-id="93cc5-516">CDATA</span></span> 
 </term><description> <span data-ttu-id="93cc5-517">返回包含 CDATA 节的元素或实体引用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-517">Returns the element or entity reference containing the CDATA section.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-518">评论</span><span class="sxs-lookup"><span data-stu-id="93cc5-518">Comment</span></span> 
 </term><description> <span data-ttu-id="93cc5-519">返回包含注释的元素、实体引用、文档类型或文档。</span><span class="sxs-lookup"><span data-stu-id="93cc5-519">Returns the element, entity reference, document type, or document containing the comment.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-520">DocumentType</span><span class="sxs-lookup"><span data-stu-id="93cc5-520">DocumentType</span></span> 
 </term><description> <span data-ttu-id="93cc5-521">返回文档节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-521">Returns the document node.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-522">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-522">Element</span></span> 
 </term><description> <span data-ttu-id="93cc5-523">返回该元素的父节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-523">Returns the parent node of the element.</span></span> <span data-ttu-id="93cc5-524">如果该元素是树中的根节点，则父级是文档节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-524">If the element is the root node in the tree, the parent is the document node.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-525">EntityReference</span><span class="sxs-lookup"><span data-stu-id="93cc5-525">EntityReference</span></span> 
 </term><description> <span data-ttu-id="93cc5-526">返回包含该实体引用的元素、特性或实体引用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-526">Returns the element, attribute, or entity reference containing the entity reference.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-527">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="93cc5-527">ProcessingInstruction</span></span> 
 </term><description> <span data-ttu-id="93cc5-528">返回包含该处理指令的文档、元素、文档类型或实体引用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-528">Returns the document, element, document type, or entity reference containing the processing instruction.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-529">文本</span><span class="sxs-lookup"><span data-stu-id="93cc5-529">Text</span></span> 
 </term><description> <span data-ttu-id="93cc5-530">返回包含该文本节点的父元素、特性或实体引用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-530">Returns the parent element, attribute, or entity reference containing the text node.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-531">有关父节点和子节点的信息，请参阅 [W3C DOM (Core) Level 1 规范](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="93cc5-531">For information about parent and child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public virtual string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Xml.XmlNode.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-532">获取或设置该节点的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-532">Gets or sets the namespace prefix of this node.</span></span></summary>
        <value><span data-ttu-id="93cc5-533">该节点的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-533">The namespace prefix of this node.</span></span> <span data-ttu-id="93cc5-534">例如， <see langword="Prefix" /> 对于元素 &lt; bk： book 为 bk &gt; 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-534">For example, <see langword="Prefix" /> is bk for the element &lt;bk:book&gt;.</span></span> <span data-ttu-id="93cc5-535">如果没有前缀，则该属性返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="93cc5-535">If there is no prefix, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-536">如果允许，则设置此属性会更改 <xref:System.Xml.XmlNode.Name%2A> 属性，该属性保存元素和属性节点上的限定名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-536">Setting this property, when permitted, changes the <xref:System.Xml.XmlNode.Name%2A> property, which holds the qualified name, on Element and Attribute nodes.</span></span> <span data-ttu-id="93cc5-537">对不能有前缀 (（例如 Text、Comment、EntityReference、CDATA、ProcessingInstruction、Document 和 DocumentFragment) ）的节点类型设置此属性不起作用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-537">Setting this property on node types that cannot have a prefix (such as Text, Comment, EntityReference, CDATA, ProcessingInstruction, Document, and DocumentFragment) has no effect.</span></span> <span data-ttu-id="93cc5-538">如果更改已知的属性的前缀具有默认值，则不会使用默认值生成新的属性，并且会出现原始前缀，因为命名空间 URI 和本地名称不会更改。</span><span class="sxs-lookup"><span data-stu-id="93cc5-538">Changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the namespace URI and local name do not change.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93cc5-539">该节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-539">This node is read-only.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="93cc5-540">指定的前缀包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="93cc5-540">The specified prefix contains an invalid character.</span></span>  
  
 <span data-ttu-id="93cc5-541">指定的前缀格式不正确。</span><span class="sxs-lookup"><span data-stu-id="93cc5-541">The specified prefix is malformed.</span></span>  
  
 <span data-ttu-id="93cc5-542">指定的前缀为“xml”，而该节点的 namespaceURI 与“http://www.w3.org/XML/1998/namespace”不同。</span><span class="sxs-lookup"><span data-stu-id="93cc5-542">The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</span></span>  
  
 <span data-ttu-id="93cc5-543">该节点是一个属性，指定的前缀为“xmlns”，且该节点的 namespaceURI 与“http://www.w3.org/2000/xmlns/”不同。</span><span class="sxs-lookup"><span data-stu-id="93cc5-543">This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".</span></span>  
  
 <span data-ttu-id="93cc5-544">该节点是一个特性，而该节点的 qualifiedName 是“xmlns”。</span><span class="sxs-lookup"><span data-stu-id="93cc5-544">This node is an attribute and the qualifiedName of this node is "xmlns".</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="93cc5-545">当 <see langword="Prefix" /> 在派生类中重写时，不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-545">When overriding <see langword="Prefix" /> in a derived class, this property cannot be set.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.PrependChild newChild" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? PrependChild (System.Xml.XmlNode newChild);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="93cc5-546">要添加的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-546">The node to add.</span></span> <span data-ttu-id="93cc5-547">要添加的节点的全部内容会移动到指定位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-547">All the contents of the node to be added are moved into the specified location.</span></span></param>
        <summary><span data-ttu-id="93cc5-548">将指定的节点添加到该节点的子节点列表的开头。</span><span class="sxs-lookup"><span data-stu-id="93cc5-548">Adds the specified node to the beginning of the list of child nodes for this node.</span></span></summary>
        <returns><span data-ttu-id="93cc5-549">添加的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-549">The node added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-550">如果已 `newChild` 在树中，则会将其从其原始位置删除并添加到其目标位置。</span><span class="sxs-lookup"><span data-stu-id="93cc5-550">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="93cc5-551">有关插入节点的详细信息，请参阅 [将节点插入 XML 文档](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-551">For more information about inserting nodes, see [Inserting Nodes into an XML Document](/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document).</span></span>  
  
 <span data-ttu-id="93cc5-552">如果要插入的节点是从其他文档创建的，则可以使用 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 将节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="93cc5-552">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="93cc5-553">然后，可以将导入的节点插入到当前文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-553">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="93cc5-554">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-554">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-555">下面的示例将一个新节点添加到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-555">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cc5-556">此节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-556">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
<span data-ttu-id="93cc5-557"><paramref name="newChild" /> 是此节点的上级节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-557">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93cc5-558"><paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-558">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
<span data-ttu-id="93cc5-559">该节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-559">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="93cc5-560">当在派生类中重写时 <see langword="PrependChild" /> ，为了正确引发事件，必须调用 <see langword="PrependChild" /> 基类的方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-560">When overriding <see langword="PrependChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="PrependChild" /> method of the base class.</span></span></para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <related type="Article" href="/dotnet/standard/data/xml/inserting-nodes-into-an-xml-document"><span data-ttu-id="93cc5-561">将节点插入 XML 文档中</span><span class="sxs-lookup"><span data-stu-id="93cc5-561">Inserting Nodes into an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousSibling { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? PreviousSibling { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-562">获取紧接在该节点之前的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-562">Gets the node immediately preceding this node.</span></span></summary>
        <value><span data-ttu-id="93cc5-563">前一个 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-563">The preceding <see langword="XmlNode" />.</span></span> <span data-ttu-id="93cc5-564">如果前面没有节点，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-564">If there is no preceding node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93cc5-565">下面的示例显示 XML 文档中的所有书籍。</span><span class="sxs-lookup"><span data-stu-id="93cc5-565">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousText">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousText { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousText As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousText { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousText : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode? PreviousText { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-566">获取紧接在该节点之前的文本节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-566">Gets the text node that immediately precedes this node.</span></span></summary>
        <value><span data-ttu-id="93cc5-567">返回 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-567">Returns <see cref="T:System.Xml.XmlNode" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-568">此属性的性能比属性更快， <xref:System.Xml.XmlNode.PreviousSibling%2A> 但您只能使用它来获取类型的节点 <xref:System.Xml.XmlNodeType.Text> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-568">This property has faster performance than the <xref:System.Xml.XmlNode.PreviousSibling%2A> property but you can use it only to get a node of type <xref:System.Xml.XmlNodeType.Text>.</span></span> <span data-ttu-id="93cc5-569">若要获取此节点之前的任何其他类型的节点，请使用 <xref:System.Xml.XmlNode.PreviousSibling%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-569">To get any other type of node that precedes this node, use the <xref:System.Xml.XmlNode.PreviousSibling%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit&#xA;override this.RemoveAll : unit -&gt; unit" Usage="xmlNode.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cc5-570">移除当前节点的所有子节点和/或属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-570">Removes all the child nodes and/or attributes of the current node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-571">如果已知已删除的属性具有默认值，则会立即出现一个属性，其中包含默认值和相应的命名空间 URI、本地名称和前缀（如果适用）。</span><span class="sxs-lookup"><span data-stu-id="93cc5-571">If a removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
 <span data-ttu-id="93cc5-572">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-572">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-573">下面的示例从根节点中删除所有子节点和属性节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-573">The following example removes all child and attribute nodes from the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="93cc5-574">当在派生类中重写时 <see langword="RemoveAll" /> ，为了正确引发事件，必须调用 <see langword="RemoveAll" /> 基类的方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-574">When overriding <see langword="RemoveAll" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveAll" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.RemoveChild oldChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild"><span data-ttu-id="93cc5-575">正在被移除的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-575">The node being removed.</span></span></param>
        <summary><span data-ttu-id="93cc5-576">移除指定的子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-576">Removes specified child node.</span></span></summary>
        <returns><span data-ttu-id="93cc5-577">已移除的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-577">The node removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93cc5-578">下面的示例从 XML 文档中删除节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-578">The following example removes a node from the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93cc5-579"><paramref name="oldChild" /> 不是此节点的子级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-579">The <paramref name="oldChild" /> is not a child of this node.</span></span> <span data-ttu-id="93cc5-580">或者此节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-580">Or this node is read-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="93cc5-581">当在派生类中重写时 <see langword="RemoveChild" /> ，为了正确引发事件，必须调用 <see langword="RemoveChild" /> 基类的方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-581">When overriding <see langword="RemoveChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveChild" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.ReplaceChild (newChild, oldChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="93cc5-582">要放入子列表的新节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-582">The new node to put in the child list.</span></span></param>
        <param name="oldChild"><span data-ttu-id="93cc5-583">列表中正在被替换的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-583">The node being replaced in the list.</span></span></param>
        <summary><span data-ttu-id="93cc5-584">用 <paramref name="oldChild" /> 节点替换子节点 <paramref name="newChild" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-584">Replaces the child node <paramref name="oldChild" /> with <paramref name="newChild" /> node.</span></span></summary>
        <returns><span data-ttu-id="93cc5-585">被替换的节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-585">The node replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-586">如果已 `newChild` 在树中，则先将其删除。</span><span class="sxs-lookup"><span data-stu-id="93cc5-586">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="93cc5-587">如果 `newChild` 是从另一个文档创建的，则可以使用将 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 节点导入到当前文档。</span><span class="sxs-lookup"><span data-stu-id="93cc5-587">If the `newChild` was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="93cc5-588">然后，可以将导入的节点传递给 `ReplaceChild` 方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-588">The imported node can then be passed to the `ReplaceChild` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-589">下面的示例将替换 XML 文档中的 title 元素。</span><span class="sxs-lookup"><span data-stu-id="93cc5-589">The following example replaces the title element in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cc5-590">此节点的类型不允许 <paramref name="newChild" /> 节点类型的子节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-590">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
<span data-ttu-id="93cc5-591"><paramref name="newChild" /> 是此节点的上级节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-591">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93cc5-592"><paramref name="newChild" /> 是从不同于创建此节点的文档创建的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-592">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
<span data-ttu-id="93cc5-593">该节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="93cc5-593">This node is read-only.</span></span>  
  
<span data-ttu-id="93cc5-594"><paramref name="oldChild" /> 不是此节点的子级。</span><span class="sxs-lookup"><span data-stu-id="93cc5-594">The <paramref name="oldChild" /> is not a child of this node.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="93cc5-595">当在派生类中重写时 <see langword="ReplaceChild" /> ，为了正确引发事件，必须调用 <see langword="ReplaceChild" /> 基类的方法。</span><span class="sxs-lookup"><span data-stu-id="93cc5-595">When overriding <see langword="ReplaceChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="ReplaceChild" /> method of the base class.</span></span></para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNode.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-596">获取作为架构验证的结果分配给此节点的后架构验证信息集。</span><span class="sxs-lookup"><span data-stu-id="93cc5-596">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span></span></summary>
        <value><span data-ttu-id="93cc5-597">包含此节点的架构验证后信息集的 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="93cc5-597">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-598"><xref:System.Xml.XmlNode.SchemaInfo%2A>当验证此节点时，将设置属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-598">The <xref:System.Xml.XmlNode.SchemaInfo%2A> property is set when this node is validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectNodes">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93cc5-599">选择匹配 XPath 表达式的节点列表。</span><span class="sxs-lookup"><span data-stu-id="93cc5-599">Selects a list of nodes matching the XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-600">XPath 表达式可以包含命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-600">XPath expressions can include namespaces.</span></span> <span data-ttu-id="93cc5-601">使用 `XmlNamespaceManager` 支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="93cc5-601">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="93cc5-602">如果 XPath 表达式包含前缀，则必须将前缀和命名空间 URI 对添加到中 `XmlNamespaceManager` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-602">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-603">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-603">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="93cc5-604">如果 XML 包含默认命名空间，仍必须将前缀和命名空间 URI 添加到 `XmlNamespaceManager` ; 否则，将不会选择任何节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-604">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span>  
  
 <span data-ttu-id="93cc5-605">有关详细信息，请参阅 [使用 XPath 导航选择节点](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-605">For more information, see [Select Nodes Using XPath Navigation](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation).</span></span> <span data-ttu-id="93cc5-606">有关代码示例，请从上一节的重载列表中选择重载。</span><span class="sxs-lookup"><span data-stu-id="93cc5-606">For code examples, choose an overload from the overload list in the previous section.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/archive/msdn-magazine/2003/february/the-xml-files-xpath-selections-and-custom-functions-and-more"><span data-ttu-id="93cc5-607">XPath 选择和自定义函数等</span><span class="sxs-lookup"><span data-stu-id="93cc5-607">XPath Selections and Custom Functions, and More</span></span></related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/"><span data-ttu-id="93cc5-608">W3C XPath 1.0 建议</span><span class="sxs-lookup"><span data-stu-id="93cc5-608">W3C XPath 1.0 recommendation</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList? SelectNodes (string xpath);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes xpath" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="93cc5-609">XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="93cc5-609">The XPath expression.</span></span></param>
        <summary><span data-ttu-id="93cc5-610">选择匹配 XPath 表达式的节点列表。</span><span class="sxs-lookup"><span data-stu-id="93cc5-610">Selects a list of nodes matching the XPath expression.</span></span></summary>
        <returns><span data-ttu-id="93cc5-611">一个 <see cref="T:System.Xml.XmlNodeList" />，包含匹配 XPath 查询的节点集合。</span><span class="sxs-lookup"><span data-stu-id="93cc5-611">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-612">如果 XPath 表达式需要命名空间解析，则必须使用 `SelectNodes` 重载，该重载采用 <xref:System.Xml.XmlNamespaceManager> 作为其参数。</span><span class="sxs-lookup"><span data-stu-id="93cc5-612">If the XPath expression requires namespace resolution, you must use the `SelectNodes` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="93cc5-613">`XmlNamespaceManager`用于解析命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-613">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-614">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-614">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="93cc5-615">如果 XML 包含默认命名空间，则仍必须使用并向 `XmlNamespaceManager` 其添加前缀和命名空间 URI; 否则，将不会选择任何节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-615">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="93cc5-616">有关详细信息，请参阅 [使用 XPath 导航选择节点](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-616">For more information, see [Select Nodes Using XPath Navigation](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-617">在构建 XPath 表达式时，一个常见问题是如何在表达式中包含单引号 ( ") 或双引号 (" ) 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-617">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="93cc5-618">如果必须搜索包含单引号的值，则必须用双引号将字符串引起来。</span><span class="sxs-lookup"><span data-stu-id="93cc5-618">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="93cc5-619">如果需要搜索包含双引号的值，则必须用单引号将字符串括起来。</span><span class="sxs-lookup"><span data-stu-id="93cc5-619">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="93cc5-620">例如，假设您具有以下 XML：</span><span class="sxs-lookup"><span data-stu-id="93cc5-620">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="93cc5-621">以下 Visual Basic 代码选择包含单引号的元素：</span><span class="sxs-lookup"><span data-stu-id="93cc5-621">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```csharp  
nodeList = root.SelectNodes("//book[contains(title,""'Emma'"")]")  
```  
  
 <span data-ttu-id="93cc5-622">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-622">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="93cc5-623"><xref:System.Xml.XmlNodeList>此方法返回的对象将在基础文档保持不变时有效。</span><span class="sxs-lookup"><span data-stu-id="93cc5-623">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="93cc5-624">如果基础文档发生更改，则可能会返回意外结果， (不会) 引发异常。</span><span class="sxs-lookup"><span data-stu-id="93cc5-624">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-625">以下示例选择作者姓氏为 Austen 的所有书籍，然后更改这些书籍的价格。</span><span class="sxs-lookup"><span data-stu-id="93cc5-625">The following example selects all books where the author's last name is Austen, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="93cc5-626">此示例使用以下 XML：</span><span class="sxs-lookup"><span data-stu-id="93cc5-626">This example uses the following XML:</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="93cc5-627">XPath 表达式包含前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-627">The XPath expression contains a prefix.</span></span> <span data-ttu-id="93cc5-628">请参见 [XPath 示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms256086(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="93cc5-628">See [XPath Examples](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms256086(v=vs.100)).</span></span></exception>
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/archive/msdn-magazine/2003/february/the-xml-files-xpath-selections-and-custom-functions-and-more"><span data-ttu-id="93cc5-629">XPath 选择和自定义函数等</span><span class="sxs-lookup"><span data-stu-id="93cc5-629">XPath Selections and Custom Functions, and More</span></span></related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/"><span data-ttu-id="93cc5-630">W3C XPath 1.0 建议</span><span class="sxs-lookup"><span data-stu-id="93cc5-630">W3C XPath 1.0 recommendation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList? SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes (xpath, nsmgr)" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="93cc5-631">XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="93cc5-631">The XPath expression.</span></span> <span data-ttu-id="93cc5-632">请参见 [XPath 示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms256086(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="93cc5-632">See [XPath Examples](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms256086(v=vs.100)).</span></span></param>
        <param name="nsmgr"><span data-ttu-id="93cc5-633">一个 <see cref="T:System.Xml.XmlNamespaceManager" />，用于为 XPath 表达式中的前缀解析命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-633">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="93cc5-634">选择匹配 XPath 表达式的节点列表。</span><span class="sxs-lookup"><span data-stu-id="93cc5-634">Selects a list of nodes matching the XPath expression.</span></span> <span data-ttu-id="93cc5-635">XPath 表达式中的任何前缀都使用提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 进行解析。</span><span class="sxs-lookup"><span data-stu-id="93cc5-635">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="93cc5-636">一个 <see cref="T:System.Xml.XmlNodeList" />，包含匹配 XPath 查询的节点集合。</span><span class="sxs-lookup"><span data-stu-id="93cc5-636">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-637">XPath 表达式可以包含命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-637">XPath expressions can include namespaces.</span></span> <span data-ttu-id="93cc5-638">使用 `XmlNamespaceManager` 支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="93cc5-638">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="93cc5-639">如果 XPath 表达式包含前缀，则必须将前缀和命名空间 URI 对添加到中 `XmlNamespaceManager` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-639">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-640">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-640">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="93cc5-641">如果 XML 包含默认命名空间，仍必须将前缀和命名空间 URI 添加到 `XmlNamespaceManager` ; 否则，将不会选择任何节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-641">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="93cc5-642">有关详细信息，请参阅 [使用 XPath 导航选择节点](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-642">For more information, see [Select Nodes Using XPath Navigation](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation).</span></span>  
  
 <span data-ttu-id="93cc5-643">例如，如果你有以下 XML：</span><span class="sxs-lookup"><span data-stu-id="93cc5-643">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="93cc5-644">下面的 c # 代码选择所有书籍节点：</span><span class="sxs-lookup"><span data-stu-id="93cc5-644">The following C# code selects all book nodes:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNodeList nodelist = doc.SelectNodes("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-645">在构建 XPath 表达式时，一个常见问题是如何在表达式中包含单引号 ( ") 或双引号 (" ) 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-645">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="93cc5-646">如果必须搜索包含单引号的值，则必须用双引号将字符串引起来。</span><span class="sxs-lookup"><span data-stu-id="93cc5-646">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="93cc5-647">如果需要搜索包含双引号的值，则必须用单引号将字符串括起来。</span><span class="sxs-lookup"><span data-stu-id="93cc5-647">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="93cc5-648">例如，假设您具有以下 XML：</span><span class="sxs-lookup"><span data-stu-id="93cc5-648">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="93cc5-649">以下 Visual Basic 代码选择包含单引号的元素：</span><span class="sxs-lookup"><span data-stu-id="93cc5-649">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
nodeList = root.SelectNodes("//ab:book[contains(ab:title,""'Emma'"")]", nsmgr)  
```  
  
 <span data-ttu-id="93cc5-650">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-650">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="93cc5-651"><xref:System.Xml.XmlNodeList>此方法返回的对象将在基础文档保持不变时有效。</span><span class="sxs-lookup"><span data-stu-id="93cc5-651">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="93cc5-652">如果基础文档发生更改，则可能会返回意外结果， (不会) 引发异常。</span><span class="sxs-lookup"><span data-stu-id="93cc5-652">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-653">下面的示例显示了每个 ISBN 特性的值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-653">The following example displays the values of each of the ISBN attributes.</span></span> <span data-ttu-id="93cc5-654">此示例使用 <xref:System.Xml.XmlElement> 从类继承的对象 <xref:System.Xml.XmlNode> 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-654">This example uses an <xref:System.Xml.XmlElement> object, which inherits from the <xref:System.Xml.XmlNode> class.</span></span>  
  
 [!code-cpp[XmlNode.SelectNodes1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectNodes1/CPP/selectnodes1.cpp#1)]
 [!code-csharp[XmlNode.SelectNodes1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectNodes1/CS/selectnodes1.cs#1)]
 [!code-vb[XmlNode.SelectNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectNodes1/VB/selectnodes1.vb#1)]  
  
 <span data-ttu-id="93cc5-655">该示例使用文件 `booksort.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="93cc5-655">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="93cc5-656">XPath 表达式包含 <see langword="XmlNamespaceManager" /> 中没有定义的前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-656">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span></span></exception>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/archive/msdn-magazine/2003/february/the-xml-files-xpath-selections-and-custom-functions-and-more"><span data-ttu-id="93cc5-657">XPath 选择和自定义函数等</span><span class="sxs-lookup"><span data-stu-id="93cc5-657">XPath Selections and Custom Functions, and More</span></span></related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/"><span data-ttu-id="93cc5-658">W3C XPath 1.0 建议</span><span class="sxs-lookup"><span data-stu-id="93cc5-658">W3C XPath 1.0 recommendation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93cc5-659">选择匹配 XPath 表达式的第一个 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-659">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-660">XPath 表达式可以包含命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-660">XPath expressions can include namespaces.</span></span> <span data-ttu-id="93cc5-661">使用 `XmlNamespaceManager` 支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="93cc5-661">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="93cc5-662">如果 XPath 表达式包含前缀，则必须将前缀和命名空间 URI 对添加到中 `XmlNamespaceManager` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-662">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-663">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-663">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="93cc5-664">如果 XML 包含默认命名空间，仍必须将前缀和命名空间 URI 添加到 `XmlNamespaceManager` ; 否则，将不会选择任何节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-664">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="93cc5-665">有关详细信息，请参阅 [使用 XPath 导航选择节点](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-665">For more information, see [Select Nodes Using XPath Navigation](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-666">下面的示例返回具有匹配的作者姓名的第一本书。</span><span class="sxs-lookup"><span data-stu-id="93cc5-666">The following example returns the first book with the matching author name.</span></span> <span data-ttu-id="93cc5-667">`XmlNamespaceManager` 解析 XPath 表达式中的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-667">The `XmlNamespaceManager` resolves the default namespace in the XPath expression.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode2#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CPP/XmlNode.SelectSingleNode2.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CS/selectsingnode2.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode2/VB/selectsingnode2.vb#1)]  
  
 <span data-ttu-id="93cc5-668">该示例使用文件 `newbooks.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="93cc5-668">The example uses the file, `newbooks.xml`, as input.</span></span>  
  
 [!code-xml[XmlNode.SelectSingleNode2#2](~/samples/snippets/xml/VS_Snippets_Data/XmlNode.SelectSingleNode2/XML/newbooks.xml#2)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/archive/msdn-magazine/2003/february/the-xml-files-xpath-selections-and-custom-functions-and-more"><span data-ttu-id="93cc5-669">XPath 选择和自定义函数等</span><span class="sxs-lookup"><span data-stu-id="93cc5-669">XPath Selections and Custom Functions, and More</span></span></related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/"><span data-ttu-id="93cc5-670">W3C XPath 1.0 建议</span><span class="sxs-lookup"><span data-stu-id="93cc5-670">W3C XPath 1.0 recommendation</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode? SelectSingleNode (string xpath);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode xpath" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="93cc5-671">XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="93cc5-671">The XPath expression.</span></span> <span data-ttu-id="93cc5-672">请参见 [XPath 示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms256086(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="93cc5-672">See [XPath Examples](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms256086(v=vs.100)).</span></span></param>
        <summary><span data-ttu-id="93cc5-673">选择匹配 XPath 表达式的第一个 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-673">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span></summary>
        <returns><span data-ttu-id="93cc5-674">与 XPath 查询匹配的第一个 <see langword="XmlNode" />；如果未找到任何匹配节点，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-674">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-675">如果 XPath 表达式需要命名空间解析，则必须使用 `SelectSingleNode` 重载，该重载采用 <xref:System.Xml.XmlNamespaceManager> 作为其参数。</span><span class="sxs-lookup"><span data-stu-id="93cc5-675">If the XPath expression requires namespace resolution, you must use the `SelectSingleNode` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="93cc5-676">`XmlNamespaceManager`用于解析命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-676">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-677">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-677">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="93cc5-678">如果 XML 包含默认命名空间，则仍需使用 `XmlNamespaceManager` ，并向其添加前缀和命名空间 URI; 否则，将不会获得所选节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-678">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get a selected node.</span></span> <span data-ttu-id="93cc5-679">有关详细信息，请参阅 [使用 XPath 导航选择节点](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-679">For more information, see [Select Nodes Using XPath Navigation](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-680">在构建 XPath 表达式时，一个常见问题是如何在表达式中包含单引号 ( ") 或双引号 (" ) 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-680">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="93cc5-681">如果必须搜索包含单引号的值，则必须用双引号将字符串引起来。</span><span class="sxs-lookup"><span data-stu-id="93cc5-681">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="93cc5-682">如果需要搜索包含双引号的值，则必须用单引号将字符串括起来。</span><span class="sxs-lookup"><span data-stu-id="93cc5-682">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="93cc5-683">例如，假设您具有以下 XML：</span><span class="sxs-lookup"><span data-stu-id="93cc5-683">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="93cc5-684">以下 Visual Basic 代码选择包含单引号的元素：</span><span class="sxs-lookup"><span data-stu-id="93cc5-684">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
book = root.SelectSingleNode("descendant::book[title=""'Emma'""]")  
```  
  
 <span data-ttu-id="93cc5-685">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-685">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-686">下面的示例更改了第一个 Jane Austen 书籍的价格。</span><span class="sxs-lookup"><span data-stu-id="93cc5-686">The following example changes the price of the first Jane Austen book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="93cc5-687">该示例使用文件 `booksort.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="93cc5-687">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectSingleNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="93cc5-688">XPath 表达式包含前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-688">The XPath expression contains a prefix.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/archive/msdn-magazine/2003/february/the-xml-files-xpath-selections-and-custom-functions-and-more"><span data-ttu-id="93cc5-689">XPath 选择和自定义函数等</span><span class="sxs-lookup"><span data-stu-id="93cc5-689">XPath Selections and Custom Functions, and More</span></span></related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/"><span data-ttu-id="93cc5-690">W3C XPath 1.0 建议</span><span class="sxs-lookup"><span data-stu-id="93cc5-690">W3C XPath 1.0 recommendation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode? SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String, nsmgr As XmlNamespaceManager) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode (xpath, nsmgr)" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="93cc5-691">XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="93cc5-691">The XPath expression.</span></span> <span data-ttu-id="93cc5-692">请参见 [XPath 示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms256086(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="93cc5-692">See [XPath Examples](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms256086(v=vs.100)).</span></span></param>
        <param name="nsmgr"><span data-ttu-id="93cc5-693">一个 <see cref="T:System.Xml.XmlNamespaceManager" />，用于为 XPath 表达式中的前缀解析命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-693">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="93cc5-694">选择匹配 XPath 表达式的第一个 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-694">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span> <span data-ttu-id="93cc5-695">XPath 表达式中的任何前缀都使用提供的 <see cref="T:System.Xml.XmlNamespaceManager" /> 进行解析。</span><span class="sxs-lookup"><span data-stu-id="93cc5-695">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="93cc5-696">与 XPath 查询匹配的第一个 <see langword="XmlNode" />；如果未找到任何匹配节点，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-696">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-697">XPath 表达式可以包含命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-697">XPath expressions can include namespaces.</span></span> <span data-ttu-id="93cc5-698">使用 `XmlNamespaceManager` 支持命名空间解析。</span><span class="sxs-lookup"><span data-stu-id="93cc5-698">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="93cc5-699">如果 XPath 表达式包含前缀，则必须将前缀和命名空间 URI 对添加到中 `XmlNamespaceManager` 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-699">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-700">如果 XPath 表达式不包含前缀，则假定命名空间 URI 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="93cc5-700">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="93cc5-701">如果 XML 包含默认命名空间，仍必须将前缀和命名空间 URI 添加到 `XmlNamespaceManager` ; 否则，将不会选择节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-701">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get a node selected.</span></span> <span data-ttu-id="93cc5-702">有关详细信息，请参阅 [使用 XPath 导航选择节点](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation)。</span><span class="sxs-lookup"><span data-stu-id="93cc5-702">For more information, see [Select Nodes Using XPath Navigation](/dotnet/standard/data/xml/select-nodes-using-xpath-navigation).</span></span>  
  
 <span data-ttu-id="93cc5-703">例如，如果你有以下 XML：</span><span class="sxs-lookup"><span data-stu-id="93cc5-703">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="93cc5-704">下面的 c # 代码选择第一个 "书籍" 节点：</span><span class="sxs-lookup"><span data-stu-id="93cc5-704">The following C# code selects the first book node:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNode book = doc.SelectSingleNode("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="93cc5-705">在构建 XPath 表达式时，一个常见问题是如何在表达式中包含单引号 ( ") 或双引号 (" ) 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-705">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="93cc5-706">如果必须搜索包含单引号的值，则必须用双引号将字符串引起来。</span><span class="sxs-lookup"><span data-stu-id="93cc5-706">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="93cc5-707">如果需要搜索包含双引号的值，则必须用单引号将字符串括起来。</span><span class="sxs-lookup"><span data-stu-id="93cc5-707">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="93cc5-708">例如，假设您具有以下 XML：</span><span class="sxs-lookup"><span data-stu-id="93cc5-708">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="93cc5-709">以下 Visual Basic 代码选择包含单引号的元素：</span><span class="sxs-lookup"><span data-stu-id="93cc5-709">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
book = root.SelectSingleNode("descendant::ab:book[ab:title=""'Emma'""]", nsmgr)  
```  
  
 <span data-ttu-id="93cc5-710">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-710">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-711">下面的示例选择具有匹配的 ISBN 值的书籍。</span><span class="sxs-lookup"><span data-stu-id="93cc5-711">The following example selects the book with the matching ISBN value.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CPP/selectsingnode.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CS/selectsingnode.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode1/VB/selectsingnode.vb#1)]  
  
 <span data-ttu-id="93cc5-712">该示例使用文件 `booksort.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="93cc5-712">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="93cc5-713">XPath 表达式包含 <see langword="XmlNamespaceManager" /> 中没有定义的前缀。</span><span class="sxs-lookup"><span data-stu-id="93cc5-713">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span></span></exception>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/archive/msdn-magazine/2003/february/the-xml-files-xpath-selections-and-custom-functions-and-more"><span data-ttu-id="93cc5-714">XPath 选择和自定义函数等</span><span class="sxs-lookup"><span data-stu-id="93cc5-714">XPath Selections and Custom Functions, and More</span></span></related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/"><span data-ttu-id="93cc5-715">W3C XPath 1.0 建议</span><span class="sxs-lookup"><span data-stu-id="93cc5-715">W3C XPath 1.0 recommendation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (string feature, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(string feature, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (feature As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::String ^ feature, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member Supports : string * string -&gt; bool&#xA;override this.Supports : string * string -&gt; bool" Usage="xmlNode.Supports (feature, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="feature"><span data-ttu-id="93cc5-716">要测试的功能的程序包名称。</span><span class="sxs-lookup"><span data-stu-id="93cc5-716">The package name of the feature to test.</span></span> <span data-ttu-id="93cc5-717">该名称不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="93cc5-717">This name is not case-sensitive.</span></span></param>
        <param name="version"><span data-ttu-id="93cc5-718">要测试的程序包名称的版本号。</span><span class="sxs-lookup"><span data-stu-id="93cc5-718">The version number of the package name to test.</span></span> <span data-ttu-id="93cc5-719">如果不指定版本 (null)，则支持该功能的任何版本会导致方法返回 true。</span><span class="sxs-lookup"><span data-stu-id="93cc5-719">If the version is not specified (null), supporting any version of the feature causes the method to return true.</span></span></param>
        <summary><span data-ttu-id="93cc5-720">测试 DOM 实现是否实现特定的功能。</span><span class="sxs-lookup"><span data-stu-id="93cc5-720">Tests if the DOM implementation implements a specific feature.</span></span></summary>
        <returns><span data-ttu-id="93cc5-721">如果指定的版本中实现了该功能，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-721"><see langword="true" /> if the feature is implemented in the specified version; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="93cc5-722">下表描述返回 <see langword="true" /> 的组合。</span><span class="sxs-lookup"><span data-stu-id="93cc5-722">The following table describes the combinations that return <see langword="true" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="93cc5-723">Feature</span><span class="sxs-lookup"><span data-stu-id="93cc5-723">Feature</span></span> 
 </term><description> <span data-ttu-id="93cc5-724">Version</span><span class="sxs-lookup"><span data-stu-id="93cc5-724">Version</span></span> 
 </description></listheader><item><term> <span data-ttu-id="93cc5-725">XML</span><span class="sxs-lookup"><span data-stu-id="93cc5-725">XML</span></span> 
 </term><description> <span data-ttu-id="93cc5-726">1.0</span><span class="sxs-lookup"><span data-stu-id="93cc5-726">1.0</span></span> 
 </description></item><item><term> <span data-ttu-id="93cc5-727">XML</span><span class="sxs-lookup"><span data-stu-id="93cc5-727">XML</span></span> 
 </term><description> <span data-ttu-id="93cc5-728">2.0</span><span class="sxs-lookup"><span data-stu-id="93cc5-728">2.0</span></span> 
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNode.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cc5-729">有关此成员的说明，请参见 <see cref="M:System.Xml.XmlNode.GetEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-729">For a description of this member, see <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="93cc5-730">集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="93cc5-730">An enumerator for the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-731">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="93cc5-731">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="93cc5-732">它只能在 <xref:System.Xml.XmlNode> 实例被强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-732">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="xmlNode.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93cc5-733">有关此成员的说明，请参见 <see cref="M:System.Xml.XmlNode.Clone" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-733">For a description of this member, see <see cref="M:System.Xml.XmlNode.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="93cc5-734">节点的副本，它通过该节点调用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-734">A copy of the node from which it is called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-735">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="93cc5-735">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="93cc5-736">它只能在 <xref:System.Xml.XmlNode> 实例被强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="93cc5-736">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.XmlNode.Value" />
      <MemberSignature Language="C#" Value="public virtual string? Value { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93cc5-737">获取或设置节点的值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-737">Gets or sets the value of the node.</span></span></summary>
        <value><span data-ttu-id="93cc5-738">返回的值取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-738">The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="93cc5-739">类型</span><span class="sxs-lookup"><span data-stu-id="93cc5-739">Type</span></span> 
 </term><description> <span data-ttu-id="93cc5-740">Value</span><span class="sxs-lookup"><span data-stu-id="93cc5-740">Value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="93cc5-741">特性</span><span class="sxs-lookup"><span data-stu-id="93cc5-741">Attribute</span></span> 
 </term><description> <span data-ttu-id="93cc5-742">属性的值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-742">The value of the attribute.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-743">CDATASection</span><span class="sxs-lookup"><span data-stu-id="93cc5-743">CDATASection</span></span> 
 </term><description> <span data-ttu-id="93cc5-744">CDATA 节的内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-744">The content of the CDATA Section.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-745">注释</span><span class="sxs-lookup"><span data-stu-id="93cc5-745">Comment</span></span> 
 </term><description> <span data-ttu-id="93cc5-746">注释的内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-746">The content of the comment.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-747">文档</span><span class="sxs-lookup"><span data-stu-id="93cc5-747">Document</span></span> 
 </term><description><span data-ttu-id="93cc5-748"><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93cc5-748"><see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-749">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="93cc5-749">DocumentFragment</span></span> 
 </term><description><span data-ttu-id="93cc5-750"><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93cc5-750"><see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-751">DocumentType</span><span class="sxs-lookup"><span data-stu-id="93cc5-751">DocumentType</span></span> 
 </term><description><span data-ttu-id="93cc5-752"><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93cc5-752"><see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-753">元素</span><span class="sxs-lookup"><span data-stu-id="93cc5-753">Element</span></span> 
 </term><description><span data-ttu-id="93cc5-754"><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93cc5-754"><see langword="null" />.</span></span> <span data-ttu-id="93cc5-755">您可以使用 <see cref="P:System.Xml.XmlElement.InnerText" /> 或 <see cref="P:System.Xml.XmlElement.InnerXml" /> 属性访问元素节点的值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-755">You can use the <see cref="P:System.Xml.XmlElement.InnerText" /> or <see cref="P:System.Xml.XmlElement.InnerXml" /> properties to access the value of the element node.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-756">实体</span><span class="sxs-lookup"><span data-stu-id="93cc5-756">Entity</span></span> 
 </term><description><span data-ttu-id="93cc5-757"><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93cc5-757"><see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-758">EntityReference</span><span class="sxs-lookup"><span data-stu-id="93cc5-758">EntityReference</span></span> 
 </term><description><span data-ttu-id="93cc5-759"><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93cc5-759"><see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-760">表示法</span><span class="sxs-lookup"><span data-stu-id="93cc5-760">Notation</span></span> 
 </term><description><span data-ttu-id="93cc5-761"><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93cc5-761"><see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-762">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="93cc5-762">ProcessingInstruction</span></span> 
 </term><description> <span data-ttu-id="93cc5-763">全部内容（不包括指令目标）。</span><span class="sxs-lookup"><span data-stu-id="93cc5-763">The entire content excluding the target.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-764">文本</span><span class="sxs-lookup"><span data-stu-id="93cc5-764">Text</span></span> 
 </term><description> <span data-ttu-id="93cc5-765">文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-765">The content of the text node.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-766">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="93cc5-766">SignificantWhitespace</span></span> 
 </term><description> <span data-ttu-id="93cc5-767">空格字符。</span><span class="sxs-lookup"><span data-stu-id="93cc5-767">The white space characters.</span></span> <span data-ttu-id="93cc5-768">空白可由一个或多个空格字符、回车符、换行符或制表符组成。</span><span class="sxs-lookup"><span data-stu-id="93cc5-768">White space can consist of one or more space characters, carriage returns, line feeds, or tabs.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-769">空格</span><span class="sxs-lookup"><span data-stu-id="93cc5-769">Whitespace</span></span> 
 </term><description> <span data-ttu-id="93cc5-770">空格字符。</span><span class="sxs-lookup"><span data-stu-id="93cc5-770">The white space characters.</span></span> <span data-ttu-id="93cc5-771">空白可由一个或多个空格字符、回车符、换行符或制表符组成。</span><span class="sxs-lookup"><span data-stu-id="93cc5-771">White space can consist of one or more space characters, carriage returns, line feeds, or tabs.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="93cc5-772">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="93cc5-772">XmlDeclaration</span></span> 
 </term><description> <span data-ttu-id="93cc5-773">声明的内容 (也就是说， &lt; ？ xml 和？) 之间的所有内容 &gt; 。</span><span class="sxs-lookup"><span data-stu-id="93cc5-773">The content of the declaration (that is, everything between &lt;?xml and ?&gt;).</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93cc5-774">下面的示例将一个新特性添加到 XML 文档，并设置 <xref:System.Xml.XmlNode.Value%2A> 新特性的属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-774">The following example adds a new attribute to the XML document and sets the <xref:System.Xml.XmlNode.Value%2A> property of the new attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93cc5-775">设置只读节点的值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-775">Setting the value of a node that is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="93cc5-776">设置不允许具有值的节点（例如 Element 节点）的值。</span><span class="sxs-lookup"><span data-stu-id="93cc5-776">Setting the value of a node that is not supposed to have a value (for example, an Element node).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public abstract void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="93cc5-777">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-777">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="93cc5-778">当在派生类中被重写时，该节点的所有子节点会保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-778">Saves all the child nodes of the node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-779">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-779">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="93cc5-780">它在功能上等效于 <xref:System.Xml.XmlNode.InnerXml%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-780">It is functionally equivalent to the <xref:System.Xml.XmlNode.InnerXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-781">下面的示例在控制台中显示根节点的内容。</span><span class="sxs-lookup"><span data-stu-id="93cc5-781">The following example displays the contents of the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public abstract void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="93cc5-782">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="93cc5-782">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="93cc5-783">当在派生类中被重写时，将当前节点保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span><span class="sxs-lookup"><span data-stu-id="93cc5-783">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93cc5-784">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="93cc5-784">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="93cc5-785">它在功能上等效于 <xref:System.Xml.XmlNode.OuterXml%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="93cc5-785">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93cc5-786">下面的示例在控制台中显示根节点。</span><span class="sxs-lookup"><span data-stu-id="93cc5-786">The following example displays the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
