<Type Name="XmlEntity" FullName="System.Xml.XmlEntity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="973de067567481c231bb9177d25b0879d7bc545e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89675537" /></Metadata><TypeSignature Language="C#" Value="public class XmlEntity : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlEntity extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlEntity" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlEntity&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlEntity : System::Xml::XmlNode" />
  <TypeSignature Language="F#" Value="type XmlEntity = class&#xA;    inherit XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="36e14-101">表示实体声明，如 &lt;!ENTITY... &gt;。</span><span class="sxs-lookup"><span data-stu-id="36e14-101">Represents an entity declaration, such as &lt;!ENTITY... &gt;.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="P:System.Xml.XmlDocumentType.Entities" />
    <related type="Article" href="https://msdn.microsoft.com/library/b5e52844-4820-47c0-a61d-de2da33e9f54"><span data-ttu-id="36e14-102">XML 文档对象模型 (DOM)</span><span class="sxs-lookup"><span data-stu-id="36e14-102">XML Document Object Model (DOM)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlEntity.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-103">获取当前节点的基础统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="36e14-103">Gets the base Uniform Resource Identifier (URI) of the current node.</span></span></summary>
        <value><span data-ttu-id="36e14-104">从其加载节点的位置。</span><span class="sxs-lookup"><span data-stu-id="36e14-104">The location from which the node was loaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e14-105">联网的 XML 文档包含使用各种万维网联合会 (W3C) 标准包含机制聚合的数据块，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="36e14-105">A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="36e14-106">`BaseURI`会告诉你这些节点的来源。</span><span class="sxs-lookup"><span data-stu-id="36e14-106">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="36e14-107">此属性的值根据节点类型的不同而异。</span><span class="sxs-lookup"><span data-stu-id="36e14-107">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="36e14-108">作为外部 EntityReference 节点的子级的节点返回实体本身的位置。</span><span class="sxs-lookup"><span data-stu-id="36e14-108">Nodes which are children of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="36e14-109">例如，请看下面的 XML 文档：</span><span class="sxs-lookup"><span data-stu-id="36e14-109">For example, consider the following XML document:</span></span>  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="36e14-110">其中，外部实体 `a/b.xml` 包含 XML 文本 `<test>123</test>` 。</span><span class="sxs-lookup"><span data-stu-id="36e14-110">where the external entity `a/b.xml` contains the XML text `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="36e14-111">如果从加载文档，则 `http://server/mydata.xml` `BaseURI` 返回以下内容：</span><span class="sxs-lookup"><span data-stu-id="36e14-111">If the document is loaded from `http://server/mydata.xml`, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="36e14-112">NodeType</span><span class="sxs-lookup"><span data-stu-id="36e14-112">NodeType</span></span>|<span data-ttu-id="36e14-113">名称</span><span class="sxs-lookup"><span data-stu-id="36e14-113">Name</span></span>|<span data-ttu-id="36e14-114">BaseURI</span><span class="sxs-lookup"><span data-stu-id="36e14-114">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="36e14-115">Attribute</span><span class="sxs-lookup"><span data-stu-id="36e14-115">Attribute</span></span>|<span data-ttu-id="36e14-116">num</span><span class="sxs-lookup"><span data-stu-id="36e14-116">num</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="36e14-117">文档</span><span class="sxs-lookup"><span data-stu-id="36e14-117">Document</span></span>|<span data-ttu-id="36e14-118">#document</span><span class="sxs-lookup"><span data-stu-id="36e14-118">#document</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="36e14-119">DocumentType</span><span class="sxs-lookup"><span data-stu-id="36e14-119">DocumentType</span></span>|<span data-ttu-id="36e14-120">item</span><span class="sxs-lookup"><span data-stu-id="36e14-120">item</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="36e14-121">实体</span><span class="sxs-lookup"><span data-stu-id="36e14-121">Entity</span></span>|<span data-ttu-id="36e14-122">xyz</span><span class="sxs-lookup"><span data-stu-id="36e14-122">xyz</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="36e14-123">元素</span><span class="sxs-lookup"><span data-stu-id="36e14-123">Element</span></span>|<span data-ttu-id="36e14-124">item</span><span class="sxs-lookup"><span data-stu-id="36e14-124">item</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="36e14-125">EntityReference</span><span class="sxs-lookup"><span data-stu-id="36e14-125">EntityReference</span></span>|<span data-ttu-id="36e14-126">xyz</span><span class="sxs-lookup"><span data-stu-id="36e14-126">xyz</span></span>|`http://server/mydata.xml`|  
|<span data-ttu-id="36e14-127">元素</span><span class="sxs-lookup"><span data-stu-id="36e14-127">Element</span></span>|<span data-ttu-id="36e14-128">测试</span><span class="sxs-lookup"><span data-stu-id="36e14-128">test</span></span>|`http://server/a/b.xml`|  
|<span data-ttu-id="36e14-129">文本</span><span class="sxs-lookup"><span data-stu-id="36e14-129">Text</span></span>|<span data-ttu-id="36e14-130">#text</span><span class="sxs-lookup"><span data-stu-id="36e14-130">#text</span></span>|`http://server/a/b.xml`|  
  
 <span data-ttu-id="36e14-131">`BaseURI` 查找实体引用边界，因此，如果实体处于展开状态，则不会保留此信息，并且此属性将返回 `XmlDocument` 对象在所有情况下的位置。</span><span class="sxs-lookup"><span data-stu-id="36e14-131">`BaseURI` looks for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="36e14-132">作为第二个示例，提供了以下 XML 文档：</span><span class="sxs-lookup"><span data-stu-id="36e14-132">As a second example, given the following XML document:</span></span>  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="36e14-133">其中，文档类型定义 (DTD) 文件包含以下内容：</span><span class="sxs-lookup"><span data-stu-id="36e14-133">where the document type definition (DTD) file contains the following:</span></span>  
  
```  
<!ENTITY xyz "<E1>My Data</E1>">  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="36e14-134">如果从加载 XML 文档 http://localhost/mydata.xml ， `BaseURI` 则将为每个节点返回以下内容：</span><span class="sxs-lookup"><span data-stu-id="36e14-134">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="36e14-135">NodeType</span><span class="sxs-lookup"><span data-stu-id="36e14-135">NodeType</span></span>|<span data-ttu-id="36e14-136">名称</span><span class="sxs-lookup"><span data-stu-id="36e14-136">Name</span></span>|<span data-ttu-id="36e14-137">BaseURI</span><span class="sxs-lookup"><span data-stu-id="36e14-137">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="36e14-138">文档</span><span class="sxs-lookup"><span data-stu-id="36e14-138">Document</span></span>|<span data-ttu-id="36e14-139">#document</span><span class="sxs-lookup"><span data-stu-id="36e14-139">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="36e14-140">DocumentType</span><span class="sxs-lookup"><span data-stu-id="36e14-140">DocumentType</span></span>|<span data-ttu-id="36e14-141">Mydata</span><span class="sxs-lookup"><span data-stu-id="36e14-141">Mydata</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="36e14-142">元素</span><span class="sxs-lookup"><span data-stu-id="36e14-142">Element</span></span>|<span data-ttu-id="36e14-143">baa</span><span class="sxs-lookup"><span data-stu-id="36e14-143">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="36e14-144">实体</span><span class="sxs-lookup"><span data-stu-id="36e14-144">Entity</span></span>|<span data-ttu-id="36e14-145">xyz</span><span class="sxs-lookup"><span data-stu-id="36e14-145">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="36e14-146">EntityReference</span><span class="sxs-lookup"><span data-stu-id="36e14-146">EntityReference</span></span>|<span data-ttu-id="36e14-147">xyz</span><span class="sxs-lookup"><span data-stu-id="36e14-147">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="36e14-148">Attribute</span><span class="sxs-lookup"><span data-stu-id="36e14-148">Attribute</span></span>|<span data-ttu-id="36e14-149">woof</span><span class="sxs-lookup"><span data-stu-id="36e14-149">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="36e14-150">默认属性的基本 URI 与它们所属的元素的基 URI 相同。</span><span class="sxs-lookup"><span data-stu-id="36e14-150">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="36e14-151">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="36e14-151">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlEntity.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep"><span data-ttu-id="36e14-152">若要递归地克隆指定节点下的子树，则为 <see langword="true" />；若仅克隆节点本身，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36e14-152"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="36e14-153">创建此节点的副本。</span><span class="sxs-lookup"><span data-stu-id="36e14-153">Creates a duplicate of this node.</span></span> <span data-ttu-id="36e14-154">无法克隆 Entity 节点。</span><span class="sxs-lookup"><span data-stu-id="36e14-154">Entity nodes cannot be cloned.</span></span> <span data-ttu-id="36e14-155">对 <see cref="T:System.Xml.XmlEntity" /> 对象调用此方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="36e14-155">Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</span></span></summary>
        <returns><span data-ttu-id="36e14-156">从中调用该方法的 <see cref="T:System.Xml.XmlNode" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="36e14-156">A copy of the <see cref="T:System.Xml.XmlNode" /> from which the method is called.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36e14-157">无法克隆 Entity 节点。</span><span class="sxs-lookup"><span data-stu-id="36e14-157">Entity nodes cannot be cloned.</span></span> <span data-ttu-id="36e14-158">对 <see cref="T:System.Xml.XmlEntity" /> 对象调用此方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="36e14-158">Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlEntity.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-159">获取实体节点和所有其子级的串联值。</span><span class="sxs-lookup"><span data-stu-id="36e14-159">Gets the concatenated values of the entity node and all its children.</span></span></summary>
        <value><span data-ttu-id="36e14-160">节点及其所有子级的串连值。</span><span class="sxs-lookup"><span data-stu-id="36e14-160">The concatenated values of the node and all its children.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e14-161">`XmlEntity` 节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="36e14-161">`XmlEntity` nodes are read-only.</span></span> <span data-ttu-id="36e14-162">设置此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="36e14-162">Setting this property throws an exception.</span></span>  
  
 <span data-ttu-id="36e14-163">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="36e14-163">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36e14-164">尝试设置此属性。</span><span class="sxs-lookup"><span data-stu-id="36e14-164">Attempting to set the property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlEntity.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-165">获取表示此节点子级的标记。</span><span class="sxs-lookup"><span data-stu-id="36e14-165">Gets the markup representing the children of this node.</span></span></summary>
        <value><span data-ttu-id="36e14-166">对于 <see langword="XmlEntity" /> 节点，返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="36e14-166">For <see langword="XmlEntity" /> nodes, String.Empty is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e14-167">`XmlEntity` 节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="36e14-167">`XmlEntity` nodes are read-only.</span></span> <span data-ttu-id="36e14-168">设置此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="36e14-168">Setting this property throws an exception.</span></span>  
  
 <span data-ttu-id="36e14-169">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="36e14-169">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36e14-170">尝试设置此属性。</span><span class="sxs-lookup"><span data-stu-id="36e14-170">Attempting to set the property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlEntity.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-171">获取指示节点是否只读的值。</span><span class="sxs-lookup"><span data-stu-id="36e14-171">Gets a value indicating whether the node is read-only.</span></span></summary>
        <value><span data-ttu-id="36e14-172"><see langword="true" /> 如果节点是只读的，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="36e14-172"><see langword="true" /> if the node is read-only; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="36e14-173">由于 <see langword="XmlEntity" /> 节点为只读，该属性总是返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="36e14-173">Because <see langword="XmlEntity" /> nodes are read-only, this property always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e14-174">只读节点是指无法更改其属性、特性或子级的节点。</span><span class="sxs-lookup"><span data-stu-id="36e14-174">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="36e14-175">可以从树中删除只读节点并将其插入到其他位置。</span><span class="sxs-lookup"><span data-stu-id="36e14-175">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlEntity.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-176">获取不带有命名空间前缀的节点名称。</span><span class="sxs-lookup"><span data-stu-id="36e14-176">Gets the name of the node without the namespace prefix.</span></span></summary>
        <value><span data-ttu-id="36e14-177">对于 <see langword="XmlEntity" /> 节点，此属性返回实体的名称。</span><span class="sxs-lookup"><span data-stu-id="36e14-177">For <see langword="XmlEntity" /> nodes, this property returns the name of the entity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlEntity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-178">获取节点的名称。</span><span class="sxs-lookup"><span data-stu-id="36e14-178">Gets the name of the node.</span></span></summary>
        <value><span data-ttu-id="36e14-179">实体的名称。</span><span class="sxs-lookup"><span data-stu-id="36e14-179">The name of the entity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36e14-180">下面的示例显示了有关 XML 文档中声明的实体的信息。</span><span class="sxs-lookup"><span data-stu-id="36e14-180">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="36e14-181">该示例使用文件 `doment.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="36e14-181">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlEntity.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-182">获取节点的类型。</span><span class="sxs-lookup"><span data-stu-id="36e14-182">Gets the type of the node.</span></span></summary>
        <value><span data-ttu-id="36e14-183">节点类型。</span><span class="sxs-lookup"><span data-stu-id="36e14-183">The node type.</span></span> <span data-ttu-id="36e14-184">对于 <see langword="XmlEntity" /> 节点，该值为 XmlNodeType.Entity。</span><span class="sxs-lookup"><span data-stu-id="36e14-184">For <see langword="XmlEntity" /> nodes, the value is XmlNodeType.Entity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36e14-185">下面的示例显示了有关 XML 文档中声明的实体的信息。</span><span class="sxs-lookup"><span data-stu-id="36e14-185">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="36e14-186">该示例使用文件 `doment.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="36e14-186">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="NotationName">
      <MemberSignature Language="C#" Value="public string NotationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NotationName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.NotationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NotationName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotationName : string" Usage="System.Xml.XmlEntity.NotationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-187">获取实体声明上可选 NDATA 特性的名称。</span><span class="sxs-lookup"><span data-stu-id="36e14-187">Gets the name of the optional NDATA attribute on the entity declaration.</span></span></summary>
        <value><span data-ttu-id="36e14-188">NDATA 特性的名称。</span><span class="sxs-lookup"><span data-stu-id="36e14-188">The name of the NDATA attribute.</span></span> <span data-ttu-id="36e14-189">如果没有 NDATA，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36e14-189">If there is no NDATA, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36e14-190">下面的示例显示了有关 XML 文档中声明的实体的信息。</span><span class="sxs-lookup"><span data-stu-id="36e14-190">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="36e14-191">该示例使用文件 `doment.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="36e14-191">The example uses the file, `doment.xml`, as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public override string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string" Usage="System.Xml.XmlEntity.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-192">获取表示此节点及其所有子级的标记。</span><span class="sxs-lookup"><span data-stu-id="36e14-192">Gets the markup representing this node and all its children.</span></span></summary>
        <value><span data-ttu-id="36e14-193">对于 <see langword="XmlEntity" /> 节点，返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="36e14-193">For <see langword="XmlEntity" /> nodes, String.Empty is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e14-194">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="36e14-194">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public string PublicId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.PublicId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublicId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicId : string" Usage="System.Xml.XmlEntity.PublicId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-195">获取实体声明上公共标识符的值。</span><span class="sxs-lookup"><span data-stu-id="36e14-195">Gets the value of the public identifier on the entity declaration.</span></span></summary>
        <value><span data-ttu-id="36e14-196">实体上的公共标识符。</span><span class="sxs-lookup"><span data-stu-id="36e14-196">The public identifier on the entity.</span></span> <span data-ttu-id="36e14-197">如果没有公共标识符，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36e14-197">If there is no public identifier, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36e14-198">下面的示例显示了有关 XML 文档中声明的实体的信息。</span><span class="sxs-lookup"><span data-stu-id="36e14-198">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="36e14-199">该示例使用文件 `doment.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="36e14-199">The example uses the file, `doment.xml`, as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public string SystemId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.SystemId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemId : string" Usage="System.Xml.XmlEntity.SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36e14-200">获取实体声明上系统标识符的值。</span><span class="sxs-lookup"><span data-stu-id="36e14-200">Gets the value of the system identifier on the entity declaration.</span></span></summary>
        <value><span data-ttu-id="36e14-201">实体上的系统标识符。</span><span class="sxs-lookup"><span data-stu-id="36e14-201">The system identifier on the entity.</span></span> <span data-ttu-id="36e14-202">如果没有系统标识符，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36e14-202">If there is no system identifier, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36e14-203">下面的示例显示了有关 XML 文档中声明的实体的信息。</span><span class="sxs-lookup"><span data-stu-id="36e14-203">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="36e14-204">该示例使用文件 `doment.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="36e14-204">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlEntity.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="36e14-205">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="36e14-205">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="36e14-206">将该节点的所有子项保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span><span class="sxs-lookup"><span data-stu-id="36e14-206">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="36e14-207">对于 <see langword="XmlEntity" /> 节点，此方法无效。</span><span class="sxs-lookup"><span data-stu-id="36e14-207">For <see langword="XmlEntity" /> nodes, this method has no effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e14-208">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="36e14-208">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlEntity.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="36e14-209">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="36e14-209">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="36e14-210">将节点保存到指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="36e14-210">Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="36e14-211">对于 <see langword="XmlEntity" /> 节点，此方法无效。</span><span class="sxs-lookup"><span data-stu-id="36e14-211">For <see langword="XmlEntity" /> nodes, this method has no effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36e14-212">此方法是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="36e14-212">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
