<Type Name="XmlWriter" FullName="System.Xml.XmlWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="284dd2f900d1647ff6a63305dca9f4140d22faa9" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90701667" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlWriter : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object implements class System.IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter&#xA;Implements IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type XmlWriter = class&#xA;    interface IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class XmlWriter : IAsyncDisposable, IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object implements class System.IAsyncDisposable, class System.IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter&#xA;Implements IAsyncDisposable, IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract : IAsyncDisposable, IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type XmlWriter = class&#xA;    interface IAsyncDisposable&#xA;    interface IDisposable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C#" Value="public abstract class XmlWriter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type XmlWriter = class" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.ReaderWriter" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0">
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ef512-101">表示一个写入器，该写入器提供一种快速、非缓存和只进方式以生成包含 XML 数据的流或文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-101">Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-102"><xref:System.Xml.XmlWriter>类将 XML 数据写入流、文件、文本读取器或字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-102">The <xref:System.Xml.XmlWriter> class writes XML data to a stream, file, text reader, or string.</span></span> <span data-ttu-id="ef512-103">它支持 W3C [可扩展标记语言 (xml) 1.0 (第四版) ](https://www.w3.org/TR/2006/REC-xml-20060816/) 和 [xml 1.0 (第三版) 建议中的命名空间 ](https://www.w3.org/TR/REC-xml-names/) 。</span><span class="sxs-lookup"><span data-stu-id="ef512-103">It supports the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) and [Namespaces in XML 1.0 (third edition)](https://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="ef512-104">使用类的成员 <xref:System.Xml.XmlWriter> 可以：</span><span class="sxs-lookup"><span data-stu-id="ef512-104">The members of the <xref:System.Xml.XmlWriter> class enable you to:</span></span>  
  
-   <span data-ttu-id="ef512-105">检查字符是不是合法的 XML 字符，元素和属性的名称是不是有效的 XML 名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-105">Verify that the characters are legal XML characters and that element and attribute names are valid XML names.</span></span>  
  
-   <span data-ttu-id="ef512-106">检查 XML 文档的格式是否正确。</span><span class="sxs-lookup"><span data-stu-id="ef512-106">Verify that the XML document is well-formed.</span></span>  
  
-   <span data-ttu-id="ef512-107">将二进制字节编码为 Base64 或 BinHex，并写出结果文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-107">Encode binary bytes as Base64 or BinHex, and write out the resulting text.</span></span>  
  
-   <span data-ttu-id="ef512-108">使用公共语言运行时类型而不是字符串传递值，以避免必须手动执行值转换。</span><span class="sxs-lookup"><span data-stu-id="ef512-108">Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.</span></span>  
  
-   <span data-ttu-id="ef512-109">将多个文档写入一个输出流。</span><span class="sxs-lookup"><span data-stu-id="ef512-109">Write multiple documents to one output stream.</span></span>  
  
-   <span data-ttu-id="ef512-110">写出有效的名称、限定名和名称标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-110">Write valid names, qualified names, and name tokens.</span></span>  
  
 <span data-ttu-id="ef512-111">本节内容：</span><span class="sxs-lookup"><span data-stu-id="ef512-111">In this section:</span></span>  
  
 <span data-ttu-id="ef512-112">[创建 XML 编写器](#create) </span><span class="sxs-lookup"><span data-stu-id="ef512-112">[Creating an XML writer](#create) </span></span>  
 <span data-ttu-id="ef512-113">[指定输出格式](#output) </span><span class="sxs-lookup"><span data-stu-id="ef512-113">[Specifying the output format](#output) </span></span>  
 <span data-ttu-id="ef512-114">[数据一致性](#conformance) </span><span class="sxs-lookup"><span data-stu-id="ef512-114">[Data conformance](#conformance) </span></span>  
 <span data-ttu-id="ef512-115">[编写元素](#writing_elements) </span><span class="sxs-lookup"><span data-stu-id="ef512-115">[Writing elements](#writing_elements) </span></span>  
 <span data-ttu-id="ef512-116">[编写属性](#writing_attributes) </span><span class="sxs-lookup"><span data-stu-id="ef512-116">[Writing attributes](#writing_attributes) </span></span>  
 <span data-ttu-id="ef512-117">[处理命名空间](#handling_ns) </span><span class="sxs-lookup"><span data-stu-id="ef512-117">[Handling namespaces](#handling_ns) </span></span>  
 <span data-ttu-id="ef512-118">[写入类型化数据](#writing_types) </span><span class="sxs-lookup"><span data-stu-id="ef512-118">[Writing typed data](#writing_types) </span></span>  
 <span data-ttu-id="ef512-119">[关闭 XML 编写器](#close) </span><span class="sxs-lookup"><span data-stu-id="ef512-119">[Closing the XML writer](#close) </span></span>  
 <span data-ttu-id="ef512-120">[异步编程](#async) </span><span class="sxs-lookup"><span data-stu-id="ef512-120">[Asynchronous programming](#async) </span></span>  
 [<span data-ttu-id="ef512-121">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="ef512-121">Security considerations</span></span>](#security)  
  
<a name="create"></a>   
## <a name="creating-an-xml-writer"></a><span data-ttu-id="ef512-122">创建 XML 编写器</span><span class="sxs-lookup"><span data-stu-id="ef512-122">Creating an XML writer</span></span>  
 <span data-ttu-id="ef512-123">若要创建 <xref:System.Xml.XmlWriter> 实例，请使用 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-123">To create an <xref:System.Xml.XmlWriter> instance, use the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ef512-124">若要指定要在 XML 编写器上启用的功能集，请将传递 <xref:System.Xml.XmlWriterSettings> 给 <xref:System.Xml.XmlWriter.Create%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-124">To specify the set of features you want to enable on the XML writer, pass an <xref:System.Xml.XmlWriterSettings> to the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="ef512-125">否则，将使用默认设置。</span><span class="sxs-lookup"><span data-stu-id="ef512-125">Otherwise, default settings are used.</span></span> <span data-ttu-id="ef512-126"><xref:System.Xml.XmlWriter.Create%2A>有关详细信息，请参阅参考页。</span><span class="sxs-lookup"><span data-stu-id="ef512-126">See the <xref:System.Xml.XmlWriter.Create%2A> reference pages for details.</span></span>  
  
<a name="output"></a>   
## <a name="specifying-the-output-format"></a><span data-ttu-id="ef512-127">指定输出格式</span><span class="sxs-lookup"><span data-stu-id="ef512-127">Specifying the output format</span></span>  
 <span data-ttu-id="ef512-128"><xref:System.Xml.XmlWriterSettings>类包含若干属性，这些属性控制 <xref:System.Xml.XmlWriter> 输出的格式：</span><span class="sxs-lookup"><span data-stu-id="ef512-128">The <xref:System.Xml.XmlWriterSettings> class includes several properties that control how <xref:System.Xml.XmlWriter> output is formatted:</span></span>  
  
|<span data-ttu-id="ef512-129">Property</span><span class="sxs-lookup"><span data-stu-id="ef512-129">Property</span></span>|<span data-ttu-id="ef512-130">描述</span><span class="sxs-lookup"><span data-stu-id="ef512-130">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="ef512-131">指定要使用的文本编码。</span><span class="sxs-lookup"><span data-stu-id="ef512-131">Specifies the text encoding to use.</span></span> <span data-ttu-id="ef512-132">默认值为 `Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="ef512-132">The default is `Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="ef512-133">指示是否使元素缩进。</span><span class="sxs-lookup"><span data-stu-id="ef512-133">Indicates whether to indent elements.</span></span> <span data-ttu-id="ef512-134">默认值为 `false` (不) 缩进。</span><span class="sxs-lookup"><span data-stu-id="ef512-134">The default is `false` (no indentation).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="ef512-135">指定在缩进时要使用的字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-135">Specifies the character string to use when indenting.</span></span> <span data-ttu-id="ef512-136">默认值为两个空格。</span><span class="sxs-lookup"><span data-stu-id="ef512-136">The default is two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="ef512-137">指定分行符要使用的字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-137">Specifies the character string to use for line breaks.</span></span> <span data-ttu-id="ef512-138">默认值为 `\r\n`（回车符、换行符）。</span><span class="sxs-lookup"><span data-stu-id="ef512-138">The default is `\r\n` (carriage return, line feed).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="ef512-139">指定如何处理换行符。</span><span class="sxs-lookup"><span data-stu-id="ef512-139">Specifies how to handle newline characters.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="ef512-140">指示是否在新行上编写属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-140">Indicates whether to write attributes on a new line.</span></span> <span data-ttu-id="ef512-141"><xref:System.Xml.XmlWriterSettings.Indent%2A>`true`使用此属性时，应设置为。</span><span class="sxs-lookup"><span data-stu-id="ef512-141"><xref:System.Xml.XmlWriterSettings.Indent%2A> should be set to `true` when using this property.</span></span> <span data-ttu-id="ef512-142">默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="ef512-142">The default is `false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="ef512-143">指示是否编写 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-143">Indicates whether to write an XML declaration.</span></span> <span data-ttu-id="ef512-144">默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="ef512-144">The default is `false`.</span></span>|  
  
 <span data-ttu-id="ef512-145"><xref:System.Xml.XmlWriterSettings.Indent%2A> 和 <xref:System.Xml.XmlWriterSettings.IndentChars%2A> 属性控制无效空白如何格式化。</span><span class="sxs-lookup"><span data-stu-id="ef512-145">The <xref:System.Xml.XmlWriterSettings.Indent%2A> and <xref:System.Xml.XmlWriterSettings.IndentChars%2A> properties control how insignificant white space is formatted.</span></span> <span data-ttu-id="ef512-146">例如，若要缩进元素节点：</span><span class="sxs-lookup"><span data-stu-id="ef512-146">For example, to indent element nodes:</span></span>  
  
 [!code-csharp[XmlWriter_v2#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#8)]
 [!code-vb[XmlWriter_v2#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#8)]  
  
 <span data-ttu-id="ef512-147">使用在 <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> 一个新行上写入每个特性，并增加一层缩进：</span><span class="sxs-lookup"><span data-stu-id="ef512-147">Use the <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> to write each attribute on a new line with one extra level of indentation:</span></span>  
  
 [!code-csharp[XmlWriter_v2#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#9)]
 [!code-vb[XmlWriter_v2#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#9)]  
  
<a name="conformance"></a>   
## <a name="data-conformance"></a><span data-ttu-id="ef512-148">数据一致性</span><span class="sxs-lookup"><span data-stu-id="ef512-148">Data conformance</span></span>  
 <span data-ttu-id="ef512-149">XML 编写器使用类中的两个属性 <xref:System.Xml.XmlWriterSettings> 来检查数据一致性：</span><span class="sxs-lookup"><span data-stu-id="ef512-149">An XML writer uses two properties from the <xref:System.Xml.XmlWriterSettings> class to check for data conformance:</span></span>  
  
-   <span data-ttu-id="ef512-150"><xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>属性指示 XML 编写器检查字符， <xref:System.Xml.XmlException> 如果任何字符超出了合法范围（由 W3C 定义），则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ef512-150">The <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property instructs the XML writer to check characters and throw an <xref:System.Xml.XmlException> exception if any characters are outside the legal range, as defined by the W3C.</span></span>  
  
-   <span data-ttu-id="ef512-151"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>属性将 xml 编写器配置为检查写入的流是否符合由 W3C 定义的格式正确的 XML 1.0 文档或文档片段的规则。</span><span class="sxs-lookup"><span data-stu-id="ef512-151">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C.</span></span> <span data-ttu-id="ef512-152">下表介绍了这三个一致性级别。</span><span class="sxs-lookup"><span data-stu-id="ef512-152">The three conformance levels are described in the following table.</span></span> <span data-ttu-id="ef512-153">默认值为 <xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="ef512-153">The default is <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="ef512-154">有关详细信息，请参阅 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> 属性和 <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> 枚举。</span><span class="sxs-lookup"><span data-stu-id="ef512-154">For details, see the <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property and the <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> enumeration.</span></span>  
  
    |<span data-ttu-id="ef512-155">级别</span><span class="sxs-lookup"><span data-stu-id="ef512-155">Level</span></span>|<span data-ttu-id="ef512-156">描述</span><span class="sxs-lookup"><span data-stu-id="ef512-156">Description</span></span>|  
    |-----------|-----------------|  
    |<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="ef512-157">XML 输出符合格式正确的 XML 1.0 文档的规则，并可由任何符合要求的处理器处理。</span><span class="sxs-lookup"><span data-stu-id="ef512-157">The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="ef512-158">XML 输出符合格式正确的 XML 1.0 文档片段的规则。</span><span class="sxs-lookup"><span data-stu-id="ef512-158">The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</span></span>|  
    |<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="ef512-159">XML 编写器根据传入的数据，确定要应用 (文档或片段) 的哪些级别的聘约确认检查。</span><span class="sxs-lookup"><span data-stu-id="ef512-159">The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</span></span>|  
  
<a name="writing_elements"></a>   
## <a name="writing-elements"></a><span data-ttu-id="ef512-160">编写元素</span><span class="sxs-lookup"><span data-stu-id="ef512-160">Writing elements</span></span>  
 <span data-ttu-id="ef512-161">您可以使用以下 <xref:System.Xml.XmlWriter> 方法来编写元素节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-161">You can use the following <xref:System.Xml.XmlWriter> methods to write element nodes.</span></span> <span data-ttu-id="ef512-162">有关示例，请参阅列出的方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-162">For examples, see the methods listed.</span></span>  
  
|<span data-ttu-id="ef512-163">使用</span><span class="sxs-lookup"><span data-stu-id="ef512-163">Use</span></span>|<span data-ttu-id="ef512-164">功能</span><span class="sxs-lookup"><span data-stu-id="ef512-164">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteElementString%2A>|<span data-ttu-id="ef512-165">写入整个元素节点，包括字符串值。</span><span class="sxs-lookup"><span data-stu-id="ef512-165">Write an entire element  node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A>|<span data-ttu-id="ef512-166">通过使用多个方法调用来写入元素值。</span><span class="sxs-lookup"><span data-stu-id="ef512-166">To write an element value by using multiple method calls.</span></span>  <span data-ttu-id="ef512-167">例如，可以调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 来编写类型化的值，调用 <xref:System.Xml.XmlWriter.WriteCharEntity%2A> 来编写字符实体，调用 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 来编写属性，也可以编写子元素。</span><span class="sxs-lookup"><span data-stu-id="ef512-167">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value, <xref:System.Xml.XmlWriter.WriteCharEntity%2A> to write a character entity, <xref:System.Xml.XmlWriter.WriteAttributeString%2A> to write an attribute, or you can write a child element.</span></span> <span data-ttu-id="ef512-168">此方法是更复杂的方法版本 <xref:System.Xml.XmlWriter.WriteElementString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-168">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="ef512-169">若要关闭元素，可以调用 <xref:System.Xml.XmlWriter.WriteEndElement%2A> 或 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-169">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteNode%2A>|<span data-ttu-id="ef512-170">复制在或对象当前位置找到的元素节点 <xref:System.Xml.XmlReader> <xref:System.Xml.XPath.XPathNavigator> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-170">To copy an element node found at the current position of an <xref:System.Xml.XmlReader> or <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="ef512-171">在调用时，会将源对象中的所有内容复制到 <xref:System.Xml.XmlWriter> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-171">When called, it copies everything from the source object to the <xref:System.Xml.XmlWriter> instance.</span></span>|  
  
<a name="writing_attributes"></a>   
## <a name="writing-attributes"></a><span data-ttu-id="ef512-172">编写属性</span><span class="sxs-lookup"><span data-stu-id="ef512-172">Writing attributes</span></span>  
 <span data-ttu-id="ef512-173">您可以使用以下 <xref:System.Xml.XmlWriter> 方法在元素节点上编写属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-173">You can use the following <xref:System.Xml.XmlWriter> methods to write attributes on element nodes.</span></span> <span data-ttu-id="ef512-174">这些方法还可用于在元素上创建命名空间声明，如下一部分中所述。</span><span class="sxs-lookup"><span data-stu-id="ef512-174">These methods can also be used to create namespace declarations on an element, as discussed in the next section.</span></span>  
  
|<span data-ttu-id="ef512-175">使用</span><span class="sxs-lookup"><span data-stu-id="ef512-175">Use</span></span>|<span data-ttu-id="ef512-176">功能</span><span class="sxs-lookup"><span data-stu-id="ef512-176">To</span></span>|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteAttributeString%2A>|<span data-ttu-id="ef512-177">写入整个属性节点，包括字符串值。</span><span class="sxs-lookup"><span data-stu-id="ef512-177">To write an entire attribute node, including a string value.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>|<span data-ttu-id="ef512-178">使用多个方法调用编写特性值。</span><span class="sxs-lookup"><span data-stu-id="ef512-178">To write the attribute value using multiple method calls.</span></span> <span data-ttu-id="ef512-179">例如，可以调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 来编写类型化值。</span><span class="sxs-lookup"><span data-stu-id="ef512-179">For example, you can call <xref:System.Xml.XmlWriter.WriteValue%2A> to write a typed value.</span></span> <span data-ttu-id="ef512-180">此方法是更复杂的方法版本 <xref:System.Xml.XmlWriter.WriteElementString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-180">This is a more sophisticated version of the <xref:System.Xml.XmlWriter.WriteElementString%2A> method.</span></span><br /><br /> <span data-ttu-id="ef512-181">若要关闭元素，请调用 <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-181">To close the element, you call the <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> method.</span></span>|  
|<xref:System.Xml.XmlWriter.WriteAttributes%2A>|<span data-ttu-id="ef512-182">复制在对象当前位置找到的所有属性 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-182">To copy all the attributes found at the current position of an <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="ef512-183">写入的属性取决于读取器当前所处节点的类型：</span><span class="sxs-lookup"><span data-stu-id="ef512-183">The attributes that are written depend on the type of node the reader is currently positioned on:</span></span><br /><br /> <span data-ttu-id="ef512-184">-对于特性节点，它将写入当前特性，然后写入特性的其余部分，直到元素结束标记为止。</span><span class="sxs-lookup"><span data-stu-id="ef512-184">-   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.</span></span><br /><span data-ttu-id="ef512-185">-对于元素节点，它将写入元素包含的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-185">-   For an element node, it writes all attributes contained by the element.</span></span><br /><span data-ttu-id="ef512-186">-对于 XML 声明节点，它将写入声明中的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-186">-   For an XML declaration node, it writes all the attributes in the declaration.</span></span><br /><span data-ttu-id="ef512-187">-对于所有其他节点类型，该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="ef512-187">-   For all other node types, the method throws an exception.</span></span>|  
  
<a name="handling_ns"></a>   
## <a name="handling-namespaces"></a><span data-ttu-id="ef512-188">处理命名空间</span><span class="sxs-lookup"><span data-stu-id="ef512-188">Handling namespaces</span></span>  
 <span data-ttu-id="ef512-189">命名空间用于限定 XML 文档中的元素和属性的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-189">Namespaces are used to qualify element and attribute names in an XML document.</span></span> <span data-ttu-id="ef512-190">命名空间前缀将元素和属性与命名空间关联，后者又与 URI 引用关联。</span><span class="sxs-lookup"><span data-stu-id="ef512-190">Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references.</span></span> <span data-ttu-id="ef512-191">命名空间在 XML 文档中实现元素和属性名称的唯一性。</span><span class="sxs-lookup"><span data-stu-id="ef512-191">Namespaces create element and attribute name uniqueness in an XML document.</span></span>  
  
 <span data-ttu-id="ef512-192"><xref:System.Xml.XmlWriter>维护与当前命名空间范围中定义的所有命名空间对应的命名空间堆栈。</span><span class="sxs-lookup"><span data-stu-id="ef512-192">The <xref:System.Xml.XmlWriter> maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope.</span></span> <span data-ttu-id="ef512-193">在编写元素和属性时，可以通过下列方式利用命名空间：</span><span class="sxs-lookup"><span data-stu-id="ef512-193">When writing elements and attributes you can utilize namespaces in the following ways:</span></span>  
  
-   <span data-ttu-id="ef512-194">使用方法手动声明命名空间 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-194">Declare namespaces manually by using the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method.</span></span> <span data-ttu-id="ef512-195">如果知道如何最大程度地优化命名空间声明的数目，可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-195">This can be useful when you know how to best optimize the number of namespace declarations.</span></span> <span data-ttu-id="ef512-196">有关示例，请参见 <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-196">For an example, see the <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
-   <span data-ttu-id="ef512-197">用新的命名空间重写当前命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-197">Override the current namespace declaration with a new namespace.</span></span> <span data-ttu-id="ef512-198">在下面的代码中， <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 方法将前缀的命名空间 URI `"x"` 从更改 `"123"` 为 `"abc"` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-198">In the following code, the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method changes the namespace URI for the `"x"` prefix from `"123"` to `"abc"`.</span></span>  
  
     [!code-csharp[XmlWriter_v2#18](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#18)]
     [!code-vb[XmlWriter_v2#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#18)]  
  
     <span data-ttu-id="ef512-199">代码生成以下 XML 字符串：</span><span class="sxs-lookup"><span data-stu-id="ef512-199">The code generates the following XML string:</span></span>  
  
    ```xml  
    <x:root xmlns:x="123">  
      <item xmlns:x="abc" />  
    </x:root>  
    ```  
  
-   <span data-ttu-id="ef512-200">在编写属性或元素时指定命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-200">Specify a namespace prefix when writing attributes or elements.</span></span> <span data-ttu-id="ef512-201">许多用于写入元素和属性的方法使您能够执行此操作。</span><span class="sxs-lookup"><span data-stu-id="ef512-201">Many of the methods used to write element and attributes enable you to do this.</span></span> <span data-ttu-id="ef512-202">例如， <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> 方法编写开始标记并将其与指定的命名空间和前缀关联。</span><span class="sxs-lookup"><span data-stu-id="ef512-202">For example, the <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> method writes a start tag and associates it with a specified namespace and prefix.</span></span>  
  
<a name="writing_types"></a>   
## <a name="writing-typed-data"></a><span data-ttu-id="ef512-203">写入类型化数据</span><span class="sxs-lookup"><span data-stu-id="ef512-203">Writing typed data</span></span>  
 <span data-ttu-id="ef512-204"><xref:System.Xml.XmlWriter.WriteValue%2A>方法接受 (CLR) 对象的公共语言运行时，根据 XML 架构定义语言 (XSD) 数据类型转换规则，将输入值转换为其字符串表示形式，并使用方法将其写入 <xref:System.Xml.XmlWriter.WriteString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-204">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="ef512-205">这比使用类中的方法在 <xref:System.Xml.XmlConvert> 将类型化数据转换为字符串值之前将其转换为字符串值更容易。</span><span class="sxs-lookup"><span data-stu-id="ef512-205">This is easier than using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="ef512-206">写入文本时，键入的值将通过使用 <xref:System.Xml.XmlConvert> 该架构类型的规则序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-206">When writing to text, the typed value is serialized to text by using the <xref:System.Xml.XmlConvert> rules for that schema type.</span></span>  
  
 <span data-ttu-id="ef512-207">有关对应于 CLR 类型的默认 XSD 数据类型，请参阅 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-207">For default XSD data types that correspond to CLR types, see the <xref:System.Xml.XmlWriter.WriteValue%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-208"><xref:System.Xml.XmlWriter>还可用于写入到 XML 数据存储区。</span><span class="sxs-lookup"><span data-stu-id="ef512-208">The <xref:System.Xml.XmlWriter> can also be used to write to an XML data store.</span></span> <span data-ttu-id="ef512-209">例如，<xref:System.Xml.XPath.XPathNavigator> 类可以创建一个 <xref:System.Xml.XmlWriter> 对象，用于为 <xref:System.Xml.XmlDocument> 对象创建节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-209">For example, the <xref:System.Xml.XPath.XPathNavigator> class can create an <xref:System.Xml.XmlWriter> object to create nodes for an <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="ef512-210">如果数据存储具有可供其使用的架构信息，则 <xref:System.Xml.XmlWriter.WriteValue%2A> 如果您尝试转换为不允许的类型，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="ef512-210">If the data store has schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method throws an exception if you try to convert to a type that is not allowed.</span></span> <span data-ttu-id="ef512-211">如果数据存储没有可用的架构信息，则该 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法将所有值视为一个 `xsd:anySimpleType` 类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-211">If the data store does not have schema information available to it, the <xref:System.Xml.XmlWriter.WriteValue%2A> method treats all values as an `xsd:anySimpleType` type.</span></span>  
  
<a name="close"></a>   
## <a name="closing-the-xml-writer"></a><span data-ttu-id="ef512-212">关闭 XML 编写器</span><span class="sxs-lookup"><span data-stu-id="ef512-212">Closing the XML writer</span></span>  
 <span data-ttu-id="ef512-213">使用 <xref:System.Xml.XmlWriter> 方法输出 XML 时，在调用方法之前，不会写入元素和特性 <xref:System.Xml.XmlWriter.Close%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-213">When you use <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes are not written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="ef512-214">例如，如果使用 <xref:System.Xml.XmlWriter> 填充 <xref:System.Xml.XmlDocument> 对象，则在关闭实例之前，将无法在目标文档中看到已写入的元素和属性 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-214">For example, if you are using <xref:System.Xml.XmlWriter> to populate an <xref:System.Xml.XmlDocument> object, you won't be able to see the written elements and attributes in the target document until you close the <xref:System.Xml.XmlWriter> instance.</span></span>  
  
<a name="async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="ef512-215">异步编程</span><span class="sxs-lookup"><span data-stu-id="ef512-215">Asynchronous programming</span></span>  
 <span data-ttu-id="ef512-216">大多数 <xref:System.Xml.XmlWriter> 方法都具有异步的对应项，它们的方法名称末尾包含 "Async"。</span><span class="sxs-lookup"><span data-stu-id="ef512-216">Most of the <xref:System.Xml.XmlWriter> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="ef512-217">例如，的异步等效项 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 是 <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-217">For example, the asynchronous equivalent of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> is <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
 <span data-ttu-id="ef512-218">对于没有 <xref:System.Xml.XmlWriter.WriteValue%2A> 异步对应的方法，请将返回值转换为字符串，并 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 改用方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-218">For the <xref:System.Xml.XmlWriter.WriteValue%2A> method, which doesn't have an asynchronous counterpart, convert the return value to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method instead.</span></span>  
  
<a name="security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="ef512-219">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="ef512-219">Security considerations</span></span>  
 <span data-ttu-id="ef512-220">使用类时，请注意以下 <xref:System.Xml.XmlWriter> 事项：</span><span class="sxs-lookup"><span data-stu-id="ef512-220">Consider the following when working with the <xref:System.Xml.XmlWriter> class:</span></span>  
  
-   <span data-ttu-id="ef512-221">引发的异常 <xref:System.Xml.XmlWriter> 可能会泄露您不希望冒泡到应用程序的路径信息。</span><span class="sxs-lookup"><span data-stu-id="ef512-221">Exceptions thrown by the <xref:System.Xml.XmlWriter> can disclose path information that you do not want bubbled up to the app.</span></span> <span data-ttu-id="ef512-222">应用必须捕获异常并对其进行相应处理。</span><span class="sxs-lookup"><span data-stu-id="ef512-222">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="ef512-223"><xref:System.Xml.XmlWriter> 不会验证传递给或方法的任何数据 <xref:System.Xml.XmlWriter.WriteDocType%2A> <xref:System.Xml.XmlWriter.WriteRaw%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-223"><xref:System.Xml.XmlWriter> does not validate any data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> or <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="ef512-224">不应将任意数据传递给这些方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-224">You should not pass arbitrary data to these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-225">下面的示例代码演示如何使用异步 API 来生成 XML。</span><span class="sxs-lookup"><span data-stu-id="ef512-225">The following example code shows how to use the asynchronous API to generate XML.</span></span>  
  
```csharp  
async Task TestWriter(Stream stream)   
{  
    XmlWriterSettings settings = new XmlWriterSettings();  
    settings.Async = true;  
  
    using (XmlWriter writer = XmlWriter.Create(stream, settings)) {  
        await writer.WriteStartElementAsync("pf", "root", "http://ns");  
        await writer.WriteStartElementAsync(null, "sub", null);  
        await writer.WriteAttributeStringAsync(null, "att", null, "val");  
        await writer.WriteStringAsync("text");  
        await writer.WriteEndElementAsync();  
        await writer.WriteProcessingInstructionAsync("pName", "pValue");  
        await writer.WriteCommentAsync("cValue");  
        await writer.WriteCDataAsync("cdata value");  
        await writer.WriteEndElementAsync();  
        await writer.FlushAsync();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="ef512-226">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="ef512-226">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-227">初始化 <see cref="T:System.Xml.XmlWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-227">Initializes a new instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="xmlWriter.Close " FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void Close ();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="xmlWriter.Close " FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-228">当在派生类中被重写时，将关闭此流和基础流。</span><span class="sxs-lookup"><span data-stu-id="ef512-228">When overridden in a derived class, closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-229">任何保持打开状态的元素或属性都将自动关闭。</span><span class="sxs-lookup"><span data-stu-id="ef512-229">Any elements or attributes left open are automatically closed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ef512-230">使用 <xref:System.Xml.XmlWriter> 方法输出 XML 时，在调用方法之前，将不会写入元素和特性 <xref:System.Xml.XmlWriter.Close%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-230">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="ef512-231">例如，如果你使用 XmlWriter 来填充，则在 <xref:System.Xml.XmlDocument> 关闭之前， <xref:System.Xml.XmlWriter> 你将无法观察目标文档中的已写入元素和属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-231">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-232">下面的示例写入 XML 节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-232">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-233">在调用 <see langword="Close" /> 之后执行要编写其他输出的调用，或者此调用的结果是无效的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ef512-233">A call is made to write more output after <see langword="Close" /> has been called or the result of this call is an invalid XML document.</span></span>

<span data-ttu-id="ef512-234">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-234">-or-</span></span>

<span data-ttu-id="ef512-235">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-235">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-236">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-236">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ef512-237">创建一个新的 <see cref="T:System.Xml.XmlWriter" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-237">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-238">某些 <xref:System.Xml.XmlWriter.Create%2A> 重载包含 `settings` 接受对象的参数 <xref:System.Xml.XmlWriterSettings> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-238">Some of the <xref:System.Xml.XmlWriter.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlWriterSettings> object.</span></span> <span data-ttu-id="ef512-239">您可以使用此对象执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="ef512-239">You can use this object to:</span></span>  
  
-   <span data-ttu-id="ef512-240">指定要在创建的对象上支持的功能 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-240">Specify which features you want supported on the created <xref:System.Xml.XmlWriter> object.</span></span>  
  
-   <span data-ttu-id="ef512-241">重新使用 <xref:System.Xml.XmlWriterSettings> 对象以创建多个编写器对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-241">Reuse the <xref:System.Xml.XmlWriterSettings> object to create multiple writer objects.</span></span> <span data-ttu-id="ef512-242">将为每个创建的写入器复制 <xref:System.Xml.XmlWriterSettings> 对象并标记为只读。</span><span class="sxs-lookup"><span data-stu-id="ef512-242">The <xref:System.Xml.XmlWriterSettings> object is copied and marked read-only for each created writer.</span></span> <span data-ttu-id="ef512-243">更改 <xref:System.Xml.XmlWriterSettings> 实例上的设置不会影响具有相同设置的现有写入器。</span><span class="sxs-lookup"><span data-stu-id="ef512-243">Changes to the settings on an <xref:System.Xml.XmlWriterSettings> instance do not affect existing writers with the same settings.</span></span> <span data-ttu-id="ef512-244">因此，可以使用相同的设置创建多个具有相同功能的写入器。</span><span class="sxs-lookup"><span data-stu-id="ef512-244">Thus, you can use the same settings to create multiple writers with the same functionality.</span></span> <span data-ttu-id="ef512-245">也可以修改 <xref:System.Xml.XmlWriterSettings> 实例上的设置并创建具有不同功能集的新写入器。</span><span class="sxs-lookup"><span data-stu-id="ef512-245">Or, you can modify the settings on an <xref:System.Xml.XmlWriterSettings> instance and create a new writer with a different set of features.</span></span>  
  
-   <span data-ttu-id="ef512-246">向现有的 XML 编写器添加功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-246">Add features to an existing XML writer.</span></span> <span data-ttu-id="ef512-247"><xref:System.Xml.XmlWriter.Create%2A> 方法可以接受其他 <xref:System.Xml.XmlWriter> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-247">The <xref:System.Xml.XmlWriter.Create%2A> method can accept another <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="ef512-248">基础 <xref:System.Xml.XmlWriter> 对象不必是静态方法创建的 XML 编写器 <xref:System.Xml.XmlWriter.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-248">The underlying <xref:System.Xml.XmlWriter> object does not have to be an XML writer created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span> <span data-ttu-id="ef512-249">例如，你可以指定用户定义的 XML 编写器来向添加附加功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-249">For example, you can specify a user-defined XML writer to add additional features to.</span></span>  
  
-   <span data-ttu-id="ef512-250">充分利用功能，如更好的一致性检查和符合 [XML 1.0 建议](https://www.w3.org/TR/2006/REC-xml-20060816/) ，这些建议仅可用于 <xref:System.Xml.XmlWriter> 静态方法创建的对象 <xref:System.Xml.XmlWriter.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-250">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/) that are available only on <xref:System.Xml.XmlWriter> objects created by the static <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-251">如果使用 <xref:System.Xml.XmlWriter.Create%2A> 不接受对象的重载，将 <xref:System.Xml.XmlWriterSettings> 使用以下默认写入器设置：</span><span class="sxs-lookup"><span data-stu-id="ef512-251">If you use a <xref:System.Xml.XmlWriter.Create%2A> overload that doesn't accept an <xref:System.Xml.XmlWriterSettings> object, the following default writer settings are used:</span></span>  
  
|<span data-ttu-id="ef512-252">设置</span><span class="sxs-lookup"><span data-stu-id="ef512-252">Setting</span></span>|<span data-ttu-id="ef512-253">默认</span><span class="sxs-lookup"><span data-stu-id="ef512-253">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="ef512-254">两个空格</span><span class="sxs-lookup"><span data-stu-id="ef512-254">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="ef512-255"><xref:System.Xml.NamespaceHandling.Default> (不删除) </span><span class="sxs-lookup"><span data-stu-id="ef512-255"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="ef512-256">`\r\n`（回车符、换行符）</span><span class="sxs-lookup"><span data-stu-id="ef512-256">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
> [!NOTE]
>  <span data-ttu-id="ef512-257">尽管 .NET Framework 包括类 <xref:System.Xml.XmlTextWriter> ，该类是类的具体实现 <xref:System.Xml.XmlWriter> ，但建议 <xref:System.Xml.XmlWriter> 使用方法创建实例 <xref:System.Xml.XmlWriter.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-257">Although the .NET Framework includes the <xref:System.Xml.XmlTextWriter> class, which is a concrete implementation of the <xref:System.Xml.XmlWriter> class, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="ef512-258">要对其写入的流。</span><span class="sxs-lookup"><span data-stu-id="ef512-258">The stream to which you want to write.</span></span> <span data-ttu-id="ef512-259"><see cref="T:System.Xml.XmlWriter" /> 编写 XML 1.0 文本语法并将其追加到指定的流中。</span><span class="sxs-lookup"><span data-stu-id="ef512-259">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <summary><span data-ttu-id="ef512-260">使用指定的流创建一个新的 <see cref="T:System.Xml.XmlWriter" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-260">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified stream.</span></span></summary>
        <returns><span data-ttu-id="ef512-261">一个 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-261">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-262">使用此重载时，将 <xref:System.Xml.XmlWriterSettings> 使用带有以下默认设置的对象创建 XML 编写器：</span><span class="sxs-lookup"><span data-stu-id="ef512-262">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with the following default settings is used to create the XML writer:</span></span>  
  
|<span data-ttu-id="ef512-263">设置</span><span class="sxs-lookup"><span data-stu-id="ef512-263">Setting</span></span>|<span data-ttu-id="ef512-264">默认</span><span class="sxs-lookup"><span data-stu-id="ef512-264">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="ef512-265">两个空格</span><span class="sxs-lookup"><span data-stu-id="ef512-265">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="ef512-266"><xref:System.Xml.NamespaceHandling.Default> (不删除) </span><span class="sxs-lookup"><span data-stu-id="ef512-266"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="ef512-267">`\r\n`（回车符、换行符）</span><span class="sxs-lookup"><span data-stu-id="ef512-267">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="ef512-268">如果要在创建的编写器上指定支持的功能，请使用将 <xref:System.Xml.XmlWriterSettings> 对象作为其参数之一的重载，并将对象传入 <xref:System.Xml.XmlWriterSettings> 自定义设置。</span><span class="sxs-lookup"><span data-stu-id="ef512-268">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 <span data-ttu-id="ef512-269">此外，XmlWriter 始终将字节顺序标记 (BOM) 写入基础数据流;但是，某些流不能有 BOM。</span><span class="sxs-lookup"><span data-stu-id="ef512-269">Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="ef512-270">若要省略 BOM，请创建新的 <xref:System.Xml.XmlWriterSettings> 对象，并将 "编码" 属性设置为新的 <xref:System.Text.UTF8Encoding> 对象，该对象的构造函数中的布尔值设置为 false。</span><span class="sxs-lookup"><span data-stu-id="ef512-270">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-271">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="ef512-271">The following example writes an XML fragment to a memory stream.</span></span> <span data-ttu-id="ef512-272"> (它使用 <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> 重载，该重载还配置新 XML 编写器实例上的设置。 ) </span><span class="sxs-lookup"><span data-stu-id="ef512-272">(It uses the <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> overload, which also configures the settings on the new XML writer instance.)</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-273"><paramref name="stream" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-273">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="ef512-274">要写入的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-274">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="ef512-275"><see cref="T:System.Xml.XmlWriter" /> 编写 XML 1.0 文本语法，并将该语法追加到指定 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-275">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <summary><span data-ttu-id="ef512-276">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 创建一个新的 <see cref="T:System.IO.TextWriter" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-276">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <returns><span data-ttu-id="ef512-277">一个 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-277">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-278">使用此重载时，将 <xref:System.Xml.XmlWriterSettings> 使用具有默认设置的对象创建 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="ef512-278">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="ef512-279">设置</span><span class="sxs-lookup"><span data-stu-id="ef512-279">Setting</span></span>|<span data-ttu-id="ef512-280">默认</span><span class="sxs-lookup"><span data-stu-id="ef512-280">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="ef512-281">两个空格</span><span class="sxs-lookup"><span data-stu-id="ef512-281">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="ef512-282"><xref:System.Xml.NamespaceHandling.Default> (不删除) </span><span class="sxs-lookup"><span data-stu-id="ef512-282"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="ef512-283">`\r\n`（回车符、换行符）</span><span class="sxs-lookup"><span data-stu-id="ef512-283">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="ef512-284">如果要在创建的编写器上指定支持的功能，请使用将 <xref:System.Xml.XmlWriterSettings> 对象作为其参数之一的重载，并将对象传入 <xref:System.Xml.XmlWriterSettings> 自定义设置。</span><span class="sxs-lookup"><span data-stu-id="ef512-284">If you want to specify the features to support on the created writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-285">下面的示例创建一个输出到控制台的编写器。</span><span class="sxs-lookup"><span data-stu-id="ef512-285">The following example creates a writer that outputs to the console.</span></span>  
  
 [!code-csharp[XmlWriter_v2#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#3)]
 [!code-vb[XmlWriter_v2#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-286"><paramref name="text" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-286">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="ef512-287">要对其写入的文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-287">The file to which you want to write.</span></span> <span data-ttu-id="ef512-288"><see cref="T:System.Xml.XmlWriter" /> 在指定路径上创建一个文件，并采用 XML 1.0 文本语法写入该文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-288">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="ef512-289"><paramref name="outputFileName" /> 必须为文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="ef512-289">The <paramref name="outputFileName" /> must be a file system path.</span></span></param>
        <summary><span data-ttu-id="ef512-290">使用指定的文件名创建一个新的 <see cref="T:System.Xml.XmlWriter" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-290">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified filename.</span></span></summary>
        <returns><span data-ttu-id="ef512-291">一个 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-291">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-292">使用此重载时，将 <xref:System.Xml.XmlWriterSettings> 使用具有默认设置的对象创建 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="ef512-292">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="ef512-293">设置</span><span class="sxs-lookup"><span data-stu-id="ef512-293">Setting</span></span>|<span data-ttu-id="ef512-294">默认</span><span class="sxs-lookup"><span data-stu-id="ef512-294">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="ef512-295">两个空格</span><span class="sxs-lookup"><span data-stu-id="ef512-295">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="ef512-296"><xref:System.Xml.NamespaceHandling.Default> (不删除) </span><span class="sxs-lookup"><span data-stu-id="ef512-296"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="ef512-297">`\r\n`（回车符、换行符）</span><span class="sxs-lookup"><span data-stu-id="ef512-297">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="ef512-298">如果要在创建的 XML 编写器上指定支持的功能，请使用将 <xref:System.Xml.XmlWriterSettings> 对象作为其参数之一的重载，并传入 <xref:System.Xml.XmlWriterSettings> 自定义设置的对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-298">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-299">下面的示例创建一个 <xref:System.Xml.XmlWriter> 对象并写入一个 book 节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-299">The following example creates an <xref:System.Xml.XmlWriter> object and writes a book node.</span></span>  
  
 [!code-csharp[XmlWriter_v2#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#2)]
 [!code-vb[XmlWriter_v2#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-300"><paramref name="url" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-300">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="ef512-301">要写入的 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-301">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="ef512-302">由 <see cref="T:System.Xml.XmlWriter" /> 写入的内容被追加到 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-302">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="ef512-303">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 创建一个新的 <see cref="T:System.Text.StringBuilder" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-303">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="ef512-304">一个 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-304">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-305">使用此重载时，将 <xref:System.Xml.XmlWriterSettings> 使用具有默认设置的对象创建 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="ef512-305">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="ef512-306">设置</span><span class="sxs-lookup"><span data-stu-id="ef512-306">Setting</span></span>|<span data-ttu-id="ef512-307">默认</span><span class="sxs-lookup"><span data-stu-id="ef512-307">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="ef512-308">两个空格</span><span class="sxs-lookup"><span data-stu-id="ef512-308">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="ef512-309"><xref:System.Xml.NamespaceHandling.Default> (不删除) </span><span class="sxs-lookup"><span data-stu-id="ef512-309"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="ef512-310">`\r\n`（回车符、换行符）</span><span class="sxs-lookup"><span data-stu-id="ef512-310">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="ef512-311">如果要在创建的 XML 编写器上指定支持的功能，请使用将 <xref:System.Xml.XmlWriterSettings> 对象作为其参数之一的重载，并传入 <xref:System.Xml.XmlWriterSettings> 自定义设置的对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-311">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-312"><paramref name="builder" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-312">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="ef512-313">要用作基础编写器的 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-313">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <summary><span data-ttu-id="ef512-314">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 对象创建一个新的 <see cref="T:System.Xml.XmlWriter" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-314">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></summary>
        <returns><span data-ttu-id="ef512-315">一个 <see cref="T:System.Xml.XmlWriter" /> 对象，是指定的 <see cref="T:System.Xml.XmlWriter" /> 对象周围的包装。</span><span class="sxs-lookup"><span data-stu-id="ef512-315">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-316">此方法允许您向基础对象添加功能 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-316">This method allows you add features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="ef512-317">基础 <xref:System.Xml.XmlWriter> 对象可以是由方法创建的对象 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> ，也可以是使用实现创建的对象 <xref:System.Xml.XmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-317">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 <span data-ttu-id="ef512-318">使用此重载时，将 <xref:System.Xml.XmlWriterSettings> 使用具有默认设置的对象创建 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="ef512-318">When you use this overload, an <xref:System.Xml.XmlWriterSettings> object with default settings is used to create the XML writer.</span></span>  
  
|<span data-ttu-id="ef512-319">设置</span><span class="sxs-lookup"><span data-stu-id="ef512-319">Setting</span></span>|<span data-ttu-id="ef512-320">默认</span><span class="sxs-lookup"><span data-stu-id="ef512-320">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="ef512-321">两个空格</span><span class="sxs-lookup"><span data-stu-id="ef512-321">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<span data-ttu-id="ef512-322"><xref:System.Xml.NamespaceHandling.Default> (不删除) </span><span class="sxs-lookup"><span data-stu-id="ef512-322"><xref:System.Xml.NamespaceHandling.Default> (no removal)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="ef512-323">`\r\n`（回车符、换行符）</span><span class="sxs-lookup"><span data-stu-id="ef512-323">`\r\n` (carriage return, new line)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 <span data-ttu-id="ef512-324">如果要在创建的 XML 编写器上指定支持的功能，请使用将 <xref:System.Xml.XmlWriterSettings> 对象作为其参数之一的重载，并传入 <xref:System.Xml.XmlWriterSettings> 自定义设置的对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-324">If you want to specify the features to support on the created XML writer, use an overload that takes an <xref:System.Xml.XmlWriterSettings> object as one of its arguments, and pass in a <xref:System.Xml.XmlWriterSettings> object with your custom settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-325"><paramref name="writer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-325">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings settings);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings? settings);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="ef512-326">要对其写入的流。</span><span class="sxs-lookup"><span data-stu-id="ef512-326">The stream to which you want to write.</span></span> <span data-ttu-id="ef512-327"><see cref="T:System.Xml.XmlWriter" /> 编写 XML 1.0 文本语法并将其追加到指定的流中。</span><span class="sxs-lookup"><span data-stu-id="ef512-327">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified stream.</span></span></param>
        <param name="settings"><span data-ttu-id="ef512-328">用于配置新 <see cref="T:System.Xml.XmlWriterSettings" /> 实例的 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-328">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="ef512-329">如果这是 <see langword="null" />，则使用具有默认设置的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-329">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="ef512-330">如果将 <see cref="T:System.Xml.XmlWriter" /> 用于 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法，则应使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性获取具有正确设置的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-330">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="ef512-331">这样可以确保所创建的 <see cref="T:System.Xml.XmlWriter" /> 对象的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="ef512-331">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="ef512-332">使用流和 <see cref="T:System.Xml.XmlWriter" /> 对象创建一个新的 <see cref="T:System.Xml.XmlWriterSettings" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-332">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the stream and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="ef512-333">一个 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-333">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-334">XmlWriter 始终将字节顺序标记 (BOM) 写入基础数据流;但是，某些流不能有 BOM。</span><span class="sxs-lookup"><span data-stu-id="ef512-334">XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</span></span> <span data-ttu-id="ef512-335">若要省略 BOM，请创建新的 <xref:System.Xml.XmlWriterSettings> 对象，并将 "编码" 属性设置为新的 <xref:System.Text.UTF8Encoding> 对象，该对象的构造函数中的布尔值设置为 false。</span><span class="sxs-lookup"><span data-stu-id="ef512-335">To omit the BOM, create a new <xref:System.Xml.XmlWriterSettings> object and set the Encoding property to be a new <xref:System.Text.UTF8Encoding> object with the Boolean value in the constructor set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-336">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="ef512-336">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-337"><paramref name="stream" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-337">The <paramref name="stream" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings settings);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings? settings);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="ef512-338">要写入的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-338">The <see cref="T:System.IO.TextWriter" /> to which you want to write.</span></span> <span data-ttu-id="ef512-339"><see cref="T:System.Xml.XmlWriter" /> 编写 XML 1.0 文本语法，并将该语法追加到指定 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-339">The <see cref="T:System.Xml.XmlWriter" /> writes XML 1.0 text syntax and appends it to the specified <see cref="T:System.IO.TextWriter" />.</span></span></param>
        <param name="settings"><span data-ttu-id="ef512-340">用于配置新 <see cref="T:System.Xml.XmlWriterSettings" /> 实例的 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-340">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="ef512-341">如果这是 <see langword="null" />，则使用具有默认设置的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-341">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="ef512-342">如果将 <see cref="T:System.Xml.XmlWriter" /> 用于 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法，则应使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性获取具有正确设置的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-342">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="ef512-343">这样可以确保所创建的 <see cref="T:System.Xml.XmlWriter" /> 对象的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="ef512-343">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="ef512-344">使用 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.IO.TextWriter" /> 对象创建一个新的 <see cref="T:System.Xml.XmlWriterSettings" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-344">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="ef512-345">一个 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-345">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef512-346">下面的示例写出一个 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-346">The following example writes out an XML string.</span></span>  
  
 [!code-csharp[XmlWriter_v2#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#4)]
 [!code-vb[XmlWriter_v2#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-347"><paramref name="text" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-347">The <paramref name="text" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings? settings);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (outputFileName, settings)" />
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings settings);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="ef512-348">要对其写入的文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-348">The file to which you want to write.</span></span> <span data-ttu-id="ef512-349"><see cref="T:System.Xml.XmlWriter" /> 在指定路径上创建一个文件，并采用 XML 1.0 文本语法写入该文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-349">The <see cref="T:System.Xml.XmlWriter" /> creates a file at the specified path and writes to it in XML 1.0 text syntax.</span></span> <span data-ttu-id="ef512-350"><paramref name="outputFileName" /> 必须为文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="ef512-350">The <paramref name="outputFileName" /> must be a file system path.</span></span></param>
        <param name="settings"><span data-ttu-id="ef512-351">用于配置新 <see cref="T:System.Xml.XmlWriterSettings" /> 实例的 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-351">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="ef512-352">如果这是 <see langword="null" />，则使用具有默认设置的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-352">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="ef512-353">如果将 <see cref="T:System.Xml.XmlWriter" /> 用于 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法，则应使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性获取具有正确设置的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-353">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="ef512-354">这样可以确保所创建的 <see cref="T:System.Xml.XmlWriter" /> 对象的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="ef512-354">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="ef512-355">使用文件名和 <see cref="T:System.Xml.XmlWriter" /> 对象创建一个新的 <see cref="T:System.Xml.XmlWriterSettings" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-355">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the filename and <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></summary>
        <returns><span data-ttu-id="ef512-356">一个 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-356">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef512-357">下面的示例 <xref:System.Xml.XmlWriter> 使用定义的设置创建一个对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-357">The following example creates an <xref:System.Xml.XmlWriter> object with the defined settings.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-358"><paramref name="url" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-358">The <paramref name="url" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings settings);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings? settings);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="ef512-359">要写入的 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-359">The <see cref="T:System.Text.StringBuilder" /> to which to write to.</span></span> <span data-ttu-id="ef512-360">由 <see cref="T:System.Xml.XmlWriter" /> 写入的内容被追加到 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-360">Content written by the <see cref="T:System.Xml.XmlWriter" /> is appended to the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <param name="settings"><span data-ttu-id="ef512-361">用于配置新 <see cref="T:System.Xml.XmlWriterSettings" /> 实例的 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-361">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="ef512-362">如果这是 <see langword="null" />，则使用具有默认设置的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-362">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="ef512-363">如果将 <see cref="T:System.Xml.XmlWriter" /> 用于 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法，则应使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性获取具有正确设置的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-363">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="ef512-364">这样可以确保所创建的 <see cref="T:System.Xml.XmlWriter" /> 对象的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="ef512-364">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="ef512-365">使用 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Text.StringBuilder" /> 对象创建一个新的 <see cref="T:System.Xml.XmlWriterSettings" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-365">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the <see cref="T:System.Text.StringBuilder" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="ef512-366">一个 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-366">An <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-367"><paramref name="builder" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-367">The <paramref name="builder" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings settings);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings? settings);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="ef512-368">要用作基础编写器的 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-368">The <see cref="T:System.Xml.XmlWriter" /> object that you want to use as the underlying writer.</span></span></param>
        <param name="settings"><span data-ttu-id="ef512-369">用于配置新 <see cref="T:System.Xml.XmlWriterSettings" /> 实例的 <see cref="T:System.Xml.XmlWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-369">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to configure the new <see cref="T:System.Xml.XmlWriter" /> instance.</span></span> <span data-ttu-id="ef512-370">如果这是 <see langword="null" />，则使用具有默认设置的 <see cref="T:System.Xml.XmlWriterSettings" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-370">If this is <see langword="null" />, a <see cref="T:System.Xml.XmlWriterSettings" /> with default settings is used.</span></span>  
  
<span data-ttu-id="ef512-371">如果将 <see cref="T:System.Xml.XmlWriter" /> 用于 <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> 方法，则应使用 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性获取具有正确设置的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-371">If the <see cref="T:System.Xml.XmlWriter" /> is being used with the <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> method, you should use the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property to obtain an <see cref="T:System.Xml.XmlWriterSettings" /> object with the correct settings.</span></span> <span data-ttu-id="ef512-372">这样可以确保所创建的 <see cref="T:System.Xml.XmlWriter" /> 对象的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="ef512-372">This ensures that the created <see cref="T:System.Xml.XmlWriter" /> object has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="ef512-373">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Xml.XmlWriter" /> 对象创建一个新的 <see cref="T:System.Xml.XmlWriterSettings" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-373">Creates a new <see cref="T:System.Xml.XmlWriter" /> instance using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Xml.XmlWriterSettings" /> objects.</span></span></summary>
        <returns><span data-ttu-id="ef512-374">一个 <see cref="T:System.Xml.XmlWriter" /> 对象，是指定的 <see cref="T:System.Xml.XmlWriter" /> 对象周围的包装。</span><span class="sxs-lookup"><span data-stu-id="ef512-374">An <see cref="T:System.Xml.XmlWriter" /> object that is wrapped around the specified <see cref="T:System.Xml.XmlWriter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-375">此方法允许您将其他功能添加到基础 <xref:System.Xml.XmlWriter> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-375">This method allows you add additional features to an underlying <xref:System.Xml.XmlWriter> object.</span></span> <span data-ttu-id="ef512-376">基础 <xref:System.Xml.XmlWriter> 对象可以是由方法创建的对象 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> ，也可以是使用实现创建的对象 <xref:System.Xml.XmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-376">The underlying <xref:System.Xml.XmlWriter> object can be an object created by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method, or an object created using the <xref:System.Xml.XmlTextWriter> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-377"><paramref name="writer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-377">The <paramref name="writer" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-378">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-378">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-379">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-379">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-380">释放 <see cref="T:System.Xml.XmlWriter" /> 类使用的资源。</span><span class="sxs-lookup"><span data-stu-id="ef512-380">Releases the resources used by the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-381">释放 <see cref="T:System.Xml.XmlWriter" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="ef512-381">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-382">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-382">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-383">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-383">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ef512-384">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-384"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ef512-385">释放由 <see cref="T:System.Xml.XmlWriter" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="ef512-385">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-386">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-386">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-387">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-387">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="xmlWriter.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-388">以异步方式执行与释放或重置非托管资源相关的应用程序定义的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-388">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.</span></span></summary>
        <returns><span data-ttu-id="ef512-389">一个表示异步释放操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-389">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsyncCore">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask DisposeAsyncCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsyncCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.DisposeAsyncCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DisposeAsyncCore () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsyncCore();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsyncCore : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsyncCore : unit -&gt; System.Threading.Tasks.ValueTask" Usage="xmlWriter.DisposeAsyncCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-390">以异步方式执行与释放或重置托管资源相关的应用程序定义的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-390">Performs application-defined tasks associated with freeing, releasing, or resetting managed resources asynchronously.</span></span></summary>
        <returns><span data-ttu-id="ef512-391">一个表示异步释放操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-391">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="xmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-392">当在派生类中被重写时，将缓冲区中的所有内容刷新到基础流，并同时刷新基础流。</span><span class="sxs-lookup"><span data-stu-id="ef512-392">When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-393"><xref:System.Xml.XmlWriter.Close%2A>如果希望将更多的内容写入基础流，而不会丢失仍在缓冲区中的内容，则会调用。</span><span class="sxs-lookup"><span data-stu-id="ef512-393">This is called instead of <xref:System.Xml.XmlWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
 <span data-ttu-id="ef512-394">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.FlushAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-394">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.FlushAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-395">下面的示例编写两个 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="ef512-395">The following example writes two XML fragments.</span></span>  
  
 [!code-cpp[XmlWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Flush/CPP/write2docs_v2.cpp#1)]
 [!code-csharp[XmlWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Flush/CS/write2docs_v2.cs#1)]
 [!code-vb[XmlWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Flush/VB/write2docs_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-396">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-396">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-397">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-397">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-398">将缓冲区中的所有内容异步刷新到基础流，并同时刷新基础流。</span><span class="sxs-lookup"><span data-stu-id="ef512-398">Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <returns><span data-ttu-id="ef512-399">表示 <see langword="Flush" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-399">The task that represents the asynchronous <see langword="Flush" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-400">这是的异步版本 <xref:System.Xml.XmlWriter.Flush%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-400">This is the asynchronous version of <xref:System.Xml.XmlWriter.Flush%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-401">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-401">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-402">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-402">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-403">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-403">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-404">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-404">-or-</span></span>

<span data-ttu-id="ef512-405">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-405">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-406">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-406">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-407">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-407">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-408">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-408">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public abstract string LookupPrefix (string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string" Usage="xmlWriter.LookupPrefix ns" />
      <MemberSignature Language="C#" Value="public abstract string? LookupPrefix (string ns);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="ef512-409">要查找其前缀的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-409">The namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="ef512-410">当在派生类中被重写时，返回在当前命名空间范围中为该命名空间 URI 定义的最近的前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-410">When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="ef512-411">匹配的前缀；如果当前范围内未找到匹配的命名空间 URI，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-411">The matching prefix or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef512-412">以下示例写出书籍。</span><span class="sxs-lookup"><span data-stu-id="ef512-412">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-413"><paramref name="ns" /> 为 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-413"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-414">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-414">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-415">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-415">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriterSettings Settings { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlWriterSettings ^ Settings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlWriterSettings" Usage="System.Xml.XmlWriter.Settings" />
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriterSettings? Settings { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef512-416">获取用于创建此 <see cref="T:System.Xml.XmlWriter" /> 实例的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-416">Gets the <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <value><span data-ttu-id="ef512-417">用于创建此编写器实例的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-417">The <see cref="T:System.Xml.XmlWriterSettings" /> object used to create this writer instance.</span></span> <span data-ttu-id="ef512-418">如果此编写器不是使用 <see cref="Overload:System.Xml.XmlWriter.Create" /> 方法创建的，则此属性返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-418">If this writer was not created using the <see cref="Overload:System.Xml.XmlWriter.Create" /> method, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-419"><xref:System.Xml.XmlWriterSettings>类用于指定要在创建的编写器实例上支持的功能集。</span><span class="sxs-lookup"><span data-stu-id="ef512-419">The <xref:System.Xml.XmlWriterSettings> class is used to specify the set of features to support on the created writer instance.</span></span> <span data-ttu-id="ef512-420"><xref:System.Xml.XmlWriterSettings> <xref:System.Xml.XmlWriter.Settings%2A> 不能修改属性返回的对象。</span><span class="sxs-lookup"><span data-stu-id="ef512-420">The <xref:System.Xml.XmlWriterSettings> object returned by the <xref:System.Xml.XmlWriter.Settings%2A> property cannot be modified.</span></span> <span data-ttu-id="ef512-421">尝试更改各个设置会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="ef512-421">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-422">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-422">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-423">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-423">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="xmlWriter.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-424">有关此成员的说明，请参见 <see cref="M:System.IDisposable.Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-424">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ef512-425">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ef512-425">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ef512-426">它只能在 <xref:System.Xml.XmlWriter> 实例被强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ef512-426">It can be used only when the <xref:System.Xml.XmlWriter> instance is cast to an <xref:System.IDisposable> interface.</span></span>

<span data-ttu-id="ef512-427">此成员在可移植类库项目中使用时的行为可能不同。</span><span class="sxs-lookup"><span data-stu-id="ef512-427">This member may behave differently when it is used in a Portable Class Library project.</span></span> <span data-ttu-id="ef512-428">有关详细信息，请参阅 [可移植类库中的 API 差异](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="ef512-428">For more information, see [API Differences in Portable Class Library](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributes">
      <MemberSignature Language="C#" Value="public virtual void WriteAttributes (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttributes(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttributes (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttributes(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributes : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteAttributes : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteAttributes (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ef512-429">从其中复制属性的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-429">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr"><span data-ttu-id="ef512-430">如果为 <see langword="true" />，则从 <see langword="XmlReader" /> 中复制默认属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-430"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ef512-431">当在派生类中被重写时，写出在 <see cref="T:System.Xml.XmlReader" /> 中当前位置找到的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-431">When overridden in a derived class, writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-432">如果读取器定位在节点上，则 `element` `WriteAttributes` 复制所有包含的属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-432">If the reader is positioned on an `element` node `WriteAttributes` copies all the contained attributes.</span></span> <span data-ttu-id="ef512-433">如果读取器定位在节点上 `attribute` ，此方法将写入当前特性，然后将其余的特性写入到元素结束标记之前。</span><span class="sxs-lookup"><span data-stu-id="ef512-433">If the reader is positioned on an `attribute` node, this method writes the current attribute, then the rest of the attributes until the element closing tag.</span></span> <span data-ttu-id="ef512-434">如果读取器定位在节点上 `XmlDeclaration` ，此方法将写入声明中的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-434">If the reader is positioned on an `XmlDeclaration` node, this method writes all the attributes in the declaration.</span></span> <span data-ttu-id="ef512-435">如果读取器定位在任何其他节点类型上，此方法将引发 <xref:System.Xml.XmlException> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-435">If the reader is positioned on any other node type this method throws an <xref:System.Xml.XmlException>.</span></span>  
  
 <span data-ttu-id="ef512-436">如果使用调用此方法 <xref:System.Xml.XmlValidatingReader> ，则为了确保格式正确的 XML，任何内容 (如果已从实体扩展) 这些内容可能导致无效的文档在写入时被替换。</span><span class="sxs-lookup"><span data-stu-id="ef512-436">If this method is called using <xref:System.Xml.XmlValidatingReader>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written.</span></span> <span data-ttu-id="ef512-437">例如，如果某个属性包含一个 `&gt;` 已展开的实体，则为确保文档格式正确时，将在使用编写时替换扩展的 > `&gt;` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-437">For example, if an attribute includes an `&gt;` entity that has been expanded, to ensure a well-formed document the expanded > is replaced when written out with `&gt;`.</span></span>  
  
 <span data-ttu-id="ef512-438">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-438">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-439">下面的示例将所有元素复制到输出，将标记名称更改为大写，并将所有属性复制不变。</span><span class="sxs-lookup"><span data-stu-id="ef512-439">The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributes#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributes/CPP/writeattrs_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributes/CS/writeattrs_v2.cs#1)]
 [!code-vb[XmlWriter.WriteAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributes/VB/writeattrs_v2.vb#1)]  
  
 <span data-ttu-id="ef512-440">该示例使用文件 `test1.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="ef512-440">The example uses the file, `test1.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteAttributes#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteAttributes/XML/test1.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-441"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-441"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ef512-442">读取器不是定位在 <see langword="element" />、<see langword="attribute" /> 或 <see langword="XmlDeclaration" /> 节点上。</span><span class="sxs-lookup"><span data-stu-id="ef512-442">The reader is not positioned on an <see langword="element" />, <see langword="attribute" /> or <see langword="XmlDeclaration" /> node.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-443">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-443">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-444">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-444">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAttributesAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAttributesAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAttributesAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAttributesAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributesAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ef512-445">从其中复制属性的 <see langword="XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-445">The <see langword="XmlReader" /> from which to copy the attributes.</span></span></param>
        <param name="defattr"><span data-ttu-id="ef512-446">如果为 <see langword="true" />，则从 <see langword="XmlReader" /> 中复制默认属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-446"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ef512-447">在 <see cref="T:System.Xml.XmlReader" /> 中的当前位置异步写出找到的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-447">Asynchronously writes out all the attributes found at the current position in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="ef512-448">表示 <see langword="WriteAttributes" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-448">The task that represents the asynchronous <see langword="WriteAttributes" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-449">这是的异步版本 <xref:System.Xml.XmlWriter.WriteAttributes%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-449">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributes%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-450">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-450">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-451">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-451">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-452">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-452">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-453">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-453">-or-</span></span>

<span data-ttu-id="ef512-454">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-454">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-455">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-455">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-456">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-456">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-457">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-457">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttributeString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-458">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-458">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-459">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-459">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-460">当在派生类中被重写时，写入具有指定值的属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-460">When overridden in a derived class, writes an attribute with the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-461">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-461">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, value)" />
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string? value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-462">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-462">The local name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="ef512-463">属性的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-463">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="ef512-464">当在派生类中被重写时，写出具有指定的本地名称和值的属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-464">When overridden in a derived class, writes out the attribute with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-465">`WriteAttributeString` 执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="ef512-465">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="ef512-466">如果属性值包含双引号或单引号，则它们分别替换为 `&quot;` 和 `&apos;` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-466">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="ef512-467">如果编写 `xml:space` 属性，编写器将验证属性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="ef512-467">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="ef512-468"> (有效值为 `preserve` 或 `default` 。 ) </span><span class="sxs-lookup"><span data-stu-id="ef512-468">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="ef512-469">如果编写 `xml:lang` 属性，编写器不会根据 W3C XML 1.0 建议验证属性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="ef512-469">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="ef512-470">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-470">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-471">以下示例写出书籍。</span><span class="sxs-lookup"><span data-stu-id="ef512-471">The following example writes out a book.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-472">编写器的状态不是 <see langword="WriteState.Element" /> 或者编写器已关闭。</span><span class="sxs-lookup"><span data-stu-id="ef512-472">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="ef512-473">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-473">-or-</span></span>

<span data-ttu-id="ef512-474">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-474">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-475">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-475">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-476"><see langword="xml:space" /> 或 <see langword="xml:lang" /> 属性值无效。</span><span class="sxs-lookup"><span data-stu-id="ef512-476">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string ns, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, ns, value)" />
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string? localName, string ns, string value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-477">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-477">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-478">与属性关联的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-478">The namespace URI to associate with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="ef512-479">属性的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-479">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="ef512-480">当在派生类中被重写时，写入具有指定的本地名称、命名空间 URI 和值的属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-480">When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-481">此方法写出具有用户定义的命名空间前缀的属性，并将其与给定的命名空间关联。</span><span class="sxs-lookup"><span data-stu-id="ef512-481">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="ef512-482">如果 `localName` 为 "xmlns"，则此方法还会将此视为命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-482">If `localName` is "xmlns" then this method also treats this as a namespace declaration.</span></span> <span data-ttu-id="ef512-483">在这种情况下， `ns` 参数可以为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-483">In this case, the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="ef512-484">`WriteAttributeString` 执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="ef512-484">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="ef512-485">如果属性值包含双引号或单引号，则它们分别替换为 `&quot;` 和 `&apos;` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-485">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="ef512-486">如果编写 `xml:space` 属性，编写器将验证属性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="ef512-486">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="ef512-487"> (有效值为 `preserve` 或 `default` 。 ) </span><span class="sxs-lookup"><span data-stu-id="ef512-487">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="ef512-488">如果编写 `xml:lang` 属性，编写器不会根据 W3C XML 1.0 建议验证属性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="ef512-488">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="ef512-489">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-489">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-490">下面的示例使用 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 方法来编写命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-490">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-491">编写器的状态不是 <see langword="WriteState.Element" /> 或者编写器已关闭。</span><span class="sxs-lookup"><span data-stu-id="ef512-491">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="ef512-492">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-492">-or-</span></span> 
<span data-ttu-id="ef512-493">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-493">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-494">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-494">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-495"><see langword="xml:space" /> 或 <see langword="xml:lang" /> 属性值无效。</span><span class="sxs-lookup"><span data-stu-id="ef512-495">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string prefix, string localName, string ns, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (prefix, localName, ns, value)" />
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string prefix, string? localName, string ns, string value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ef512-496">属性的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-496">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="ef512-497">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-497">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-498">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-498">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="ef512-499">属性的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-499">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="ef512-500">当在派生类中被重写时，写出具有指定的前缀、本地名称、命名空间 URI 和值的属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-500">When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-501">此方法写出具有用户定义的命名空间前缀的属性，并将其与给定的命名空间关联。</span><span class="sxs-lookup"><span data-stu-id="ef512-501">This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</span></span> <span data-ttu-id="ef512-502">如果前缀为 "xmlns"，则此方法还会将其视为命名空间声明，并将声明的前缀与给定特性值中提供的命名空间 URI 相关联。</span><span class="sxs-lookup"><span data-stu-id="ef512-502">If the prefix is "xmlns" then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value.</span></span> <span data-ttu-id="ef512-503">在这种情况下， `ns` 参数可以为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-503">In this case the `ns` argument can be `null`.</span></span>  
  
 <span data-ttu-id="ef512-504">`WriteAttributeString` 执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="ef512-504">`WriteAttributeString` does the following:</span></span>  
  
-   <span data-ttu-id="ef512-505">如果属性值包含双引号或单引号，则它们分别替换为 `&quot;` 和 `&apos;` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-505">If the attribute value includes double or single quotes, they are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
-   <span data-ttu-id="ef512-506">如果编写 `xml:space` 属性，编写器将验证属性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="ef512-506">If writing an `xml:space` attribute, the writer verifies the attribute value is valid.</span></span> <span data-ttu-id="ef512-507"> (有效值为 `preserve` 或 `default` 。 ) </span><span class="sxs-lookup"><span data-stu-id="ef512-507">(Valid values are `preserve` or `default`.)</span></span>  
  
-   <span data-ttu-id="ef512-508">如果编写 `xml:lang` 属性，编写器不会根据 W3C XML 1.0 建议验证属性值是否有效。</span><span class="sxs-lookup"><span data-stu-id="ef512-508">If writing an `xml:lang` attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="ef512-509">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-509">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-510">下面的示例使用 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 方法来编写命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-510">The following example uses the <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write a namespace declaration.</span></span>  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-511">编写器的状态不是 <see langword="WriteState.Element" /> 或者编写器已关闭。</span><span class="sxs-lookup"><span data-stu-id="ef512-511">The state of writer is not <see langword="WriteState.Element" /> or writer is closed.</span></span>

<span data-ttu-id="ef512-512">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-512">-or-</span></span> 
<span data-ttu-id="ef512-513">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-513">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-514">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-514">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-515"><see langword="xml:space" /> 或 <see langword="xml:lang" /> 属性值无效。</span><span class="sxs-lookup"><span data-stu-id="ef512-515">The <see langword="xml:space" /> or <see langword="xml:lang" /> attribute value is invalid.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ef512-516"><paramref name="localName" /> 或 <paramref name="ns" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-516">The <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAttributeStringAsync (string prefix, string localName, string ns, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAttributeStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAttributeStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAttributeStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributeStringAsync (prefix, localName, ns, value)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task? WriteAttributeStringAsync (string prefix, string? localName, string ns, string value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ef512-517">属性的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-517">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="ef512-518">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-518">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-519">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-519">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="ef512-520">属性的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-520">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="ef512-521">异步写出具有指定前缀、本地名称、命名空间 URI 和值的属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-521">Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="ef512-522">表示 <see langword="WriteAttributeString" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-522">The task that represents the asynchronous <see langword="WriteAttributeString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-523">这是的异步版本 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-523">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-524">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-524">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-525">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-525">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-526">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-526">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-527">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-527">-or-</span></span> 
<span data-ttu-id="ef512-528">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-528">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-529">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-529">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-530">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-530">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-531">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-531">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public abstract void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef512-532">要进行编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-532">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="ef512-533">缓冲区中指示要写入字节的起始位置的位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-533">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="ef512-534">要写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="ef512-534">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="ef512-535">当在派生类中被重写时，将指定的二进制字节编码为 Base64 并写出结果文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-535">When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-536">例如，字节缓冲区可能包含 GIF 图像的二进制内容。</span><span class="sxs-lookup"><span data-stu-id="ef512-536">For example, the byte buffer may contain the binary contents of a GIF image.</span></span> <span data-ttu-id="ef512-537">这显然不是有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="ef512-537">This clearly would not be valid XML.</span></span> <span data-ttu-id="ef512-538">`Base64`编码旨在以文本形式表示任意字节序列，其中包含65个 us-ascii 字符 ( [a-za-z0-9 +/=] ) ，其中每个字符对二进制数据的6位进行编码。</span><span class="sxs-lookup"><span data-stu-id="ef512-538">The `Base64` encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data.</span></span> <span data-ttu-id="ef512-539">有关详细信息，请参阅 [征求意见文档网站](https://www.rfc-editor.org)上的征求意见 (RFC) 1521。</span><span class="sxs-lookup"><span data-stu-id="ef512-539">For more information, see Requests for Comments (RFC) 1521 located on the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="ef512-540">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteBase64Async%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-540">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-541">下面的示例使用 <xref:System.Xml.XmlWriter.WriteBase64%2A> 方法来写入 `Base64` 数据。</span><span class="sxs-lookup"><span data-stu-id="ef512-541">The following example uses the <xref:System.Xml.XmlWriter.WriteBase64%2A> method to write `Base64` data.</span></span> <span data-ttu-id="ef512-542">`Base64`数据嵌入到 `<image>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="ef512-542">The `Base64` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#3)]
 [!code-vb[XmlReader_Read_Write_Binary#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-543"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-543"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ef512-544"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="ef512-544"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="ef512-545">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-545">-or-</span></span> 
<span data-ttu-id="ef512-546">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-546">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-547">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-547">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-548">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-548">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef512-549">要进行编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-549">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="ef512-550">缓冲区中指示要写入字节的起始位置的位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-550">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="ef512-551">要写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="ef512-551">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="ef512-552">将指定的二进制字节异步编码为 Base64 并写出结果文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-552">Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="ef512-553">表示 <see langword="WriteBase64" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-553">The task that represents the asynchronous <see langword="WriteBase64" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-554">这是的异步版本 <xref:System.Xml.XmlWriter.WriteBase64%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-554">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-555">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-555">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-556">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-556">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-557">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-557">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-558">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-558">-or-</span></span>

<span data-ttu-id="ef512-559">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-559">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-560">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-560">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-561">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-561">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-562">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-562">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public virtual void WriteBinHex (byte[] buffer, int index, int count);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHex : byte[] * int * int -&gt; unit&#xA;override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBinHex (buffer, index, count)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void WriteBinHex (byte[] buffer, int index, int count);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBinHex (buffer, index, count)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef512-563">要进行编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-563">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="ef512-564">缓冲区中指示要写入字节的起始位置的位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-564">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="ef512-565">要写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="ef512-565">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="ef512-566">当在派生类中被重写时，将指定的二进制字节编码为 <see langword="BinHex" /> 并写出结果文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-566">When overridden in a derived class, encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-567">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-567">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-568">下面的示例使用 <xref:System.Xml.XmlWriter.WriteBinHex%2A> 方法来写入 `BinHex` 数据。</span><span class="sxs-lookup"><span data-stu-id="ef512-568">The following example uses the <xref:System.Xml.XmlWriter.WriteBinHex%2A> method to write `BinHex` data.</span></span> <span data-ttu-id="ef512-569">`BinHex`数据嵌入到 `<image>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="ef512-569">The `BinHex` data is embedded within an `<image>` element.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#1)]
 [!code-vb[XmlReader_Read_Write_Binary#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-570"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-570"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-571">编写器已关闭或处于错误状态。</span><span class="sxs-lookup"><span data-stu-id="ef512-571">The writer is closed or in error state.</span></span>
<span data-ttu-id="ef512-572">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-572">-or-</span></span>

<span data-ttu-id="ef512-573">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-573">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-574">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-574">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ef512-575"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="ef512-575"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="ef512-576">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-576">-or-</span></span> 
<span data-ttu-id="ef512-577">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-577">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef512-578">要进行编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-578">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="ef512-579">缓冲区中指示要写入字节的起始位置的位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-579">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="ef512-580">要写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="ef512-580">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="ef512-581">将指定的二进制字节异步编码为 <see langword="BinHex" /> 并写出结果文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-581">Asynchronously encodes the specified binary bytes as <see langword="BinHex" /> and writes out the resulting text.</span></span></summary>
        <returns><span data-ttu-id="ef512-582">表示 <see langword="WriteBinHex" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-582">The task that represents the asynchronous <see langword="WriteBinHex" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-583">这是的异步版本 <xref:System.Xml.XmlWriter.WriteBinHex%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-583">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-584">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-584">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-585">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-585">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-586">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-586">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-587">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-587">-or-</span></span>

<span data-ttu-id="ef512-588">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-588">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-589">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-589">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-590">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-590">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-591">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-591">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public abstract void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCData : string -&gt; unit" Usage="xmlWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="ef512-592">要放置在 CDATA 块中的文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-592">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="ef512-593">当在派生类中被重写时，写出包含指定文本的 &lt;![CDATA[...]]&gt; 块。</span><span class="sxs-lookup"><span data-stu-id="ef512-593">When overridden in a derived class, writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-594">如果 `text` 是 `null` 或 `String.Empty` ，则此方法会写入一个空 CDATA 块，例如 \< ！ [CDATA []</span><span class="sxs-lookup"><span data-stu-id="ef512-594">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-595">该文本将导致格式不正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ef512-595">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-596">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-596">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-597">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-597">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCDataAsync (string text);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCDataAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCDataAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCDataAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCDataAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCDataAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCDataAsync text" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCDataAsync (string? text);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="ef512-598">要放置在 CDATA 块中的文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-598">The text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="ef512-599">异步写出一个包含指定文本的 &lt;![CDATA[...]]&gt; 块。</span><span class="sxs-lookup"><span data-stu-id="ef512-599">Asynchronously writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="ef512-600">表示 <see langword="WriteCData" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-600">The task that represents the asynchronous <see langword="WriteCData" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-601">这是的异步版本 <xref:System.Xml.XmlWriter.WriteCData%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-601">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCData%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-602">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-602">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-603">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-603">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-604">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-604">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-605">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-605">-or-</span></span>

<span data-ttu-id="ef512-606">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-606">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-607">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-607">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-608">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-608">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-609">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-609">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntity : char -&gt; unit" Usage="xmlWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="ef512-610">为其生成字符实体的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-610">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="ef512-611">当在派生类中被重写时，为指定的 Unicode 字符值强制生成字符实体。</span><span class="sxs-lookup"><span data-stu-id="ef512-611">When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-612">此方法写入十六进制字符实体引用格式的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-612">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
 <span data-ttu-id="ef512-613">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-613">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-614"><xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType>有关使用此方法的示例，请参阅。</span><span class="sxs-lookup"><span data-stu-id="ef512-614">See <xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-615">该字符在代理项对字符范围 <see langword="0xd800" /> - <see langword="0xdfff" /> 内。</span><span class="sxs-lookup"><span data-stu-id="ef512-615">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-616">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-616">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-617">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-617">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharEntityAsync (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharEntityAsync(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharEntityAsync (ch As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharEntityAsync(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharEntityAsync ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="ef512-618">为其生成字符实体的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-618">The Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="ef512-619">为指定的 Unicode 字符值异步强制生成字符实体。</span><span class="sxs-lookup"><span data-stu-id="ef512-619">Asynchronously forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <returns><span data-ttu-id="ef512-620">表示 <see langword="WriteCharEntity" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-620">The task that represents the asynchronous <see langword="WriteCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-621">这是的异步版本 <xref:System.Xml.XmlWriter.WriteCharEntity%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-621">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-622">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-622">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-623">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-623">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-624">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-624">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-625">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-625">-or-</span></span>

<span data-ttu-id="ef512-626">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-626">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-627">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-627">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-628">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-628">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-629">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-629">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public abstract void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteChars : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef512-630">包含要写入的文本的字符数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-630">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="ef512-631">缓冲区中指示要写入文本的起始位置的位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-631">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="ef512-632">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="ef512-632">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="ef512-633">当在派生类中被重写时，以每次一个缓冲区的方式写入文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-633">When overridden in a derived class, writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-634">此方法可用于一次写入一个缓冲区的大量文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-634">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="ef512-635">必须执行特殊处理才能确保方法不 `WriteChars` 会跨多个缓冲区写入拆分代理项对字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-635">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="ef512-636">XML 规范定义代理项对的有效范围。</span><span class="sxs-lookup"><span data-stu-id="ef512-636">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="ef512-637">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteCharsAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-637">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCharsAsync%2A>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-638"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-638"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ef512-639"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="ef512-639"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="ef512-640">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-640">-or-</span></span> 
<span data-ttu-id="ef512-641">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />；此调用导致代理项对字符被拆分或写入无效的代理项对。</span><span class="sxs-lookup"><span data-stu-id="ef512-641">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-642"><paramref name="buffer" /> 参数值无效。</span><span class="sxs-lookup"><span data-stu-id="ef512-642">The <paramref name="buffer" /> parameter value is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-643">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-643">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-644">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-644">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharsAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharsAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharsAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharsAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharsAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef512-645">包含要写入的文本的字符数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-645">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="ef512-646">缓冲区中指示要写入文本的起始位置的位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-646">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="ef512-647">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="ef512-647">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="ef512-648">以每次一个缓冲区的方式异步写入文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-648">Asynchronously writes text one buffer at a time.</span></span></summary>
        <returns><span data-ttu-id="ef512-649">表示 <see langword="WriteChars" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-649">The task that represents the asynchronous <see langword="WriteChars" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-650">这是的异步版本 <xref:System.Xml.XmlWriter.WriteChars%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-650">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteChars%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-651">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-651">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-652">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-652">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-653">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-653">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-654">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-654">-or-</span></span>

<span data-ttu-id="ef512-655">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-655">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-656">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-656">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-657">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-657">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-658">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-658">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public abstract void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteComment : string -&gt; unit" Usage="xmlWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="ef512-659">要放在注释内的文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-659">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="ef512-660">当在派生类中被重写时，写出包含指定文本的注释 &lt;!--...--&gt;。</span><span class="sxs-lookup"><span data-stu-id="ef512-660">When overridden in a derived class, writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-661">如果 `text` 为 `null` 或 `String.Empty` ，则此方法会写入没有数据内容的注释，例如 \<!----> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-661">If `text` is either `null` or `String.Empty`, this method writes a comment with no data content, for example \<!---->.</span></span>  
  
 <span data-ttu-id="ef512-662">如果 `text` 包含两个短划线 "--" 的无效序列，则 <xref:System.Xml.XmlWriter> 可以引发 <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> 对象) 或在短划线 "--" 之间插入空格，以便文本是 (<xref:System.Xml.XmlWriter>) 方法创建的对象的有效 XML 注释 <xref:System.Xml.XmlWriter.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-662">If `text` contains an invalid sequence of two dashes "--" the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space between the dashes "- -" so that the text is a valid XML comment (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="ef512-663">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteCommentAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-663">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteCommentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-664">下面的示例编写一个表示书的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-664">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-665">该文本将导致格式不正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ef512-665">The text would result in a non-well-formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-666">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-666">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-667">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-667">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCommentAsync (string text);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCommentAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCommentAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCommentAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCommentAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCommentAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCommentAsync text" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCommentAsync (string? text);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="ef512-668">要放在注释内的文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-668">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="ef512-669">异步写出一个包含指定文本的注释 &lt;!--...--&gt;。</span><span class="sxs-lookup"><span data-stu-id="ef512-669">Asynchronously writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="ef512-670">表示 <see langword="WriteComment" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-670">The task that represents the asynchronous <see langword="WriteComment" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-671">这是的异步版本 <xref:System.Xml.XmlWriter.WriteComment%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-671">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteComment%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-672">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-672">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-673">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-673">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-674">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-674">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-675">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-675">-or-</span></span>

<span data-ttu-id="ef512-676">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-676">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-677">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-677">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-678">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-678">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-679">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-679">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public abstract void WriteDocType (string name, string pubid, string sysid, string subset);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocType : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberSignature Language="C#" Value="public abstract void WriteDocType (string? name, string pubid, string sysid, string subset);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-680">DOCTYPE 的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-680">The name of the DOCTYPE.</span></span> <span data-ttu-id="ef512-681">它必须是非空的。</span><span class="sxs-lookup"><span data-stu-id="ef512-681">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="ef512-682">如果非 null，则它还编写 PUBLIC "pubid" "sysid"，这里的 <paramref name="pubid" /> 和 <paramref name="sysid" /> 用给定参数的值替换。</span><span class="sxs-lookup"><span data-stu-id="ef512-682">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="ef512-683">如果 <paramref name="pubid" /> 为 <see langword="null" /> 而 <paramref name="sysid" /> 非 null，则它编写 SYSTEM "sysid"，这里的 <paramref name="sysid" /> 用此参数的值替换。</span><span class="sxs-lookup"><span data-stu-id="ef512-683">If <paramref name="pubid" /> is <see langword="null" /> and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="ef512-684">如果非 null，则它写入 [subset]，其中 subset 替换为此自变量的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-684">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="ef512-685">当在派生类中被重写时，写出具有指定名称和可选属性的 DOCTYPE 声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-685">When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-686">此方法不检查或中的无效字符 `pubid` `sysid` `subset` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-686">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="ef512-687">它也不会检查内部子集的格式是否正确。</span><span class="sxs-lookup"><span data-stu-id="ef512-687">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ef512-688">不 <xref:System.Xml.XmlWriter> 会验证传递给方法的数据 <xref:System.Xml.XmlWriter.WriteDocType%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-688">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="ef512-689">不应向此方法传递任意数据。</span><span class="sxs-lookup"><span data-stu-id="ef512-689">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="ef512-690">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-690">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-691">下面的示例编写一个表示书的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-691">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-692">在序言码外部（根元素之后）调用了此方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-692">This method was called outside the prolog (after the root element).</span></span>

<span data-ttu-id="ef512-693">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-693">-or-</span></span>

<span data-ttu-id="ef512-694">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-694">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-695">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-695">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-696"><paramref name="name" /> 的值将导致无效的 XML。</span><span class="sxs-lookup"><span data-stu-id="ef512-696">The value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteDocTypeAsync (string name, string pubid, string sysid, string subset);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteDocTypeAsync(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteDocTypeAsync (name As String, pubid As String, sysid As String, subset As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteDocTypeAsync(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteDocTypeAsync (name, pubid, sysid, subset)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task? WriteDocTypeAsync (string? name, string pubid, string sysid, string subset);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pubid" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sysid" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subset" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-697">DOCTYPE 的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-697">The name of the DOCTYPE.</span></span> <span data-ttu-id="ef512-698">它必须是非空的。</span><span class="sxs-lookup"><span data-stu-id="ef512-698">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="ef512-699">如果非 null，则它还编写 PUBLIC "pubid" "sysid"，这里的 <paramref name="pubid" /> 和 <paramref name="sysid" /> 用给定参数的值替换。</span><span class="sxs-lookup"><span data-stu-id="ef512-699">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="ef512-700">如果 <paramref name="pubid" /> 为 <see langword="null" /> 而 <paramref name="sysid" /> 非 null，则它编写 SYSTEM "sysid"，这里的 <paramref name="sysid" /> 用此参数的值替换。</span><span class="sxs-lookup"><span data-stu-id="ef512-700">If <paramref name="pubid" /> is <see langword="null" /> and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="ef512-701">如果非 null，则它写入 [subset]，其中 subset 替换为此参数的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-701">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="ef512-702">异步写入具有指定名称和可选属性的 DOCTYPE 声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-702">Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <returns><span data-ttu-id="ef512-703">表示 <see langword="WriteDocType" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-703">The task that represents the asynchronous <see langword="WriteDocType" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-704">这是的异步版本 <xref:System.Xml.XmlWriter.WriteDocType%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-704">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteDocType%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-705">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-705">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-706">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-706">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-707">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-707">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-708">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-708">-or-</span></span>

<span data-ttu-id="ef512-709">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-709">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-710">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-710">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-711">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-711">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-712">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-712">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-713">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-713">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-714">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-714">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-715">写入包含字符串值的元素。</span><span class="sxs-lookup"><span data-stu-id="ef512-715">Writes an element containing a string value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-716">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-716">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, value)" />
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string? value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-717">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-717">The local name of the element.</span></span></param>
        <param name="value"><span data-ttu-id="ef512-718">元素的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-718">The value of the element.</span></span></param>
        <summary><span data-ttu-id="ef512-719">写入具有指定的本地名称和值的元素。</span><span class="sxs-lookup"><span data-stu-id="ef512-719">Writes an element with the specified local name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-720">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-720">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-721">下面的示例使用几个写入方法来创建 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="ef512-721">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-722"><paramref name="localName" /> 值是 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-722">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="ef512-723">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-723">-or-</span></span> 
<span data-ttu-id="ef512-724">参数值无效。</span><span class="sxs-lookup"><span data-stu-id="ef512-724">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-725">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-725">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-726">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-726">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-727">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-727">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-728">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-728">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-729">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-729">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-730">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-730">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-731">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-731">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string ns, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, ns, value)" />
      <MemberSignature Language="C#" Value="public void WriteElementString (string? localName, string ns, string value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-732">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-732">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-733">与元素关联的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-733">The namespace URI to associate with the element.</span></span></param>
        <param name="value"><span data-ttu-id="ef512-734">元素的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-734">The value of the element.</span></span></param>
        <summary><span data-ttu-id="ef512-735">写入具有指定的本地名称、命名空间 URI 和值的元素。</span><span class="sxs-lookup"><span data-stu-id="ef512-735">Writes an element with the specified local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-736">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-736">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-737">下面的示例使用几个写入方法来创建 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="ef512-737">The following example uses several write methods to create an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-738"><paramref name="localName" /> 值是 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-738">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="ef512-739">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-739">-or-</span></span> 
<span data-ttu-id="ef512-740">参数值无效。</span><span class="sxs-lookup"><span data-stu-id="ef512-740">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-741">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-741">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-742">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-742">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-743">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-743">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-744">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-744">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-745">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-745">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-746">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-746">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-747">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-747">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string prefix, string localName, string ns, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (prefix, localName, ns, value)" />
      <MemberSignature Language="C#" Value="public void WriteElementString (string prefix, string? localName, string ns, string value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ef512-748">元素的前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-748">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="ef512-749">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-749">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-750">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-750">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="ef512-751">元素的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-751">The value of the element.</span></span></param>
        <summary><span data-ttu-id="ef512-752">写入具有指定的前缀、本地名称、命名空间 URI 和值的元素。</span><span class="sxs-lookup"><span data-stu-id="ef512-752">Writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-753">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-753">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-754"><paramref name="localName" /> 值是 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-754">The <paramref name="localName" /> value is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="ef512-755">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-755">-or-</span></span> 
<span data-ttu-id="ef512-756">参数值无效。</span><span class="sxs-lookup"><span data-stu-id="ef512-756">The parameter values are not valid.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-757">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-757">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-758">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-758">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-759">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-759">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-760">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-760">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-761">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-761">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-762">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-762">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-763">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-763">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteElementStringAsync (string prefix, string localName, string ns, string value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteElementStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteElementStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteElementStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteElementStringAsync (prefix, localName, ns, value)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteElementStringAsync (string? prefix, string localName, string? ns, string value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ef512-764">元素的前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-764">The prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="ef512-765">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-765">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-766">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-766">The namespace URI of the element.</span></span></param>
        <param name="value"><span data-ttu-id="ef512-767">元素的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-767">The value of the element.</span></span></param>
        <summary><span data-ttu-id="ef512-768">异步写入具有指定的前缀、本地名称、命名空间 URI 和值的元素。</span><span class="sxs-lookup"><span data-stu-id="ef512-768">Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</span></span></summary>
        <returns><span data-ttu-id="ef512-769">表示 <see langword="WriteElementString" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-769">The task that represents the asynchronous <see langword="WriteElementString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-770">这是的异步版本 <xref:System.Xml.XmlWriter.WriteElementString%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-770">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteElementString%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-771">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-771">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-772">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-772">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-773">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-773">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-774">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-774">-or-</span></span>

<span data-ttu-id="ef512-775">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-775">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-776">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-776">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-777">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-777">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-778">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-778">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttribute : unit -&gt; unit" Usage="xmlWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-779">当在派生类中被重写时，关闭上一个 <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="ef512-779">When overridden in a derived class, closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-780">如果调用 `WriteStartAttribute` ，则可以通过此方法关闭属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-780">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="ef512-781">还可以通过 `WriteStartAttribute` 再次调用、调用或调用来关闭该属性 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> <xref:System.Xml.XmlWriter.WriteEndElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-781">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlWriter.WriteEndElement%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ef512-782">使用 <xref:System.Xml.XmlWriter> 方法输出 XML 时，在调用方法之前，将不会写入元素和特性 <xref:System.Xml.XmlWriter.Close%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-782">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="ef512-783">例如，如果你使用 XmlWriter 来填充，则在 <xref:System.Xml.XmlDocument> 关闭之前， <xref:System.Xml.XmlWriter> 你将无法观察目标文档中的已写入元素和属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-783">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="ef512-784">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-784">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-785">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-785">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-786">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-786">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteEndAttributeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndAttributeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteEndAttributeAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndAttributeAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndAttributeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-787">异步关闭前一个 <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="ef512-787">Asynchronously closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> call.</span></span></summary>
        <returns><span data-ttu-id="ef512-788">表示 <see langword="WriteEndAttribute" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-788">The task that represents the asynchronous <see langword="WriteEndAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-789">这是的异步版本 <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-789">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-790">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-790">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-791">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-791">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-792">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-792">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-793">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-793">-or-</span></span>

<span data-ttu-id="ef512-794">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-794">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-795">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-795">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-796">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-796">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-797">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-797">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocument : unit -&gt; unit" Usage="xmlWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-798">当在派生类中被重写时，关闭任何打开的元素或属性并将写入器重新设置为起始状态。</span><span class="sxs-lookup"><span data-stu-id="ef512-798">When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ef512-799">使用 <xref:System.Xml.XmlWriter> 方法输出 XML 时，在调用方法之前，将不会写入元素和特性 <xref:System.Xml.XmlWriter.Close%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-799">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="ef512-800">例如，如果你使用 XmlWriter 来填充，则在 <xref:System.Xml.XmlDocument> 关闭之前， <xref:System.Xml.XmlWriter> 你将无法观察目标文档中的已写入元素和属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-800">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="ef512-801">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-801">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-802">下面的示例编写一个表示书的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-802">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-803">XML 文档无效。</span><span class="sxs-lookup"><span data-stu-id="ef512-803">The XML document is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-804">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-804">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-805">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-805">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-806">异步关闭任何打开的元素或属性并将写入器重新设置为起始状态。</span><span class="sxs-lookup"><span data-stu-id="ef512-806">Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <returns><span data-ttu-id="ef512-807">表示 <see langword="WriteEndDocument" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-807">The task that represents the asynchronous <see langword="WriteEndDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-808">这是的异步版本 <xref:System.Xml.XmlWriter.WriteEndDocument%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-808">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-809">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-809">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-810">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-810">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-811">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-811">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-812">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-812">-or-</span></span>

<span data-ttu-id="ef512-813">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-813">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-814">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-814">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-815">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-815">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-816">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-816">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElement : unit -&gt; unit" Usage="xmlWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-817">当在派生类中被重写时，关闭一个元素并弹出相应的命名空间范围。</span><span class="sxs-lookup"><span data-stu-id="ef512-817">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-818">如果元素不包含任何内容，则写入一个短的结束标记 "/>";否则，将写入完整的结束标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-818">If the element contains no content, a short end tag "/>" is written; otherwise, a full end tag is written.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ef512-819">使用 <xref:System.Xml.XmlWriter> 方法输出 XML 时，在调用方法之前，将不会写入元素和特性 <xref:System.Xml.XmlWriter.Close%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-819">When you use the <xref:System.Xml.XmlWriter> methods to output XML, the elements and attributes will not be written until you call the <xref:System.Xml.XmlWriter.Close%2A> method.</span></span> <span data-ttu-id="ef512-820">例如，如果你使用 XmlWriter 来填充，则在 <xref:System.Xml.XmlDocument> 关闭之前， <xref:System.Xml.XmlWriter> 你将无法观察目标文档中的已写入元素和属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-820">For example, if you are using the XmlWriter to populate an <xref:System.Xml.XmlDocument>, until you close the <xref:System.Xml.XmlWriter>, you will not be able to observe the written elements and attributes in the target document.</span></span>  
  
 <span data-ttu-id="ef512-821">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-821">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-822">下面的示例使用 <xref:System.Xml.XmlWriter.WriteEndElement%2A> 和 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-822">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-823">这导致无效的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ef512-823">This results in an invalid XML document.</span></span>

<span data-ttu-id="ef512-824">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-824">-or-</span></span>

<span data-ttu-id="ef512-825">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-825">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-826">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-826">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-827">异步关闭一个元素并弹出相应的命名空间范围。</span><span class="sxs-lookup"><span data-stu-id="ef512-827">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="ef512-828">表示 <see langword="WriteEndElement" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-828">The task that represents the asynchronous <see langword="WriteEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-829">这是的异步版本 <xref:System.Xml.XmlWriter.WriteEndElement%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-829">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-830">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-830">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-831">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-831">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-832">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-832">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-833">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-833">-or-</span></span>

<span data-ttu-id="ef512-834">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-834">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-835">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-835">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-836">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-836">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-837">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-837">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public abstract void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRef : string -&gt; unit" Usage="xmlWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-838">实体引用的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-838">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="ef512-839">当在派生类中被重写时，按 <see langword="&amp;name;" /> 写出实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-839">When overridden in a derived class, writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-840">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-840">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-841">下面的示例编写一个表示书的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-841">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-842"><paramref name="name" /> 为 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-842"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-843">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-843">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-844">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-844">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRefAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEntityRefAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEntityRefAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEntityRefAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEntityRefAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEntityRefAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-845">实体引用的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-845">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="ef512-846">按 <see langword="&amp;name;" /> 异步写出实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-846">Asynchronously writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <returns><span data-ttu-id="ef512-847">表示 <see langword="WriteEntityRef" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-847">The task that represents the asynchronous <see langword="WriteEntityRef" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-848">这是的异步版本 <xref:System.Xml.XmlWriter.WriteEntityRef%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-848">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteEntityRef%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-849">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-849">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-850">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-850">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-851">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-851">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-852">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-852">-or-</span></span>

<span data-ttu-id="ef512-853">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-853">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-854">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-854">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-855">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-855">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-856">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-856">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElement : unit -&gt; unit" Usage="xmlWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-857">当在派生类中被重写时，关闭一个元素并弹出相应的命名空间范围。</span><span class="sxs-lookup"><span data-stu-id="ef512-857">When overridden in a derived class, closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-858">此方法始终写入完整的结束标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-858">This method always writes the full end tag.</span></span> <span data-ttu-id="ef512-859">当处理必须包含完整结束标记的元素时，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="ef512-859">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="ef512-860">例如，浏览器需要用 "" 关闭 HTML 脚本块 \</script> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-860">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
 <span data-ttu-id="ef512-861">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-861">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-862">下面的示例使用 <xref:System.Xml.XmlWriter.WriteEndElement%2A> 和 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-862">The following example uses the <xref:System.Xml.XmlWriter.WriteEndElement%2A> and the <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> methods.</span></span>  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-863">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-863">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-864">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-864">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteFullEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteFullEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFullEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteFullEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteFullEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-865">异步关闭一个元素并弹出相应的命名空间范围。</span><span class="sxs-lookup"><span data-stu-id="ef512-865">Asynchronously closes one element and pops the corresponding namespace scope.</span></span></summary>
        <returns><span data-ttu-id="ef512-866">表示 <see langword="WriteFullEndElement" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-866">The task that represents the asynchronous <see langword="WriteFullEndElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-867">这是的异步版本 <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-867">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-868">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-868">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-869">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-869">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-870">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-870">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-871">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-871">-or-</span></span>

<span data-ttu-id="ef512-872">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-872">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-873">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-873">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-874">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-874">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-875">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-875">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public virtual void WriteName (string name);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteName (name As String)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteName(System::String ^ name);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteName : string -&gt; unit&#xA;override this.WriteName : string -&gt; unit" Usage="xmlWriter.WriteName name" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void WriteName (string name);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteName (name As String)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteName(System::String ^ name);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member WriteName : string -&gt; unit" Usage="xmlWriter.WriteName name" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-876">要写入的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-876">The name to write.</span></span></param>
        <summary><span data-ttu-id="ef512-877">当在派生类中被重写时，写出指定的名称，确保它是符合 W3C XML 1.0 建议 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) 的有效名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-877">When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-878">如果 <xref:System.Xml.XmlTextWriter.Namespaces%2A> 设置为 `true` ， `WriteName` 还会根据 XML 中的 W3C 命名空间建议检查该名称是否有效。</span><span class="sxs-lookup"><span data-stu-id="ef512-878">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 <span data-ttu-id="ef512-879">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteNameAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-879">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNameAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-880"><paramref name="name" /> 不是有效的 XML 名称，或者 <paramref name="name" /> 为 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-880"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-881">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-881">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-882">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-882">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNameAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNameAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNameAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNameAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNameAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNameAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNameAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-883">要写入的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-883">The name to write.</span></span></param>
        <summary><span data-ttu-id="ef512-884">异步写出指定的名称，确保它是符合 W3C XML 1.0 建议 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) 的有效名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-884">Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="ef512-885">表示 <see langword="WriteName" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-885">The task that represents the asynchronous <see langword="WriteName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-886">这是的异步版本 <xref:System.Xml.XmlWriter.WriteName%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-886">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteName%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-887">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-887">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-888">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-888">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-889">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-889">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-890">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-890">-or-</span></span>

<span data-ttu-id="ef512-891">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-891">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-892">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-892">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-893">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-893">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-894">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-894">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public virtual void WriteNmToken (string name);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNmToken (name As String)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNmToken(System::String ^ name);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteNmToken : string -&gt; unit&#xA;override this.WriteNmToken : string -&gt; unit" Usage="xmlWriter.WriteNmToken name" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void WriteNmToken (string name);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteNmToken (name As String)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteNmToken(System::String ^ name);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member WriteNmToken : string -&gt; unit" Usage="xmlWriter.WriteNmToken name" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-895">要写入的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-895">The name to write.</span></span></param>
        <summary><span data-ttu-id="ef512-896">当在派生类中被重写时，写出指定的名称，确保它是符合 W3C XML 1.0 建议 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) 的有效 NmToken。</span><span class="sxs-lookup"><span data-stu-id="ef512-896">When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-897">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-897">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-898"><paramref name="name" /> 不是有效的 NmToken；或者 <paramref name="name" /> 为 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-898"><paramref name="name" /> is not a valid NmToken; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-899">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-899">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-900">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-900">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNmTokenAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNmTokenAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNmTokenAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNmTokenAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNmTokenAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-901">要写入的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-901">The name to write.</span></span></param>
        <summary><span data-ttu-id="ef512-902">异步写出指定的名称，确保它是符合 W3C XML 1.0 建议 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)) 的有效 NmToken。</span><span class="sxs-lookup"><span data-stu-id="ef512-902">Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <returns><span data-ttu-id="ef512-903">表示 <see langword="WriteNmToken" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-903">The task that represents the asynchronous <see langword="WriteNmToken" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-904">这是的异步版本 <xref:System.Xml.XmlWriter.WriteNmToken%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-904">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNmToken%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-905">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-905">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-906">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-906">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-907">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-907">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-908">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-908">-or-</span></span>

<span data-ttu-id="ef512-909">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-909">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-910">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-910">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-911">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-911">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-912">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-912">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-913">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-913">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-914">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-914">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-915">将所有内容从源对象复制到当前写入器实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-915">Copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-916">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteNodeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-916">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteNode (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ef512-917">要从其中进行读取的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-917">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr"><span data-ttu-id="ef512-918">如果为 <see langword="true" />，则从 <see langword="XmlReader" /> 中复制默认属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-918"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ef512-919">当在派生类中被重写时，将全部内容从读取器复制到写入器并将读取器移动到下一个同级的开始位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-919">When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-920">下表显示了此方法支持的节点类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-920">The following table shows the supported node types for this method.</span></span>  
  
|<span data-ttu-id="ef512-921">NodeType</span><span class="sxs-lookup"><span data-stu-id="ef512-921">NodeType</span></span>|<span data-ttu-id="ef512-922">WriteNode 行为</span><span class="sxs-lookup"><span data-stu-id="ef512-922">WriteNode Behavior</span></span>|  
|--------------|------------------------|  
|`None`|<span data-ttu-id="ef512-923">写出所有节点，而不考虑类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-923">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="ef512-924">也就是说，编写器使用 <xref:System.Xml.XmlReader> 并写出所有读取的节点，包括属性、处理指令、注释等。</span><span class="sxs-lookup"><span data-stu-id="ef512-924">That is, the writer consumes the <xref:System.Xml.XmlReader> and writes out all the nodes read including attributes, processing instructions, comments, and so on.</span></span><br /><br /> <span data-ttu-id="ef512-925">当处于初始状态时，会发生这种情况 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-925">This situation occurs when the <xref:System.Xml.XmlReader> is in an initial state.</span></span> <span data-ttu-id="ef512-926"> (<xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> 属性返回 `ReaderState.Initial`) 。</span><span class="sxs-lookup"><span data-stu-id="ef512-926">(The <xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> property returns `ReaderState.Initial`).</span></span>|  
|`Element`|<span data-ttu-id="ef512-927">写出元素节点和任何属性节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-927">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="ef512-928">无操作。</span><span class="sxs-lookup"><span data-stu-id="ef512-928">No operation.</span></span> <span data-ttu-id="ef512-929">请改用 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 或 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>。</span><span class="sxs-lookup"><span data-stu-id="ef512-929">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="ef512-930">写出文本节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-930">Writes out the text node.</span></span>|  
|`CDATA`|<span data-ttu-id="ef512-931">写出 CDATA 节节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-931">Writes out the CDATA section node.</span></span>|  
|`EntityReference`|<span data-ttu-id="ef512-932">写出实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-932">Writes out the entity reference node.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="ef512-933">写出处理指令节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-933">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="ef512-934">写出注释节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-934">Writes out the comment node.</span></span>|  
|`DocumentType`|<span data-ttu-id="ef512-935">写出文档类型节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-935">Writes out the document type node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="ef512-936">写出有效的空白节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-936">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="ef512-937">写出空白节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-937">Writes out the white space node.</span></span>|  
|`EndElement`|<span data-ttu-id="ef512-938">写出结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-938">Writes out the end element tag.</span></span>|  
|`EndEntity`|<span data-ttu-id="ef512-939">无操作。</span><span class="sxs-lookup"><span data-stu-id="ef512-939">No operation.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="ef512-940">写出 XML 声明节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-940">Writes out the XML declaration node.</span></span>|  
  
 <span data-ttu-id="ef512-941">如果读取器处于初始状态，则此方法会将读取器移动到文件末尾。</span><span class="sxs-lookup"><span data-stu-id="ef512-941">If the reader is in the initial state, this method moves the reader to the end of file.</span></span> <span data-ttu-id="ef512-942">如果读取器已在文件结尾或处于关闭状态，则此方法将无法操作。</span><span class="sxs-lookup"><span data-stu-id="ef512-942">If the reader is already at the end of file or in a closed state, this method is non-operational.</span></span>  
  
 <span data-ttu-id="ef512-943">下面的 c # 代码将整个 XML 输入文档复制到控制台：</span><span class="sxs-lookup"><span data-stu-id="ef512-943">The following C# code copies an entire XML input document to the console:</span></span>  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
XmlWriter writer = XmlWriter.Create(Console.Out);  
writer.WriteNode(reader, false);  
```  
  
 <span data-ttu-id="ef512-944">如果已移出根节点并将其放置在文档中的其他位置，以下 c # 示例将正确写出节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-944">If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.</span></span>  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
reader.Read(); // Read PI  
reader.Read(); // Read Comment  
reader.Read(); // Read DOCType  
XmlWriter writer = XmlWriter.Create(Console.Out);  
while (!reader.EOF){  
  writer.WriteNode(reader, false);  
 }  
```  
  
 <span data-ttu-id="ef512-945">如果读取器已配置为返回空白，并且编写器已配置为缩进输出，则 `WriteNode` 可能产生奇怪的输出。</span><span class="sxs-lookup"><span data-stu-id="ef512-945">If the reader is configured to return white space and the writer has is configured to indent output, `WriteNode` may produce strange output.</span></span> <span data-ttu-id="ef512-946">基本上会获得双重格式。</span><span class="sxs-lookup"><span data-stu-id="ef512-946">You will essentially be getting double formatting.</span></span>  
  
 <span data-ttu-id="ef512-947">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteNodeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-947">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-948">下面的示例将第一个和最后一个书本节点写入控制台。</span><span class="sxs-lookup"><span data-stu-id="ef512-948">The following example writes the first and last book nodes out to the console.</span></span>  
  
 [!code-cpp[XmlWriter.WriteNode#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteNode/CPP/writenode.cpp#1)]
 [!code-csharp[XmlWriter.WriteNode#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteNode/CS/writenode.cs#1)]
 [!code-vb[XmlWriter.WriteNode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteNode/VB/writenode.vb#1)]  
  
 <span data-ttu-id="ef512-949">该示例使用文件 `books.xml` 作为输入。</span><span class="sxs-lookup"><span data-stu-id="ef512-949">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[XmlWriter.WriteNode#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteNode/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-950"><paramref name="reader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-950"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-951"><paramref name="reader" /> 包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-951"><paramref name="reader" /> contains invalid characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-952">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-952">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-953">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-953">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (navigator As XPathNavigator, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit" Usage="xmlWriter.WriteNode (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="ef512-954">要复制其内容的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-954">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr"><span data-ttu-id="ef512-955">如果复制默认特性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-955"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ef512-956">将所有内容从 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象复制到编写器。</span><span class="sxs-lookup"><span data-stu-id="ef512-956">Copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="ef512-957"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置保持不变。</span><span class="sxs-lookup"><span data-stu-id="ef512-957">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-958">下表显示了 `XPath` 此方法支持的节点类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-958">The following table shows the supported `XPath` node types for this method.</span></span>  
  
|<span data-ttu-id="ef512-959">XPathNodeType</span><span class="sxs-lookup"><span data-stu-id="ef512-959">XPathNodeType</span></span>|<span data-ttu-id="ef512-960">WriteNode 行为</span><span class="sxs-lookup"><span data-stu-id="ef512-960">WriteNode Behavior</span></span>|  
|-------------------|------------------------|  
|`Root`|<span data-ttu-id="ef512-961">写出所有节点，而不考虑类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-961">Writes out all the nodes irrespective of type.</span></span> <span data-ttu-id="ef512-962">也就是说，编写器使用 <xref:System.Xml.XPath.XPathNavigator> 并写出根节点中的所有节点 (包括属性、处理指令、注释等。 ) </span><span class="sxs-lookup"><span data-stu-id="ef512-962">That is, the writer consumes the <xref:System.Xml.XPath.XPathNavigator> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</span></span>|  
|`Element`|<span data-ttu-id="ef512-963">写出元素节点和任何属性节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-963">Writes out the element node and any attribute nodes.</span></span>|  
|`Attribute`|<span data-ttu-id="ef512-964">无操作。</span><span class="sxs-lookup"><span data-stu-id="ef512-964">No operation.</span></span> <span data-ttu-id="ef512-965">请改用 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 或 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>。</span><span class="sxs-lookup"><span data-stu-id="ef512-965">Use <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> instead.</span></span>|  
|`Text`|<span data-ttu-id="ef512-966">写出文本节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-966">Writes out the text node.</span></span>|  
|`Namespace`|<span data-ttu-id="ef512-967">无操作。</span><span class="sxs-lookup"><span data-stu-id="ef512-967">No operation.</span></span> <span data-ttu-id="ef512-968">使用 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 或 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 方法来编写命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-968">Use the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> or <xref:System.Xml.XmlWriter.WriteAttributeString%2A> method to write the namespace declaration.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="ef512-969">写出处理指令节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-969">Writes out the processing instruction node.</span></span>|  
|`Comment`|<span data-ttu-id="ef512-970">写出注释节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-970">Writes out the comment node.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="ef512-971">写出有效的空白节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-971">Writes out the significant white space node.</span></span>|  
|`Whitespace`|<span data-ttu-id="ef512-972">写出空白节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-972">Writes out the white space node.</span></span>|  
  
 <span data-ttu-id="ef512-973">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteNodeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-973">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-974">下面的示例使用 <xref:System.Xml.XmlWriter.WriteNode%2A> 方法从文档中复制第一个 book 节点并将其写入控制台。</span><span class="sxs-lookup"><span data-stu-id="ef512-974">The following example uses the <xref:System.Xml.XmlWriter.WriteNode%2A> method to copy the first book node from a document and write it to the console.</span></span>  
  
 [!code-csharp[XmlWriteNode_nav#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriteNode_nav/CS/XmlWriteNode_nav.cs#1)]
 [!code-vb[XmlWriteNode_nav#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriteNode_nav/VB/XmlWriteNode_nav.vb#1)]  
  
 <span data-ttu-id="ef512-975">该示例使用 books.xml 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ef512-975">The example uses the books.xml file as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#1](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/books.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-976"><paramref name="navigator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-976"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-977">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-977">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-978">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-978">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNodeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-979">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-979">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-980">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-980">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="ef512-981">将所有内容从源对象异步复制到当前写入器实例。</span><span class="sxs-lookup"><span data-stu-id="ef512-981">Asynchronously copies everything from the source object to the current writer instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-982">这是的异步版本 <xref:System.Xml.XmlWriter.WriteNode%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-982">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-983">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-983">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-984">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-984">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-985">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-985">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ef512-986">要从其中进行读取的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-986">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="defattr"><span data-ttu-id="ef512-987">如果为 <see langword="true" />，则从 <see langword="XmlReader" /> 中复制默认属性；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-987"><see langword="true" /> to copy the default attributes from the <see langword="XmlReader" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ef512-988">将所有内容从读取器异步复制到写入器并将读取器移动到下一个同级的开头。</span><span class="sxs-lookup"><span data-stu-id="ef512-988">Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</span></span></summary>
        <returns><span data-ttu-id="ef512-989">表示 <see langword="WriteNode" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-989">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-990">这是的异步版本 <xref:System.Xml.XmlWriter.WriteNode%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-990">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-991">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-991">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-992">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-992">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-993">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-993">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-994">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-994">-or-</span></span>

<span data-ttu-id="ef512-995">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-995">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-996">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-996">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-997">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-997">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-998">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-998">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (navigator As XPathNavigator, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="ef512-999">要复制其内容的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-999">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to copy from.</span></span></param>
        <param name="defattr"><span data-ttu-id="ef512-1000">如果复制默认特性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1000"><see langword="true" /> to copy the default attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ef512-1001">从编写器的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象中异步复制所有内容。</span><span class="sxs-lookup"><span data-stu-id="ef512-1001">Asynchronously copies everything from the <see cref="T:System.Xml.XPath.XPathNavigator" /> object to the writer.</span></span> <span data-ttu-id="ef512-1002"><see cref="T:System.Xml.XPath.XPathNavigator" /> 的位置保持不变。</span><span class="sxs-lookup"><span data-stu-id="ef512-1002">The position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> remains unchanged.</span></span></summary>
        <returns><span data-ttu-id="ef512-1003">表示 <see langword="WriteNode" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1003">The task that represents the asynchronous <see langword="WriteNode" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1004">这是的异步版本 <xref:System.Xml.XmlWriter.WriteNode%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1004">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteNode%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1005">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1005">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1006">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1006">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1007">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1007">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1008">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1008">-or-</span></span>

<span data-ttu-id="ef512-1009">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1009">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1010">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1010">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1011">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1011">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1012">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1012">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public abstract void WriteProcessingInstruction (string name, string text);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlWriter.WriteProcessingInstruction (name, text)" />
      <MemberSignature Language="C#" Value="public abstract void WriteProcessingInstruction (string name, string? text);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-1013">处理指令的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1013">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="ef512-1014">要包括在处理指令中的文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1014">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="ef512-1015">当在派生类中被重写时，写出在名称和文本之间带有空格的处理指令，如下所示：&lt;?name text?&gt;。</span><span class="sxs-lookup"><span data-stu-id="ef512-1015">When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1016">此方法可用于将 XML 声明写入 (而不是 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>) 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1016">This method can be used to write the XML declaration (rather than <xref:System.Xml.XmlWriter.WriteStartDocument%2A>).</span></span> <span data-ttu-id="ef512-1017">这可能导致无法正确写入编码属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-1017">This could result in the encoding attribute being incorrectly written.</span></span> <span data-ttu-id="ef512-1018">例如，下面的 c # 代码将导致无效的 XML 文档，因为默认编码为 UTF-8。</span><span class="sxs-lookup"><span data-stu-id="ef512-1018">For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.</span></span>  
  
```csharp  
XmlWriter writer = XmlWriter.Create("output.xml");  
writer.WriteProcessingInstruction("xml", "version='1.0' encoding='UTF-16'");  
writer.WriteStartElement("root");  
writer.Close();  
```  
  
 <span data-ttu-id="ef512-1019">如果 `text` 为 `null` 或 `String.Empty` ，则此方法将写入， `ProcessingInstruction` 不包含任何数据内容，例如 \<?name?> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1019">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
 <span data-ttu-id="ef512-1020">如果文本包含无效的 "？ >" 序列，则 <xref:System.Xml.XmlWriter> 可以引发 <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> 对象) 还是插入空格 "？</span><span class="sxs-lookup"><span data-stu-id="ef512-1020">If text contains an invalid sequence of "?>", the <xref:System.Xml.XmlWriter> can either throw an <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> objects) or insert a space "?</span></span> <span data-ttu-id="ef512-1021">> "，以避免写入 <xref:System.Xml.XmlWriter> 由方法) 创建的无效 XML (对象 <xref:System.Xml.XmlWriter.Create%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1021">>" to avoid writing invalid XML (<xref:System.Xml.XmlWriter> objects created by the <xref:System.Xml.XmlWriter.Create%2A> method).</span></span>  
  
 <span data-ttu-id="ef512-1022">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1022">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1023">下面的示例编写一个表示书的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ef512-1023">The following example writes an XML file representing a book.</span></span>  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1024">该文本将导致格式不正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ef512-1024">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="ef512-1025"><paramref name="name" /> 为 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1025"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
<span data-ttu-id="ef512-1026">调用了 <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> 后，使用此方法创建 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-1026">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> has already been called.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1027">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1027">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1028">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1028">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstructionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string text);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteProcessingInstructionAsync(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteProcessingInstructionAsync (name As String, text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteProcessingInstructionAsync(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteProcessingInstructionAsync (name, text)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string? text);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ef512-1029">处理指令的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1029">The name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="ef512-1030">要包括在处理指令中的文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1030">The text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="ef512-1031">异步写出在名称和文本之间有空格的处理指令，如下所示：&lt;?name text?&gt;。</span><span class="sxs-lookup"><span data-stu-id="ef512-1031">Asynchronously writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <returns><span data-ttu-id="ef512-1032">表示 <see langword="WriteProcessingInstruction" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1032">The task that represents the asynchronous <see langword="WriteProcessingInstruction" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1033">这是的异步版本 <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1033">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1034">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1034">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1035">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1035">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1036">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1036">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1037">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1037">-or-</span></span>

<span data-ttu-id="ef512-1038">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1038">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1039">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1039">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1040">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1040">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1041">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1041">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public virtual void WriteQualifiedName (string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteQualifiedName (localName As String, ns As String)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedName : string * string -&gt; unit&#xA;override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlWriter.WriteQualifiedName (localName, ns)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public virtual void WriteQualifiedName (string localName, string? ns);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C#" Value="public abstract void WriteQualifiedName (string localName, string ns);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteQualifiedName (localName As String, ns As String)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedName : string * string -&gt; unit" Usage="xmlWriter.WriteQualifiedName (localName, ns)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-1042">要写入的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1042">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-1043">名称的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-1043">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="ef512-1044">当在派生类中被重写时，写出命名空间限定的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1044">When overridden in a derived class, writes out the namespace-qualified name.</span></span> <span data-ttu-id="ef512-1045">此方法查找位于给定命名空间范围内的前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-1045">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1046">如果 `ns` 映射到当前的默认命名空间，则不生成前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-1046">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="ef512-1047">写入属性值时，如果未找到，此方法将生成前缀 `ns` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1047">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="ef512-1048">在写入元素内容时，如果找不到，则会引发异常 `ns` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1048">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ef512-1049">如果派生自的类未 <xref:System.Xml.XmlWriter> 重写此方法， `localName` 则不会检查为有效的 W3C XML 名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1049">If a class derived from the <xref:System.Xml.XmlWriter> does not override this method `localName` is not checked to be a valid W3C XML name.</span></span> <span data-ttu-id="ef512-1050">在这种情况下，在调用此方法之前，可以通过方法检查字符串的有效性 <xref:System.Xml.XmlReader.IsName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1050">In such case, before calling this method, the validity of the string can be checked by <xref:System.Xml.XmlReader.IsName%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1051">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1051">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1052">此示例编写以下元素：</span><span class="sxs-lookup"><span data-stu-id="ef512-1052">The example writes the following element:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
  <item href="#x:test"/>  
</root>  
```  
  
 [!code-csharp[XmlWriter_v2#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#5)]
 [!code-vb[XmlWriter_v2#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1053"><paramref name="localName" /> 为 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1053"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="ef512-1054"><paramref name="localName" /> 不是有效的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1054"><paramref name="localName" /> is not a valid name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1055">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1055">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1056">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1056">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteQualifiedNameAsync(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQualifiedNameAsync (localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteQualifiedNameAsync(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteQualifiedNameAsync (localName, ns)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string? ns);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-1057">要写入的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1057">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-1058">名称的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-1058">The namespace URI for the name.</span></span></param>
        <summary><span data-ttu-id="ef512-1059">异步写出命名空间限定的名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1059">Asynchronously writes out the namespace-qualified name.</span></span> <span data-ttu-id="ef512-1060">此方法查找位于给定命名空间范围内的前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-1060">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <returns><span data-ttu-id="ef512-1061">表示 <see langword="WriteQualifiedName" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1061">The task that represents the asynchronous <see langword="WriteQualifiedName" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1062">这是的异步版本 <xref:System.Xml.XmlWriter.WriteQualifiedName%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1062">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1063">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1063">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1064">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1064">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1065">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1065">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1066">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1066">-or-</span></span>

<span data-ttu-id="ef512-1067">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1067">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1068">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1068">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1069">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1069">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1070">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1070">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1071">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1071">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1072">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1072">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-1073">当在派生类中被重写时，手动写入原始标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-1073">When overridden in a derived class, writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1074">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteRawAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1074">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : string -&gt; unit" Usage="xmlWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="ef512-1075">包含要写入的文本的字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-1075">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1076">当在派生类中被重写时，从字符串手动写入原始标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-1076">When overridden in a derived class, writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1077">此方法不会对特殊字符进行转义。</span><span class="sxs-lookup"><span data-stu-id="ef512-1077">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ef512-1078">不 <xref:System.Xml.XmlWriter> 会验证传递给方法的数据 <xref:System.Xml.XmlWriter.WriteRaw%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1078">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="ef512-1079">不应向此方法传递任意数据。</span><span class="sxs-lookup"><span data-stu-id="ef512-1079">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="ef512-1080">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteRawAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1080">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1081"><xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType>有关使用此方法的示例，请参阅。</span><span class="sxs-lookup"><span data-stu-id="ef512-1081">See <xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1082"><paramref name="data" /> 为 <see langword="null" /> 或 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1082"><paramref name="data" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1083">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1083">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1084">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1084">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef512-1085">包含要写入的文本的字符数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1085">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="ef512-1086">缓冲区中的位置，指示要写入文本的起始位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-1086">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="ef512-1087">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="ef512-1087">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1088">当在派生类中被重写时，从字符缓冲区手动写入原始标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-1088">When overridden in a derived class, writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1089">此方法不会对特殊字符进行转义。</span><span class="sxs-lookup"><span data-stu-id="ef512-1089">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ef512-1090">不 <xref:System.Xml.XmlWriter> 会验证传递给方法的数据 <xref:System.Xml.XmlWriter.WriteRaw%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1090">The <xref:System.Xml.XmlWriter> does not validate the data that is passed to the <xref:System.Xml.XmlWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="ef512-1091">不应向此方法传递任意数据。</span><span class="sxs-lookup"><span data-stu-id="ef512-1091">You should not pass arbitrary data to this method.</span></span>  
  
 <span data-ttu-id="ef512-1092">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteRawAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1092">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-1093"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1093"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ef512-1094"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="ef512-1094"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="ef512-1095">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1095">-or-</span></span> 
<span data-ttu-id="ef512-1096">缓冲区长度减去 <paramref name="index" /> 小于 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1096">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1097">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1097">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1098">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1098">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRawAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1099">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1099">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1100">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1100">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="ef512-1101">手动异步写入原始标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-1101">Asynchronously writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1102">这是的异步版本 <xref:System.Xml.XmlWriter.WriteRaw%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1102">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1103">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1103">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1104">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1104">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1105">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1105">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (data As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="ef512-1106">包含要写入的文本的字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-1106">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1107">从字符串手动异步写入原始标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-1107">Asynchronously writes raw markup manually from a string.</span></span></summary>
        <returns><span data-ttu-id="ef512-1108">表示 <see langword="WriteRaw" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1108">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1109">这是的异步版本 <xref:System.Xml.XmlWriter.WriteRaw%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1109">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1110">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1110">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1111">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1111">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1112">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1112">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1113">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1113">-or-</span></span>

<span data-ttu-id="ef512-1114">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1114">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1115">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1115">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1116">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1116">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1117">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1117">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef512-1118">包含要写入的文本的字符数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1118">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="ef512-1119">缓冲区中的位置，指示要写入文本的起始位置。</span><span class="sxs-lookup"><span data-stu-id="ef512-1119">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="ef512-1120">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="ef512-1120">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1121">从字符缓冲区手动异步写入原始标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-1121">Asynchronously writes raw markup manually from a character buffer.</span></span></summary>
        <returns><span data-ttu-id="ef512-1122">表示 <see langword="WriteRaw" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1122">The task that represents the asynchronous <see langword="WriteRaw" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1123">这是的异步版本 <xref:System.Xml.XmlWriter.WriteRaw%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1123">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteRaw%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1124">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1124">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1125">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1125">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1126">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1126">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1127">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1127">-or-</span></span>

<span data-ttu-id="ef512-1128">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1128">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1129">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1129">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1130">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1130">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1131">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1131">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1132">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1132">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1133">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1133">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-1134">当在派生类中被重写时，写入属性的起始内容。</span><span class="sxs-lookup"><span data-stu-id="ef512-1134">When overridden in a derived class, writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1135">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1135">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string -&gt; unit" Usage="xmlWriter.WriteStartAttribute localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-1136">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1136">The local name of the attribute.</span></span></param>
        <summary><span data-ttu-id="ef512-1137">写入具有指定本地名称的属性的开头。</span><span class="sxs-lookup"><span data-stu-id="ef512-1137">Writes the start of an attribute with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1138">此方法使您可以使用多种写入方法来编写值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1138">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="ef512-1139">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1139">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1140">编写器已关闭。</span><span class="sxs-lookup"><span data-stu-id="ef512-1140">The writer is closed.</span></span>

<span data-ttu-id="ef512-1141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1141">-or-</span></span>

<span data-ttu-id="ef512-1142">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1142">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1143">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1143">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-1144">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-1144">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-1145">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-1145">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-1146">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-1146">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-1147">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-1147">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-1148">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-1148">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (localName, ns)" />
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName, string? ns);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-1149">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1149">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-1150">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-1150">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="ef512-1151">写入具有指定本地名称和命名空间 URI 的属性的开头。</span><span class="sxs-lookup"><span data-stu-id="ef512-1151">Writes the start of an attribute with the specified local name and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1152">这是的更高级版本 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> ，它使你可以使用多种写入方法（例如、等）编写属性 <xref:System.Xml.XmlWriter.WriteString%2A> 值 <xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1152">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlWriter.WriteString%2A>, <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, and so on.</span></span>  
  
 <span data-ttu-id="ef512-1153">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1153">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1154"><xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType>有关使用此方法的示例，请参阅。</span><span class="sxs-lookup"><span data-stu-id="ef512-1154">See <xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-1155">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-1155">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-1156">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-1156">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-1157">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-1157">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-1158">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-1158">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-1159">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-1159">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1160">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1160">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1161">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1161">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteStartAttribute (string prefix, string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberSignature Language="C#" Value="public abstract void WriteStartAttribute (string prefix, string? localName, string ns);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ef512-1162">属性的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-1162">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="ef512-1163">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1163">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-1164">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-1164">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="ef512-1165">当在派生类中被重写时，写入具有指定的前缀、本地名称和命名空间 URI 的属性的开头。</span><span class="sxs-lookup"><span data-stu-id="ef512-1165">When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1166">此方法使您可以使用多种写入方法来编写值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1166">This method enables you to write a value using multiple Write methods.</span></span>  
  
 <span data-ttu-id="ef512-1167">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1167">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-1168">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-1168">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-1169">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-1169">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-1170">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-1170">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-1171">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-1171">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-1172">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-1172">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1173">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1173">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1174">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1174">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string prefix, string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartAttributeAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteStartAttributeAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartAttributeAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartAttributeAsync (prefix, localName, ns)" />
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string? prefix, string localName, string? ns);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ef512-1175">属性的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-1175">The namespace prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="ef512-1176">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1176">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-1177">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-1177">The namespace URI for the attribute.</span></span></param>
        <summary><span data-ttu-id="ef512-1178">异步写入具有指定前缀、本地名称和命名空间 URI 的属性的开头。</span><span class="sxs-lookup"><span data-stu-id="ef512-1178">Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="ef512-1179">表示 <see langword="WriteStartAttribute" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1179">The task that represents the asynchronous <see langword="WriteStartAttribute" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1180">这是的异步版本 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1180">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1181">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1181">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1182">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1182">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1183">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1183">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1184">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1184">-or-</span></span>

<span data-ttu-id="ef512-1185">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1185">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1186">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1186">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1187">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1187">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1188">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1188">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1189">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1189">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1190">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1190">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-1191">当在派生类中被重写时，写入 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-1191">When overridden in a derived class, writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1192">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1192">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : unit -&gt; unit" Usage="xmlWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-1193">当在派生类中被重写时，写入版本为“1.0”的 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-1193">When overridden in a derived class, writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1194">文档的编码级别由编写器的实现方式决定。</span><span class="sxs-lookup"><span data-stu-id="ef512-1194">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="ef512-1195">例如，如果 <xref:System.Text.Encoding> 在构造函数中指定了对象 `XmlTextWriter` ，这将确定 encoding 特性的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1195">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="ef512-1196">此方法不创建独立属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-1196">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="ef512-1197">当 `WriteStartDocument` 调用时，编写器验证你编写的内容是否是格式正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ef512-1197">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="ef512-1198">例如，它将检查 XML 声明是否为第一个节点、是否存在一个且仅有一个根级别的元素，等等。</span><span class="sxs-lookup"><span data-stu-id="ef512-1198">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="ef512-1199">如果未调用此方法，编写器将假设正在编写 XML 片段，并且不应用根级别规则。</span><span class="sxs-lookup"><span data-stu-id="ef512-1199">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="ef512-1200">如果已 `WriteStartDocument` 调用，然后 <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> 使用方法创建另一个 XML 声明，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ef512-1200">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="ef512-1201">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1201">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1202">这不是在构造函数后调用的第一个写方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1202">This is not the first write method called after the constructor.</span></span>

<span data-ttu-id="ef512-1203">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1203">-or-</span></span>

<span data-ttu-id="ef512-1204">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1204">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1205">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1205">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : bool -&gt; unit" Usage="xmlWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="ef512-1206">如果为 <see langword="true" />，则它将写入"standalone=yes"；如果为 <see langword="false" />，则它将写入"standalone=no"。</span><span class="sxs-lookup"><span data-stu-id="ef512-1206">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="ef512-1207">当在派生类中被重写时，写入版本为“1.0”的 XML 声明和独立的属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-1207">When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1208">文档的编码级别由编写器的实现方式决定。</span><span class="sxs-lookup"><span data-stu-id="ef512-1208">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="ef512-1209">例如，如果 <xref:System.Text.Encoding> 在构造函数中指定了对象 `XmlTextWriter` ，这将确定 encoding 特性的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1209">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="ef512-1210">`WriteStartDocument`调用时，编写器验证你编写的内容是否是格式正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ef512-1210">When `WriteStartDocument` is called, the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="ef512-1211">例如，它将检查 XML 声明是否为第一个节点、是否存在一个且仅有一个根级别的元素，等等。</span><span class="sxs-lookup"><span data-stu-id="ef512-1211">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</span></span> <span data-ttu-id="ef512-1212">如果未调用此方法，编写器将假设正在编写 XML 片段，并且不应用根级别规则。</span><span class="sxs-lookup"><span data-stu-id="ef512-1212">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="ef512-1213">如果已 `WriteStartDocument` 调用，然后 <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> 使用方法创建另一个 XML 声明，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ef512-1213">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="ef512-1214">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1214">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1215">这不是在构造函数后调用的第一个写方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1215">This is not the first write method called after the constructor.</span></span>

<span data-ttu-id="ef512-1216">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1216">-or-</span></span>

<span data-ttu-id="ef512-1217">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1217">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1218">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1218">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocumentAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1219">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1219">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1220">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1220">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <summary><span data-ttu-id="ef512-1221">异步写入 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-1221">Asynchronously writes the XML declaration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1222">这是的异步版本 <xref:System.Xml.XmlWriter.WriteStartDocument%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1222">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1223">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1223">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1224">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1224">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1225">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1225">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef512-1226">异步写入版本为“1.0”的 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="ef512-1226">Asynchronously writes the XML declaration with the version "1.0".</span></span></summary>
        <returns><span data-ttu-id="ef512-1227">表示 <see langword="WriteStartDocument" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1227">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1228">这是的异步版本 <xref:System.Xml.XmlWriter.WriteStartDocument%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1228">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1229">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1229">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1230">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1230">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1231">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1231">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1232">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1232">-or-</span></span>

<span data-ttu-id="ef512-1233">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1233">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1234">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1234">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1235">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1235">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1236">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1236">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync (standalone As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="ef512-1237">如果为 <see langword="true" />，则它将写入"standalone=yes"；如果为 <see langword="false" />，则它将写入"standalone=no"。</span><span class="sxs-lookup"><span data-stu-id="ef512-1237">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="ef512-1238">异步写入版本为“1.0”的 XML 声明和独立的属性。</span><span class="sxs-lookup"><span data-stu-id="ef512-1238">Asynchronously writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <returns><span data-ttu-id="ef512-1239">表示 <see langword="WriteStartDocument" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1239">The task that represents the asynchronous <see langword="WriteStartDocument" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1240">这是的异步版本 <xref:System.Xml.XmlWriter.WriteStartDocument%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1240">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1241">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1241">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1242">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1242">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1243">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1243">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1244">-or-</span></span>

<span data-ttu-id="ef512-1245">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1245">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1246">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1246">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1247">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1247">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1248">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1248">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1249">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1249">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1250">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1250">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-1251">当在派生类中被重写时，写入指定的开始标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-1251">When overridden in a derived class, writes the specified start tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1252">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1252">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string -&gt; unit" Usage="xmlWriter.WriteStartElement localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-1253">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1253">The local name of the element.</span></span></param>
        <summary><span data-ttu-id="ef512-1254">当在派生类中被重写时，写出具有指定的本地名称的开始标记。</span><span class="sxs-lookup"><span data-stu-id="ef512-1254">When overridden in a derived class, writes out a start tag with the specified local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1255">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1255">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1256">下面的示例写入 XML 节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-1256">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1257">编写器已关闭。</span><span class="sxs-lookup"><span data-stu-id="ef512-1257">The writer is closed.</span></span>

<span data-ttu-id="ef512-1258">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1258">-or-</span></span>

<span data-ttu-id="ef512-1259">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1259">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1260">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1260">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-1261">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-1261">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-1262">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-1262">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-1263">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-1263">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-1264">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-1264">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-1265">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-1265">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (localName, ns)" />
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName, string? ns);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ef512-1266">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1266">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-1267">与元素关联的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-1267">The namespace URI to associate with the element.</span></span> <span data-ttu-id="ef512-1268">如果此命名空间已在范围中并具有关联的前缀，则写入器也将自动写入该前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-1268">If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="ef512-1269">当在派生类中被重写时，写入指定的开始标记并将其与给定的命名空间关联起来。</span><span class="sxs-lookup"><span data-stu-id="ef512-1269">When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1270">调用此方法后，可以使用 <xref:System.Xml.XmlWriter.WriteComment%2A> 、 <xref:System.Xml.XmlWriter.WriteString%2A> 或子元素编写特性或创建内容 `WriteStartElement` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1270">After calling this method you can either write attributes, or create content using <xref:System.Xml.XmlWriter.WriteComment%2A>, <xref:System.Xml.XmlWriter.WriteString%2A>, or `WriteStartElement` for child elements.</span></span> <span data-ttu-id="ef512-1271">可以用或关闭元素 <xref:System.Xml.XmlWriter.WriteEndElement%2A> <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1271">You can close the element with either <xref:System.Xml.XmlWriter.WriteEndElement%2A> or <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>.</span></span> <span data-ttu-id="ef512-1272">例如，下面的 c # 代码：</span><span class="sxs-lookup"><span data-stu-id="ef512-1272">For example, the following C# code:</span></span>  
  
```csharp  
writer.WriteStartElement("item",null);  
writer.WriteString("some text");  
writer.WriteEndElement();  
```  
  
 <span data-ttu-id="ef512-1273">生成以下输出：</span><span class="sxs-lookup"><span data-stu-id="ef512-1273">Generates the following output:</span></span>  
  
```xml  
<item>some text</item>  
```  
  
 <span data-ttu-id="ef512-1274">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1274">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1275">编写器已关闭。</span><span class="sxs-lookup"><span data-stu-id="ef512-1275">The writer is closed.</span></span>

<span data-ttu-id="ef512-1276">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1276">-or-</span></span>

<span data-ttu-id="ef512-1277">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1277">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1278">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1278">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-1279">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-1279">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-1280">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-1280">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-1281">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-1281">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-1282">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-1282">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-1283">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-1283">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public abstract void WriteStartElement (string prefix, string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElement : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberSignature Language="C#" Value="public abstract void WriteStartElement (string prefix, string? localName, string ns);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ef512-1284">元素的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-1284">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="ef512-1285">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1285">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-1286">与元素关联的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-1286">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="ef512-1287">当在派生类中被重写时，写入指定的开始标记并将其与给定的命名空间和前缀关联起来。</span><span class="sxs-lookup"><span data-stu-id="ef512-1287">When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1288">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1288">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1289">以下示例写出 XML 片段。</span><span class="sxs-lookup"><span data-stu-id="ef512-1289">The following example writes out an XML fragment.</span></span>  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1290">编写器已关闭。</span><span class="sxs-lookup"><span data-stu-id="ef512-1290">The writer is closed.</span></span>

<span data-ttu-id="ef512-1291">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1291">-or-</span></span>

<span data-ttu-id="ef512-1292">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1292">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1293">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1293">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="ef512-1294">缓冲区中有一个字符是有效的 XML 字符，但对于输出编码是无效的。</span><span class="sxs-lookup"><span data-stu-id="ef512-1294">There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</span></span> <span data-ttu-id="ef512-1295">例如，如果输出编码为 ASCII，应该仅对元素和特性名使用从 0 到 127 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-1295">For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</span></span> <span data-ttu-id="ef512-1296">无效的字符可能位于此方法的参数中，或者位于以前要写入缓冲区的方法的参数中。</span><span class="sxs-lookup"><span data-stu-id="ef512-1296">The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</span></span> <span data-ttu-id="ef512-1297">如果可能，此类字符将使用字符实体引用进行转义（例如，在文本节点或特性值中）。</span><span class="sxs-lookup"><span data-stu-id="ef512-1297">Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</span></span> <span data-ttu-id="ef512-1298">但是，不允许在元素名、特性名、注释、处理指令和 CDATA 节中使用字符实体引用。</span><span class="sxs-lookup"><span data-stu-id="ef512-1298">However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartElementAsync (string prefix, string localName, string ns);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartElementAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartElementAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartElementAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartElementAsync (prefix, localName, ns)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartElementAsync (string? prefix, string localName, string? ns);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ef512-1299">元素的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ef512-1299">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="ef512-1300">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ef512-1300">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="ef512-1301">与元素关联的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ef512-1301">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="ef512-1302">异步写入指定的开始标记并将其与给定的命名空间和前缀关联起来。</span><span class="sxs-lookup"><span data-stu-id="ef512-1302">Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <returns><span data-ttu-id="ef512-1303">表示 <see langword="WriteStartElement" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1303">The task that represents the asynchronous <see langword="WriteStartElement" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1304">这是的异步版本 <xref:System.Xml.XmlWriter.WriteStartElement%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1304">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteStartElement%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1305">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1305">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1306">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1306">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1307">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1307">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1308">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1308">-or-</span></span>

<span data-ttu-id="ef512-1309">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1309">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1310">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1310">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1311">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1311">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1312">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1312">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef512-1313">当在派生类中被重写时，获取写入器的状态。</span><span class="sxs-lookup"><span data-stu-id="ef512-1313">When overridden in a derived class, gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="ef512-1314"><see cref="T:System.Xml.WriteState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="ef512-1314">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1315">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1315">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1316">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1316">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public abstract void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteString : string -&gt; unit" Usage="xmlWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="ef512-1317">要写入的文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1317">The text to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1318">当在派生类中被重写时，写入给定的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ef512-1318">When overridden in a derived class, writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1319">`WriteString` 执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="ef512-1319">`WriteString` does the following:</span></span>  
  
-   <span data-ttu-id="ef512-1320">字符 `&` 、 `<` 和 `>` 分别替换为 `&amp;` 、 `&lt;` 和 `&gt;` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1320">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="ef512-1321">使用创建的的默认行为 <xref:System.Xml.XmlWriter> <xref:System.Xml.XmlWriter.Create%2A> 是在 <xref:System.ArgumentException> 尝试写入 0x-0x1F 范围内的字符值时引发， (排除空格字符0x9、0xA 和 0xD) 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1321">The default behavior of an <xref:System.Xml.XmlWriter> created using <xref:System.Xml.XmlWriter.Create%2A> is to throw an <xref:System.ArgumentException> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).</span></span> <span data-ttu-id="ef512-1322">通过创建 <xref:System.Xml.XmlWriter> <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> 属性设置为的，可以编写这些无效的 XML 字符 `false` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1322">These invalid XML characters can be written by creating the <xref:System.Xml.XmlWriter> with the <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> property set to `false`.</span></span> <span data-ttu-id="ef512-1323">这样做将导致字符被数字字符实体替换 ( # B0 \# 0; 通过 & # 0x1F) 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1323">Doing so will result in the characters being replaced with numeric character entities (&\#0; through &#0x1F).</span></span> <span data-ttu-id="ef512-1324">此外， <xref:System.Xml.XmlTextWriter> 在默认情况下，使用运算符创建的 `new` 会将无效字符替换为数字字符实体。</span><span class="sxs-lookup"><span data-stu-id="ef512-1324">Additionally, an <xref:System.Xml.XmlTextWriter> created with the `new` operator will replace the invalid characters with numeric character entities by default.</span></span>  
  
 <span data-ttu-id="ef512-1325">**注意** Microsoft 不鼓励编写无效 XML 字符的做法，因为许多使用 XML 的应用程序都不能处理无效字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-1325">**Note** Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.</span></span>  
  
-   <span data-ttu-id="ef512-1326">如果 `WriteString` 在属性值的上下文中调用，则双引号分别替换为 `&quot;` 和 `&apos;` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1326">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="ef512-1327">例如，此输入字符串 `test<item>test` 写出为</span><span class="sxs-lookup"><span data-stu-id="ef512-1327">For example, this input string `test<item>test` is written out as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="ef512-1328">如果 `text` 是 `null` 或 `String.Empty` ，则此方法会写入没有数据内容的文本节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-1328">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
 <span data-ttu-id="ef512-1329">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1329">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1330">下面的示例写入 XML 节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-1330">The following example writes an XML node.</span></span>  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1331">文本字符串包含无效的代理项对。</span><span class="sxs-lookup"><span data-stu-id="ef512-1331">The text string contains an invalid surrogate pair.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1332">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1332">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1333">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1333">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStringAsync (string text);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStringAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStringAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStringAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteStringAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStringAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStringAsync text" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStringAsync (string? text);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="ef512-1334">要写入的文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1334">The text to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1335">异步写入给定的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ef512-1335">Asynchronously writes the given text content.</span></span></summary>
        <returns><span data-ttu-id="ef512-1336">表示 <see langword="WriteString" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1336">The task that represents the asynchronous <see langword="WriteString" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1337">这是的异步版本 <xref:System.Xml.XmlWriter.WriteString%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1337">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteString%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1338">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1338">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1339">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1339">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1340">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1340">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1341">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1341">-or-</span></span>

<span data-ttu-id="ef512-1342">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1342">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1343">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1343">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1344">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1344">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1345">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1345">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="ef512-1346">低代理项。</span><span class="sxs-lookup"><span data-stu-id="ef512-1346">The low surrogate.</span></span> <span data-ttu-id="ef512-1347">它必须是介于 0xDC00 和 0xDFFF 之间的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1347">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="ef512-1348">高代理项。</span><span class="sxs-lookup"><span data-stu-id="ef512-1348">The high surrogate.</span></span> <span data-ttu-id="ef512-1349">它必须是介于 0xD800 和 0xDBFF 之间的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1349">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="ef512-1350">当在派生类中被重写时，为代理项字符对生成并写入代理项字符实体。</span><span class="sxs-lookup"><span data-stu-id="ef512-1350">When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1351">此方法仅适用于使用 UTF-16 编码的系统。</span><span class="sxs-lookup"><span data-stu-id="ef512-1351">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="ef512-1352">代理项字符实体是以十六进制格式编写的。</span><span class="sxs-lookup"><span data-stu-id="ef512-1352">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="ef512-1353">代理项字符的范围 #x10000 为 #x10FFFF。</span><span class="sxs-lookup"><span data-stu-id="ef512-1353">The range for surrogate characters is #x10000 to #x10FFFF.</span></span> <span data-ttu-id="ef512-1354">以下公式用于生成代理项字符实体： (`highChar` -0xD800) \* 0x400 (+ `lowChar` 0xDC00) + 0x10000</span><span class="sxs-lookup"><span data-stu-id="ef512-1354">The following formula is used to generate the surrogate character entity: (`highChar` -0xD800) \* 0x400 + (`lowChar` -0xDC00) + 0x10000</span></span>  
  
 <span data-ttu-id="ef512-1355">对于 HTML 和 XML，文档字符集 (，因此) 的数字字符引用的表示法基于 UCS [ISO-10646]。</span><span class="sxs-lookup"><span data-stu-id="ef512-1355">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="ef512-1356">因此，在某些情况下，源文档中的单个数字字符引用可以与字符串中的 2 16 位单元相对应 (高代理项和低代理项) 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1356">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="ef512-1357">这些16位单元称为代理项对。</span><span class="sxs-lookup"><span data-stu-id="ef512-1357">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="ef512-1358">有关代理项或字符的详细信息，请参阅中的 Unicode 3.0/Unicode 2.0 标准的3.7 节 <https://www.unicode.org> 或 [W3C XML 1.0 建议的第2.2 部分](https://www.w3.org/TR/REC-xml#charsets)。</span><span class="sxs-lookup"><span data-stu-id="ef512-1358">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <https://www.unicode.org>, or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>  
  
 <span data-ttu-id="ef512-1359">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1359">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1360">传递了无效的代理项字符对。</span><span class="sxs-lookup"><span data-stu-id="ef512-1360">An invalid surrogate character pair was passed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1361">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1361">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1362">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1362">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteSurrogateCharEntityAsync (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteSurrogateCharEntityAsync(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteSurrogateCharEntityAsync (lowChar As Char, highChar As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteSurrogateCharEntityAsync(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteSurrogateCharEntityAsync (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="highChar" Type="System.Char" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="ef512-1363">低代理项。</span><span class="sxs-lookup"><span data-stu-id="ef512-1363">The low surrogate.</span></span> <span data-ttu-id="ef512-1364">它必须是介于 0xDC00 和 0xDFFF 之间的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1364">This must be a value between 0xDC00 and 0xDFFF.</span></span></param>
        <param name="highChar"><span data-ttu-id="ef512-1365">高代理项。</span><span class="sxs-lookup"><span data-stu-id="ef512-1365">The high surrogate.</span></span> <span data-ttu-id="ef512-1366">它必须是介于 0xD800 和 0xDBFF 之间的值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1366">This must be a value between 0xD800 and 0xDBFF.</span></span></param>
        <summary><span data-ttu-id="ef512-1367">为代理项字符对异步生成并写入代理项字符实体。</span><span class="sxs-lookup"><span data-stu-id="ef512-1367">Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <returns><span data-ttu-id="ef512-1368">表示 <see langword="WriteSurrogateCharEntity" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1368">The task that represents the asynchronous <see langword="WriteSurrogateCharEntity" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1369">这是的异步版本 <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1369">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1370">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1370">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1371">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1371">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1372">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1372">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1373">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1373">-or-</span></span>

<span data-ttu-id="ef512-1374">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1374">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1375">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1375">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1376">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1376">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1377">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1377">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteValue">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1378">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1378">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1379">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1379">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ef512-1380">写入单一的简单类型化值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1380">Writes a single simple-typed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1381"><xref:System.Xml.XmlWriter.WriteValue%2A>方法接受 (CLR) 的公共语言运行时，根据 XML 架构定义语言 (XSD) 数据类型转换规则，将它们转换为其字符串表示形式，并使用方法将这些值写入它们 <xref:System.Xml.XmlWriter.WriteString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1381">The <xref:System.Xml.XmlWriter.WriteValue%2A> method accepts common language runtime (CLR) simple-typed values, converts them to their string representations according to the XML schema definition language (XSD) data type conversion rules, and writes them out by using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span> <span data-ttu-id="ef512-1382">这使你能够在 <xref:System.Xml.XPath.XPathDocument> 、和对象之间传递数据时，以最小的重新分析开销来管道简单类型的值 <xref:System.Xml.XmlReader> <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1382">This enables you to pipeline simple-type values with minimal reparsing overhead when passing data between <xref:System.Xml.XPath.XPathDocument>, <xref:System.Xml.XmlReader>, and <xref:System.Xml.XmlWriter> objects.</span></span> <span data-ttu-id="ef512-1383">当处理 CLR 简单类型和实例时，此功能也很有用 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1383">This ability is also useful when dealing with CLR simple-types and an <xref:System.Xml.XmlWriter> instance.</span></span> <span data-ttu-id="ef512-1384">您可以调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法来编写类型化的值，而不是使用类中的方法 <xref:System.Xml.XmlConvert> 将类型化数据转换为字符串值，然后再将其写入。</span><span class="sxs-lookup"><span data-stu-id="ef512-1384">You can call the <xref:System.Xml.XmlWriter.WriteValue%2A> method to write the typed value instead of using the methods in the <xref:System.Xml.XmlConvert> class to convert the typed data to a string value before writing it out.</span></span>  
  
 <span data-ttu-id="ef512-1385">对于异步操作，将的返回值转换 <xref:System.Xml.XmlWriter.WriteValue%2A> 为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1385">For asynchronous operations, convert the return value of <xref:System.Xml.XmlWriter.WriteValue%2A> to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1386">下表显示了对应于 CLR 类型的默认 XSD 数据类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1386">The following table shows the default XSD data types that correspond to CLR types.</span></span>  
  
 <span data-ttu-id="ef512-1387">如果 CLR 对象是列表类型，例如 <xref:System.Collections.IEnumerable>、<xref:System.Collections.IList> 或 <xref:System.Collections.ICollection>，将作为值类型数组对待。</span><span class="sxs-lookup"><span data-stu-id="ef512-1387">If the CLR object is a list type, such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span>  
  
|<span data-ttu-id="ef512-1388">CLR 类型</span><span class="sxs-lookup"><span data-stu-id="ef512-1388">CLR type</span></span>|<span data-ttu-id="ef512-1389">默认 XSD 数据类型</span><span class="sxs-lookup"><span data-stu-id="ef512-1389">Default XSD data type</span></span>|  
|--------------|---------------------------|  
|<xref:System.Boolean?displayProperty=nameWithType>|<span data-ttu-id="ef512-1390">xsd:boolean</span><span class="sxs-lookup"><span data-stu-id="ef512-1390">xsd:boolean</span></span>|  
|<xref:System.Byte?displayProperty=nameWithType>**|<span data-ttu-id="ef512-1391">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="ef512-1391">xsd:integer</span></span>|  
|<span data-ttu-id="ef512-1392"><xref:System.Byte?displayProperty=nameWithType> 数组</span><span class="sxs-lookup"><span data-stu-id="ef512-1392"><xref:System.Byte?displayProperty=nameWithType> array</span></span>|<span data-ttu-id="ef512-1393">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="ef512-1393">xsd:base64Binary</span></span>|  
|<xref:System.Char?displayProperty=nameWithType>**|<span data-ttu-id="ef512-1394">xsd:string</span><span class="sxs-lookup"><span data-stu-id="ef512-1394">xsd:string</span></span>|  
|<xref:System.DateTime?displayProperty=nameWithType>|<span data-ttu-id="ef512-1395">xsd:dateTime</span><span class="sxs-lookup"><span data-stu-id="ef512-1395">xsd:dateTime</span></span>|  
|<xref:System.Decimal?displayProperty=nameWithType>|<span data-ttu-id="ef512-1396">xsd:decimal</span><span class="sxs-lookup"><span data-stu-id="ef512-1396">xsd:decimal</span></span>|  
|<xref:System.Double?displayProperty=nameWithType>|<span data-ttu-id="ef512-1397">xsd:double</span><span class="sxs-lookup"><span data-stu-id="ef512-1397">xsd:double</span></span>|  
|<xref:System.Int16?displayProperty=nameWithType>**|<span data-ttu-id="ef512-1398">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="ef512-1398">xsd:integer</span></span>|  
|<xref:System.Int32?displayProperty=nameWithType>|<span data-ttu-id="ef512-1399">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="ef512-1399">xsd:integer</span></span>|  
|<xref:System.Int64?displayProperty=nameWithType>|<span data-ttu-id="ef512-1400">xsd:integer</span><span class="sxs-lookup"><span data-stu-id="ef512-1400">xsd:integer</span></span>|  
|<xref:System.Single?displayProperty=nameWithType>|<span data-ttu-id="ef512-1401">xsd:float</span><span class="sxs-lookup"><span data-stu-id="ef512-1401">xsd:float</span></span>|  
|<xref:System.String?displayProperty=nameWithType>|<span data-ttu-id="ef512-1402">xsd:string</span><span class="sxs-lookup"><span data-stu-id="ef512-1402">xsd:string</span></span>|  
|<xref:System.IO.TextReader?displayProperty=nameWithType>|<span data-ttu-id="ef512-1403">xsd:string</span><span class="sxs-lookup"><span data-stu-id="ef512-1403">xsd:string</span></span>|  
|<xref:System.IO.BinaryReader?displayProperty=nameWithType>|<span data-ttu-id="ef512-1404">xsd:base64Binary</span><span class="sxs-lookup"><span data-stu-id="ef512-1404">xsd:base64Binary</span></span>|  
  
 <span data-ttu-id="ef512-1405">\*\*这些类型不符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="ef512-1405">\*\*These types are not CLS-compliant.</span></span> <span data-ttu-id="ef512-1406">它们没有相应的 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1406">They do not have corresponding <xref:System.Xml.XmlWriter.WriteValue%2A> methods.</span></span>  
  
 <span data-ttu-id="ef512-1407">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1407">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1408">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1408">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : bool -&gt; unit&#xA;override this.WriteValue : bool -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1409">要写入的 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1409">The <see cref="T:System.Boolean" /> value to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1410">写入 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1410">Writes a <see cref="T:System.Boolean" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1411">此方法获取公共语言运行时对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1411">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1412">在调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法时，<xref:System.Xml.XmlWriter> 根据 XML 架构 (XSD) 数据类型定义将值转换为其字符串表示形式并使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法写出。</span><span class="sxs-lookup"><span data-stu-id="ef512-1412">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1413">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1413">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1414">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1414">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="ef512-1415">将数组类型传递给 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 重载以写出非重复值的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1415">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="ef512-1416">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1416">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1417">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1417">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1418">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1418">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1419">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1419">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1420">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1420">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTime -&gt; unit&#xA;override this.WriteValue : DateTime -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1421">要写入的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1421">The <see cref="T:System.DateTime" /> value to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1422">写入 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1422">Writes a <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1423">此方法获取公共语言运行时对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1423">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1424">在调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法时，<xref:System.Xml.XmlWriter> 根据 XML 架构 (XSD) 数据类型定义将值转换为其字符串表示形式并使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法写出。</span><span class="sxs-lookup"><span data-stu-id="ef512-1424">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1425">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1425">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1426">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1426">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="ef512-1427">将数组类型传递给 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 重载以写出非重复值的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1427">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="ef512-1428">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1428">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1429">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1429">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1430">下面的示例使用类型化数据编写书节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-1430">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1431">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1431">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1432">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1432">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1433">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1433">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTimeOffset -&gt; unit&#xA;override this.WriteValue : DateTimeOffset -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1434">要写入的 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1434">The <see cref="T:System.DateTimeOffset" /> value to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1435">写入 <see cref="T:System.DateTimeOffset" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1435">Writes a <see cref="T:System.DateTimeOffset" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1436">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1436">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1437">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1437">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1438">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1438">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : decimal -&gt; unit&#xA;override this.WriteValue : decimal -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1439">要写入的 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1439">The <see cref="T:System.Decimal" /> value to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1440">写入 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1440">Writes a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1441">此方法获取公共语言运行时对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1441">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1442">在调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法时，<xref:System.Xml.XmlWriter> 根据 XML 架构 (XSD) 数据类型定义将值转换为其字符串表示形式并使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法写出。</span><span class="sxs-lookup"><span data-stu-id="ef512-1442">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1443">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1443">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1444">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1444">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="ef512-1445">将数组类型传递给 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 重载以写出非重复值的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1445">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="ef512-1446">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1446">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1447">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1447">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1448">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1448">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1449">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1449">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1450">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1450">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : double -&gt; unit&#xA;override this.WriteValue : double -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1451">要写入的 <see cref="T:System.Double" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1451">The <see cref="T:System.Double" /> value to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1452">写入 <see cref="T:System.Double" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1452">Writes a <see cref="T:System.Double" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1453">此方法获取公共语言运行时对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1453">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1454">在调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法时，<xref:System.Xml.XmlWriter> 根据 XML 架构 (XSD) 数据类型定义将值转换为其字符串表示形式并使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法写出。</span><span class="sxs-lookup"><span data-stu-id="ef512-1454">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1455">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1455">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1456">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1456">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="ef512-1457">将数组类型传递给 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 重载以写出非重复值的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1457">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="ef512-1458">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1458">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1459">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1459">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef512-1460">下面的示例使用类型化数据编写书节点。</span><span class="sxs-lookup"><span data-stu-id="ef512-1460">The following example writes a book node using typed data.</span></span>  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1461">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1461">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1462">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1462">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1463">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1463">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int -&gt; unit&#xA;override this.WriteValue : int -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1464">要写入的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1464">The <see cref="T:System.Int32" /> value to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1465">写入 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1465">Writes a <see cref="T:System.Int32" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1466">此方法获取公共语言运行时对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1466">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1467">在调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法时，<xref:System.Xml.XmlWriter> 根据 XML 架构 (XSD) 数据类型定义将值转换为其字符串表示形式并使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法写出。</span><span class="sxs-lookup"><span data-stu-id="ef512-1467">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1468">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1468">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1469">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1469">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="ef512-1470">将数组类型传递给 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 重载以写出非重复值的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1470">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="ef512-1471">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1471">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1472">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1472">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1473">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1473">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1474">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1474">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1475">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1475">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int64 -&gt; unit&#xA;override this.WriteValue : int64 -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1476">要写入的 <see cref="T:System.Int64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1476">The <see cref="T:System.Int64" /> value to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1477">写入 <see cref="T:System.Int64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1477">Writes a <see cref="T:System.Int64" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1478">此方法获取公共语言运行时对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1478">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1479">在调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法时，<xref:System.Xml.XmlWriter> 根据 XML 架构 (XSD) 数据类型定义将值转换为其字符串表示形式并使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法写出。</span><span class="sxs-lookup"><span data-stu-id="ef512-1479">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1480">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1480">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1481">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1481">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="ef512-1482">将数组类型传递给 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 重载以写出非重复值的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1482">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="ef512-1483">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1483">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1484">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1484">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1485">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1485">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1486">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1486">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1487">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1487">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : obj -&gt; unit&#xA;override this.WriteValue : obj -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1488">要写入的对象值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1488">The object value to write.</span></span>  
  
 <span data-ttu-id="ef512-1489">**注意**：随着 .NET Framework 3.5 的发布，该方法接受将 <see cref="T:System.DateTimeOffset" /> 作为参数。</span><span class="sxs-lookup"><span data-stu-id="ef512-1489">**Note** With the release of the .NET Framework 3.5, this method accepts <see cref="T:System.DateTimeOffset" /> as a parameter.</span></span></param>
        <summary><span data-ttu-id="ef512-1490">写入对象值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1490">Writes the object value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1491">此方法采用公共语言运行时 (CLR) 对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1491">This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1492">如果 CLR 对象是列表类型（如 <xref:System.Collections.IEnumerable> 、或） <xref:System.Collections.IList> ，则将 <xref:System.Collections.ICollection> 其视为值类型的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1492">If the CLR object is a list type such as <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, or <xref:System.Collections.ICollection>, it is treated as an array of the value type.</span></span> <span data-ttu-id="ef512-1493"><xref:System.Xml.XmlWriter>根据 XML 架构 (XSD) 数据类型规则，将值转换为其字符串表示形式，并使用方法将其写出 <xref:System.Xml.XmlWriter.WriteString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1493">The <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1494">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1494">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1495">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1495">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1496">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1496">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ef512-1497"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1497">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1498">编写器已关闭或处于错误状态。</span><span class="sxs-lookup"><span data-stu-id="ef512-1498">The writer is closed or in error state.</span></span>

<span data-ttu-id="ef512-1499">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1499">-or-</span></span>

<span data-ttu-id="ef512-1500">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1500">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1501">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1501">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : single -&gt; unit&#xA;override this.WriteValue : single -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1502">要写入的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ef512-1502">The single-precision floating-point number to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1503">写入一个单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ef512-1503">Writes a single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1504">此方法获取公共语言运行时对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1504">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1505">在调用 <xref:System.Xml.XmlWriter.WriteValue%2A> 方法时，<xref:System.Xml.XmlWriter> 根据 XML 架构 (XSD) 数据类型定义将值转换为其字符串表示形式并使用 <xref:System.Xml.XmlWriter.WriteString%2A> 方法写出。</span><span class="sxs-lookup"><span data-stu-id="ef512-1505">When the <xref:System.Xml.XmlWriter.WriteValue%2A> method is called, the <xref:System.Xml.XmlWriter> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <xref:System.Xml.XmlWriter.WriteString%2A> method.</span></span>  
  
 <span data-ttu-id="ef512-1506">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1506">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1507">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1507">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="ef512-1508">将数组类型传递给 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 重载以写出非重复值的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1508">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="ef512-1509">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1509">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1510">对于异步操作，请将此方法的返回值转换为字符串，并使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1510">For asynchronous operations, convert the return value of this method to a string and use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1511">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1511">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1512">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1512">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1513">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1513">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : string -&gt; unit&#xA;override this.WriteValue : string -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ef512-1514">要写入的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1514">The <see cref="T:System.String" /> value to write.</span></span></param>
        <summary><span data-ttu-id="ef512-1515">写入 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1515">Writes a <see cref="T:System.String" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1516">此方法获取公共语言运行时对象，并使用 XML 架构定义语言 (XSD) 数据类型转换规则将输入值转换为所需的输出类型。</span><span class="sxs-lookup"><span data-stu-id="ef512-1516">This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</span></span>  
  
 <span data-ttu-id="ef512-1517">如果继续多次调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，值不会通过空格分隔。</span><span class="sxs-lookup"><span data-stu-id="ef512-1517">If <xref:System.Xml.XmlWriter.WriteValue%2A> is called multiple times in succession, the values are not delimited by a space.</span></span> <span data-ttu-id="ef512-1518">必须在调用 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 之间调用 <xref:System.Xml.XmlWriter.WriteValue%2A>，以插入空白。</span><span class="sxs-lookup"><span data-stu-id="ef512-1518">You must call <xref:System.Xml.XmlWriter.WriteWhitespace%2A> between calls to <xref:System.Xml.XmlWriter.WriteValue%2A> to insert white space.</span></span> <span data-ttu-id="ef512-1519">将数组类型传递给 <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> 重载以写出非重复值的数组。</span><span class="sxs-lookup"><span data-stu-id="ef512-1519">Pass an array type to the <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> overload to write out an array of distinct values.</span></span>  
  
 <span data-ttu-id="ef512-1520">如果在输出纯文本的实例上调用此方法，则将 <xref:System.Xml.XmlWriter> 类型化值序列化为文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1520">If this method is called on an <xref:System.Xml.XmlWriter> instance that outputs text-only, the typed value is serialized to text.</span></span>  
  
 <span data-ttu-id="ef512-1521">对于异步操作，请使用 <xref:System.Xml.XmlWriter.WriteStringAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1521">For asynchronous operations, use the <xref:System.Xml.XmlWriter.WriteStringAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1522">指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1522">An invalid value was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1523">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1523">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1524">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1524">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public abstract void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespace : string -&gt; unit" Usage="xmlWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="ef512-1525">空格字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-1525">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="ef512-1526">当在派生类中被重写时，写出给定的空白区域。</span><span class="sxs-lookup"><span data-stu-id="ef512-1526">When overridden in a derived class, writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1527">此方法用于手动设置文档格式。</span><span class="sxs-lookup"><span data-stu-id="ef512-1527">This method is used to manually format your document.</span></span>  
  
 <span data-ttu-id="ef512-1528">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1528">For the asynchronous version of this method, see <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ef512-1529">字符串包含非空白字符。</span><span class="sxs-lookup"><span data-stu-id="ef512-1529">The string contains non-white space characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1530">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1530">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1531">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1531">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string ws);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteWhitespaceAsync(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteWhitespaceAsync (ws As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteWhitespaceAsync(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteWhitespaceAsync ws" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string? ws);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="ef512-1532">空格字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="ef512-1532">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="ef512-1533">异步写出给定的空白区域。</span><span class="sxs-lookup"><span data-stu-id="ef512-1533">Asynchronously writes out the given white space.</span></span></summary>
        <returns><span data-ttu-id="ef512-1534">表示 <see langword="WriteWhitespace" /> 异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ef512-1534">The task that represents the asynchronous <see langword="WriteWhitespace" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1535">这是的异步版本 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> ，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ef512-1535">This is the asynchronous version of <xref:System.Xml.XmlWriter.WriteWhitespace%2A>, with the same functionality.</span></span> <span data-ttu-id="ef512-1536">若要使用此方法，必须将 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1536">To use this method, you must set the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1537">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1537">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1538">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1538">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ef512-1539">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ef512-1539">-or-</span></span>

<span data-ttu-id="ef512-1540">调用了 <see cref="T:System.Xml.XmlWriter" /> 异步方法，但未将 <see cref="P:System.Xml.XmlWriterSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1540">An <see cref="T:System.Xml.XmlWriter" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlWriterSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ef512-1541">在这种情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“如果要使用异步方法，请将 XmlWriterSettings.Async 设置为 true”。</span><span class="sxs-lookup"><span data-stu-id="ef512-1541">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="/dotnet/csharp/async"><span data-ttu-id="ef512-1542">异步编程 (c # ) </span><span class="sxs-lookup"><span data-stu-id="ef512-1542">Asynchronous programming (C#)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/concepts/async/"><span data-ttu-id="ef512-1543">异步编程与 Async 和 Await (Visual Basic) </span><span class="sxs-lookup"><span data-stu-id="ef512-1543">Asynchronous programming with Async and Await (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="C#" Value="public virtual string? XmlLang { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C#" Value="public abstract string XmlLang { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XmlLang As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ XmlLang { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef512-1544">当在派生类中被重写时，获取当前的 <see langword="xml:lang" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="ef512-1544">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="ef512-1545">当前 <see langword="xml:lang" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="ef512-1545">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1546">此属性允许一个组件确定另一个组件离开写入器的状态。</span><span class="sxs-lookup"><span data-stu-id="ef512-1546">This property allows one component to find out in what state another component has left the writer.</span></span> <span data-ttu-id="ef512-1547">例如，可能有一个组件要告诉另一个要生成的语言帮助文本。</span><span class="sxs-lookup"><span data-stu-id="ef512-1547">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="ef512-1548">语言信息通过编写属性进行传达 `xml:lang` 。</span><span class="sxs-lookup"><span data-stu-id="ef512-1548">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1549">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1549">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1550">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1550">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlSpace XmlSpace { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XmlSpace As XmlSpace" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef512-1551">当在派生类中被重写时，获取表示当前 <see langword="xml:space" /> 范围的 <see cref="T:System.Xml.XmlSpace" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1551">When overridden in a derived class, gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="ef512-1552">一个表示当前 <see langword="XmlSpace" /> 范围的 <see langword="xml:space" />。</span><span class="sxs-lookup"><span data-stu-id="ef512-1552">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ef512-1553">“值”</span><span class="sxs-lookup"><span data-stu-id="ef512-1553">Value</span></span> 
 </term><description> <span data-ttu-id="ef512-1554">含义</span><span class="sxs-lookup"><span data-stu-id="ef512-1554">Meaning</span></span> 
 </description></listheader><item><term><see langword="None" /></term><description> <span data-ttu-id="ef512-1555">如果不存在 <see langword="xml:space" /> 范围，则此为默认值。</span><span class="sxs-lookup"><span data-stu-id="ef512-1555">This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 </description></item><item><term><see langword="Default" /></term><description> <span data-ttu-id="ef512-1556">当前范围为 <see langword="xml:space" />="default"。</span><span class="sxs-lookup"><span data-stu-id="ef512-1556">The current scope is <see langword="xml:space" />="default".</span></span>  
  
 </description></item><item><term><see langword="Preserve" /></term><description> <span data-ttu-id="ef512-1557">当前范围为 <see langword="xml:space" />="preserve"。</span><span class="sxs-lookup"><span data-stu-id="ef512-1557">The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef512-1558">这允许一个组件确定另一个组件将编写器留给编写器的状态。</span><span class="sxs-lookup"><span data-stu-id="ef512-1558">This allows one component to find out what state another component has left the writer in.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef512-1559">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ef512-1559">An <see cref="T:System.Xml.XmlWriter" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ef512-1560">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ef512-1560">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
