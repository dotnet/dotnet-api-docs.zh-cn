<Type Name="XmlNamespaceManager" FullName="System.Xml.XmlNamespaceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cab3e6c22763ae112e695cbabbc9b7209676b065" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83919657" /></Metadata><TypeSignature Language="C#" Value="public class XmlNamespaceManager : System.Collections.IEnumerable, System.Xml.IXmlNamespaceResolver" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNamespaceManager extends System.Object implements class System.Collections.IEnumerable, class System.Xml.IXmlNamespaceResolver" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNamespaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNamespaceManager&#xA;Implements IEnumerable, IXmlNamespaceResolver" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNamespaceManager : System::Collections::IEnumerable, System::Xml::IXmlNamespaceResolver" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type XmlNamespaceManager = class&#xA;    interface IEnumerable&#xA;    interface IXmlNamespaceResolver" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class XmlNamespaceManager : System.Collections.IEnumerable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNamespaceManager extends System.Object implements class System.Collections.IEnumerable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNamespaceManager&#xA;Implements IEnumerable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNamespaceManager : System::Collections::IEnumerable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type XmlNamespaceManager = class&#xA;    interface IEnumerable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type XmlNamespaceManager = class&#xA;    interface IXmlNamespaceResolver&#xA;    interface IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.ReaderWriter" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2bb60-101">解析集合的命名空间、向集合添加命名空间和从集合中移除命名空间，以及提供对这些命名空间的范围管理。</span><span class="sxs-lookup"><span data-stu-id="2bb60-101">Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-102">有关如何在 XML 文档中声明和使用命名空间的一般信息，请参阅[管理 Xml 文档中的命名空间](/dotnet/standard/data/xml/managing-namespaces-in-an-xml-document)。</span><span class="sxs-lookup"><span data-stu-id="2bb60-102">For general information about how namespaces are declared and used in XML documents, see [Managing Namespaces in an XML Document](/dotnet/standard/data/xml/managing-namespaces-in-an-xml-document).</span></span>  
  
 <span data-ttu-id="2bb60-103"><xref:System.Xml.XmlNamespaceManager> 将前缀和命名空间存储为字符串。</span><span class="sxs-lookup"><span data-stu-id="2bb60-103"><xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings.</span></span> <span data-ttu-id="2bb60-104">下面是可以使用此类执行的管理和查找任务的摘要。</span><span class="sxs-lookup"><span data-stu-id="2bb60-104">Here's a summary of management and lookup tasks you can perform with this class.</span></span> <span data-ttu-id="2bb60-105">有关更多信息和示例，请遵循指向每个方法或属性的引用页的链接。</span><span class="sxs-lookup"><span data-stu-id="2bb60-105">For more information and examples, follow the links to the reference page for each method or property.</span></span>  
  
|<span data-ttu-id="2bb60-106">至</span><span class="sxs-lookup"><span data-stu-id="2bb60-106">To</span></span>|<span data-ttu-id="2bb60-107">使用</span><span class="sxs-lookup"><span data-stu-id="2bb60-107">Use</span></span>|  
|--------|---------|  
|<span data-ttu-id="2bb60-108">添加命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-108">Add a namespace</span></span>|<span data-ttu-id="2bb60-109"><xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="2bb60-109"><xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method</span></span>|  
|<span data-ttu-id="2bb60-110">删除命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-110">Remove a namespace</span></span>|<span data-ttu-id="2bb60-111"><xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="2bb60-111"><xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> method</span></span>|  
|<span data-ttu-id="2bb60-112">查找默认命名空间的 URI</span><span class="sxs-lookup"><span data-stu-id="2bb60-112">Find the URI for the default namespace</span></span>|<span data-ttu-id="2bb60-113"><xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="2bb60-113"><xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> property</span></span>|  
|<span data-ttu-id="2bb60-114">查找命名空间前缀的 URI</span><span class="sxs-lookup"><span data-stu-id="2bb60-114">Find the URI for a namespace prefix</span></span>|<span data-ttu-id="2bb60-115"><xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="2bb60-115"><xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method</span></span>|  
|<span data-ttu-id="2bb60-116">查找命名空间 URI 的前缀</span><span class="sxs-lookup"><span data-stu-id="2bb60-116">Find the prefix for a namespace URI</span></span>|<span data-ttu-id="2bb60-117"><xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="2bb60-117"><xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method</span></span>|  
|<span data-ttu-id="2bb60-118">获取当前节点中命名空间的列表</span><span class="sxs-lookup"><span data-stu-id="2bb60-118">Get a list of namespaces in the current node</span></span>|<span data-ttu-id="2bb60-119"><xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="2bb60-119"><xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method</span></span>|  
|<span data-ttu-id="2bb60-120">限定命名空间的范围</span><span class="sxs-lookup"><span data-stu-id="2bb60-120">Scope a namespace</span></span>|<span data-ttu-id="2bb60-121"><xref:System.Xml.XmlNamespaceManager.PushScope%2A> 和 <xref:System.Xml.XmlNamespaceManager.PopScope%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="2bb60-121"><xref:System.Xml.XmlNamespaceManager.PushScope%2A> and <xref:System.Xml.XmlNamespaceManager.PopScope%2A> methods</span></span>|  
|<span data-ttu-id="2bb60-122">检查是否在当前范围内定义了前缀</span><span class="sxs-lookup"><span data-stu-id="2bb60-122">Check whether a prefix is defined in the current scope</span></span>|<span data-ttu-id="2bb60-123"><xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="2bb60-123"><xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> method</span></span>|  
|<span data-ttu-id="2bb60-124">获取用于查找前缀和 URI 的名称表</span><span class="sxs-lookup"><span data-stu-id="2bb60-124">Get the name table used to look up prefixes and URIs</span></span>|<span data-ttu-id="2bb60-125"><xref:System.Xml.XmlNamespaceManager.NameTable%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="2bb60-125"><xref:System.Xml.XmlNamespaceManager.NameTable%2A> property</span></span>|  
  
 <span data-ttu-id="2bb60-126">若要将命名空间添加到命名空间管理器，请创建一个 <xref:System.Xml.XmlNamespaceManager> 对象，然后使用 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2bb60-126">To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method.</span></span> <span data-ttu-id="2bb60-127">创建时默认前缀和命名空间对自动添加到命名空间管理器。</span><span class="sxs-lookup"><span data-stu-id="2bb60-127">Default prefix and namespace pairs are automatically added to the namespace manager on creation.</span></span>  
  
 <span data-ttu-id="2bb60-128">创建命名空间管理器时，可以从 <xref:System.Xml.XmlReader>、<xref:System.Xml.Xsl.XsltContext>或 <xref:System.Xml.XmlDocument> 类指定名称表，然后使用 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 方法添加命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-128">When you create the namespace manager, you can specify a name table from the <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, or <xref:System.Xml.XmlDocument> class, and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method to add the namespaces.</span></span>  
  
 <span data-ttu-id="2bb60-129">可以将 <xref:System.Xml.XmlNamespaceManager> 对象作为参数提供给 <xref:System.Xml.XmlDocument> 类的 <xref:System.Xml.XmlNode.SelectNodes%2A> 或 <xref:System.Xml.XmlNode.SelectSingleNode%2A> 方法，以执行引用命名空间限定的元素和属性名称的 XPath 查询表达式。</span><span class="sxs-lookup"><span data-stu-id="2bb60-129">You can supply the <xref:System.Xml.XmlNamespaceManager> object as a parameter to the <xref:System.Xml.XmlNode.SelectNodes%2A> or <xref:System.Xml.XmlNode.SelectSingleNode%2A> method of the <xref:System.Xml.XmlDocument> class to execute XPath query expressions that reference namespace-qualified element and attribute names.</span></span>  
  
 <span data-ttu-id="2bb60-130">命名空间管理器假定前缀和命名空间已经过验证并符合[W3C 命名空间](https://www.w3.org/TR/REC-xml-names/)规范。</span><span class="sxs-lookup"><span data-stu-id="2bb60-130">The namespace manager assumes that prefixes and namespaces have already been verified and conform to the [W3C Namespaces](https://www.w3.org/TR/REC-xml-names/) specification.</span></span> <span data-ttu-id="2bb60-131">命名空间管理器不执行任何验证。</span><span class="sxs-lookup"><span data-stu-id="2bb60-131">The namespace manager does not perform any validation.</span></span>  
  
 <span data-ttu-id="2bb60-132">命名空间管理器通过使用 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 方法以及使用 <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> 或 <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 方法执行查找时，原子化字符串。</span><span class="sxs-lookup"><span data-stu-id="2bb60-132">The namespace manager atomizes the strings when they are added by using the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method and when a lookup is performed by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> or <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method.</span></span>  
  
 <span data-ttu-id="2bb60-133">命名空间管理器除了添加和检索命名空间外，还实现枚举支持。</span><span class="sxs-lookup"><span data-stu-id="2bb60-133">The namespace manager implements enumeration support in addition to adding and retrieving namespaces.</span></span> <span data-ttu-id="2bb60-134">您可以使用 `foreach` 构造循环遍历命名空间管理器中保存的信息。</span><span class="sxs-lookup"><span data-stu-id="2bb60-134">You can loop through the information saved in the namespace manager by using the `foreach` construct.</span></span> <span data-ttu-id="2bb60-135">例如，如果使用名称 `nsmanager`创建命名空间管理器，则可以通过使用 `foreach (String prefix in nsmanager)`循环访问表。</span><span class="sxs-lookup"><span data-stu-id="2bb60-135">For example, if you create a namespace manager with the name `nsmanager`, you can iterate through the table by using `foreach (String prefix in nsmanager)`.</span></span>  
  
 <span data-ttu-id="2bb60-136">由于命名空间管理器提供将前缀和命名空间作为对象的字符串比较功能，因此与字符串的直接比较相比，使用命名空间管理器可以提高性能。</span><span class="sxs-lookup"><span data-stu-id="2bb60-136">Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.</span></span>  
  
 <span data-ttu-id="2bb60-137">下面的代码示例演示如何将前缀 `xsd` 与 <http://www.w3.org/2001/XMLSchema> 的命名空间 URI 绑定，并将其添加到命名空间管理器：</span><span class="sxs-lookup"><span data-stu-id="2bb60-137">The following code example shows how to bind the prefix `xsd` with the namespace URI of <http://www.w3.org/2001/XMLSchema> and add it to the namespace manager:</span></span>  
  
```vb  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema")  
```  
  
```csharp  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema");  
```  
  
 <span data-ttu-id="2bb60-138">然后，可以使用 <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> 方法找到命名空间：</span><span class="sxs-lookup"><span data-stu-id="2bb60-138">You can then find the namespace by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method:</span></span>  
  
```vb  
nsmgr.LookupNamespace("xsd")  
```  
  
```csharp  
nsmgr.LookupNamespace("xsd");  
```  
  
 <span data-ttu-id="2bb60-139">下面的示例使用 XML 读取器中的名称表创建 <xref:System.Xml.XmlNamespaceManager>：</span><span class="sxs-lookup"><span data-stu-id="2bb60-139">The following example creates an <xref:System.Xml.XmlNamespaceManager> by using the name table from an XML reader:</span></span>  
  
```vb  
Dim reader As New XmlTextReader("myfile.xml")  
Dim nsmanager As New XmlNamespaceManager(reader.NameTable)  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books")  
nsmanager.PushScope()  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store")  
While reader.Read()  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix)  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
     nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)))  
End While  
```  
  
```csharp  
XmlTextReader reader = new XmlTextReader("myfile.xml");  
XmlNamespaceManager nsmanager = new XmlNamespaceManager(reader.NameTable);  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books");  
nsmanager.PushScope();  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store");  
while (reader.Read())  
{  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix);  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
    nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)));  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-140">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-140">XML Documents and Data</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-141">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-141">Managing Namespaces in an XML Document</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNamespaceManager (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNamespaceManager(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlNamespaceManager : System.Xml.XmlNameTable -&gt; System.Xml.XmlNamespaceManager" Usage="new System.Xml.XmlNamespaceManager nameTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="2bb60-142">要使用的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-142">The <see cref="T:System.Xml.XmlNameTable" /> to use.</span></span></param>
        <summary><span data-ttu-id="2bb60-143">使用指定的 <see cref="T:System.Xml.XmlNamespaceManager" /> 初始化 <see cref="T:System.Xml.XmlNameTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2bb60-143">Initializes a new instance of the <see cref="T:System.Xml.XmlNamespaceManager" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-144">名称表用于查找前缀和命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-144">The name table is used to look up prefixes and namespaces.</span></span> <span data-ttu-id="2bb60-145">可在构造函数中指定具有预先原子化字符串的现有名称表。</span><span class="sxs-lookup"><span data-stu-id="2bb60-145">An existing name table with pre-atomized strings can be specified in the constructor.</span></span> <span data-ttu-id="2bb60-146">这样做有几个优点。</span><span class="sxs-lookup"><span data-stu-id="2bb60-146">There are several advantages in doing so.</span></span> <span data-ttu-id="2bb60-147">例如，如果使用 <xref:System.Xml.XmlReader> 对象的名称表，则在每次读取后，可通过 <xref:System.Xml.XmlNamespaceManager>重复使用推送到名称表中的任何命名空间和前缀字符串。</span><span class="sxs-lookup"><span data-stu-id="2bb60-147">For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>.</span></span>  
  
 <span data-ttu-id="2bb60-148">有关原子化字符串的详细信息，请参阅 <xref:System.Xml.XmlNameTable>。</span><span class="sxs-lookup"><span data-stu-id="2bb60-148">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bb60-149">如果指定现有名称表，则不会将名称表中的任何命名空间自动添加到 <xref:System.Xml.XmlNamespaceManager>中。</span><span class="sxs-lookup"><span data-stu-id="2bb60-149">If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>.</span></span> <span data-ttu-id="2bb60-150">必须使用 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> 和 <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> 才能添加或删除命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-150">You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bb60-151">下面的示例使用读取器的名称表创建 <xref:System.Xml.XmlNamespaceManager>。</span><span class="sxs-lookup"><span data-stu-id="2bb60-151">The following example creates an <xref:System.Xml.XmlNamespaceManager> using the name table of the reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="2bb60-152">向构造函数传递了 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="2bb60-152"><see langword="null" /> is passed to the constructor</span></span></exception>
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-153">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-153">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-154">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-154">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddNamespace">
      <MemberSignature Language="C#" Value="public virtual void AddNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member AddNamespace : string * string -&gt; unit&#xA;override this.AddNamespace : string * string -&gt; unit" Usage="xmlNamespaceManager.AddNamespace (prefix, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="2bb60-155">与要添加的命名空间关联的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-155">The prefix to associate with the namespace being added.</span></span> <span data-ttu-id="2bb60-156">使用 String.Empty 来添加默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-156">Use String.Empty to add a default namespace.</span></span>  
  
 <span data-ttu-id="2bb60-157">**注意**：如果 <see cref="T:System.Xml.XmlNamespaceManager" /> 将用于解析 XML 路径语言 (XPath) 表达式中的命名空间，则必须指定前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-157">**Note**If the <see cref="T:System.Xml.XmlNamespaceManager" /> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified.</span></span> <span data-ttu-id="2bb60-158">如果 XPath 表达式不包含前缀，则假定命名空间统一资源标识符 (URI) 为空命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-158">If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace.</span></span> <span data-ttu-id="2bb60-159">有关 XPath 表达式和 <see cref="T:System.Xml.XmlNamespaceManager" /> 的更多信息，请参考 <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> 和 <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="2bb60-159">For more information about XPath expressions and the <see cref="T:System.Xml.XmlNamespaceManager" />, refer to the <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> and <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> methods.</span></span></param>
        <param name="uri"><span data-ttu-id="2bb60-160">要添加的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-160">The namespace to add.</span></span></param>
        <summary><span data-ttu-id="2bb60-161">将给定的命名空间添加到集合。</span><span class="sxs-lookup"><span data-stu-id="2bb60-161">Adds the given namespace to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-162"><xref:System.Xml.XmlNamespaceManager> 不检查 `prefix` 并 `uri` 一致性。</span><span class="sxs-lookup"><span data-stu-id="2bb60-162"><xref:System.Xml.XmlNamespaceManager> does not check `prefix` and `uri` for conformance.</span></span>  
  
 <span data-ttu-id="2bb60-163"><xref:System.Xml.XmlReader> 检查名称（包括前缀和命名空间），以确保它们是符合万维网联合会（W3C）[命名空间规范](https://www.w3.org/TR/REC-xml-names/)的有效 XML 名称。</span><span class="sxs-lookup"><span data-stu-id="2bb60-163"><xref:System.Xml.XmlReader> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) [Namespaces specification](https://www.w3.org/TR/REC-xml-names/).</span></span> <span data-ttu-id="2bb60-164"><xref:System.Xml.XmlNamespaceManager> 由 <xref:System.Xml.XmlReader>在内部使用，因此为了避免重复工作，<xref:System.Xml.XmlNamespaceManager> 假定所有前缀和命名空间都是有效的。</span><span class="sxs-lookup"><span data-stu-id="2bb60-164"><xref:System.Xml.XmlNamespaceManager> is used internally by <xref:System.Xml.XmlReader>, so to avoid a duplication of efforts, <xref:System.Xml.XmlNamespaceManager> assumes all prefixes and namespaces are valid.</span></span>  
  
 <span data-ttu-id="2bb60-165">如果当前范围内已存在前缀和命名空间，则新前缀和命名空间对将替换现有的前缀/命名空间组合。</span><span class="sxs-lookup"><span data-stu-id="2bb60-165">If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination.</span></span> <span data-ttu-id="2bb60-166">不同的作用域中可以存在相同的前缀和命名空间组合。</span><span class="sxs-lookup"><span data-stu-id="2bb60-166">The same prefix and namespace combination can exist across different scopes.</span></span>  
  
 <span data-ttu-id="2bb60-167">默认情况下，会将以下前缀/命名空间对添加到 <xref:System.Xml.XmlNamespaceManager>中。</span><span class="sxs-lookup"><span data-stu-id="2bb60-167">The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>.</span></span> <span data-ttu-id="2bb60-168">它们可在任何范围内确定。</span><span class="sxs-lookup"><span data-stu-id="2bb60-168">They can be determined at any scope.</span></span>  
  
|<span data-ttu-id="2bb60-169">前缀</span><span class="sxs-lookup"><span data-stu-id="2bb60-169">Prefix</span></span>|<span data-ttu-id="2bb60-170">命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-170">Namespace</span></span>|  
|------------|---------------|  
|<span data-ttu-id="2bb60-171">xmlns</span><span class="sxs-lookup"><span data-stu-id="2bb60-171">xmlns</span></span>|<span data-ttu-id="2bb60-172"><http://www.w3.org/2000/xmlns/> （xmlns 前缀命名空间）</span><span class="sxs-lookup"><span data-stu-id="2bb60-172"><http://www.w3.org/2000/xmlns/> (the xmlns prefix namespace)</span></span>|  
|<span data-ttu-id="2bb60-173">xml</span><span class="sxs-lookup"><span data-stu-id="2bb60-173">xml</span></span>|<span data-ttu-id="2bb60-174"><http://www.w3.org/XML/1998/namespace> （XML 命名空间）</span><span class="sxs-lookup"><span data-stu-id="2bb60-174"><http://www.w3.org/XML/1998/namespace> (the XML namespace)</span></span>|  
|<span data-ttu-id="2bb60-175">String.Empty</span><span class="sxs-lookup"><span data-stu-id="2bb60-175">String.Empty</span></span>|<span data-ttu-id="2bb60-176">String Empty （空命名空间）。</span><span class="sxs-lookup"><span data-stu-id="2bb60-176">String.Empty (the empty namespace).</span></span> <span data-ttu-id="2bb60-177">此值可以重新分配不同的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-177">This value can be reassigned a different prefix.</span></span> <span data-ttu-id="2bb60-178">例如，xmlns = "" 将默认命名空间定义为空命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-178">For example, xmlns="" defines the default namespace to be the empty namespace</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2bb60-179">下面的示例使用 <xref:System.Xml.XmlNamespaceManager> 解析 XML 片段中的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-179">The following example uses <xref:System.Xml.XmlNamespaceManager> to resolve namespaces in an XML fragment.</span></span>  
  
 [!code-csharp[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2bb60-180"><paramref name="prefix" /> 的值为“xml”或“xmlns”。</span><span class="sxs-lookup"><span data-stu-id="2bb60-180">The value for <paramref name="prefix" /> is "xml" or "xmlns".</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bb60-181"><paramref name="prefix" /> 或 <paramref name="uri" /> 的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-181">The value for <paramref name="prefix" /> or <paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-182">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-182">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-183">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-183">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public virtual string DefaultNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNamespace : string" Usage="System.Xml.XmlNamespaceManager.DefaultNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2bb60-184">获取默认命名空间的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="2bb60-184">Gets the namespace URI for the default namespace.</span></span></summary>
        <value><span data-ttu-id="2bb60-185">默认命名空间的命名空间 URI; 如果没有默认命名空间，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="2bb60-185">The namespace URI for the default namespace, or an empty string if there is no default namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-186">此方法等效于调用 LookupNamespace （空字符）。</span><span class="sxs-lookup"><span data-stu-id="2bb60-186">This method is equivalent to calling LookupNamespace(String.Empty).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bb60-187">下面的示例显示默认命名空间（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="2bb60-187">The following example displays the default namespace, if one exists.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-188">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-188">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-189">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-189">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNamespaceManager.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bb60-190">返回一个枚举数，将使用该枚举数循环访问 <see cref="T:System.Xml.XmlNamespaceManager" /> 集合中的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-190">Returns an enumerator to use to iterate through the namespaces in the <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="2bb60-191">一个 <see cref="T:System.Collections.IEnumerator" />，包含 <see cref="T:System.Xml.XmlNamespaceManager" /> 存储的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-191">An <see cref="T:System.Collections.IEnumerator" /> containing the prefixes stored by the <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-192">下面的代码演示如何使用 <xref:System.Collections.IEnumerator> 查看存储在 <xref:System.Xml.XmlNamespaceManager> 对象中的所有命名空间对。</span><span class="sxs-lookup"><span data-stu-id="2bb60-192">The following code shows how to use the <xref:System.Collections.IEnumerator> to view all the namespace pairs stored in the <xref:System.Xml.XmlNamespaceManager> object.</span></span>  
  
```vb  
Dim nsEnum As IEnumerator = nsmgr.GetEnumerator()  
Do While nsEnum.MoveNext  
  If nsEnum.Current <> "" Then  
    MsgBox("xmlns:" + nsEnum.Current + "=" + nsmgr.LookupNamespace(nsEnum.Current))  
  End If  
Loop  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-193">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-193">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-194">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-194">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;&#xA;override this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xmlNamespaceManager.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="2bb60-195">一个指定要返回的命名空间节点的类型的枚举值。</span><span class="sxs-lookup"><span data-stu-id="2bb60-195">An enumeration value that specifies the type of namespace nodes to return.</span></span></param>
        <summary><span data-ttu-id="2bb60-196">获取被可用于枚举当前范围内的命名空间的前缀键控的命名空间名称的集合。</span><span class="sxs-lookup"><span data-stu-id="2bb60-196">Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.</span></span></summary>
        <returns><span data-ttu-id="2bb60-197">当前范围中的命名空间和前缀对的集合。</span><span class="sxs-lookup"><span data-stu-id="2bb60-197">A collection of namespace and prefix pairs currently in scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-198">字典包含按前缀键控的命名空间名称的集合。</span><span class="sxs-lookup"><span data-stu-id="2bb60-198">The dictionary consists of a collection of namespace names keyed by prefix.</span></span> <span data-ttu-id="2bb60-199">它可用于枚举范围内的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-199">It can be used to enumerate the in-scope namespaces.</span></span> <span data-ttu-id="2bb60-200">字典是命名空间列表的断开连接的副本。</span><span class="sxs-lookup"><span data-stu-id="2bb60-200">The dictionary is a disconnected copy of the namespace list.</span></span> <span data-ttu-id="2bb60-201">当当前范围内的命名空间列表更改时，它将保持不变。</span><span class="sxs-lookup"><span data-stu-id="2bb60-201">It remains unchanged as the current in-scope namespace list changes.</span></span>  
  
 <span data-ttu-id="2bb60-202">下表显示 <xref:System.Xml.XmlNamespaceScope> 值如何影响 <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> 方法返回的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-202">The following table shows how <xref:System.Xml.XmlNamespaceScope> values affect the namespaces returned by the <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method.</span></span>  
  
|<span data-ttu-id="2bb60-203">XmlNamespaceScope 值</span><span class="sxs-lookup"><span data-stu-id="2bb60-203">XmlNamespaceScope value</span></span>|<span data-ttu-id="2bb60-204">xmlns： xml</span><span class="sxs-lookup"><span data-stu-id="2bb60-204">xmlns:xml</span></span>|<span data-ttu-id="2bb60-205">xmlns： xmlns</span><span class="sxs-lookup"><span data-stu-id="2bb60-205">xmlns:xmlns</span></span>|<span data-ttu-id="2bb60-206">xmlns=""</span><span class="sxs-lookup"><span data-stu-id="2bb60-206">xmlns=""</span></span>|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|<span data-ttu-id="2bb60-207">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-207">Yes</span></span>|<span data-ttu-id="2bb60-208">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-208">No</span></span>|<span data-ttu-id="2bb60-209">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-209">No</span></span>|  
|`ExcludeXml`|<span data-ttu-id="2bb60-210">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-210">No</span></span>|<span data-ttu-id="2bb60-211">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-211">No</span></span>|<span data-ttu-id="2bb60-212">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-212">No</span></span>|  
|`Local`|<span data-ttu-id="2bb60-213">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-213">No</span></span>|<span data-ttu-id="2bb60-214">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-214">No</span></span>|<span data-ttu-id="2bb60-215">是</span><span class="sxs-lookup"><span data-stu-id="2bb60-215">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-216">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-216">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-217">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-217">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasNamespace">
      <MemberSignature Language="C#" Value="public virtual bool HasNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNamespace (prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member HasNamespace : string -&gt; bool&#xA;override this.HasNamespace : string -&gt; bool" Usage="xmlNamespaceManager.HasNamespace prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="2bb60-218">要查找的命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-218">The prefix of the namespace you want to find.</span></span></param>
        <summary><span data-ttu-id="2bb60-219">获取一个值，该值指示所提供的前缀是否具有为当前推送的范围定义的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-219">Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.</span></span></summary>
        <returns><span data-ttu-id="2bb60-220">如果定义有命名空间，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-220"><see langword="true" /> if there is a namespace defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-221">若要确定是否定义了默认的空命名空间，请将 `prefix` 设置为 String。</span><span class="sxs-lookup"><span data-stu-id="2bb60-221">To determine whether there is a default empty namespace defined, set `prefix` to String.Empty.</span></span> <span data-ttu-id="2bb60-222">`true` 的返回值指示当前范围中定义了默认命名空间;`false` 指示未定义默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-222">A return value of `true` indicates that there is a default namespace defined in the current scope; `false` indicates that no default namespace is defined.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bb60-223">根据[W3C 命名空间](https://www.w3.org/TR/REC-xml-names/)建议，xmlns： x = "" 是非法的。</span><span class="sxs-lookup"><span data-stu-id="2bb60-223">xmlns:x= "" is illegal according to the [W3C Namespaces](https://www.w3.org/TR/REC-xml-names/) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bb60-224">下面的示例显示默认命名空间（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="2bb60-224">The following example displays the default namespace, if one exists.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-225">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-225">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-226">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-226">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string&#xA;override this.LookupNamespace : string -&gt; string" Usage="xmlNamespaceManager.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="2bb60-227">要解析其命名空间 URI 的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-227">The prefix whose namespace URI you want to resolve.</span></span> <span data-ttu-id="2bb60-228">若要匹配默认命名空间，请传递 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="2bb60-228">To match the default namespace, pass String.Empty.</span></span></param>
        <summary><span data-ttu-id="2bb60-229">获取指定前缀的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="2bb60-229">Gets the namespace URI for the specified prefix.</span></span></summary>
        <returns><span data-ttu-id="2bb60-230"><paramref name="prefix" /> 的命名空间 URI，如果没有映射的命名空间，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-230">The namespace URI for <paramref name="prefix" /> or <see langword="null" /> if there is no mapped namespace.</span></span> <span data-ttu-id="2bb60-231">返回的字符串是原子化的。</span><span class="sxs-lookup"><span data-stu-id="2bb60-231">The returned string is atomized.</span></span>  
  
<span data-ttu-id="2bb60-232">有关原子化字符串的更多信息，请参见 <see cref="T:System.Xml.XmlNameTable" /> 类。</span><span class="sxs-lookup"><span data-stu-id="2bb60-232">For more information on atomized strings, see the <see cref="T:System.Xml.XmlNameTable" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2bb60-233">下面的示例将前缀/命名空间对添加到 <xref:System.Xml.XmlNamespaceManager>，并显示集合中的所有对。</span><span class="sxs-lookup"><span data-stu-id="2bb60-233">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager>, and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-234">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-234">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-235">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-235">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupPrefix (uri As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupPrefix(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string&#xA;override this.LookupPrefix : string -&gt; string" Usage="xmlNamespaceManager.LookupPrefix uri" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="2bb60-236">要为前缀解析的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-236">The namespace to resolve for the prefix.</span></span></param>
        <summary><span data-ttu-id="2bb60-237">查找为给定的命名空间 URI 声明的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-237">Finds the prefix declared for the given namespace URI.</span></span></summary>
        <returns><span data-ttu-id="2bb60-238">匹配的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-238">The matching prefix.</span></span> <span data-ttu-id="2bb60-239">如果没有映射的前缀，则方法返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="2bb60-239">If there is no mapped prefix, the method returns String.Empty.</span></span> <span data-ttu-id="2bb60-240">如果提供空值，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-240">If a null value is supplied, then <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-241">此方法通过遍历堆栈（即，会在全球范围内查看）来查找映射的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-241">This method finds the mapped prefix by walking the stack (that is, it looks globally).</span></span> <span data-ttu-id="2bb60-242">要使查找成功，提供的字符串必须是原子化的。</span><span class="sxs-lookup"><span data-stu-id="2bb60-242">The supplied string must be atomized for the lookup to succeed.</span></span> <span data-ttu-id="2bb60-243">换句话说，提供的字符串对象必须存在于命名空间管理器的名称表（<xref:System.Xml.XmlNamespaceManager.NameTable%2A>）中。</span><span class="sxs-lookup"><span data-stu-id="2bb60-243">In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).</span></span>  
  
 <span data-ttu-id="2bb60-244">返回的字符串也是原子化的。</span><span class="sxs-lookup"><span data-stu-id="2bb60-244">The returned string is also atomized.</span></span> <span data-ttu-id="2bb60-245">有关原子化字符串的更多信息，请参见 <xref:System.Xml.XmlNameTable> 类。</span><span class="sxs-lookup"><span data-stu-id="2bb60-245">For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bb60-246">下面的示例演示如何在编写属性时使用 <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2bb60-246">The following example shows how to use the <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method when writing an attribute.</span></span> <span data-ttu-id="2bb60-247">它使用 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> 方法来启动属性，查找 `urn:samples` 命名空间 URI 的前缀，然后在写入 `ISBN` 属性时在 <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> 中使用该前缀：</span><span class="sxs-lookup"><span data-stu-id="2bb60-247">It uses the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> method to start the attribute, looks up the prefix for the `urn:samples` namespace URI, and then uses that prefix in the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType> when writing the `ISBN` attribute:</span></span>  
  
```vb  
Dim prefix As String = nsMgr.LookupPrefix("urn:samples")  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples")  
  
```  
  
```csharp  
XmlNameTable nt = new XmlNameTable();  
XmlNamespaceManager nsMgr = new XmlNamespaceManager(nt);  
nsMgr.AddNamespace("bk","urn:samples");string prefix = writer nsMgr.LookupPrefix("urn:samples");  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples");  
```  
  
 <span data-ttu-id="2bb60-248">下面的示例使用 <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> 查找在元素上定义的前缀。</span><span class="sxs-lookup"><span data-stu-id="2bb60-248">The following example uses <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> to find the prefix defined on an element.</span></span>  
  
```vb  
writer.WriteStartElement("root", "book")  
writer.WriteStartElement("x", "node", "author")  
s = writer.LookupPrefix("author")  
CError.Compare(s, "x", "Error in nested element")  
writer.WriteEndElement()  
s = writer.LookupPrefix("book")  
CError.Compare(s, Nothing, "Error in root element")  
writer.WriteEndElement()  
  
```  
  
 <span data-ttu-id="2bb60-249">**输出**</span><span class="sxs-lookup"><span data-stu-id="2bb60-249">**Output**</span></span>  
  
```  
<root xmlns="book">  
  <x:node xmlns:x="author" />   
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-250">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-250">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-251">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-251">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNameTable NameTable { get; }" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NameTable As XmlNameTable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlNamespaceManager.NameTable" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2bb60-252">获取与此对象关联的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-252">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this object.</span></span></summary>
        <value><span data-ttu-id="2bb60-253">此对象使用的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-253">The <see cref="T:System.Xml.XmlNameTable" /> used by this object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-254">名称表用于查找前缀和命名空间 Uri。</span><span class="sxs-lookup"><span data-stu-id="2bb60-254">The name table is used to look up prefixes and namespace URIs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-255">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-255">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-256">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-256">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PopScope">
      <MemberSignature Language="C#" Value="public virtual bool PopScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PopScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PopScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PopScope();" />
      <MemberSignature Language="F#" Value="abstract member PopScope : unit -&gt; bool&#xA;override this.PopScope : unit -&gt; bool" Usage="xmlNamespaceManager.PopScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bb60-257">将命名空间范围弹出堆栈。</span><span class="sxs-lookup"><span data-stu-id="2bb60-257">Pops a namespace scope off the stack.</span></span></summary>
        <returns><span data-ttu-id="2bb60-258">如果堆栈上留有命名空间范围，则为 <see langword="true" />；如果不再有要弹出的命名空间，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-258"><see langword="true" /> if there are namespace scopes left on the stack; <see langword="false" /> if there are no more namespaces to pop.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-259">调用此方法时，将删除自上一次调用 <xref:System.Xml.XmlNamespaceManager.PopScope%2A> 后添加到 <xref:System.Xml.XmlNamespaceManager> 中的所有命名空间（通过调用 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>）。</span><span class="sxs-lookup"><span data-stu-id="2bb60-259">When you call this method, all namespaces which were added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) since the last call to <xref:System.Xml.XmlNamespaceManager.PopScope%2A> are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bb60-260">下面的示例将前缀/命名空间对添加到 <xref:System.Xml.XmlNamespaceManager>，并显示集合中的所有对。</span><span class="sxs-lookup"><span data-stu-id="2bb60-260">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PushScope" />
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-261">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-261">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-262">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-262">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PushScope">
      <MemberSignature Language="C#" Value="public virtual void PushScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PushScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PushScope ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushScope();" />
      <MemberSignature Language="F#" Value="abstract member PushScope : unit -&gt; unit&#xA;override this.PushScope : unit -&gt; unit" Usage="xmlNamespaceManager.PushScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2bb60-263">将命名空间范围推送到堆栈上。</span><span class="sxs-lookup"><span data-stu-id="2bb60-263">Pushes a namespace scope onto the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bb60-264">调用此方法后，添加到 <xref:System.Xml.XmlNamespaceManager> 中的所有命名空间（通过调用 <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>）都属于推送的命名空间范围。</span><span class="sxs-lookup"><span data-stu-id="2bb60-264">After a call to this method, all namespaces, which are added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), belong to the pushed namespace scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bb60-265">下面的示例将前缀/命名空间对添加到 <xref:System.Xml.XmlNamespaceManager>，并显示集合中的所有对。</span><span class="sxs-lookup"><span data-stu-id="2bb60-265">The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PopScope" />
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-266">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-266">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-267">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-267">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveNamespace">
      <MemberSignature Language="C#" Value="public virtual void RemoveNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member RemoveNamespace : string * string -&gt; unit&#xA;override this.RemoveNamespace : string * string -&gt; unit" Usage="xmlNamespaceManager.RemoveNamespace (prefix, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="2bb60-268">命名空间的前缀</span><span class="sxs-lookup"><span data-stu-id="2bb60-268">The prefix for the namespace</span></span></param>
        <param name="uri"><span data-ttu-id="2bb60-269">要为给定的前缀移除的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-269">The namespace to remove for the given prefix.</span></span> <span data-ttu-id="2bb60-270">所移除的命名空间来自当前的命名空间范围。</span><span class="sxs-lookup"><span data-stu-id="2bb60-270">The namespace removed is from the current namespace scope.</span></span> <span data-ttu-id="2bb60-271">忽略当前范围以外的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-271">Namespaces outside the current scope are ignored.</span></span></param>
        <summary><span data-ttu-id="2bb60-272">为给定的前缀移除给定的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2bb60-272">Removes the given namespace for the given prefix.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2bb60-273"><paramref name="prefix" /> 或 <paramref name="uri" /> 的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2bb60-273">The value of <paramref name="prefix" /> or <paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
        <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="2bb60-274">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="2bb60-274">XML Documents and Data</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a"><span data-ttu-id="2bb60-275">管理 XML 文档中的命名空间</span><span class="sxs-lookup"><span data-stu-id="2bb60-275">Managing Namespaces in an XML Document</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
