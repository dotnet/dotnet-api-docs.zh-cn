<Type Name="NameObjectCollectionBase" FullName="System.Collections.Specialized.NameObjectCollectionBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4582a0aee5c44c721349fbc31d63a780dc3d4410" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83918059" /></Metadata><TypeSignature Language="C#" Value="public abstract class NameObjectCollectionBase : System.Collections.ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NameObjectCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NameObjectCollectionBase&#xA;Implements ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameObjectCollectionBase abstract : System::Collections::ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type NameObjectCollectionBase = class&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public abstract class NameObjectCollectionBase : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NameObjectCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NameObjectCollectionBase&#xA;Implements ICollection, IDeserializationCallback, ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameObjectCollectionBase abstract : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type NameObjectCollectionBase = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type NameObjectCollectionBase = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit NameObjectCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type NameObjectCollectionBase = class&#xA;    interface ICollection&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface IEnumerable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections.Specialized" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="06560-101">为关联的 <see langword="abstract" /> 键和 <see cref="T:System.String" /> 值的集合（可通过键或索引来访问它）提供 <see cref="T:System.Object" /> 基类。</span><span class="sxs-lookup"><span data-stu-id="06560-101">Provides the <see langword="abstract" /> base class for a collection of associated <see cref="T:System.String" /> keys and <see cref="T:System.Object" /> values that can be accessed either with the key or with the index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-102">此类的基础结构是一个哈希表。</span><span class="sxs-lookup"><span data-stu-id="06560-102">The underlying structure for this class is a hash table.</span></span>  
  
 <span data-ttu-id="06560-103">每个元素都是一个键/值对。</span><span class="sxs-lookup"><span data-stu-id="06560-103">Each element is a key/value pair.</span></span>  
  
 <span data-ttu-id="06560-104"><xref:System.Collections.Specialized.NameObjectCollectionBase> 的容量是 <xref:System.Collections.Specialized.NameObjectCollectionBase> 可以容纳的元素数。</span><span class="sxs-lookup"><span data-stu-id="06560-104">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="06560-105">将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时，会根据需要通过重新分配来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="06560-105">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="06560-106">哈希代码提供程序密密麻麻 <xref:System.Collections.Specialized.NameObjectCollectionBase> 实例中的键的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-106">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="06560-107">默认哈希代码提供程序是 <xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="06560-107">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="06560-108">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-108">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="06560-109">默认比较器是 <xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="06560-109">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="06560-110">在 .NET Framework 版本1.0 中，此类使用区分区域性的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="06560-110">In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.</span></span> <span data-ttu-id="06560-111">但是，在 .NET Framework 版本1.1 及更高版本中，此类在比较字符串时使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="06560-111">However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> when comparing strings.</span></span> <span data-ttu-id="06560-112">有关区域性如何影响比较和排序的详细信息，请参阅[执行不区分区域性的字符串操作](/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations)。</span><span class="sxs-lookup"><span data-stu-id="06560-112">For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations).</span></span>  
  
 <span data-ttu-id="06560-113">`null` 允许作为键或值。</span><span class="sxs-lookup"><span data-stu-id="06560-113">`null` is allowed as a key or as a value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="06560-114"><xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> 方法不区分 `null`，因为找不到指定的键并返回 `null`，因为与该键关联的值是 `null`的。</span><span class="sxs-lookup"><span data-stu-id="06560-114">The <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-115">下面的代码示例演示如何实现和使用 <xref:System.Collections.Specialized.NameObjectCollectionBase> 类。</span><span class="sxs-lookup"><span data-stu-id="06560-115">The following code example shows how to implement and use the <xref:System.Collections.Specialized.NameObjectCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CPP/nameobjectcollectionbase.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CS/nameobjectcollectionbase.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/VB/nameobjectcollectionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="06560-116">此类型的公共静态（<see langword="Shared" /> Visual Basic）成员是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="06560-116">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="06560-117">但不保证所有实例成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="06560-117">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="06560-118">此实现不提供 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />的同步（线程安全）包装器，但派生类可以使用 <see cref="P:System.Collections.ICollection.SyncRoot" /> 属性来创建其自己的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 同步版本。</span><span class="sxs-lookup"><span data-stu-id="06560-118">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span></span>  
  
<span data-ttu-id="06560-119">枚举集合本质上不是线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="06560-119">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="06560-120">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="06560-120">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="06560-121">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="06560-121">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
    <altmember cref="T:System.String" />
    <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-122">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-122">Performing Culture-Insensitive String Operations</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06560-123">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="06560-123">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06560-124">初始化为空的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="06560-124">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-125"><xref:System.Collections.Specialized.NameObjectCollectionBase> 的容量是 <xref:System.Collections.Specialized.NameObjectCollectionBase> 可以容纳的元素数。</span><span class="sxs-lookup"><span data-stu-id="06560-125">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="06560-126">将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="06560-126">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="06560-127">如果集合的大小可为估算值，则指定初始容量就无需在将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时执行多个大小调整操作。</span><span class="sxs-lookup"><span data-stu-id="06560-127">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="06560-128">哈希代码提供程序密密麻麻 <xref:System.Collections.Specialized.NameObjectCollectionBase> 实例中的键的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-128">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="06560-129">默认哈希代码提供程序是 <xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="06560-129">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="06560-130">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-130">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="06560-131">默认比较器是 <xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="06560-131">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="06560-132">此构造函数的运算复杂度为 O （1）。</span><span class="sxs-lookup"><span data-stu-id="06560-132">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-133">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-133">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : System.Collections.IEqualityComparer -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="equalityComparer"><span data-ttu-id="06560-134"><see cref="T:System.Collections.IEqualityComparer" /> 对象，用于确定两个键是否相等，并为集合中的键生成哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-134">The <see cref="T:System.Collections.IEqualityComparer" /> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</span></span></param>
        <summary><span data-ttu-id="06560-135">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空、具有默认的初始容量并使用指定的 <see cref="T:System.Collections.IEqualityComparer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="06560-135">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-136"><xref:System.Collections.Specialized.NameObjectCollectionBase> 对象的容量是 <xref:System.Collections.Specialized.NameObjectCollectionBase> 可以容纳的元素数。</span><span class="sxs-lookup"><span data-stu-id="06560-136">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="06560-137">将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="06560-137">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="06560-138">如果集合的大小可为估算值，则指定初始容量就无需在将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时执行多个大小调整操作。</span><span class="sxs-lookup"><span data-stu-id="06560-138">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="06560-139"><xref:System.Collections.IEqualityComparer> 对象将比较器与哈希代码提供程序组合在一起。</span><span class="sxs-lookup"><span data-stu-id="06560-139">The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.</span></span>  <span data-ttu-id="06560-140">哈希代码提供程序在 <xref:System.Collections.Specialized.NameObjectCollectionBase>中的密钥的哈希代码密密麻麻。</span><span class="sxs-lookup"><span data-stu-id="06560-140">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  <span data-ttu-id="06560-141">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-141">The comparer determines whether two keys are equal.</span></span>  
  
 <span data-ttu-id="06560-142">此构造函数的运算复杂度为 O （1）。</span><span class="sxs-lookup"><span data-stu-id="06560-142">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-143">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-143">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : int -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="06560-144"><see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例最初可以包含的项的大概数目。</span><span class="sxs-lookup"><span data-stu-id="06560-144">The approximate number of entries that the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance can initially contain.</span></span></param>
        <summary><span data-ttu-id="06560-145">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空、具有指定的初始容量，并使用默认哈希代码提供程序和默认比较器。</span><span class="sxs-lookup"><span data-stu-id="06560-145">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the specified initial capacity, and uses the default hash code provider and the default comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-146"><xref:System.Collections.Specialized.NameObjectCollectionBase> 的容量是 <xref:System.Collections.Specialized.NameObjectCollectionBase> 可以容纳的元素数。</span><span class="sxs-lookup"><span data-stu-id="06560-146">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="06560-147">将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="06560-147">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="06560-148">如果集合的大小可为估算值，则指定初始容量就无需在将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时执行多个大小调整操作。</span><span class="sxs-lookup"><span data-stu-id="06560-148">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="06560-149">哈希代码提供程序密密麻麻 <xref:System.Collections.Specialized.NameObjectCollectionBase> 实例中的键的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-149">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="06560-150">默认哈希代码提供程序是 <xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="06560-150">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="06560-151">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-151">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="06560-152">默认比较器是 <xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="06560-152">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="06560-153">此构造函数是一个 O （`n`）操作，在此操作中 `capacity``n`。</span><span class="sxs-lookup"><span data-stu-id="06560-153">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06560-154"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="06560-154"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-155">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-155">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase (hashProvider, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("Please use NameObjectCollectionBase(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="hashProvider"><span data-ttu-id="06560-156"><see cref="T:System.Collections.IHashCodeProvider" />，它将为 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键提供哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-156">The <see cref="T:System.Collections.IHashCodeProvider" /> that will supply the hash codes for all keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="06560-157"><see cref="T:System.Collections.IComparer" />，用于确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-157">The <see cref="T:System.Collections.IComparer" /> to use to determine whether two keys are equal.</span></span></param>
        <summary><span data-ttu-id="06560-158">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空、具有默认初始容量，并使用指定的哈希代码提供程序和指定的比较器。</span><span class="sxs-lookup"><span data-stu-id="06560-158">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the default initial capacity, and uses the specified hash code provider and the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-159"><xref:System.Collections.Specialized.NameObjectCollectionBase> 的容量是 <xref:System.Collections.Specialized.NameObjectCollectionBase> 可以容纳的元素数。</span><span class="sxs-lookup"><span data-stu-id="06560-159">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="06560-160">将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="06560-160">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="06560-161">如果集合的大小可为估算值，则指定初始容量就无需在将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时执行多个大小调整操作。</span><span class="sxs-lookup"><span data-stu-id="06560-161">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="06560-162">哈希代码提供程序密密麻麻 <xref:System.Collections.Specialized.NameObjectCollectionBase> 实例中的键的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-162">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="06560-163">默认哈希代码提供程序是 <xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="06560-163">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="06560-164">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-164">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="06560-165">默认比较器是 <xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="06560-165">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="06560-166">此构造函数的运算复杂度为 O （1）。</span><span class="sxs-lookup"><span data-stu-id="06560-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-167">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-167">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : int * System.Collections.IEqualityComparer -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="06560-168"><see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象最初可包含的大概项数。</span><span class="sxs-lookup"><span data-stu-id="06560-168">The approximate number of entries that the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object can initially contain.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="06560-169"><see cref="T:System.Collections.IEqualityComparer" /> 对象，用于确定两个键是否相等，并为集合中的键生成哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-169">The <see cref="T:System.Collections.IEqualityComparer" /> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</span></span></param>
        <summary><span data-ttu-id="06560-170">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空、具有指定的初始容量并使用指定的 <see cref="T:System.Collections.IEqualityComparer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="06560-170">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-171"><xref:System.Collections.Specialized.NameObjectCollectionBase> 对象的容量是 <xref:System.Collections.Specialized.NameObjectCollectionBase> 可以容纳的元素数。</span><span class="sxs-lookup"><span data-stu-id="06560-171">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="06560-172">将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="06560-172">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="06560-173">如果集合的大小可为估算值，则指定初始容量就无需在将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时执行多个大小调整操作。</span><span class="sxs-lookup"><span data-stu-id="06560-173">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="06560-174"><xref:System.Collections.IEqualityComparer> 对象将比较器与哈希代码提供程序组合在一起。</span><span class="sxs-lookup"><span data-stu-id="06560-174">The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.</span></span>  <span data-ttu-id="06560-175">哈希代码提供程序在 <xref:System.Collections.Specialized.NameObjectCollectionBase>中的密钥的哈希代码密密麻麻。</span><span class="sxs-lookup"><span data-stu-id="06560-175">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  <span data-ttu-id="06560-176">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-176">The comparer determines whether two keys are equal.</span></span>  
  
 <span data-ttu-id="06560-177">此构造函数是一个 O （`n`）运算，其中 `n` 是 `capacity` 参数。</span><span class="sxs-lookup"><span data-stu-id="06560-177">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06560-178"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="06560-178"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-179">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-179">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="06560-180"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，包含序列化新 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例所需的信息。</span><span class="sxs-lookup"><span data-stu-id="06560-180">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the new <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="06560-181"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，包含与新 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例关联的序列化流的源和目标。</span><span class="sxs-lookup"><span data-stu-id="06560-181">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the new <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></param>
        <summary><span data-ttu-id="06560-182">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例可序列化且使用指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="06560-182">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is serializable and uses the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-183">此构造函数的运算复杂度为 O （1）。</span><span class="sxs-lookup"><span data-stu-id="06560-183">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-184">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-184">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer, hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(int capacity, System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase (capacity, hashProvider, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("Please use NameObjectCollectionBase(Int32, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="06560-185"><see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例最初可以包含的项的大概数目。</span><span class="sxs-lookup"><span data-stu-id="06560-185">The approximate number of entries that the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance can initially contain.</span></span></param>
        <param name="hashProvider"><span data-ttu-id="06560-186"><see cref="T:System.Collections.IHashCodeProvider" />，它将为 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键提供哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-186">The <see cref="T:System.Collections.IHashCodeProvider" /> that will supply the hash codes for all keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="06560-187"><see cref="T:System.Collections.IComparer" />，用于确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-187">The <see cref="T:System.Collections.IComparer" /> to use to determine whether two keys are equal.</span></span></param>
        <summary><span data-ttu-id="06560-188">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空且具有指定的初始容量，并使用指定的哈希代码提供程序和指定的比较器。</span><span class="sxs-lookup"><span data-stu-id="06560-188">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-189"><xref:System.Collections.Specialized.NameObjectCollectionBase> 的容量是 <xref:System.Collections.Specialized.NameObjectCollectionBase> 可以容纳的元素数。</span><span class="sxs-lookup"><span data-stu-id="06560-189">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="06560-190">将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时，将根据需要通过重新分配内部数组来自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="06560-190">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="06560-191">如果集合的大小可为估算值，则指定初始容量就无需在将元素添加到 <xref:System.Collections.Specialized.NameObjectCollectionBase>时执行多个大小调整操作。</span><span class="sxs-lookup"><span data-stu-id="06560-191">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="06560-192">哈希代码提供程序密密麻麻 <xref:System.Collections.Specialized.NameObjectCollectionBase> 实例中的键的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="06560-192">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="06560-193">默认哈希代码提供程序是 <xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="06560-193">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="06560-194">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="06560-194">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="06560-195">默认比较器是 <xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="06560-195">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="06560-196">此构造函数是一个 O （`n`）操作，在此操作中 `capacity``n`。</span><span class="sxs-lookup"><span data-stu-id="06560-196">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06560-197"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="06560-197"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-198">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-198">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected void BaseAdd (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseAdd(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseAdd (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseAdd(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.BaseAdd : string * obj -&gt; unit" Usage="nameObjectCollectionBase.BaseAdd (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="06560-199">要添加的项的 <see cref="T:System.String" /> 键。</span><span class="sxs-lookup"><span data-stu-id="06560-199">The <see cref="T:System.String" /> key of the entry to add.</span></span> <span data-ttu-id="06560-200">键可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-200">The key can be <see langword="null" />.</span></span></param>
        <param name="value"><span data-ttu-id="06560-201">要添加的项的 <see cref="T:System.Object" /> 值。</span><span class="sxs-lookup"><span data-stu-id="06560-201">The <see cref="T:System.Object" /> value of the entry to add.</span></span> <span data-ttu-id="06560-202">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-202">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="06560-203">将具有指定键和值的项添加到 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中。</span><span class="sxs-lookup"><span data-stu-id="06560-203">Adds an entry with the specified key and value into the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-204">如果 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 已经等于容量 <xref:System.Collections.Specialized.NameObjectCollectionBase>，则会自动重新分配内部数组，并将现有元素复制到新数组，然后再添加新元素。</span><span class="sxs-lookup"><span data-stu-id="06560-204">If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameObjectCollectionBase> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="06560-205">如果 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 小于容量，则此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-205">If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="06560-206">如果需要增加容量以容纳新元素，则此方法将成为 O （`n`）运算，<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>`n`。</span><span class="sxs-lookup"><span data-stu-id="06560-206">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-207">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd%2A> 通过 <xref:System.Collections.IDictionary>中的元素创建新 <xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="06560-207">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd%2A> to create a new <xref:System.Collections.Specialized.NameObjectCollectionBase> with elements from an <xref:System.Collections.IDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseAdd/CPP/nocb_baseadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseAdd/CS/nocb_baseadd.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseAdd/VB/nocb_baseadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="06560-208">集合为只读。</span><span class="sxs-lookup"><span data-stu-id="06560-208">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseClear">
      <MemberSignature Language="C#" Value="protected void BaseClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseClear();" />
      <MemberSignature Language="F#" Value="member this.BaseClear : unit -&gt; unit" Usage="nameObjectCollectionBase.BaseClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06560-209">移除 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有项。</span><span class="sxs-lookup"><span data-stu-id="06560-209">Removes all entries from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-210"><xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 设置为零，还会释放对集合的元素的其他对象的引用。</span><span class="sxs-lookup"><span data-stu-id="06560-210"><xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="06560-211">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-211">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-212">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseClear%2A> 从 <xref:System.Collections.Specialized.NameObjectCollectionBase>中删除所有元素。</span><span class="sxs-lookup"><span data-stu-id="06560-212">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseClear%2A> to remove all elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseClear/CPP/nocb_baseclear.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseClear/CS/nocb_baseclear.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseClear/VB/nocb_baseclear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="06560-213">集合为只读。</span><span class="sxs-lookup"><span data-stu-id="06560-213">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseGet">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06560-214">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中指定项的值。</span><span class="sxs-lookup"><span data-stu-id="06560-214">Gets the value of the specified entry from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected object BaseGet (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object BaseGet(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGet (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGet(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : int -&gt; obj" Usage="nameObjectCollectionBase.BaseGet index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="06560-215">要获取的值的从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="06560-215">The zero-based index of the value to get.</span></span></param>
        <summary><span data-ttu-id="06560-216">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的指定索引处的项值。</span><span class="sxs-lookup"><span data-stu-id="06560-216">Gets the value of the entry at the specified index of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="06560-217"><see cref="T:System.Object" />，它表示指定索引处的项值。</span><span class="sxs-lookup"><span data-stu-id="06560-217">An <see cref="T:System.Object" /> that represents the value of the entry at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-218">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-218">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-219">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> 和 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> 来获取特定的键和值。</span><span class="sxs-lookup"><span data-stu-id="06560-219">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CPP/nocb_baseget.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CS/nocb_baseget.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/VB/nocb_baseget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06560-220"><paramref name="index" /> 超出了集合的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="06560-220"><paramref name="index" /> is outside the valid range of indexes for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected object BaseGet (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object BaseGet(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGet (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGet(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : string -&gt; obj" Usage="nameObjectCollectionBase.BaseGet name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="06560-221">要获取的项的 <see cref="T:System.String" /> 键。</span><span class="sxs-lookup"><span data-stu-id="06560-221">The <see cref="T:System.String" /> key of the entry to get.</span></span> <span data-ttu-id="06560-222">键可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-222">The key can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="06560-223">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中第一个具有指定键的项值。</span><span class="sxs-lookup"><span data-stu-id="06560-223">Gets the value of the first entry with the specified key from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="06560-224">如果找到了表示第一个具有指定键的项值的 <see cref="T:System.Object" />，则为该对象；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-224">An <see cref="T:System.Object" /> that represents the value of the first entry with the specified key, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-225">如果集合包含多个具有指定键的项，则此方法只返回第一个项。</span><span class="sxs-lookup"><span data-stu-id="06560-225">If the collection contains multiple entries with the specified key, this method returns only the first entry.</span></span> <span data-ttu-id="06560-226">若要获取具有相同键的后续项的值，请使用枚举器循环访问集合并比较键。</span><span class="sxs-lookup"><span data-stu-id="06560-226">To get the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="06560-227">如果找不到指定的键，则此方法将在以下情况下返回 `null`：1）;如果找到指定的键，则为2），并且其关联的值为 `null`。</span><span class="sxs-lookup"><span data-stu-id="06560-227">This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`.</span></span> <span data-ttu-id="06560-228">此方法不区分这两种情况。</span><span class="sxs-lookup"><span data-stu-id="06560-228">This method does not distinguish between the two cases.</span></span>  
  
 <span data-ttu-id="06560-229">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-229">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-230">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> 和 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> 来获取特定的键和值。</span><span class="sxs-lookup"><span data-stu-id="06560-230">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CPP/nocb_baseget.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CS/nocb_baseget.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/VB/nocb_baseget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="BaseGetAllKeys">
      <MemberSignature Language="C#" Value="protected string[] BaseGetAllKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string[] BaseGetAllKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetAllKeys () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::String ^&gt; ^ BaseGetAllKeys();" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllKeys : unit -&gt; string[]" Usage="nameObjectCollectionBase.BaseGetAllKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06560-231">返回 <see cref="T:System.String" /> 数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键。</span><span class="sxs-lookup"><span data-stu-id="06560-231">Returns a <see cref="T:System.String" /> array that contains all the keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="06560-232"><see cref="T:System.String" /> 数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键。</span><span class="sxs-lookup"><span data-stu-id="06560-232">A <see cref="T:System.String" /> array that contains all the keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-233">此方法是一个 O （`n`）操作，其中 `n` 是 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>的。</span><span class="sxs-lookup"><span data-stu-id="06560-233">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-234">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> 和 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> 获取键的数组或值的数组。</span><span class="sxs-lookup"><span data-stu-id="06560-234">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> to get an array of the keys or an array of the values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/CPP/nocb_basegetall.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/CS/nocb_basegetall.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/VB/nocb_basegetall.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseGetAllValues">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06560-235">返回数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span><span class="sxs-lookup"><span data-stu-id="06560-235">Returns an array that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseGetAllValues">
      <MemberSignature Language="C#" Value="protected object[] BaseGetAllValues ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] BaseGetAllValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetAllValues () As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ BaseGetAllValues();" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllValues : unit -&gt; obj[]" Usage="nameObjectCollectionBase.BaseGetAllValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06560-236">返回 <see cref="T:System.Object" /> 数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span><span class="sxs-lookup"><span data-stu-id="06560-236">Returns an <see cref="T:System.Object" /> array that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="06560-237"><see cref="T:System.Object" /> 数组，它包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span><span class="sxs-lookup"><span data-stu-id="06560-237">An <see cref="T:System.Object" /> array that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-238">此方法是一个 O （`n`）操作，其中 `n` 是 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>的。</span><span class="sxs-lookup"><span data-stu-id="06560-238">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-239">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> 和 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> 获取键的数组或值的数组。</span><span class="sxs-lookup"><span data-stu-id="06560-239">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> to get an array of the keys or an array of the values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/CPP/nocb_basegetall.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/CS/nocb_basegetall.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/VB/nocb_basegetall.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetAllValues">
      <MemberSignature Language="C#" Value="protected object[] BaseGetAllValues (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] BaseGetAllValues(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetAllValues (type As Type) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ BaseGetAllValues(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllValues : Type -&gt; obj[]" Usage="nameObjectCollectionBase.BaseGetAllValues type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="06560-240">表示要返回的数组类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="06560-240">A <see cref="T:System.Type" /> that represents the type of array to return.</span></span></param>
        <summary><span data-ttu-id="06560-241">返回指定类型的数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span><span class="sxs-lookup"><span data-stu-id="06560-241">Returns an array of the specified type that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="06560-242">指定类型的数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span><span class="sxs-lookup"><span data-stu-id="06560-242">An array of the specified type that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-243">此方法是一个 O （`n`）操作，其中 `n` 是 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>的。</span><span class="sxs-lookup"><span data-stu-id="06560-243">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06560-244"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-244"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06560-245"><paramref name="type" /> 不是有效的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="06560-245"><paramref name="type" /> is not a valid <see cref="T:System.Type" />.</span></span></exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="BaseGetKey">
      <MemberSignature Language="C#" Value="protected string BaseGetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string BaseGetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ BaseGetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetKey : int -&gt; string" Usage="nameObjectCollectionBase.BaseGetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="06560-246">要获取的键的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="06560-246">The zero-based index of the key to get.</span></span></param>
        <summary><span data-ttu-id="06560-247">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的指定索引处的项键。</span><span class="sxs-lookup"><span data-stu-id="06560-247">Gets the key of the entry at the specified index of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="06560-248">表示指定索引处的项键的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="06560-248">A <see cref="T:System.String" /> that represents the key of the entry at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-249">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-249">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-250">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> 和 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> 来获取特定的键和值。</span><span class="sxs-lookup"><span data-stu-id="06560-250">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CPP/nocb_baseget.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CS/nocb_baseget.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/VB/nocb_baseget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06560-251"><paramref name="index" /> 超出了集合的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="06560-251"><paramref name="index" /> is outside the valid range of indexes for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseHasKeys">
      <MemberSignature Language="C#" Value="protected bool BaseHasKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool BaseHasKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseHasKeys () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseHasKeys();" />
      <MemberSignature Language="F#" Value="member this.BaseHasKeys : unit -&gt; bool" Usage="nameObjectCollectionBase.BaseHasKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06560-252">获取一个值，通过该值指示 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例是否包含键不为 <see langword="null" /> 的项。</span><span class="sxs-lookup"><span data-stu-id="06560-252">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance contains entries whose keys are not <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="06560-253">如果 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例包含键不为 <see langword="null" /> 的项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06560-253"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance contains entries whose keys are not <see langword="null" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-254">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-254">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-255">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys%2A> 来确定集合是否包含未 `null`的键。</span><span class="sxs-lookup"><span data-stu-id="06560-255">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys%2A> to determine if the collection contains keys that are not `null`.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys/CPP/nocb_basehaskeys.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys/CS/nocb_basehaskeys.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys/VB/nocb_basehaskeys.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseRemove">
      <MemberSignature Language="C#" Value="protected void BaseRemove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseRemove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseRemove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseRemove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.BaseRemove : string -&gt; unit" Usage="nameObjectCollectionBase.BaseRemove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="06560-256">要移除的项的 <see cref="T:System.String" /> 键。</span><span class="sxs-lookup"><span data-stu-id="06560-256">The <see cref="T:System.String" /> key of the entries to remove.</span></span> <span data-ttu-id="06560-257">键可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-257">The key can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="06560-258">移除 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中具有指定键的项。</span><span class="sxs-lookup"><span data-stu-id="06560-258">Removes the entries with the specified key from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-259">如果 <xref:System.Collections.Specialized.NameObjectCollectionBase> 不包含具有指定键的元素，则 <xref:System.Collections.Specialized.NameObjectCollectionBase> 保持不变。</span><span class="sxs-lookup"><span data-stu-id="06560-259">If the <xref:System.Collections.Specialized.NameObjectCollectionBase> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameObjectCollectionBase> remains unchanged.</span></span> <span data-ttu-id="06560-260">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="06560-260">No exception is thrown.</span></span>  
  
 <span data-ttu-id="06560-261">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="06560-261">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="06560-262">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="06560-262">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="06560-263">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="06560-263">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="06560-264">此方法是一个 O （`n`）操作，其中 `n` 是 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>的。</span><span class="sxs-lookup"><span data-stu-id="06560-264">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-265">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> 和 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> 从 <xref:System.Collections.Specialized.NameObjectCollectionBase>中删除元素。</span><span class="sxs-lookup"><span data-stu-id="06560-265">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/CPP/nocb_baseremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/CS/nocb_baseremove.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/VB/nocb_baseremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="06560-266">集合为只读。</span><span class="sxs-lookup"><span data-stu-id="06560-266">The collection is read-only.</span></span></exception>
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-267">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-267">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BaseRemoveAt">
      <MemberSignature Language="C#" Value="protected void BaseRemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseRemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseRemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseRemoveAt : int -&gt; unit" Usage="nameObjectCollectionBase.BaseRemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="06560-268">要移除的项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="06560-268">The zero-based index of the entry to remove.</span></span></param>
        <summary><span data-ttu-id="06560-269">移除 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="06560-269">Removes the entry at the specified index of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-270">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="06560-270">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="06560-271">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="06560-271">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="06560-272">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="06560-272">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="06560-273">此方法是一个 O （`n`）操作，其中 `n` 是 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>的。</span><span class="sxs-lookup"><span data-stu-id="06560-273">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-274">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> 和 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> 从 <xref:System.Collections.Specialized.NameObjectCollectionBase>中删除元素。</span><span class="sxs-lookup"><span data-stu-id="06560-274">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/CPP/nocb_baseremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/CS/nocb_baseremove.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/VB/nocb_baseremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06560-275"><paramref name="index" /> 超出了集合的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="06560-275"><paramref name="index" /> is outside the valid range of indexes for the collection.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="06560-276">集合为只读。</span><span class="sxs-lookup"><span data-stu-id="06560-276">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseSet">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06560-277">设置 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的项值。</span><span class="sxs-lookup"><span data-stu-id="06560-277">Sets the value of an entry in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseSet">
      <MemberSignature Language="C#" Value="protected void BaseSet (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseSet(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSet (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseSet(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.BaseSet : int * obj -&gt; unit" Usage="nameObjectCollectionBase.BaseSet (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="06560-278">要设置的条目的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="06560-278">The zero-based index of the entry to set.</span></span></param>
        <param name="value"><span data-ttu-id="06560-279">表示要设置的项的新值的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="06560-279">The <see cref="T:System.Object" /> that represents the new value of the entry to set.</span></span> <span data-ttu-id="06560-280">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-280">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="06560-281">设置 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的指定索引处的项值。</span><span class="sxs-lookup"><span data-stu-id="06560-281">Sets the value of the entry at the specified index of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-282">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-282">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-283">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> 设置特定元素的值。</span><span class="sxs-lookup"><span data-stu-id="06560-283">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> to set the value of a specific element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/CPP/nocb_baseset.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/CS/nocb_baseset.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/VB/nocb_baseset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="06560-284">集合为只读。</span><span class="sxs-lookup"><span data-stu-id="06560-284">The collection is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06560-285"><paramref name="index" /> 超出了集合的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="06560-285"><paramref name="index" /> is outside the valid range of indexes for the collection.</span></span></exception>
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-286">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-286">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BaseSet">
      <MemberSignature Language="C#" Value="protected void BaseSet (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseSet(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSet (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseSet(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.BaseSet : string * obj -&gt; unit" Usage="nameObjectCollectionBase.BaseSet (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="06560-287">要设置的项的 <see cref="T:System.String" /> 键。</span><span class="sxs-lookup"><span data-stu-id="06560-287">The <see cref="T:System.String" /> key of the entry to set.</span></span> <span data-ttu-id="06560-288">键可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-288">The key can be <see langword="null" />.</span></span></param>
        <param name="value"><span data-ttu-id="06560-289">表示要设置的项的新值的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="06560-289">The <see cref="T:System.Object" /> that represents the new value of the entry to set.</span></span> <span data-ttu-id="06560-290">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-290">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="06560-291">为 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中第一个具有指定键的项设置值（如果有这样的项）；否则将具有指定键和值的项添加到 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中。</span><span class="sxs-lookup"><span data-stu-id="06560-291">Sets the value of the first entry with the specified key in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance, if found; otherwise, adds an entry with the specified key and value into the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-292">如果集合包含多个具有指定键的项，则此方法将仅设置第一个项。</span><span class="sxs-lookup"><span data-stu-id="06560-292">If the collection contains multiple entries with the specified key, this method sets only the first entry.</span></span> <span data-ttu-id="06560-293">若要设置具有相同键的后续项的值，请使用枚举器循环访问集合并比较键。</span><span class="sxs-lookup"><span data-stu-id="06560-293">To set the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.</span></span>  
  
 <span data-ttu-id="06560-294">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-294">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-295">下面的代码示例使用 <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> 设置特定元素的值。</span><span class="sxs-lookup"><span data-stu-id="06560-295">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> to set the value of a specific element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/CPP/nocb_baseset.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/CS/nocb_baseset.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/VB/nocb_baseset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="06560-296">集合为只读。</span><span class="sxs-lookup"><span data-stu-id="06560-296">The collection is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations"><span data-ttu-id="06560-297">执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="06560-297">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Specialized.NameObjectCollectionBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06560-298">获取包含在 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的键/值对的数目。</span><span class="sxs-lookup"><span data-stu-id="06560-298">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <value><span data-ttu-id="06560-299">包含在 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的键/值对的数目。</span><span class="sxs-lookup"><span data-stu-id="06560-299">The number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-300">容量是 <xref:System.Collections.Specialized.NameObjectCollectionBase> 可以存储的元素数。</span><span class="sxs-lookup"><span data-stu-id="06560-300">The capacity is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can store.</span></span> <span data-ttu-id="06560-301"><xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 是实际处于 <xref:System.Collections.Specialized.NameObjectCollectionBase>中的元素的数目。</span><span class="sxs-lookup"><span data-stu-id="06560-301"><xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="06560-302">容量始终大于或等于 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="06560-302">The capacity is always greater than or equal to <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span> <span data-ttu-id="06560-303">如果在添加元素时 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 超过容量，则会自动重新分配内部数组，然后再复制旧元素并添加新元素，从而自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="06560-303">If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="06560-304">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="06560-304">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="nameObjectCollectionBase.GetEnumerator " />
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06560-305">返回循环访问 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 的枚举器。</span><span class="sxs-lookup"><span data-stu-id="06560-305">Returns an enumerator that iterates through the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />.</span></span></summary>
        <returns><span data-ttu-id="06560-306">用于 <see cref="T:System.Collections.IEnumerator" /> 实例的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />。</span><span class="sxs-lookup"><span data-stu-id="06560-306">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-307">此枚举器将集合的键作为字符串返回。</span><span class="sxs-lookup"><span data-stu-id="06560-307">This enumerator returns the keys of the collection as strings.</span></span>  
  
 <span data-ttu-id="06560-308">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="06560-308">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="06560-309">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="06560-309">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="06560-310">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="06560-310">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="06560-311">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="06560-311">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="06560-312"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="06560-312"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="06560-313">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="06560-313">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="06560-314">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="06560-314">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="06560-315">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="06560-315"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="06560-316"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="06560-316"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="06560-317">如果 <xref:System.Collections.IEnumerator.MoveNext%2A> 越过集合的末尾，则枚举器将定位到集合中的最后一个元素之后，<xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="06560-317">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="06560-318">当枚举器位于此位置时，对 <xref:System.Collections.IEnumerator.MoveNext%2A> 的后续调用也将返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="06560-318">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="06560-319">如果对的最后一个调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false`，则 <xref:System.Collections.IEnumerator.Current%2A> 未定义。</span><span class="sxs-lookup"><span data-stu-id="06560-319">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="06560-320">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="06560-320">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="06560-321">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="06560-321">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="06560-322">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="06560-322">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="06560-323">该枚举数不具有独占访问集合的权限；因此，枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="06560-323">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="06560-324">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="06560-324">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="06560-325">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="06560-325">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="06560-326">此方法为 O （1）操作。</span><span class="sxs-lookup"><span data-stu-id="06560-326">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="nameObjectCollectionBase.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="06560-327"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，该对象包含序列化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例所需的信息。</span><span class="sxs-lookup"><span data-stu-id="06560-327">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="06560-328"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含与 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例关联的序列化流的源和目标。</span><span class="sxs-lookup"><span data-stu-id="06560-328">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></param>
        <summary><span data-ttu-id="06560-329">实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例所需的数据。</span><span class="sxs-lookup"><span data-stu-id="06560-329">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-330">此方法是一个 O （`n`）操作，其中 `n` 是 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>的。</span><span class="sxs-lookup"><span data-stu-id="06560-330">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06560-331"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-331"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06560-332">获取或设置一个值，通过该值指示 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例是否为只读的。</span><span class="sxs-lookup"><span data-stu-id="06560-332">Gets or sets a value indicating whether the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance is read-only.</span></span></summary>
        <value><span data-ttu-id="06560-333">如果 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06560-333"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-334">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="06560-334">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="06560-335">只读集合就是一个集合，其中包含阻止修改集合的包装器;因此，如果对基础集合进行了更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="06560-335">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="06560-336">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="06560-336">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06560-337">下面的代码示例创建一个只读集合。</span><span class="sxs-lookup"><span data-stu-id="06560-337">The following code example creates a read-only collection.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.IsReadOnly/CPP/nocb_isreadonly.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.IsReadOnly/CS/nocb_isreadonly.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.IsReadOnly/VB/nocb_isreadonly.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" Usage="System.Collections.Specialized.NameObjectCollectionBase.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06560-338">获取包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 实例中所有键的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="06560-338">Gets a <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> instance that contains all the keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></summary>
        <value><span data-ttu-id="06560-339"><see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 实例，该实例包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键。</span><span class="sxs-lookup"><span data-stu-id="06560-339">A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> instance that contains all the keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-340">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="06560-340">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="nameObjectCollectionBase.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="06560-341">反序列化事件源。</span><span class="sxs-lookup"><span data-stu-id="06560-341">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="06560-342">实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并在完成反序列化之后引发反序列化事件。</span><span class="sxs-lookup"><span data-stu-id="06560-342">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-343">虽然 <xref:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization%2A> 方法默认情况下对 COM 客户端不可见，但继承 <xref:System.Collections.Specialized.NameObjectCollectionBase> 类可以将其公开，并可能导致在 COM 客户端中产生不需要的行为。</span><span class="sxs-lookup"><span data-stu-id="06560-343">While the <xref:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients.</span></span>  
  
 <span data-ttu-id="06560-344">此方法是一个 O （`n`）操作，其中 `n` 是 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>的。</span><span class="sxs-lookup"><span data-stu-id="06560-344">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="06560-345">与当前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例关联的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象无效。</span><span class="sxs-lookup"><span data-stu-id="06560-345">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance is invalid.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="nameObjectCollectionBase.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="06560-346">作为从 <see cref="T:System.Array" /> 复制的元素目标的一维 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />。</span><span class="sxs-lookup"><span data-stu-id="06560-346">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />.</span></span> <span data-ttu-id="06560-347"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="06560-347">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="06560-348">
          <paramref name="array" /> 中要从其开始复制的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="06560-348">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="06560-349">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="06560-349">Copies the entire <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-350">指定的数组必须是兼容的类型。</span><span class="sxs-lookup"><span data-stu-id="06560-350">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="06560-351">此方法使用 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 复制元素。</span><span class="sxs-lookup"><span data-stu-id="06560-351">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="06560-352">虽然 <xref:System.Collections.Specialized.NameObjectCollectionBase.System%23Collections%23ICollection%23CopyTo%2A> 方法默认情况下对 COM 客户端不可见，但继承 <xref:System.Collections.Specialized.NameObjectCollectionBase> 类可以将其公开，并可能导致在 COM 客户端中产生不需要的行为。</span><span class="sxs-lookup"><span data-stu-id="06560-352">While the <xref:System.Collections.Specialized.NameObjectCollectionBase.System%23Collections%23ICollection%23CopyTo%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients.</span></span>  
  
 <span data-ttu-id="06560-353">此方法是一个 O （`n`）操作，其中 `n` 是 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>的。</span><span class="sxs-lookup"><span data-stu-id="06560-353">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06560-354"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="06560-354"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06560-355"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="06560-355"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06560-356"><paramref name="array" /> 是多维数组。</span><span class="sxs-lookup"><span data-stu-id="06560-356"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="06560-357">- 或 -</span><span class="sxs-lookup"><span data-stu-id="06560-357">-or-</span></span> 
<span data-ttu-id="06560-358">源 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span><span class="sxs-lookup"><span data-stu-id="06560-358">The number of elements in the source <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="06560-359">源 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 的类型无法自动转换为目标 <paramref name="array" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="06560-359">The type of the source <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06560-360">获取一个值，该值指示对 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象的访问是否同步（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="06560-360">Gets a value indicating whether access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="06560-361">如果对 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06560-361"><see langword="true" /> if access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06560-362">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06560-362">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-363"><xref:System.Collections.Specialized.NameObjectCollectionBase> 对象不同步。</span><span class="sxs-lookup"><span data-stu-id="06560-363">A <xref:System.Collections.Specialized.NameObjectCollectionBase> object is not synchronized.</span></span> <span data-ttu-id="06560-364">派生类可以使用 <xref:System.Collections.ICollection.SyncRoot%2A> 属性提供 <xref:System.Collections.Specialized.NameObjectCollectionBase> 的同步版本。</span><span class="sxs-lookup"><span data-stu-id="06560-364">Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="06560-365">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="06560-365">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="06560-366">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="06560-366">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="06560-367">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="06560-367">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="06560-368">下面的代码示例演示如何在整个枚举过程中使用 <xref:System.Collections.ICollection.SyncRoot%2A> 属性锁定集合。</span><span class="sxs-lookup"><span data-stu-id="06560-368">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="06560-369">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="06560-369">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06560-370">获取一个对象，该对象可用于同步对 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象的访问。</span><span class="sxs-lookup"><span data-stu-id="06560-370">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object.</span></span></summary>
        <value><span data-ttu-id="06560-371">一个对象，该对象可用于同步对 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象的访问。</span><span class="sxs-lookup"><span data-stu-id="06560-371">An object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06560-372">派生类可以使用 <xref:System.Collections.ICollection.SyncRoot%2A> 属性提供自己的 <xref:System.Collections.Specialized.NameObjectCollectionBase> 类的同步版本。</span><span class="sxs-lookup"><span data-stu-id="06560-372">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="06560-373">同步代码必须对 <xref:System.Collections.Specialized.NameObjectCollectionBase> 对象的 <xref:System.Collections.ICollection.SyncRoot%2A> 属性执行操作，而不是直接在 <xref:System.Collections.Specialized.NameObjectCollectionBase> 对象上执行操作。</span><span class="sxs-lookup"><span data-stu-id="06560-373">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.Specialized.NameObjectCollectionBase> object, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase> object.</span></span> <span data-ttu-id="06560-374">这样可确保对从其他对象派生的集合正确地执行操作。</span><span class="sxs-lookup"><span data-stu-id="06560-374">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="06560-375">具体而言，它与可能同时修改 <xref:System.Collections.Specialized.NameObjectCollectionBase> 对象的其他线程保持正确的同步。</span><span class="sxs-lookup"><span data-stu-id="06560-375">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase> object.</span></span>  
  
 <span data-ttu-id="06560-376">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="06560-376">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="06560-377">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="06560-377">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="06560-378">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="06560-378">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="06560-379">下面的代码示例演示如何使用 <xref:System.Collections.ICollection.SyncRoot%2A> 在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="06560-379">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="06560-380">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="06560-380">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>
