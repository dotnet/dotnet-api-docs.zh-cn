<Type Name="IOrderedDictionary" FullName="System.Collections.Specialized.IOrderedDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2bddc226e4f61855bc316cbf4b74d3df6cb14a33" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86737514" /></Metadata><TypeSignature Language="C#" Value="public interface IOrderedDictionary : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOrderedDictionary implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.IOrderedDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOrderedDictionary&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOrderedDictionary : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type IOrderedDictionary = interface&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDictionary" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type IOrderedDictionary = interface&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections.Specialized" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="77007-101">表示键/值对的索引集合。</span><span class="sxs-lookup"><span data-stu-id="77007-101">Represents an indexed collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77007-102"><xref:System.Collections.Specialized.IOrderedDictionary> 可以通过键或索引来访问元素。</span><span class="sxs-lookup"><span data-stu-id="77007-102"><xref:System.Collections.Specialized.IOrderedDictionary> elements can be accessed either with the key or with the index.</span></span>  
  
 <span data-ttu-id="77007-103">每个元素都是存储在结构中的键/值对 <xref:System.Collections.DictionaryEntry> 。</span><span class="sxs-lookup"><span data-stu-id="77007-103">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> structure.</span></span>  
  
 <span data-ttu-id="77007-104">每个对的唯一键必须不是 `null` ，但值可以为， `null` 并且不必是唯一的。</span><span class="sxs-lookup"><span data-stu-id="77007-104">Each pair must have a unique key that is not `null`, but the value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="77007-105"><xref:System.Collections.Specialized.IOrderedDictionary>接口允许枚举包含的键和值，但不表示任何特定的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="77007-105">The <xref:System.Collections.Specialized.IOrderedDictionary> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="77007-106">`foreach`C # 语言 `For Each` 中 (Visual Basic) 的语句返回集合中元素的类型的对象。</span><span class="sxs-lookup"><span data-stu-id="77007-106">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="77007-107">由于的每个元素 <xref:System.Collections.IDictionary> 都是键/值对，因此元素类型不是键的类型或值的类型。</span><span class="sxs-lookup"><span data-stu-id="77007-107">Because each element of the <xref:System.Collections.IDictionary> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="77007-108">相反，元素类型为 <xref:System.Collections.DictionaryEntry> ，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="77007-108">Instead, the element type is <xref:System.Collections.DictionaryEntry>, as the following example shows.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#03)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#03)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#03)]  
  
 <span data-ttu-id="77007-109">`foreach`语句是枚举器周围的包装器，它只允许从集合读取，而不允许写入。</span><span class="sxs-lookup"><span data-stu-id="77007-109">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77007-110">下面的代码示例演示基于类的简单实现 <xref:System.Collections.Specialized.IOrderedDictionary> <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="77007-110">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="77007-111">实现的将 <xref:System.Collections.Specialized.IOrderedDictionary> 名字和姓氏作为值存储，每个名字的要求都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="77007-111">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#00)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#00)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#00)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="77007-112">实现类必须有一种方法来比较键。</span><span class="sxs-lookup"><span data-stu-id="77007-112">The implementing class must have a means to compare keys.</span></span></para></block>
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="iOrderedDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77007-113">返回一个循环访问 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="77007-113">Returns an enumerator that iterates through the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></summary>
        <returns><span data-ttu-id="77007-114">用于整个 <see cref="T:System.Collections.IDictionaryEnumerator" /> 集合的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="77007-114">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the entire <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="77007-115">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="77007-115">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="77007-116">因此，建议使用， `foreach` 而不是直接操作枚举器。</span><span class="sxs-lookup"><span data-stu-id="77007-116">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="77007-117">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="77007-117">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="77007-118">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="77007-118">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="77007-119"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="77007-119"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="77007-120">在此位置， <xref:System.Collections.IEnumerator.Current%2A> 属性未定义。</span><span class="sxs-lookup"><span data-stu-id="77007-120">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="77007-121">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="77007-121">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="77007-122">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="77007-122"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="77007-123"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="77007-123"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="77007-124">如果 <xref:System.Collections.IEnumerator.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="77007-124">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="77007-125">当枚举器位于此位置时，对的后续调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 也将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="77007-125">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="77007-126">如果最后一次调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` ， <xref:System.Collections.IEnumerator.Current%2A> 则未定义。</span><span class="sxs-lookup"><span data-stu-id="77007-126">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="77007-127">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="77007-127">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="77007-128">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="77007-128">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="77007-129">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="77007-129">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="77007-130">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="77007-130">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="77007-131">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="77007-131">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="77007-132">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="77007-132">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77007-133">下面的代码示例演示基于类的简单实现 <xref:System.Collections.Specialized.IOrderedDictionary> <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="77007-133">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="77007-134">实现的将 <xref:System.Collections.Specialized.IOrderedDictionary> 名字和姓氏作为值存储，每个名字的要求都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="77007-134">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="77007-135">此代码是为类提供的更大代码示例的一部分 <xref:System.Collections.Specialized.IOrderedDictionary> 。</span><span class="sxs-lookup"><span data-stu-id="77007-135">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object key, object value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj * obj -&gt; unit" Usage="iOrderedDictionary.Insert (index, key, value)" />
      <MemberSignature Language="C#" Value="public void Insert (int index, object key, object? value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="77007-136">键/值对应在从零开始的索引处插入。</span><span class="sxs-lookup"><span data-stu-id="77007-136">The zero-based index at which the key/value pair should be inserted.</span></span></param>
        <param name="key"><span data-ttu-id="77007-137">用作要添加的元素的键的对象。</span><span class="sxs-lookup"><span data-stu-id="77007-137">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="77007-138">用作要添加的元素的值的对象。</span><span class="sxs-lookup"><span data-stu-id="77007-138">The object to use as the value of the element to add.</span></span>  <span data-ttu-id="77007-139">该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="77007-139">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="77007-140">将键/值对插入到指定索引处的集合中。</span><span class="sxs-lookup"><span data-stu-id="77007-140">Inserts a key/value pair into the collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77007-141"><xref:System.Collections.Specialized.IOrderedDictionary> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="77007-141"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="77007-142">如果 `index` 参数等于 <xref:System.Collections.ICollection.Count%2A> ，则将 `value` 参数添加到集合的末尾 <xref:System.Collections.Specialized.IOrderedDictionary> 。</span><span class="sxs-lookup"><span data-stu-id="77007-142">If the `index` parameter is equal to <xref:System.Collections.ICollection.Count%2A>, the `value` parameter is added to the end of the <xref:System.Collections.Specialized.IOrderedDictionary> collection.</span></span>  
  
 <span data-ttu-id="77007-143">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="77007-143">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="77007-144">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="77007-144">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="77007-145">此行为不适用于元素在概念上组合在一起的集合，例如哈希表。</span><span class="sxs-lookup"><span data-stu-id="77007-145">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77007-146">下面的代码示例演示基于类的简单实现 <xref:System.Collections.Specialized.IOrderedDictionary> <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="77007-146">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="77007-147">实现的将 <xref:System.Collections.Specialized.IOrderedDictionary> 名字和姓氏作为值存储，每个名字的要求都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="77007-147">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="77007-148">此代码是为类提供的更大代码示例的一部分 <xref:System.Collections.Specialized.IOrderedDictionary> 。</span><span class="sxs-lookup"><span data-stu-id="77007-148">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="77007-149"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="77007-149"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="77007-150">- 或 -</span><span class="sxs-lookup"><span data-stu-id="77007-150">-or-</span></span> 
 <span data-ttu-id="77007-151"><paramref name="index" /> 大于 <see cref="P:System.Collections.ICollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="77007-151"><paramref name="index" /> is greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77007-152"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="77007-152"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="77007-153"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 集合中已存在具有相同键的元素。</span><span class="sxs-lookup"><span data-stu-id="77007-153">An element with the same key already exists in the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="77007-154"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 集合为只读。</span><span class="sxs-lookup"><span data-stu-id="77007-154">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="77007-155">- 或 -</span><span class="sxs-lookup"><span data-stu-id="77007-155">-or-</span></span> 
<span data-ttu-id="77007-156"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 集合的大小是固定的。</span><span class="sxs-lookup"><span data-stu-id="77007-156">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.Specialized.IOrderedDictionary.Item" />
      <MemberSignature Language="C#" Value="public object? this[int index] { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="77007-157">要获取或设置的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="77007-157">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="77007-158">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="77007-158">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="77007-159">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="77007-159">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="77007-160"><xref:System.Collections.Specialized.IOrderedDictionary> 接受 `null` 作为有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="77007-160"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>

<span data-ttu-id="77007-161">C # 语言使用 [this](/dotnet/csharp/language-reference/keywords/this) 关键字来定义索引器，而不是实现 <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="77007-161">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> property.</span></span> <span data-ttu-id="77007-162">Visual Basic 实现 <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> 为 [默认属性](/dotnet/visual-basic/language-reference/modifiers/default)，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="77007-162">Visual Basic implements <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> as a [default property](/dotnet/visual-basic/language-reference/modifiers/default), which provides the same indexing functionality.</span></span>

<span data-ttu-id="77007-163">此属性允许使用以下语法访问集合中的特定元素：</span><span class="sxs-lookup"><span data-stu-id="77007-163">This property allows you to access a specific element in the collection by using the following syntax:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#04)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#04)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#04)]  
  
   
  
## Examples  
 <span data-ttu-id="77007-164">下面的代码示例演示基于类的简单实现 <xref:System.Collections.Specialized.IOrderedDictionary> <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="77007-164">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="77007-165">实现的将 <xref:System.Collections.Specialized.IOrderedDictionary> 名字和姓氏作为值存储，每个名字的要求都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="77007-165">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="77007-166">此代码是为类提供的更大代码示例的一部分 <xref:System.Collections.Specialized.IOrderedDictionary> 。</span><span class="sxs-lookup"><span data-stu-id="77007-166">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="77007-167"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="77007-167"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="77007-168">- 或 -</span><span class="sxs-lookup"><span data-stu-id="77007-168">-or-</span></span> 
 <span data-ttu-id="77007-169"><paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ICollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="77007-169"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iOrderedDictionary.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="77007-170">要移除的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="77007-170">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="77007-171">移除指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="77007-171">Removes the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77007-172">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="77007-172">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="77007-173">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="77007-173">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="77007-174">此行为不适用于元素在概念上组合在一起的集合，例如哈希表。</span><span class="sxs-lookup"><span data-stu-id="77007-174">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77007-175">下面的代码示例演示基于类的简单实现 <xref:System.Collections.Specialized.IOrderedDictionary> <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="77007-175">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="77007-176">实现的将 <xref:System.Collections.Specialized.IOrderedDictionary> 名字和姓氏作为值存储，每个名字的要求都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="77007-176">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="77007-177">此代码是为类提供的更大代码示例的一部分 <xref:System.Collections.Specialized.IOrderedDictionary> 。</span><span class="sxs-lookup"><span data-stu-id="77007-177">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="77007-178"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="77007-178"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="77007-179">- 或 -</span><span class="sxs-lookup"><span data-stu-id="77007-179">-or-</span></span> 
 <span data-ttu-id="77007-180"><paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ICollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="77007-180"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="77007-181"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 集合为只读。</span><span class="sxs-lookup"><span data-stu-id="77007-181">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="77007-182">- 或 -</span><span class="sxs-lookup"><span data-stu-id="77007-182">-or-</span></span> 
<span data-ttu-id="77007-183"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 集合的大小是固定的。</span><span class="sxs-lookup"><span data-stu-id="77007-183">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
