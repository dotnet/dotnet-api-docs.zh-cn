<Type Name="PrintQueue" FullName="System.Printing.PrintQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7577f77b6a3ef01dce2a8b389c933f3d77d76795" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102057176" /></Metadata><TypeSignature Language="C#" Value="public class PrintQueue : System.Printing.PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintQueue extends System.Printing.PrintSystemObject" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintQueue&#xA;Inherits PrintSystemObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintQueue : System::Printing::PrintSystemObject" />
  <TypeSignature Language="F#" Value="type PrintQueue = class&#xA;    inherit PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintQueue extends System.Printing.PrintSystemObject" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5d3f6-101">管理打印机和打印作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-101">Manages printers and print jobs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-102">对象的某些属性 <xref:System.Printing.PrintQueue> 表示在计算机上运行的打印队列实用程序的特征，但其他属性表示打印机本身的特征或状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-102">Some properties of the <xref:System.Printing.PrintQueue> object represent characteristics of the print queue utility that runs on the computer, but others represent features or states of the printer itself.</span></span> <span data-ttu-id="5d3f6-103">例如， <xref:System.Printing.PrintQueue.NumberOfJobs%2A> 是打印队列的一种特征，但 <xref:System.Printing.PrintQueue.Location%2A> 它是打印机的一个属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-103">For example, <xref:System.Printing.PrintQueue.NumberOfJobs%2A> is a characteristic of the print queue, but <xref:System.Printing.PrintQueue.Location%2A> is a property of the printer.</span></span> <span data-ttu-id="5d3f6-104">打印机的很多属性（如是否需要用户注意）都需要通过 <xref:System.Printing.PrintQueue.Refresh%2A> 方法从打印机本身传递到该 <xref:System.Printing.PrintQueue> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-104">Many of the properties of the printer, such as whether it needs user attention, need to be passed, by means of the <xref:System.Printing.PrintQueue.Refresh%2A> method, from the printer itself to the <xref:System.Printing.PrintQueue> object.</span></span> <span data-ttu-id="5d3f6-105">此操作应在程序读取 () 的相应属性之前完成 <xref:System.Printing.PrintQueue.NeedUserIntervention%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-105">This should be done before the corresponding property (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) is read by your program.</span></span> <span data-ttu-id="5d3f6-106">同样，当程序更改对象的一个或多个属性的值时 <xref:System.Printing.PrintQueue> ，必须将该更改写入计算机上的实际打印队列实用工具中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-106">Similarly, when your program changes the values of one or more properties of a <xref:System.Printing.PrintQueue> object, the change must be written to the actual print queue utility on the computer.</span></span> <span data-ttu-id="5d3f6-107">用方法执行此操作 <xref:System.Printing.PrintQueue.Commit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-107">Do this with the <xref:System.Printing.PrintQueue.Commit%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5d3f6-108">命名空间中的类 <xref:System.Printing> 不支持在 Windows 服务或 ASP.NET 应用程序或服务中使用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-108">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="5d3f6-109">尝试从这些应用程序类型之一中使用这些类可能会产生意外的问题，例如降低服务性能和运行时异常。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-109">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="5d3f6-110">如果要从 Windows 窗体应用程序进行打印，请参阅 <xref:System.Drawing.Printing> 命名空间。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-110">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Printing.PrintServer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d3f6-111">初始化 <see cref="T:System.Printing.PrintQueue" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-111">Initializes a new instance of the <see cref="T:System.Printing.PrintQueue" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, printQueueName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d3f6-112">承载打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-112">The print server to host the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d3f6-113">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-113">The name of the print queue.</span></span></param>
        <summary><span data-ttu-id="5d3f6-114">使用指定的 <see cref="T:System.Printing.PrintQueue" /> 和队列名称初始化 <see cref="T:System.Printing.PrintServer" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-114">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" /> and queue name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-115"><xref:System.Printing.PrintQueue> 不包括 <xref:System.Printing.PrintSystemDesiredAccess> 参数的默认为访问的构造函数 <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-115"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, int32 printSchemaVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, printQueueName As String, printSchemaVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, int printSchemaVersion);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * int -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, printSchemaVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="printSchemaVersion" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d3f6-116">承载打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-116">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d3f6-117">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-117">The name of the print queue.</span></span></param>
        <param name="printSchemaVersion"><span data-ttu-id="5d3f6-118">要使用的打印架构的版本。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-118">The version of the Print Schema to use.</span></span></param>
        <summary><span data-ttu-id="5d3f6-119">使用指定 <see cref="T:System.Printing.PrintQueue" />、队列名称和打印架构版本初始化 <see cref="T:System.Printing.PrintServer" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-119">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and print schema version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-120"><xref:System.Printing.PrintQueue> 不包括 <xref:System.Printing.PrintSystemDesiredAccess> 参数的默认为访问的构造函数 <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-120"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter  default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="5d3f6-121">随 Windows Vista 一起发布的 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 版本为 "1"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-121">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is "1".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintQueueIndexedProperty[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, printQueueName As String, propertyFilter As PrintQueueIndexedProperty())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::Printing::PrintQueueIndexedProperty&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintQueueIndexedProperty[] -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Printing.PrintQueueIndexedProperty[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d3f6-122">承载打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-122">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d3f6-123">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-123">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="5d3f6-124">指定要初始化的属性值的 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 值的数组。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-124">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the property values to initialize.</span></span></param>
        <summary><span data-ttu-id="5d3f6-125">使用指定的 <see cref="T:System.Printing.PrintQueue" />、队列名称和要初始化的 <see cref="T:System.Printing.PrintServer" /> 值的数组初始化 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-125">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-126"><xref:System.Printing.PrintQueue> 不包括 <xref:System.Printing.PrintSystemDesiredAccess> 参数的默认为访问的构造函数 <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-126"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="5d3f6-127">使用带有参数的构造函数可 `propertyFilter` 提高性能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-127">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, printQueueName As String, desiredAccess As PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d3f6-128">承载打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-128">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d3f6-129">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-129">The name of the print queue.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="5d3f6-130">指定程序所需打印队列的访问类型的 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-130">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="5d3f6-131">使用指定 <see cref="T:System.Printing.PrintQueue" />、队列名称和所需访问初始化 <see cref="T:System.Printing.PrintServer" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-131">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and desired access.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-132"><paramref name="desiredAccess" /> 是只能用于 <see cref="T:System.Printing.PrintServer" /> 对象，而不能用于 <see cref="T:System.Printing.PrintQueue" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-132"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="5d3f6-133">例如，<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-133">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, printQueueName As String, propertyFilter As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * string[] -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d3f6-134">承载打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-134">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d3f6-135">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-135">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="5d3f6-136">要初始化的属性名称的数组。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-136">An array of the names of properties to initialize.</span></span></param>
        <summary><span data-ttu-id="5d3f6-137">使用指定 <see cref="T:System.Printing.PrintQueue" />、队列名称和要初始化的属性名称的数组初始化 <see cref="T:System.Printing.PrintServer" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-137">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of property names to initialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-138"><xref:System.Printing.PrintQueue> 不包括 <xref:System.Printing.PrintSystemDesiredAccess> 参数的默认为访问的构造函数 <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-138"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="5d3f6-139">使用带有参数的构造函数可 `propertyFilter` 提高性能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-139">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, int32 printSchemaVersion, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, printQueueName As String, printSchemaVersion As Integer, desiredAccess As PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, int printSchemaVersion, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * int * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, printSchemaVersion, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="printSchemaVersion" Type="System.Int32" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d3f6-140">承载打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-140">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d3f6-141">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-141">The name of the print queue.</span></span></param>
        <param name="printSchemaVersion"><span data-ttu-id="5d3f6-142">要使用的打印架构的版本。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-142">The version of the Print Schema to use.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="5d3f6-143">指定程序所需打印队列的访问类型的 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-143">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="5d3f6-144">使用指定的 <see cref="T:System.Printing.PrintQueue" />、队列名称、打印架构版本和所需访问初始化 <see cref="T:System.Printing.PrintServer" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-144">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, print schema version, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-145">随 Windows Vista 一起发布的 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 版本为 "1"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-145">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is "1".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-146"><paramref name="desiredAccess" /> 是只能用于 <see cref="T:System.Printing.PrintServer" /> 对象，而不能用于 <see cref="T:System.Printing.PrintQueue" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-146"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="5d3f6-147">例如，<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-147">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintQueueIndexedProperty[] propertyFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, printQueueName As String, propertyFilter As PrintQueueIndexedProperty(), desiredAccess As PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::Printing::PrintQueueIndexedProperty&gt; ^ propertyFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintQueueIndexedProperty[] * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Printing.PrintQueueIndexedProperty[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d3f6-148">承载打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-148">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d3f6-149">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-149">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="5d3f6-150">指定要初始化的属性的 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 值的数组。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-150">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the properties to initialize.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="5d3f6-151">指定程序所需打印队列的访问类型的 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-151">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="5d3f6-152">使用指定的 <see cref="T:System.Printing.PrintQueue" />、队列名称、要初始化的 <see cref="T:System.Printing.PrintServer" /> 值的数组和所需的访问初始化 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-152">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class with the specified <see cref="T:System.Printing.PrintServer" />, queue name, array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-153">使用带有参数的构造函数可 `propertyFilter` 提高性能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-153">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-154"><paramref name="desiredAccess" /> 是只能用于 <see cref="T:System.Printing.PrintServer" /> 对象，而不能用于 <see cref="T:System.Printing.PrintQueue" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-154"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="5d3f6-155">例如，<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-155">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, printQueueName As String, propertyFilter As String(), desiredAccess As PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::String ^&gt; ^ propertyFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * string[] * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="5d3f6-156">承载打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-156">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="5d3f6-157">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-157">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="5d3f6-158">要初始化的属性名称的数组。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-158">An array of the names of properties to initialize.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="5d3f6-159">指定程序所需打印队列的访问类型的 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-159">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="5d3f6-160">使用指定的 <see cref="T:System.Printing.PrintQueue" />、队列名称、属性过滤器和所需访问初始化 <see cref="T:System.Printing.PrintServer" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-160">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, property filter, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-161">使用带有参数的构造函数可 `propertyFilter` 提高性能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-161">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-162"><paramref name="desiredAccess" /> 是只能用于 <see cref="T:System.Printing.PrintServer" /> 对象，而不能用于 <see cref="T:System.Printing.PrintQueue" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-162"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="5d3f6-163">例如，<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-163">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddJob">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d3f6-164">在队列中插入一个新的打印作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-164">Inserts a new print job into the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-165">如果队列已暂停或处于错误状态，则作业将在到达队列顶部时打印，因此这是一个打印功能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-165">Unless the queue is paused or in an error state, the job prints when it reaches the top of the queue, so this is a printing function.</span></span>  
  
 <span data-ttu-id="5d3f6-166">在 Windows Presentation Foundation (WPF) 中打印的其他方式包括 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> 方法，该方法可用于或不打开对话框，以及的多个 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 和 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 方法 <xref:System.Windows.Xps.XpsDocumentWriter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-166">Other ways to print in Windows Presentation Foundation (WPF) include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob () As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob();" />
      <MemberSignature Language="F#" Value="member this.AddJob : unit -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-167">将一个内容为 <see cref="T:System.Byte" /> 数组的新（一般命名的）打印作业插入到队列中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-167">Inserts a new (generically named) print job, whose content is a <see cref="T:System.Byte" /> array, into the queue.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-168">用于表示打印作业及其状态的 <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-168">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-169">使用此方法将设备特定信息写入到不由 Microsoft Windows 后台处理程序自动包含的假脱机文件中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-169">Use this method to write device specific information, to a spool file, that is not automatically included by the Microsoft Windows spooler.</span></span> <span data-ttu-id="5d3f6-170">当然，您需要知道假脱机文件是 (EMF) 还是 XML 纸张规格 (XPS) 中的增强型图元文件。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-170">Of course, you need to know whether the spool file is Enhanced Metafile (EMF) or XML Paper Specification (XPS).</span></span> <span data-ttu-id="5d3f6-171">如果希望使用 <xref:System.IO.Stream> API，可以使用 <xref:System.Printing.PrintQueueStream> 类，而不是使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-171">If you prefer to work with the <xref:System.IO.Stream> API, you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.</span></span>  
  
 <span data-ttu-id="5d3f6-172"><xref:System.Printing.PrintQueue.AddJob%2A>调用方法后，必须将一个 <xref:System.Byte> 数组写入到 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 由返回的的属性中， <xref:System.Printing.PrintSystemJobInfo> <xref:System.Printing.PrintQueue.AddJob%2A> 否则不会创建打印作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-172">After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by <xref:System.Printing.PrintQueue.AddJob%2A> or no print job is created.</span></span> <span data-ttu-id="5d3f6-173">如果打印机工作不暂停，则会打印此数组。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-173">This array is what prints if the printer is working and is not paused.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5d3f6-174">如果在 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 调用了的 <xref:System.IO.Stream.Close%2A> 线程结束之前未关闭，则 <xref:System.Printing.PrintQueue.AddJob%2A> <xref:System.InvalidOperationException> 在该线程结束时会引发，因为后台处理程序线程无法获得对对象的控制 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-174">If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.</span></span>  
  
 <span data-ttu-id="5d3f6-175">在打印队列的图形用户界面 (GUI) 中，该作业的名称为 "打印系统文档"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-175">In the print queue's graphical user interface (GUI), the job has the name "Print System Document".</span></span> <span data-ttu-id="5d3f6-176">若要为作业指定不同的名称，请使用 <xref:System.Printing.PrintQueue.AddJob%28System.String%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-176">To give the job a different name, use the <xref:System.Printing.PrintQueue.AddJob%28System.String%29> overload.</span></span>  
  
 <span data-ttu-id="5d3f6-177">在 Windows Presentation Foundation (WPF) 中打印的其他方式包括 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> 方法，该方法可用于或不打开对话框，以及的多个 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 和 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 方法 <xref:System.Windows.Xps.XpsDocumentWriter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-177">Other ways to print in Windows Presentation Foundation (WPF) include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-178">下面的示例演示如何使用将 <xref:System.Printing.PrintQueue.AddJob> <xref:System.Byte> 数组发送到打印队列。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-178">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob> to send a <xref:System.Byte> array to a print queue.</span></span> <span data-ttu-id="5d3f6-179">此代码仅适用于可检测和打印纯文本的打印机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-179">This code only works with printers that can detect and print plain text.</span></span> <span data-ttu-id="5d3f6-180">其中一些不能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-180">Some of them cannot.</span></span>  
  
 [!code-csharp[WriteToSpoolFile#AddUnnamedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/WriteToSpoolFile/CSharp/Program.cs#addunnamedjob)]
 [!code-vb[WriteToSpoolFile#AddUnnamedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WriteToSpoolFile/visualbasic/program.vb#addunnamedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob jobName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="5d3f6-181">打印作业的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-181">The name of the print job.</span></span></param>
        <summary><span data-ttu-id="5d3f6-182">将一个内容为 <see cref="T:System.Byte" /> 数组的新打印作业插入到队列中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-182">Inserts a new print job, whose content is a <see cref="T:System.Byte" /> array, into the queue.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-183">用于表示打印作业及其状态的 <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-183">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-184">使用此方法将设备特定信息写入到不由 Microsoft Windows 后台处理程序自动包含的假脱机文件中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-184">Use this method to write device specific information, to a spool file, that is not automatically included by the Microsoft Windows spooler.</span></span> <span data-ttu-id="5d3f6-185">当然，您需要知道假脱机文件是 (EMF) 还是 XML 纸张规格 (XPS) 中的增强型图元文件。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-185">Of course, you need to know whether the spool file is Enhanced Metafile (EMF) or XML Paper Specification (XPS).</span></span> <span data-ttu-id="5d3f6-186">如果希望使用 <xref:System.IO.Stream> API，可以使用 <xref:System.Printing.PrintQueueStream> 类，而不是使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-186">If you prefer to work with the <xref:System.IO.Stream> API, you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.</span></span>  
  
 <span data-ttu-id="5d3f6-187"><xref:System.Printing.PrintQueue.AddJob%2A>调用方法后，必须将一个 <xref:System.Byte> 数组写入到 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 由返回的的属性中， <xref:System.Printing.PrintSystemJobInfo> <xref:System.Printing.PrintQueue.AddJob%2A> 否则不会创建打印作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-187">After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by <xref:System.Printing.PrintQueue.AddJob%2A> or no print job is created.</span></span> <span data-ttu-id="5d3f6-188">如果打印机工作不暂停，则会打印此数组。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-188">This array is what prints if the printer is working and is not paused.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5d3f6-189">如果在 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> 调用了的 <xref:System.IO.Stream.Close%2A> 线程结束之前未关闭，则 <xref:System.Printing.PrintQueue.AddJob%2A> <xref:System.InvalidOperationException> 在该线程结束时会引发，因为后台处理程序线程无法获得对对象的控制 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-189">If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.</span></span>  
  
 <span data-ttu-id="5d3f6-190">在 Windows Presentation Foundation (WPF) 中打印的其他方式包括 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> 方法，该方法可用于或不打开对话框，以及的多个 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 和 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 方法 <xref:System.Windows.Xps.XpsDocumentWriter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-190">Other ways to print in Windows Presentation Foundation (WPF) include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-191">下面的示例演示如何使用 <xref:System.Printing.PrintQueue.AddJob%28System.String%29> 将文件读入 <xref:System.Byte> 数组，并将数组发送到打印队列。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-191">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob%28System.String%29> to read a file into a <xref:System.Byte> array and send the array to a print queue.</span></span> <span data-ttu-id="5d3f6-192">此代码假定在 C：驱动器的根目录中有一个名为 test.txt 的文件。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-192">This code assumes that there is a file called test.txt in the root of the C: drive.</span></span> <span data-ttu-id="5d3f6-193">此代码仅适用于可检测和打印纯文本的打印机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-193">This code only works with printers that can detect and print plain text.</span></span> <span data-ttu-id="5d3f6-194">其中一些不能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-194">Some of them cannot.</span></span>  
  
 [!code-csharp[WriteToSpoolFile#AddNamedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/WriteToSpoolFile/CSharp/Program.cs#addnamedjob)]
 [!code-vb[WriteToSpoolFile#AddNamedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WriteToSpoolFile/visualbasic/program.vb#addnamedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String, printTicket As PrintTicket) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * System.Printing.PrintTicket -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="5d3f6-195">正在打印文档的路径和名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-195">The path and name of the document that is being printed.</span></span></param>
        <param name="printTicket"><span data-ttu-id="5d3f6-196">打印作业的设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-196">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="5d3f6-197">将一个新的 XML 纸张规格的打印作业插入到队列中 (XPS) 文档，并为其提供指定的名称和设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-197">Inserts a new print job for an XML Paper Specification (XPS) Document into the queue, and gives it the specified name and settings.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-198">用于表示打印作业及其状态的 <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-198">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-199">有关详细信息，请参阅 <xref:System.Printing.PrintQueue.AddJob%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-199">For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, string documentPath, bool fastCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String, documentPath As String, fastCopy As Boolean) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::String ^ documentPath, bool fastCopy);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * string * bool -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, documentPath, fastCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="fastCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="5d3f6-200">打印作业的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-200">The name of the print job.</span></span></param>
        <param name="documentPath"><span data-ttu-id="5d3f6-201">正在打印文档的路径和名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-201">The path and name of the document that is being printed.</span></span></param>
        <param name="fastCopy"><span data-ttu-id="5d3f6-202"><see langword="true" /> 若要快速地进行后台处理，而不进行页面间进度反馈，并且不验证该文件是否为有效的 XPS;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-202"><see langword="true" /> to spool quickly without page-by-page progress feedback and without validating that the file is valid XPS; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5d3f6-203">将一个用于 XML 纸张规格的新打印作业插入到队列中 (XPS) 文档，为其指定名称，并指定是否应验证它。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-203">Inserts a new print job for an XML Paper Specification (XPS) Document into the queue, gives it the specified name, and specifies whether or not it should be validated.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-204">用于表示打印作业及其状态的 <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-204">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-205">如果 `fastCopy` 为 `true` ，则打印机必须是 [打印概述](/dotnet/framework/wpf/advanced/printing-overview)。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-205">If `fastCopy` is `true`, then the printer must be an [Printing Overview](/dotnet/framework/wpf/advanced/printing-overview).</span></span> <span data-ttu-id="5d3f6-206">如果不是，则该 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> 方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-206">If it is not, the <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> method throws an exception.</span></span>  
  
 <span data-ttu-id="5d3f6-207">如果 `fastCopy` 为 `false` ，则无需使用 XPSDrv 打印机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-207">If `fastCopy` is `false`, then it is not necessary to use an XPSDrv printer.</span></span> <span data-ttu-id="5d3f6-208">要添加到队列中的 XPS 文件会转换为打印机的页面描述语言，如 PCL 或 Postscript。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-208">The XPS file being added to the queue is converted to the printer's page description language, such as PCL or Postscript.</span></span> <span data-ttu-id="5d3f6-209">但是，这种打印 (COM) 调用组件对象模型。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-209">However, this kind of printing makes a call to Component Object Model (COM).</span></span> <span data-ttu-id="5d3f6-210">对 COM 的调用要求调用线程具有单线程单元 (<xref:System.Threading.ApartmentState.STA>) 而不是多线程单元 (<xref:System.Threading.ApartmentState.MTA>) ，这在 Microsoft .NET 2.0 和更高版本中是默认值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-210">The call to COM requires that the calling thread have a single-threaded apartment (<xref:System.Threading.ApartmentState.STA>) instead of multiple-threaded apartment (<xref:System.Threading.ApartmentState.MTA>) which is the default in Microsoft .NET 2.0 and later.</span></span> <span data-ttu-id="5d3f6-211"> (有关线程和单元状态的详细信息，请参阅 [托管和非托管线程处理](https://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5)和 <xref:System.Threading.ApartmentState> 。 ) 有两种方法可实现此目的：</span><span class="sxs-lookup"><span data-stu-id="5d3f6-211">(For more on threading and apartment states, see [Managed and Unmanaged Threading](https://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5), and <xref:System.Threading.ApartmentState>.) There are two ways of doing this:</span></span>  
  
-   <span data-ttu-id="5d3f6-212">最简单的方法是在 <xref:System.STAThreadAttribute> `[System.STAThreadAttribute()]` 应用程序的方法的第一行上方添加 "" () ， `Main` (通常为 " `static void Main(string[] args)` " ) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-212">The simplest way is to add the <xref:System.STAThreadAttribute> (that is, "`[System.STAThreadAttribute()]`") just above the first line of the application's `Main` method (usually "`static void Main(string[] args)`").</span></span>  
  
-   <span data-ttu-id="5d3f6-213">如果需要 `Main` 线程的单元状态为 <xref:System.Threading.ApartmentState.MTA> ，则可以 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> 在单独的线程中（其单元状态设置为 with）承载对的调用 <xref:System.Threading.ApartmentState.STA> <xref:System.Threading.Thread.SetApartmentState%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-213">If you need your `Main` thread's apartment state to be <xref:System.Threading.ApartmentState.MTA>, you can house the call to <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> in a separate thread whose apartment state is set to <xref:System.Threading.ApartmentState.STA> with <xref:System.Threading.Thread.SetApartmentState%2A>.</span></span> <span data-ttu-id="5d3f6-214">下面的示例演示了这第二种方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-214">The example below illustrates this second technique.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d3f6-215">不能将应用 <xref:System.STAThreadAttribute> 到任何方法 `Main` ，但不能将用于 <xref:System.Threading.Thread.SetApartmentState%2A> 该 `Main` 线程。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-215">You cannot apply the <xref:System.STAThreadAttribute> to any method except `Main` and you cannot use <xref:System.Threading.Thread.SetApartmentState%2A> for the `Main` thread.</span></span>  
  
 <span data-ttu-id="5d3f6-216">在 Windows Presentation Foundation (WPF) 中打印的其他方式包括 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> 方法，该方法可用于或不打开对话框，以及的多个 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 和 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 方法 <xref:System.Windows.Xps.XpsDocumentWriter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-216">Other ways to print in Windows Presentation Foundation (WPF) include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-217">下面的示例演示如何使用 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> 批处理打印目录中 (XPS) 文件的所有 XML 纸张规范。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-217">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> to batch print all the XML Paper Specification (XPS) files in a directory.</span></span>  
  
 [!code-csharp[BatchPrintXPSFiles#BatchPrintXPSFiles](~/samples/snippets/csharp/VS_Snippets_Wpf/BatchPrintXPSFiles/CSharp/Program.cs#batchprintxpsfiles)]
 [!code-vb[BatchPrintXPSFiles#BatchPrintXPSFiles](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BatchPrintXPSFiles/visualbasic/program.vb#batchprintxpsfiles)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.ApartmentState" />
        <altmember cref="T:System.STAThreadAttribute" />
        <related type="Article" href="/dotnet/framework/interop/exposing-com-components"><span data-ttu-id="5d3f6-218">向 .NET Framework 公开 COM 组件</span><span class="sxs-lookup"><span data-stu-id="5d3f6-218">Exposing COM Components to the .NET Framework</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/aa348104(v=vs.100)"><span data-ttu-id="5d3f6-219">Isxps.exe 一致性工具</span><span class="sxs-lookup"><span data-stu-id="5d3f6-219">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, string documentPath, bool fastCopy, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String, documentPath As String, fastCopy As Boolean, printTicket As PrintTicket) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::String ^ documentPath, bool fastCopy, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * string * bool * System.Printing.PrintTicket -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, documentPath, fastCopy, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="documentPath" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fastCopy" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="5d3f6-220">正在打印文档的路径和名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-220">The path and name of the document that is being printed.</span></span></param>
        <param name="documentPath"><span data-ttu-id="5d3f6-221">正在打印文档的路径和名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-221">The path and name of the document that is being printed.</span></span></param>
        <param name="fastCopy"><span data-ttu-id="5d3f6-222"><see langword="true" /> 若要快速地进行后台处理，而不进行页面间进度反馈，并且不验证该文件是否为有效的 XPS;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-222"><see langword="true" /> to spool quickly without page-by-page progress feedback and without validating that the file is valid XPS; otherwise, <see langword="false" />.</span></span></param>
        <param name="printTicket"><span data-ttu-id="5d3f6-223">打印作业的设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-223">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="5d3f6-224">将一个用于 XML 纸张规格的新打印作业插入到队列中 (XPS) 文档，为其提供指定的名称和设置，并指定是否应验证它。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-224">Inserts a new print job for an XML Paper Specification (XPS) Document into the queue, gives it the specified name and settings, and specifies whether or not it should be validated.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-225">用于表示打印作业及其状态的 <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-225">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-226">有关详细信息，请参阅 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-226">For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AveragePagesPerMinute">
      <MemberSignature Language="C#" Value="public virtual int AveragePagesPerMinute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AveragePagesPerMinute" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.AveragePagesPerMinute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AveragePagesPerMinute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AveragePagesPerMinute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AveragePagesPerMinute : int" Usage="System.Printing.PrintQueue.AveragePagesPerMinute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-227">获取以每分钟页数为衡量单位的打印机速度。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-227">Gets the speed of the printer measured in pages per minute.</span></span></summary>
        <value><span data-ttu-id="5d3f6-228">打印机每分钟打印的平均页数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-228">The average pages printed per minute of the printer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public int ClientPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ClientPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientPrintSchemaVersion : int" Usage="System.Printing.PrintQueue.ClientPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-229">获取<see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">打印架构</see>的版本。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-229">Gets the version of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see>.</span></span></summary>
        <value><span data-ttu-id="5d3f6-230">正在使用的 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 的版本。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-230">The version of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-231">随 Windows Vista 一起发布的 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 版本为1。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-231">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is 1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=186397"><span data-ttu-id="5d3f6-232">打印架构</span><span class="sxs-lookup"><span data-stu-id="5d3f6-232">Print Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Printing.PrintQueue.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-233">获取或设置有关打印机的注释。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-233">Gets or sets a comment about the printer.</span></span></summary>
        <value><span data-ttu-id="5d3f6-234">有关打印机的注释。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-234">A comment about the printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-235">注释对 Windows 打印机列表中的用户和 Windows 通用打印对话框都可见。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-235">The comment is visible to users in the Windows printer list and on the Windows common print dialog.</span></span> <span data-ttu-id="5d3f6-236">它可以提供未包含在打印机的 "名称"、"型号" 或 "位置" 属性中的信息，这些信息也会显示在同一位置;例如，"为工资单部门保留了 3 pm 和 4 pm 之间。"</span><span class="sxs-lookup"><span data-stu-id="5d3f6-236">It can provide information not contained in the printer's name, model, or location properties, which are also visible in the same places; for example, "Reserved for Payroll Dept. between 3 pm and 4 pm."</span></span> <span data-ttu-id="5d3f6-237"> (<xref:System.Printing.PrintQueue.Description%2A> 属性可存储用户无法查看的信息，除非应用程序使其可见。 ) </span><span class="sxs-lookup"><span data-stu-id="5d3f6-237">(The <xref:System.Printing.PrintQueue.Description%2A> property enables you to store information that users cannot view unless your application makes it visible.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="printQueue.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-238">将 <see cref="T:System.Printing.PrintQueue" /> 对象的当前属性写入打印服务器上的实际打印队列中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-238">Writes the current properties of the <see cref="T:System.Printing.PrintQueue" /> object to the actual print queue on the print server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-239">程序对对象属性所做的更改 <xref:System.Printing.PrintQueue> 实际上在程序执行方法之前不会生效 <xref:System.Printing.PrintQueue.Commit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-239">Changes that your program makes to the properties of a <xref:System.Printing.PrintQueue> object do not actually take effect until the program executes the <xref:System.Printing.PrintQueue.Commit%2A> method.</span></span>  
  
 <span data-ttu-id="5d3f6-240">方法要求 <xref:System.Printing.PrintQueue> 创建具有权限的对象 <xref:System.Printing.PrintSystemDesiredAccess.AdministratePrinter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-240">The method requires that the <xref:System.Printing.PrintQueue> object be created with <xref:System.Printing.PrintSystemDesiredAccess.AdministratePrinter> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-241">下面的示例演示如何在合并两个打印票证时使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-241">The following example shows how to use this method while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d3f6-242">某些属性未能提交。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-242">Some of the properties could not be committed.</span></span></exception>
        <exception cref="T:System.Printing.PrintCommitAttributesException"><span data-ttu-id="5d3f6-243">某些属性未能提交。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-243">Some of the properties could not be committed.</span></span>  
  
<span data-ttu-id="5d3f6-244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="5d3f6-244">-or-</span></span> 
<span data-ttu-id="5d3f6-245">没有足够的权限创建 <see cref="T:System.Printing.PrintQueue" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-245">The <see cref="T:System.Printing.PrintQueue" /> object was not created with sufficient rights.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Refresh" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateXpsDocumentWriter">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d3f6-246">创建一个 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-246">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d3f6-247">Isxps.exe 一致性工具</span><span class="sxs-lookup"><span data-stu-id="5d3f6-247">isXPS Conformance Tool</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef documentImageableArea As PrintDocumentImageableArea) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintDocumentImageableArea ^ % documentImageableArea);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : PrintDocumentImageableArea -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter documentImageableArea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="documentImageableArea"><span data-ttu-id="5d3f6-248">对包含设备可以打印的页面区域维度的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-248">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="5d3f6-249">由于该参数的数据类型无公共构造函数，因此它以未初始化状态进行传递。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-249">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="5d3f6-250">创建 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 对象，打开 Windows 通用打印对话框并返回 <see langword="ref" />（Visual Basic 中为 <see langword="ByRef" />）参数，该参数表示有关可绘制区域和介质维度的信息。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-250">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-251">将 XPS 数据写入流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-251">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="5d3f6-252">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-252">This can be <see langword="null" />.</span></span> <span data-ttu-id="5d3f6-253">（参数 <paramref name="documentImageableArea" /> 是一个 <see langword="ref" /> [在 Visual Basic 中为 <see langword="ByRef" />] 参数，已经过该方法初始化，因此表示又一个返回项。）</span><span class="sxs-lookup"><span data-stu-id="5d3f6-253">(The parameter <paramref name="documentImageableArea" /> is a <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-254">许多打印机需要在每个页面的边缘周围有一1/4 的 unprinted 空间来抓住纸张，并将其移动到打印机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-254">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="5d3f6-255">否则，碳粉会忧纸张流量机制。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-255">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="5d3f6-256">可以打印的区域是 "可成像区域"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-256">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="5d3f6-257">该类型 <xref:System.Printing.PrintDocumentImageableArea> 没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-257">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="5d3f6-258">因此，必须声明变量并将其分配给，然后将其 `documentImageableArea` `null` 传递给方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-258">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="5d3f6-259">此方法显示 <xref:System.Windows.Controls.PrintDialog> 需要用户输入的。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-259">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d3f6-260">用户选择打印机、纸张大小和方向并关闭对话框后， `documentImageableArea` 指向实际对象并初始化其属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-260">After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object and its properties are initialized.</span></span>  
  
 <span data-ttu-id="5d3f6-261">如果用户取消或关闭对话框，则返回值为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-261">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d3f6-262">因此，应用程序必须检查返回值 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-262">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d3f6-263">Isxps.exe 一致性工具</span><span class="sxs-lookup"><span data-stu-id="5d3f6-263">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Printing.PrintQueue printQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintQueue printQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (printQueue As PrintQueue) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintQueue ^ printQueue);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : System.Printing.PrintQueue -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter printQueue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="5d3f6-264">打印 XPS 文档的打印队列。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-264">A print queue to print the XPS document.</span></span></param>
        <summary><span data-ttu-id="5d3f6-265">创建一个 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 对象并将其与指定的打印队列关联。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-265">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object and associates it with the specified print queue.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-266">写入 XPS 流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-266">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d3f6-267">下面的示例演示如何使用此方法创建 <xref:System.Windows.Xps.XpsDocumentWriter> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-267">The following example shows how to use this method to create an <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
 [!code-csharp[XpsPrint#PrintQueueSnip](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#printqueuesnip)]
 [!code-vb[XpsPrint#PrintQueueSnip](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#printqueuesnip)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d3f6-268">Isxps.exe 一致性工具</span><span class="sxs-lookup"><span data-stu-id="5d3f6-268">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref double width, ref double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(float64&amp; width, float64&amp; height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef width As Double, ByRef height As Double) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(double % width, double % height);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : double * double -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" RefType="ref" />
        <Parameter Name="height" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="5d3f6-269">XPS 文档的宽度。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-269">The width of the XPS document.</span></span></param>
        <param name="height"><span data-ttu-id="5d3f6-270">XPS 文档的高度。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-270">The height of the XPS document.</span></span></param>
        <summary><span data-ttu-id="5d3f6-271">创建具有指定维度的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-271">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object with the specified dimensions.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-272">写入 XPS 流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-272">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream.</span></span> <span data-ttu-id="5d3f6-273">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-273">This can be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-274">此方法显示 <xref:System.Windows.Controls.PrintDialog> 需要用户输入的。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-274">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d3f6-275">如果用户取消或关闭对话框，则返回值为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-275">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d3f6-276">因此，应用程序必须检查返回值 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-276">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d3f6-277">Isxps.exe 一致性工具</span><span class="sxs-lookup"><span data-stu-id="5d3f6-277">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(string jobDescription, class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (jobDescription As String, ByRef documentImageableArea As PrintDocumentImageableArea) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::String ^ jobDescription, System::Printing::PrintDocumentImageableArea ^ % documentImageableArea);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : string * PrintDocumentImageableArea -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (jobDescription, documentImageableArea)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobDescription" Type="System.String" />
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="jobDescription"><span data-ttu-id="5d3f6-278">打印作业的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-278">A name for the print job.</span></span> <span data-ttu-id="5d3f6-279">该名称出现在 Windows 打印用户界面中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-279">It appears in the Windows printing user interface.</span></span></param>
        <param name="documentImageableArea"><span data-ttu-id="5d3f6-280">对包含设备可以打印的页面区域维度的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-280">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="5d3f6-281">由于该参数的数据类型无公共构造函数，因此它以未初始化状态进行传递。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-281">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="5d3f6-282">创建 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 对象，打开 Windows 通用打印对话框（同时为其提供一个作业说明）并返回 <see langword="ref" />（Visual Basic 中为 <see langword="ByRef" />）参数，该参数表示有关可绘制区域和介质维度的信息。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-282">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog (and provides it a job description) and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-283">将 XPS 数据写入流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-283">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="5d3f6-284">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-284">This can be <see langword="null" />.</span></span> <span data-ttu-id="5d3f6-285">（参数 <paramref name="documentImageableArea" /> 是一个 <see langword="ref" /> [在 Visual Basic 中为 <see langword="ByRef" />] 参数，已经过该方法初始化，因此表示又一个返回项。）</span><span class="sxs-lookup"><span data-stu-id="5d3f6-285">(The parameter <paramref name="documentImageableArea" /> is a <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-286">许多打印机需要在每个页面的边缘周围有一1/4 的 unprinted 空间来抓住纸张，并将其移动到打印机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-286">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="5d3f6-287">否则，碳粉会忧纸张流量机制。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-287">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="5d3f6-288">可以打印的区域是 "可成像区域"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-288">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="5d3f6-289">该类型 <xref:System.Printing.PrintDocumentImageableArea> 没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-289">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="5d3f6-290">因此，必须声明变量并将其分配给，然后将其 `documentImageableArea` `null` 传递给方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-290">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="5d3f6-291">此方法显示 <xref:System.Windows.Controls.PrintDialog> 需要用户输入的。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-291">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d3f6-292">用户选择打印机、纸张大小和方向并关闭对话框后， `documentImageableArea` 指向实际对象并初始化其属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-292">After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object, and its properties are initialized.</span></span>  
  
 <span data-ttu-id="5d3f6-293">如果用户取消或关闭对话框，则返回值为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-293">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d3f6-294">因此，应用程序必须检查返回值 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-294">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d3f6-295">Isxps.exe 一致性工具</span><span class="sxs-lookup"><span data-stu-id="5d3f6-295">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea, valuetype System.Windows.Controls.PageRangeSelection&amp; pageRangeSelection, valuetype System.Windows.Controls.PageRange&amp; pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef documentImageableArea As PrintDocumentImageableArea, ByRef pageRangeSelection As PageRangeSelection, ByRef pageRange As PageRange) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintDocumentImageableArea ^ % documentImageableArea, System::Windows::Controls::PageRangeSelection % pageRangeSelection, System::Windows::Controls::PageRange % pageRange);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : PrintDocumentImageableArea * PageRangeSelection * PageRange -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (documentImageableArea, pageRangeSelection, pageRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
        <Parameter Name="pageRangeSelection" Type="System.Windows.Controls.PageRangeSelection" RefType="ref" />
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="documentImageableArea"><span data-ttu-id="5d3f6-296">对包含设备可以打印的页面区域维度的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-296">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="5d3f6-297">由于该参数的数据类型无公共构造函数，因此它以未初始化状态进行传递。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-297">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <param name="pageRangeSelection"><span data-ttu-id="5d3f6-298">指定是打印所有页面，还是只打印用户指定页面范围的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-298">A value that specifies whether to print all pages or only a range that is specified by the user.</span></span></param>
        <param name="pageRange"><span data-ttu-id="5d3f6-299">打印的页面范围。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-299">The range of pages that is printed.</span></span></param>
        <summary><span data-ttu-id="5d3f6-300">创建 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 对象，打开 Windows 通用打印对话框，为对话框提供页面范围和打印作业说明，并返回 <see langword="ref" />（Visual Basic 中为 <see langword="ByRef" />）参数，该参数表示有关可绘制区域和介质维度的信息。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-300">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range and a description of the print job, and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-301">将 XPS 数据写入流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-301">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="5d3f6-302">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-302">This can be <see langword="null" />.</span></span> <span data-ttu-id="5d3f6-303">参数 <paramref name="documentImageableArea" />、<paramref name="pageRangeSelection" /> 和 <paramref name="pageRange" /> 全都为 <see langword="ref" /> [在 Visual Basic 中为 <see langword="ByRef" />] 参数，这些参数由用户初始化并在对话框关闭时返回，因此，每个参数表示一个另外的返回项。）</span><span class="sxs-lookup"><span data-stu-id="5d3f6-303">(The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-304">许多打印机需要在每个页面的边缘周围有一1/4 的 unprinted 空间来抓住纸张，并将其移动到打印机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-304">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="5d3f6-305">否则，碳粉会忧纸张流量机制。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-305">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="5d3f6-306">可以打印的区域是 "可成像区域"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-306">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="5d3f6-307">该类型 <xref:System.Printing.PrintDocumentImageableArea> 没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-307">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="5d3f6-308">因此，必须声明变量并将其分配给，然后将其 `documentImageableArea` `null` 传递给方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-308">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="5d3f6-309">此方法显示 <xref:System.Windows.Controls.PrintDialog> 需要用户输入的。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-309">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d3f6-310">用户在对话框中配置其打印作业 (包括选择打印机、纸张大小、方向和页面范围) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-310">The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range).</span></span> <span data-ttu-id="5d3f6-311">当对话框关闭 `pageRangeSelection` 并 `pageRange` 具有值时，将 `documentImageableArea` 指向其属性已初始化的实际对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-311">When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.</span></span>  
  
 <span data-ttu-id="5d3f6-312">如果用户取消或关闭对话框，则返回值为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-312">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d3f6-313">因此，应用程序必须检查返回值 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-313">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d3f6-314">Isxps.exe 一致性工具</span><span class="sxs-lookup"><span data-stu-id="5d3f6-314">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(string jobDescription, class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea, valuetype System.Windows.Controls.PageRangeSelection&amp; pageRangeSelection, valuetype System.Windows.Controls.PageRange&amp; pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (jobDescription As String, ByRef documentImageableArea As PrintDocumentImageableArea, ByRef pageRangeSelection As PageRangeSelection, ByRef pageRange As PageRange) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::String ^ jobDescription, System::Printing::PrintDocumentImageableArea ^ % documentImageableArea, System::Windows::Controls::PageRangeSelection % pageRangeSelection, System::Windows::Controls::PageRange % pageRange);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : string * PrintDocumentImageableArea * PageRangeSelection * PageRange -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (jobDescription, documentImageableArea, pageRangeSelection, pageRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobDescription" Type="System.String" />
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
        <Parameter Name="pageRangeSelection" Type="System.Windows.Controls.PageRangeSelection" RefType="ref" />
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="jobDescription"><span data-ttu-id="5d3f6-315">打印作业的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-315">A name for the print job.</span></span> <span data-ttu-id="5d3f6-316">该名称出现在 Windows 打印用户界面中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-316">It appears in the Windows printing user interface.</span></span></param>
        <param name="documentImageableArea"><span data-ttu-id="5d3f6-317">对包含设备可以打印的页面区域维度的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-317">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="5d3f6-318">由于该参数的数据类型无公共构造函数，因此它以未初始化状态进行传递。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-318">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <param name="pageRangeSelection"><span data-ttu-id="5d3f6-319">指定是打印所有页面，还是只打印用户指定页面范围的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-319">A value that specifies whether to print all pages or only a range that is specified by the user.</span></span></param>
        <param name="pageRange"><span data-ttu-id="5d3f6-320">打印的页面范围。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-320">The range of pages that is printed.</span></span></param>
        <summary><span data-ttu-id="5d3f6-321">创建 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 对象，打开 Windows 通用打印对话框，为对话框提供一个页面范围并返回 <see langword="ref" />（Visual Basic 中为 <see langword="ByRef" />）参数，该参数表示有关可绘制区域和介质维度的信息。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-321">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range, and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-322">将 XPS 数据写入流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-322">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="5d3f6-323">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-323">This can be <see langword="null" />.</span></span> <span data-ttu-id="5d3f6-324">参数 <paramref name="documentImageableArea" />、<paramref name="pageRangeSelection" /> 和 <paramref name="pageRange" /> 全都为 <see langword="ref" /> [在 Visual Basic 中为 <see langword="ByRef" />] 参数，这些参数由用户初始化并在对话框关闭时返回，因此，每个参数表示一个另外的返回项。）</span><span class="sxs-lookup"><span data-stu-id="5d3f6-324">(The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-325">许多打印机需要在每个页面的边缘周围有一1/4 的 unprinted 空间来抓住纸张，并将其移动到打印机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-325">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="5d3f6-326">否则，碳粉会忧纸张流量机制。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-326">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="5d3f6-327">可以打印的区域是 "可成像区域"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-327">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="5d3f6-328">该类型 <xref:System.Printing.PrintDocumentImageableArea> 没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-328">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="5d3f6-329">因此，必须声明变量并将其分配给，然后将其 `documentImageableArea` `null` 传递给方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-329">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="5d3f6-330">此方法显示 <xref:System.Windows.Controls.PrintDialog> 需要用户输入的。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-330">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="5d3f6-331">用户在对话框中配置其打印作业 (包括选择打印机、纸张大小、方向和页面范围) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-331">The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range).</span></span> <span data-ttu-id="5d3f6-332">当对话框关闭 `pageRangeSelection` 并 `pageRange` 具有值时，将 `documentImageableArea` 指向其属性已初始化的实际对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-332">When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.</span></span>  
  
 <span data-ttu-id="5d3f6-333">如果用户取消或关闭对话框，则返回值为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-333">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="5d3f6-334">因此，应用程序必须检查返回值 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-334">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="5d3f6-335">Isxps.exe 一致性工具</span><span class="sxs-lookup"><span data-stu-id="5d3f6-335">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentJobSettings">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobSettings CurrentJobSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintJobSettings CurrentJobSettings" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.CurrentJobSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentJobSettings As PrintJobSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobSettings ^ CurrentJobSettings { System::Printing::PrintJobSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentJobSettings : System.Printing.PrintJobSettings" Usage="System.Printing.PrintQueue.CurrentJobSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-336">获取包含当前打印作业的配置设置的对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-336">Gets an object that contains the configuration settings for the current print job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-337">用于保存当前打印作业的设置的 <see cref="T:System.Printing.PrintJobSettings" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-337">A <see cref="T:System.Printing.PrintJobSettings" /> value that holds the settings of the currently printing job.</span></span> <span data-ttu-id="5d3f6-338">这些设置包括作业描述和对作业的 <see cref="T:System.Printing.PrintTicket" /> 的引用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-338">These settings include a description of the job and a reference to the job's <see cref="T:System.Printing.PrintTicket" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Printing.PrintTicket" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPrintTicket">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintTicket DefaultPrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket DefaultPrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.DefaultPrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultPrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintTicket ^ DefaultPrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Printing.PrintQueue.DefaultPrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-339">获取或设置与此 <see cref="T:System.Printing.PrintQueue" /> 关联的默认打印机选项。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-339">Gets or sets the default printer options associated with this <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <value><span data-ttu-id="5d3f6-340">打印队列的默认 <see cref="T:System.Printing.PrintTicket" />；或者如果打印队列中发生错误，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-340">The default <see cref="T:System.Printing.PrintTicket" /> for the print queue; or <see langword="null" /> if an error has occurred in the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-341">默认值 <xref:System.Printing.PrintTicket> 指定打印作业选项，如 <xref:System.Printing.PrintTicket.CopyCount%2A> 、、、 <xref:System.Printing.PrintTicket.PageOrientation%2A> <xref:System.Printing.PrintTicket.Duplexing%2A> <xref:System.Printing.PrintTicket.Stapling%2A> 等。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-341">The default <xref:System.Printing.PrintTicket> specifies print job options such as <xref:System.Printing.PrintTicket.CopyCount%2A>, <xref:System.Printing.PrintTicket.PageOrientation%2A>, <xref:System.Printing.PrintTicket.Duplexing%2A>, <xref:System.Printing.PrintTicket.Stapling%2A>, and others.</span></span>  
  
 <span data-ttu-id="5d3f6-342">每个 <xref:System.Printing.PrintQueue> 维护自己的 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-342">Each <xref:System.Printing.PrintQueue> maintains its own <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="5d3f6-343">在正常操作中， <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 属性返回 <xref:System.Printing.PrintTicket> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-343">In normal operation the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> property returns a <xref:System.Printing.PrintTicket>.</span></span>  <span data-ttu-id="5d3f6-344">如果 <xref:System.Printing.PrintQueue> 检测到无效状态，则 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-344">If the <xref:System.Printing.PrintQueue> detects an invalid state, <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> returns `null`.</span></span>  <span data-ttu-id="5d3f6-345">如果 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 返回 `null` ，应用程序应显示一个信息性用户对话框，该对话框显示了此打印队列中的错误，并且应重新启动打印作业并将输出定向到其他打印队列。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-345">If <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> returns `null`, the application should display an informational user dialog that an error has occurred on this print queue and that the print job should be restarted with the output directed to a different print queue.</span></span>  
  
 <span data-ttu-id="5d3f6-346">获取或设置 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 属性不会验证 <xref:System.Printing.PrintTicket> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-346">Getting or setting the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> property does not validate the <xref:System.Printing.PrintTicket>.</span></span>  <span data-ttu-id="5d3f6-347"><xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法可用于验证 <xref:System.Printing.PrintTicket> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-347">The <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> method can be used to validate a <xref:System.Printing.PrintTicket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-348">下面的示例演示如何在测试打印机的功能和配置打印作业以利用它们时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-348">The following example shows how to use this property while testing a printer's capabilities and configuring a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintQueue.UserPrintTicket" />
        <altmember cref="P:System.Printing.PrintQueue.DefaultPriority" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPriority">
      <MemberSignature Language="C#" Value="public virtual int DefaultPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultPriority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.DefaultPriority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPriority : int with get, set" Usage="System.Printing.PrintQueue.DefaultPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-349">获取或设置赋予添加到队列中的每个新打印作业的默认优先级。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-349">Gets or sets the default priority that is given to each new print job added to the queue.</span></span></summary>
        <value><span data-ttu-id="5d3f6-350">添加到队列中的打印作业的默认优先级。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-350">The default priority for print jobs added to the queue.</span></span> <span data-ttu-id="5d3f6-351">可取值的范围是 1-99。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-351">Possible values range from 1 through 99.</span></span> <span data-ttu-id="5d3f6-352">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-352">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-353">用户进入打印队列后可以更改打印作业的优先级。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-353">A print job's priority can be changed by users after it enters the print queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Printing.PrintQueue.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-354">获取打印队列说明。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-354">Gets a description of the print queue.</span></span></summary>
        <value><span data-ttu-id="5d3f6-355">打印队列说明。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-355">A description of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-356">创建队列时，说明默认为由三个部分组成的字符串，其中包含以逗号分隔的队列名称、模型和位置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-356">When the queue is created, the description defaults to a three part string that consists of the queue name, model, and location separated by commas.</span></span> <span data-ttu-id="5d3f6-357">将 <xref:System.Printing.PrintQueue.Description%2A> 属性与 <xref:System.Printing.PrintQueue.Comment%2A> 通用打印对话框和 "打印机和传真" 列表中的用户可见的属性进行比较。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-357">Contrast the <xref:System.Printing.PrintQueue.Description%2A> property with the <xref:System.Printing.PrintQueue.Comment%2A> property which is visible to users in the common print dialog and the Printers and Faxes list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Printing.PrintQueue.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-358">获取队列的完整名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-358">Gets the complete name of the queue.</span></span></summary>
        <value><span data-ttu-id="5d3f6-359">打印队列的完整名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-359">The complete name of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-360">对于本地打印服务器上的打印队列，此属性的值与相同 <xref:System.Printing.PrintQueue.Name%2A> ，否则它包含完整的 UNC (通用命名约定) 名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-360">For print queues on the local print server, this property's value is identical to <xref:System.Printing.PrintQueue.Name%2A>, otherwise it includes the full UNC (Universal Naming Convention) name.</span></span>  
  
 <span data-ttu-id="5d3f6-361"><xref:System.Printing.PrintQueue>对象还具有可写的 <xref:System.Printing.PrintQueue.Name%2A> 和 <xref:System.Printing.PrintQueue.ShareName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-361">The <xref:System.Printing.PrintQueue> object also has writeable <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.ShareName%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-362">下面的示例演示如何在合并两个打印票证时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-362">The following example shows how to use this property while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo GetJob (int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo GetJob(int32 jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetJob(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetJob (jobId As Integer) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ GetJob(int jobId);" />
      <MemberSignature Language="F#" Value="member this.GetJob : int -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.GetJob jobId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="jobId"><span data-ttu-id="5d3f6-363">队列中的作业数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-363">The number of the job in the queue.</span></span></param>
        <summary><span data-ttu-id="5d3f6-364">获取具有指定 ID 号的打印作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-364">Gets the print job with the specified ID number.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-365">指定作业的属性及其状态的 <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-365">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that specifies the properties of the job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-366">还可以将方法用于 <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> 相同的目的。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-366">You can also use the <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-367">下面的示例演示如何在诊断打印作业的问题时使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-367">The following example shows how to use this method when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrintCapabilities">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d3f6-368">获取一个 <see cref="T:System.Printing.PrintCapabilities" /> 对象，该对象标识打印机或设备的功能，如是否可彩色打印或双面打印。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-368">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer or device, such as whether it prints in color or is capable of two-sided printing.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrintCapabilities">
      <MemberSignature Language="C#" Value="public System.Printing.PrintCapabilities GetPrintCapabilities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintCapabilities GetPrintCapabilities() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilities () As PrintCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintCapabilities ^ GetPrintCapabilities();" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilities : unit -&gt; System.Printing.PrintCapabilities" Usage="printQueue.GetPrintCapabilities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintCapabilities</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-369">获取用于标识打印机功能的 <see cref="T:System.Printing.PrintCapabilities" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-369">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-370">用于指定打印机可执行和不可执行的操作（如双面复印或自动装订）的 <see cref="T:System.Printing.PrintCapabilities" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-370">A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d3f6-371">下面的示例演示如何在合并两个打印票证时使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-371">The following example shows how to use this method while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-372">未能检索到 <see cref="T:System.Printing.PrintCapabilities" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-372">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrintCapabilities">
      <MemberSignature Language="C#" Value="public System.Printing.PrintCapabilities GetPrintCapabilities (System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintCapabilities GetPrintCapabilities(class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilities (printTicket As PrintTicket) As PrintCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintCapabilities ^ GetPrintCapabilities(System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilities : System.Printing.PrintTicket -&gt; System.Printing.PrintCapabilities" Usage="printQueue.GetPrintCapabilities printTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintCapabilities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printTicket"><span data-ttu-id="5d3f6-373">提供打印功能报告根据的打印票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-373">A print ticket that provides the basis on which the print capabilities are reported.</span></span></param>
        <summary><span data-ttu-id="5d3f6-374">获取用于标识打印机功能的 <see cref="T:System.Printing.PrintCapabilities" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-374">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-375">用于指定打印机可执行和不可执行的操作（如双面复印或自动装订）的 <see cref="T:System.Printing.PrintCapabilities" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-375">A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-376"><xref:System.Printing.PrintTicket>参数用作构造对象的基础 <xref:System.Printing.PrintCapabilities> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-376">The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the <xref:System.Printing.PrintCapabilities> object.</span></span> <span data-ttu-id="5d3f6-377">例如，假设打印机仅支持输入纸盒1中的媒体类型 A 和 B，并且仅支持输入纸盒2中的媒体类型 C。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-377">For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2.</span></span> <span data-ttu-id="5d3f6-378">如果 `printTicket` 参数指定了输入纸盒1，则 <xref:System.Printing.PrintCapabilities> 返回的对象将包含所有三种介质类型，但会将类型 C 报告为 "约束"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-378">If the `printTicket` parameter specified input bin 1, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report type C as "constrained."</span></span> <span data-ttu-id="5d3f6-379">如果 `printTicket` 参数指定了输入纸盒2，则 <xref:System.Printing.PrintCapabilities> 返回的对象将包含所有三种介质类型，但会将类型 A 和 B 报告为 "约束"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-379">If the `printTicket` parameter specified input bin 2, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report types A and B as "constrained."</span></span> <span data-ttu-id="5d3f6-380">有关约束的详细信息，请参阅 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-380">See the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.</span></span>  
  
 <span data-ttu-id="5d3f6-381">如果 `printTicket` 为 `null` ，则 <xref:System.Printing.PrintQueue.UserPrintTicket%2A> 使用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-381">If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-382">未能检索到 <see cref="T:System.Printing.PrintCapabilities" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-382">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5d3f6-383"><paramref name="printTicket" /> 不符合标准格式。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-383"><paramref name="printTicket" /> is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrintCapabilitiesAsXml">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d3f6-384">获取一个 <see cref="T:System.IO.MemoryStream" /> 对象，该对象将打印机的功能指定为遵从[打印架构](https://go.microsoft.com/fwlink/?LinkId=186397)的 XML 流。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-384">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-385">所使用的 XML 架构称为 "PrintCapabilities"，它是 [Print schema](https://go.microsoft.com/fwlink/?LinkId=186397) 系统的一部分。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-385">The XML schema used is called "PrintCapabilities," a part of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrintCapabilitiesAsXml">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetPrintCapabilitiesAsXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetPrintCapabilitiesAsXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilitiesAsXml () As MemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryStream ^ GetPrintCapabilitiesAsXml();" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilitiesAsXml : unit -&gt; System.IO.MemoryStream" Usage="printQueue.GetPrintCapabilitiesAsXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-386">获取一个 <see cref="T:System.IO.MemoryStream" /> 对象，该对象将打印机的功能指定为遵从[打印架构](https://go.microsoft.com/fwlink/?LinkId=186397)的 XML 流。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-386">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <returns><span data-ttu-id="5d3f6-387">使用属于<see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">打印架构</see>系统一部分的 XML 架构“PrintCapabilities”，指定打印机功能的 <see cref="T:System.IO.MemoryStream" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-387">A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see> system.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-388">未能检索到打印功能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-388">The print capabilities could not be retrieved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrintCapabilitiesAsXml">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetPrintCapabilitiesAsXml (System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetPrintCapabilitiesAsXml(class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilitiesAsXml (printTicket As PrintTicket) As MemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryStream ^ GetPrintCapabilitiesAsXml(System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilitiesAsXml : System.Printing.PrintTicket -&gt; System.IO.MemoryStream" Usage="printQueue.GetPrintCapabilitiesAsXml printTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printTicket"><span data-ttu-id="5d3f6-389">提供打印功能报告根据的打印票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-389">A print ticket that provides the basis on which the print capabilities are reported.</span></span></param>
        <summary><span data-ttu-id="5d3f6-390">获取一个 <see cref="T:System.IO.MemoryStream" /> 对象，该对象指定 XML 格式的打印机功能，该格式符合[打印架构](https://go.microsoft.com/fwlink/?LinkId=186397)。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-390">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities in an XML format that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <returns><span data-ttu-id="5d3f6-391">使用属于<see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">打印架构</see>系统一部分的 XML 架构“PrintCapabilities”，指定打印机功能的 <see cref="T:System.IO.MemoryStream" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-391">A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see> system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-392"><xref:System.Printing.PrintTicket>参数用作构造打印功能 XML 的基础。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-392">The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the print capabilities XML.</span></span> <span data-ttu-id="5d3f6-393">例如，假设打印机仅支持输入纸盒1中的媒体类型 A 和 B，并且仅支持输入纸盒2中的媒体类型 C。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-393">For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2.</span></span> <span data-ttu-id="5d3f6-394">如果 `printTicket` 参数指定了输入纸盒1，则返回的打印功能 XML 将包含全部三种媒体类型，但会将类型 C 报告为 "约束"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-394">If the `printTicket` parameter specified input bin 1, then the print capabilities XML that is returned would include all three media types, but it would report type C as "constrained."</span></span> <span data-ttu-id="5d3f6-395">如果 `printTicket` 参数指定了 "输入纸盒 2"，则返回的打印功能 XML 将包括所有这三种媒体类型，但会将类型 A 和 B 报告为 "约束"。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-395">If the `printTicket` parameter specified input bin 2, then the print capabilities XML that is returned would include all three media types, but it would report types A and B as "constrained."</span></span> <span data-ttu-id="5d3f6-396">有关约束的详细信息，请参阅 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-396">See the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.</span></span>  
  
 <span data-ttu-id="5d3f6-397">如果 `printTicket` 为 `null` ，则 <xref:System.Printing.PrintQueue.UserPrintTicket%2A> 使用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-397">If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-398">未能检索到打印功能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-398">The print capabilities could not be retrieved.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5d3f6-399"><paramref name="printTicket" /> 不符合标准格式。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-399"><paramref name="printTicket" /> is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrintJobInfoCollection">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintJobInfoCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintJobInfoCollection () As PrintJobInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintJobInfoCollection ^ GetPrintJobInfoCollection();" />
      <MemberSignature Language="F#" Value="member this.GetPrintJobInfoCollection : unit -&gt; System.Printing.PrintJobInfoCollection" Usage="printQueue.GetPrintJobInfoCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-400">创建包含队列中每个作业的 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-400">Creates a collection that contains a <see cref="T:System.Printing.PrintSystemJobInfo" /> object for each job in the queue.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-401"><see cref="T:System.Printing.PrintSystemJobInfo" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-401">A collection of <see cref="T:System.Printing.PrintSystemJobInfo" /> objects.</span></span> <span data-ttu-id="5d3f6-402">队列中的每个作业都有这样一个集合。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-402">There is one for each job in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d3f6-403">下面的示例演示如何在对队列中的每个作业执行相同的操作时使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-403">The following example shows how to use this method when performing the same action on every job in a queue.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPaperProblem">
      <MemberSignature Language="C#" Value="public bool HasPaperProblem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPaperProblem" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HasPaperProblem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPaperProblem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPaperProblem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPaperProblem : bool" Usage="System.Printing.PrintQueue.HasPaperProblem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-404">获取用于指示打印机是否遇到未指定纸张的问题的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-404">Gets a value that indicates if the printer is having an unspecified paper problem.</span></span></summary>
        <value><span data-ttu-id="5d3f6-405">如果存在未指定纸张的问题，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-405"><see langword="true" /> if there is an unspecified paper problem; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-406">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-406">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 <span data-ttu-id="5d3f6-407"><xref:System.Printing.PrintQueue>对象还具有 <xref:System.Printing.PrintQueue.IsPaperJammed%2A> 和 <xref:System.Printing.PrintQueue.IsOutOfPaper%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-407">The <xref:System.Printing.PrintQueue> object also has <xref:System.Printing.PrintQueue.IsPaperJammed%2A> and <xref:System.Printing.PrintQueue.IsOutOfPaper%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-408">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-408">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasToner">
      <MemberSignature Language="C#" Value="public bool HasToner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasToner" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HasToner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasToner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasToner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasToner : bool" Usage="System.Printing.PrintQueue.HasToner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-409">获取指示打印机有无墨粉的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-409">Gets a value that indicates if the printer has toner.</span></span></summary>
        <value><span data-ttu-id="5d3f6-410">如果当前打印机有墨粉，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-410"><see langword="true" /> if the current printer has toner; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-411">某些打印机制造商可能会使用此信号来指示碳粉不足。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-411">Some printer manufacturers may use this signal to indicate that toner is not low.</span></span> <span data-ttu-id="5d3f6-412">其他人可以使用它来指示碳粉盒是否存在并正确插入，同时使用 <xref:System.Printing.PrintQueue.IsTonerLow%2A> 指示碳粉不足。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-412">Others may use it to indicate that the toner cartridge is present and properly inserted while using <xref:System.Printing.PrintQueue.IsTonerLow%2A> to indicate that toner is low.</span></span>  
  
 <span data-ttu-id="5d3f6-413">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-413">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-414">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-414">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingPrintServer">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintServer HostingPrintServer { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintServer HostingPrintServer" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HostingPrintServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HostingPrintServer As PrintServer" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Printing::PrintServer ^ HostingPrintServer {  public:&#xA;System::Printing::PrintServer ^ get(); protected:&#xA; void set(System::Printing::PrintServer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintServer : System.Printing.PrintServer with get, set" Usage="System.Printing.PrintQueue.HostingPrintServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-415">获取或设置（受保护）控制打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-415">Gets or sets (protected) the print server that controls the print queue.</span></span></summary>
        <value><span data-ttu-id="5d3f6-416">承载打印队列的 <see cref="T:System.Printing.PrintServer" /> 的名称和其他属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-416">The name and other properties of the <see cref="T:System.Printing.PrintServer" /> that is hosting the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-417">此属性只能由派生自的类设置， <xref:System.Printing.PrintQueue> 因为该属性的 setter 为 `protected` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-417">This property can be set only by a class that derives from <xref:System.Printing.PrintQueue> because the property's setter is `protected`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPartialTrust">
      <MemberSignature Language="C#" Value="public bool InPartialTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPartialTrust" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.InPartialTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property InPartialTrust As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InPartialTrust { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InPartialTrust : bool with get, set" Usage="System.Printing.PrintQueue.InPartialTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-418">获取或设置一个值，该值指示队列是否在部分受信任模式（一种较高级别的信任）下运行。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-418">Gets or sets a value that indicates whether the queue is operating in a partially trusted mode, a higher level of trust.</span></span></summary>
        <value><span data-ttu-id="5d3f6-419">如果队列在部分受信任模式下运行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-419"><see langword="true" /> if the queue is operating in a partially trusted mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-420">当 <xref:System.Printing.PrintQueue.InPartialTrust%2A> 属性为时 `true` ， <xref:System.Printing.PrintQueue> 如果用户对打印机具有完全打印权限，则程序将无法创建表示此打印机的对象。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-420">When the <xref:System.Printing.PrintQueue.InPartialTrust%2A> property is `true`, your program cannot create a <xref:System.Printing.PrintQueue> object that represents this printer unless the user has full printing permissions for the printer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override sealed void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : bool -&gt; unit" Usage="printQueue.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="5d3f6-421">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-421"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5d3f6-422">释放由 <see cref="T:System.Printing.PrintQueue" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-422">Releases the unmanaged resources used by the <see cref="T:System.Printing.PrintQueue" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBidiEnabled">
      <MemberSignature Language="C#" Value="public bool IsBidiEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBidiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsBidiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBidiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBidiEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBidiEnabled : bool" Usage="System.Printing.PrintQueue.IsBidiEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-423">获取指示是否启用与打印机进行双向通信的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-423">Gets a value that indicates whether bidirectional communication with the printer is enabled.</span></span></summary>
        <value><span data-ttu-id="5d3f6-424">如果启用与打印机的双向通信，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-424"><see langword="true" /> if bidirectional communication with the printer is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Printing.PrintQueue.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-425">获取指示打印设备是否忙的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-425">Gets a value that indicates whether the printing device is busy.</span></span></summary>
        <value><span data-ttu-id="5d3f6-426">如果设备忙，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-426"><see langword="true" /> if the device is busy; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-427">忙并不一定意味着正在处理打印作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-427">Busy does not necessarily mean that it is processing a print job.</span></span> <span data-ttu-id="5d3f6-428">如果设备是打印机/传真/复印机的组合，则可能是传真或复制。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-428">If the device is a combination printer/fax/copier, then it might be faxing or copying.</span></span> <span data-ttu-id="5d3f6-429">与属性进行比较 <xref:System.Printing.PrintQueue.IsProcessing%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-429">Compare with the <xref:System.Printing.PrintQueue.IsProcessing%2A> property.</span></span>  
  
 <span data-ttu-id="5d3f6-430">如果设备不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-430">If the device does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevQueryEnabled">
      <MemberSignature Language="C#" Value="public bool IsDevQueryEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDevQueryEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDevQueryEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDevQueryEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDevQueryEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDevQueryEnabled : bool" Usage="System.Printing.PrintQueue.IsDevQueryEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-431">获取一个值，该值指示当文档和打印机配置不一致时，队列是否保留文档。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-431">Gets a value that indicates whether the queue holds documents when document and printer configurations do not match.</span></span></summary>
        <value><span data-ttu-id="5d3f6-432">如果队列保留不一致的配置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-432"><see langword="true" /> if the queue holds mismatched configurations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirect">
      <MemberSignature Language="C#" Value="public bool IsDirect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirect" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDirect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirect : bool" Usage="System.Printing.PrintQueue.IsDirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-433">获取一个值，该值指示队列是直接打印到打印机，还是先在后台处理文档，然后再打印。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-433">Gets a value that indicates whether the queue prints directly to the printer or spools documents first and then prints them.</span></span></summary>
        <value><span data-ttu-id="5d3f6-434">如果队列直接打印到打印机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-434"><see langword="true" /> if the queue prints directly to the printer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-435">只能通过 Windows 通用打印对话框设置此属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-435">This property can be set only through the Windows common print dialog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDoorOpened">
      <MemberSignature Language="C#" Value="public bool IsDoorOpened { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDoorOpened" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDoorOpened" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDoorOpened As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDoorOpened { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDoorOpened : bool" Usage="System.Printing.PrintQueue.IsDoorOpened" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-436">获取用于指示打印机门是否打开的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-436">Gets a value that indicates whether a door is open on the printer.</span></span></summary>
        <value><span data-ttu-id="5d3f6-437">如果门为打开状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-437"><see langword="true" /> if a door is open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-438">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-438">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-439">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-439">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool IsHidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHidden { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHidden : bool" Usage="System.Printing.PrintQueue.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-440">获取用于指示打印队列是否隐藏在应用程序用户界面中的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-440">Gets a value that indicates whether the print queue is hidden in your application's user interface.</span></span></summary>
        <value><span data-ttu-id="5d3f6-441">如果打印队列隐藏在 Windows 用户界面中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-441"><see langword="true" /> if the print queue is hidden in the Windows user interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-442">将此属性设置为时，不会自动隐藏打印队列 `true` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-442">You do not automatically hide the print queue when you set this property to `true`.</span></span> <span data-ttu-id="5d3f6-443">你的程序仍然必须采取措施以确保它未出现在程序接口中的任何队列列表中。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-443">Your program still must take steps to make sure it does not appear in any list of queues in the program's interface.</span></span>  
  
 <span data-ttu-id="5d3f6-444">无法在 Windows 用户界面中隐藏打印队列，如 "打印机和传真" 列表。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-444">Print queues cannot be hidden in the Windows user interface, such as the Printers and Faxes list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInError">
      <MemberSignature Language="C#" Value="public bool IsInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInError" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInError : bool" Usage="System.Printing.PrintQueue.IsInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-445">获取用于指示打印机或设备是否处于出错状态的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-445">Gets a value that indicates whether the printer or device is in an error condition.</span></span></summary>
        <value><span data-ttu-id="5d3f6-446">如果设备处于出错状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-446"><see langword="true" /> if the device is in an error condition; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-447">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-447">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-448">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-448">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitializing">
      <MemberSignature Language="C#" Value="public bool IsInitializing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitializing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsInitializing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitializing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitializing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitializing : bool" Usage="System.Printing.PrintQueue.IsInitializing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-449">获取用于指示打印机自身是否正在进行初始化的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-449">Gets a value that indicates whether the printer is initializing itself.</span></span></summary>
        <value><span data-ttu-id="5d3f6-450">如果打印机正在初始化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-450"><see langword="true" /> if the printer is initializing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-451">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-451">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIOActive">
      <MemberSignature Language="C#" Value="public bool IsIOActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIOActive" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsIOActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIOActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIOActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIOActive : bool" Usage="System.Printing.PrintQueue.IsIOActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-452">获取用于指示打印机是否正在收发数据或信号的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-452">Gets a value that indicates whether the printer is receiving or sending data or signals.</span></span></summary>
        <value><span data-ttu-id="5d3f6-453">如果打印机正在进行收发操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-453"><see langword="true" /> if the printer is receiving or sending; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-454">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-454">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManualFeedRequired">
      <MemberSignature Language="C#" Value="public bool IsManualFeedRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManualFeedRequired" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsManualFeedRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManualFeedRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManualFeedRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsManualFeedRequired : bool" Usage="System.Printing.PrintQueue.IsManualFeedRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-455">获取一个值，该值指示是否需要给打印机手动加纸以执行当前打印作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-455">Gets a value that indicates whether the printer needs to be manually fed paper for the current print job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-456">如果需要手动给打印机加纸，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-456"><see langword="true" /> if the printer needs to be manually fed paper; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-457">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-457">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotAvailable">
      <MemberSignature Language="C#" Value="public bool IsNotAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsNotAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNotAvailable : bool" Usage="System.Printing.PrintQueue.IsNotAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-458">获取用于指示打印机是否可用的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-458">Gets a value that indicates whether the printer is available.</span></span></summary>
        <value><span data-ttu-id="5d3f6-459">如果打印机可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-459"><see langword="true" /> if the printer is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-460">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-460">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-461">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-461">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Printing.PrintQueue.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-462">获取一个值，该值指示打印机是否脱机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-462">Gets a value that indicates whether the printer is offline.</span></span></summary>
        <value><span data-ttu-id="5d3f6-463">如果打印机脱机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-463"><see langword="true" /> if the printer is offline; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-464">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-464">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-465">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-465">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutOfMemory">
      <MemberSignature Language="C#" Value="public bool IsOutOfMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutOfMemory" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutOfMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutOfMemory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutOfMemory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutOfMemory : bool" Usage="System.Printing.PrintQueue.IsOutOfMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-466">获取用于指示打印机的内存是否不足的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-466">Gets a value that indicates whether the printer is out of memory.</span></span></summary>
        <value><span data-ttu-id="5d3f6-467">如果打印机内存不足，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-467"><see langword="true" /> if the printer is out of memory; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-468">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-468">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-469">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-469">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutOfPaper">
      <MemberSignature Language="C#" Value="public bool IsOutOfPaper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutOfPaper" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutOfPaper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutOfPaper As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutOfPaper { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutOfPaper : bool" Usage="System.Printing.PrintQueue.IsOutOfPaper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-470">获取一个值，该值指示打印机是否需要用当前作业所需大小的纸张来重新加载。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-470">Gets a value that indicates whether the printer needs to be reloaded with paper of the size required for the current job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-471">如果需要重新加载打印机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-471"><see langword="true" /> if the printer needs to be reloaded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-472">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-472">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-473">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-473">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutputBinFull">
      <MemberSignature Language="C#" Value="public bool IsOutputBinFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutputBinFull" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutputBinFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutputBinFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutputBinFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputBinFull : bool" Usage="System.Printing.PrintQueue.IsOutputBinFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-474">获取用于指示打印机的输出区域是否存在溢出危险的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-474">Gets a value that indicates whether the output area of the printer is in danger of overflowing.</span></span></summary>
        <value><span data-ttu-id="5d3f6-475">如果打印机的输出区域已满，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-475"><see langword="true" /> if the output area of the printer is full; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-476">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-476">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-477">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-477">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaperJammed">
      <MemberSignature Language="C#" Value="public bool IsPaperJammed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaperJammed" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPaperJammed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaperJammed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaperJammed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaperJammed : bool" Usage="System.Printing.PrintQueue.IsPaperJammed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-478">获取用于指示当前纸张是否卡在打印机里的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-478">Gets a value that indicates whether the current sheet of paper is stuck in the printer.</span></span></summary>
        <value><span data-ttu-id="5d3f6-479">如果纸被卡住，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-479"><see langword="true" /> if the paper is stuck; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-480">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-480">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-481">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-481">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Printing.PrintQueue.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-482">获取用于指示打印队列是否已暂停的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-482">Gets a value that indicates whether the print queue has been paused.</span></span></summary>
        <value><span data-ttu-id="5d3f6-483">如果打印队列已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-483"><see langword="true" /> if the print queue has been paused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-484">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-484">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-485">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-485">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPendingDeletion">
      <MemberSignature Language="C#" Value="public bool IsPendingDeletion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPendingDeletion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPendingDeletion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPendingDeletion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPendingDeletion { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPendingDeletion : bool" Usage="System.Printing.PrintQueue.IsPendingDeletion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-486">获取用于指示打印机是否正在删除打印作业的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-486">Gets a value that indicates whether the printer is in the process of deleting a print job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-487">如果打印机正在删除作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-487"><see langword="true" /> if the printer is deleting a job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-488">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-488">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPowerSaveOn">
      <MemberSignature Language="C#" Value="public bool IsPowerSaveOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerSaveOn" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPowerSaveOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerSaveOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerSaveOn { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerSaveOn : bool" Usage="System.Printing.PrintQueue.IsPowerSaveOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-489">获取用于指示打印机是否处于节能模式的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-489">Gets a value that indicates whether the printer is in power save mode.</span></span></summary>
        <value><span data-ttu-id="5d3f6-490">如果打印机处于节能模式，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-490"><see langword="true" /> if the printer is in power save mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-491">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-491">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrinting">
      <MemberSignature Language="C#" Value="public bool IsPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinting : bool" Usage="System.Printing.PrintQueue.IsPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-492">获取用于指示是否正在打印作业的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-492">Gets a value that indicates whether a job is printing.</span></span></summary>
        <value><span data-ttu-id="5d3f6-493">如果正在打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-493"><see langword="true" /> if a job is printing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-494">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-494">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProcessing">
      <MemberSignature Language="C#" Value="public bool IsProcessing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsProcessing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsProcessing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsProcessing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsProcessing : bool" Usage="System.Printing.PrintQueue.IsProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-495">获取用于指示打印机是否正在处理打印作业的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-495">Gets a value that indicates whether the printer is processing a print job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-496">如果打印机正在处理打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-496"><see langword="true" /> if the printer is processing a print job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-497">某些打印机制造商支持此信号，而不是不太具体的信号 <xref:System.Printing.PrintQueue.IsBusy%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-497">Some printer manufacturers support this signal instead of the less specific <xref:System.Printing.PrintQueue.IsBusy%2A>.</span></span>  
  
 <span data-ttu-id="5d3f6-498">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-498">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublished">
      <MemberSignature Language="C#" Value="public bool IsPublished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublished" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPublished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublished : bool" Usage="System.Printing.PrintQueue.IsPublished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-499">获取用于指示其他网络用户能否看到打印机的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-499">Gets a value that indicates whether the printer is visible to other network users.</span></span></summary>
        <value><span data-ttu-id="5d3f6-500">如果其他网络用户能够看到该打印机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-500"><see langword="true" /> if the printer is visible to other network users; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQueued">
      <MemberSignature Language="C#" Value="public bool IsQueued { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsQueued" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsQueued" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsQueued As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsQueued { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsQueued : bool" Usage="System.Printing.PrintQueue.IsQueued" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-501">获取一个值，该值指示打印机能否支持一个队列中同时包含多个打印作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-501">Gets a value that indicates whether the printer can support a queue with more than one print job in it at a time.</span></span></summary>
        <value><span data-ttu-id="5d3f6-502">如果打印机能够支持包含多个打印作业的队列，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-502"><see langword="true" /> if the printer can support the queuing of multiple print jobs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-503">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-503">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRawOnlyEnabled">
      <MemberSignature Language="C#" Value="public bool IsRawOnlyEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRawOnlyEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsRawOnlyEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRawOnlyEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRawOnlyEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRawOnlyEnabled : bool" Usage="System.Printing.PrintQueue.IsRawOnlyEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-504">获取一个用于指示打印队列能否使用 EMF（增强元文件）的值，增强元文件有助于加快数据从打印应用程序流向 Windows 后台程序的速度。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-504">Gets a value that indicates whether the print queue can use EMF (Enhanced Meta File) that enables faster data flow from a printing application to the Windows spooler.</span></span></summary>
        <value><span data-ttu-id="5d3f6-505">如果打印机无法使用 EMF 打印，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-505"><see langword="true" /> if the printer cannot use EMF printing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerUnknown">
      <MemberSignature Language="C#" Value="public bool IsServerUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsServerUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerUnknown : bool" Usage="System.Printing.PrintQueue.IsServerUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-506">获取用于指示打印机是否处于出错状态的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-506">Gets a value that indicates whether the printer is in an error state.</span></span></summary>
        <value><span data-ttu-id="5d3f6-507">如果打印机处于出错状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-507"><see langword="true" /> if in the printer is in an error state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-508">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-508">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Printing.PrintQueue.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-509">获取用于指示打印机能否供联网的其他计算机使用的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-509">Gets a value that indicates whether the printer is available for use by other computers on the network.</span></span></summary>
        <value><span data-ttu-id="5d3f6-510">如果打印机为共享的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-510"><see langword="true" /> if the printer is shared; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-511">此属性仅可通过 Windows 通用打印对话框进行设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-511">This property can only be set with the Windows common print dialog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTonerLow">
      <MemberSignature Language="C#" Value="public bool IsTonerLow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTonerLow" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsTonerLow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTonerLow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTonerLow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTonerLow : bool" Usage="System.Printing.PrintQueue.IsTonerLow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-512">获取用于指示打印机是否缺少墨粉的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-512">Gets a value that indicates whether the printer is running short of toner.</span></span></summary>
        <value><span data-ttu-id="5d3f6-513">如果打印机缺少墨粉，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-513"><see langword="true" /> if the printer is running short of toner; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-514">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-514">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 <span data-ttu-id="5d3f6-515"><xref:System.Printing.PrintQueue>对象还具有 <xref:System.Printing.PrintQueue.HasToner%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-515">The <xref:System.Printing.PrintQueue> object also has a <xref:System.Printing.PrintQueue.HasToner%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-516">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-516">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWaiting">
      <MemberSignature Language="C#" Value="public bool IsWaiting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWaiting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsWaiting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWaiting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWaiting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWaiting : bool" Usage="System.Printing.PrintQueue.IsWaiting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-517">获取用于指示队列是否正在等待添加作业的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-517">Gets a value that indicates whether the queue is waiting for a job to be added.</span></span></summary>
        <value><span data-ttu-id="5d3f6-518">如果队列正在等待作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-518"><see langword="true" /> if the queue is waiting for a job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-519">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-519">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWarmingUp">
      <MemberSignature Language="C#" Value="public bool IsWarmingUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarmingUp" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsWarmingUp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarmingUp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarmingUp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarmingUp : bool" Usage="System.Printing.PrintQueue.IsWarmingUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-520">获取用于指示打印机是否正在预热的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-520">Gets a value that indicates whether the printer is warming up.</span></span></summary>
        <value><span data-ttu-id="5d3f6-521">如果打印机正在预热，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-521"><see langword="true" /> if the printer is warming up; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-522">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-522">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXpsDevice">
      <MemberSignature Language="C#" Value="public bool IsXpsDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXpsDevice" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsXpsDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXpsDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXpsDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXpsDevice : bool" Usage="System.Printing.PrintQueue.IsXpsDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-523">获取一个值，该值指示打印机的驱动程序是否是基于 <see href="/dotnet/framework/wpf/advanced/printing-overview">XPSDrv 模型</see>而构建，所以它才会使用 XML 纸张规范 (XPS) 作为其页面描述语言。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-523">Gets a value that indicates whether the printer's driver is built on the <see href="/dotnet/framework/wpf/advanced/printing-overview">XPSDrv model</see> so it uses XML Paper Specification (XPS) as its page description language.</span></span></summary>
        <value><span data-ttu-id="5d3f6-524"><see langword="true" /> 如果打印机使用的是 <see href="/dotnet/framework/wpf/advanced/printing-overview">XPS 打印路径</see>，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-524"><see langword="true" /> if the printer uses the <see href="/dotnet/framework/wpf/advanced/printing-overview">XPS print path</see>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-525">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-525">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepPrintedJobs">
      <MemberSignature Language="C#" Value="public bool KeepPrintedJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepPrintedJobs" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.KeepPrintedJobs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepPrintedJobs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepPrintedJobs { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepPrintedJobs : bool" Usage="System.Printing.PrintQueue.KeepPrintedJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-526">获取一个值，该值指示队列是否在打印后保存而不是删除打印机语言文件。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-526">Gets a value that indicates whether the queue is saving the printer language file instead of deleting it following printing.</span></span></summary>
        <value><span data-ttu-id="5d3f6-527">如果队列保存打印机语言文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-527"><see langword="true" /> if the queue is saving the printer language file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-528">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-528">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Location : string with get, set" Usage="System.Printing.PrintQueue.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-529">获取或设置打印机的物理位置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-529">Gets or sets the printer's physical location.</span></span></summary>
        <value><span data-ttu-id="5d3f6-530">打印机的物理位置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-530">The printer's physical location.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d3f6-531">下面的示例演示如何使用此属性来列出可用打印队列的子集。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-531">The following example shows how to use this property to list a subset of available print queues.</span></span>  
  
 [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CPP/Program.cpp#listsubsetofprintqueues)]
 [!code-csharp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CSharp/Program.cs#listsubsetofprintqueues)]
 [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/visualbasic/program.vb#listsubsetofprintqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public static int MaxPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.MaxPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxPrintSchemaVersion : int" Usage="System.Printing.PrintQueue.MaxPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-532">获取队列可以使用的[打印架构](https://go.microsoft.com/fwlink/?LinkId=186397)的最新的可能的版本编号。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-532">Gets the most recent possible version number of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use.</span></span></summary>
        <value><span data-ttu-id="5d3f6-533">队列可以使用的 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 的最新版本号。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-533">The most recent version number of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-534">随 Windows Vista 一起发布的 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 版本为1。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-534">The version of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) released with Windows Vista is 1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=186397"><span data-ttu-id="5d3f6-535">打印架构</span><span class="sxs-lookup"><span data-stu-id="5d3f6-535">Print Schema</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeAndValidatePrintTicket">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5d3f6-536">合并两种 <see cref="T:System.Printing.PrintTicket" />，保证所得的 <see cref="T:System.Printing.PrintTicket" /> 有效且不请求打印机所不支持的任何打印功能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-536">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeAndValidatePrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Printing.ValidationResult MergeAndValidatePrintTicket(class System.Printing.PrintTicket basePrintTicket, class System.Printing.PrintTicket deltaPrintTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function MergeAndValidatePrintTicket (basePrintTicket As PrintTicket, deltaPrintTicket As PrintTicket) As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::ValidationResult MergeAndValidatePrintTicket(System::Printing::PrintTicket ^ basePrintTicket, System::Printing::PrintTicket ^ deltaPrintTicket);" />
      <MemberSignature Language="F#" Value="member this.MergeAndValidatePrintTicket : System.Printing.PrintTicket * System.Printing.PrintTicket -&gt; System.Printing.ValidationResult" Usage="printQueue.MergeAndValidatePrintTicket (basePrintTicket, deltaPrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="deltaPrintTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="basePrintTicket"><span data-ttu-id="5d3f6-537">第一种打印票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-537">The first print ticket.</span></span></param>
        <param name="deltaPrintTicket"><span data-ttu-id="5d3f6-538">第二种打印票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-538">The second print ticket.</span></span> <span data-ttu-id="5d3f6-539">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-539">This can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="5d3f6-540">合并两种 <see cref="T:System.Printing.PrintTicket" />，保证所得的 <see cref="T:System.Printing.PrintTicket" /> 有效且不请求打印机所不支持的任何打印功能。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-540">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-541">一个 <see cref="T:System.Printing.ValidationResult" />，其中包括合并的 <see cref="T:System.Printing.PrintTicket" /> 和一个指示，该指示表明是否为了保证可行性而不得不更改其任何设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-541">A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-542">方法生成可行的打印票证;也就是说，不请求打印机不支持打印功能的票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-542">The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support.</span></span> <span data-ttu-id="5d3f6-543">方法首先根据 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397)验证两个输入打印票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-543">The method first validates the two input print tickets against the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span> <span data-ttu-id="5d3f6-544">如果两者都无效，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-544">If either is invalid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5d3f6-545">然后合并这两个票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-545">The two tickets are then merged.</span></span> <span data-ttu-id="5d3f6-546">如果特定属性的值不同，则生成的合并票证最初使用增量票证的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-546">If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.</span></span>  
  
 <span data-ttu-id="5d3f6-547">然后，根据打印机的实际功能检查合并的票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-547">The merged ticket is then checked against the actual capabilities of the printer.</span></span> <span data-ttu-id="5d3f6-548">如果票证中的任何设置与打印机功能不兼容，则打印机驱动程序将使用所需的任何逻辑更改这些设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-548">If any settings in the ticket are incompatible with the printer's capabilities, then the printer driver changes those settings by using whatever logic it wants.</span></span> <span data-ttu-id="5d3f6-549">通常情况下，它会将用户或打印机的默认值替换为设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-549">Typically, it substitutes the user's or printer's default value for the setting.</span></span> <span data-ttu-id="5d3f6-550">驱动程序的替代值的源与的票证 `basePrintTicket` 不同，则合并的票证可能具有与这两个输入票证不同的设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-550">It the driver's source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets.</span></span> <span data-ttu-id="5d3f6-551">如果打印机驱动程序必须更改任何设置，则此事实在 <xref:System.Printing.ValidationResult.ConflictStatus%2A> 的属性中报告 <xref:System.Printing.ValidationResult> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-551">If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.</span></span>  
  
 <span data-ttu-id="5d3f6-552">若要基于打印队列的默认设置进行合并和验证，应将设置 `basePrintTicket` 为 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 或 <xref:System.Printing.PrintQueue.UserPrintTicket%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-552">To merge and validate based on a print queue's default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="5d3f6-553">`deltaPrintTicket`参数可以为 `null` ，在这种情况下，将对 `basePrintTicket` 进行验证、检查可行性并返回，并可能会发生更改。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-553">The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.</span></span>  
  
 <span data-ttu-id="5d3f6-554">如果此重载 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> ，则返回的 `deltaPrintTicket` 中的和都 <xref:System.Printing.PrintTicket> <xref:System.Printing.ValidationResult> 具有作业范围范围。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-554">With this overload of <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>, both the `deltaPrintTicket` and the <xref:System.Printing.PrintTicket> in the <xref:System.Printing.ValidationResult> that is returned have job wide scope.</span></span> <span data-ttu-id="5d3f6-555">若要指定不同的作用域，请使用此方法的其他重载。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-555">To specify a different scope use the other overload of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-556">下面的示例演示如何使用此方法来合并两个打印票证并对返回的进行响应 <xref:System.Printing.ValidationResult> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-556">The following example shows how to use this method to merge two print tickets and respond to the <xref:System.Printing.ValidationResult> that is returned.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5d3f6-557">至少有一个输入打印票证无效。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-557">At least one of the input print tickets is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5d3f6-558"><paramref name="basePrintTicket" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-558">The <paramref name="basePrintTicket" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-559">验证、合并和可行性检查操作失败。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-559">The validation, merger, and viability checking operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MergeAndValidatePrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket, System.Printing.PrintTicketScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Printing.ValidationResult MergeAndValidatePrintTicket(class System.Printing.PrintTicket basePrintTicket, class System.Printing.PrintTicket deltaPrintTicket, valuetype System.Printing.PrintTicketScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function MergeAndValidatePrintTicket (basePrintTicket As PrintTicket, deltaPrintTicket As PrintTicket, scope As PrintTicketScope) As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::ValidationResult MergeAndValidatePrintTicket(System::Printing::PrintTicket ^ basePrintTicket, System::Printing::PrintTicket ^ deltaPrintTicket, System::Printing::PrintTicketScope scope);" />
      <MemberSignature Language="F#" Value="member this.MergeAndValidatePrintTicket : System.Printing.PrintTicket * System.Printing.PrintTicket * System.Printing.PrintTicketScope -&gt; System.Printing.ValidationResult" Usage="printQueue.MergeAndValidatePrintTicket (basePrintTicket, deltaPrintTicket, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="deltaPrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="scope" Type="System.Printing.PrintTicketScope" />
      </Parameters>
      <Docs>
        <param name="basePrintTicket"><span data-ttu-id="5d3f6-560">第一种打印票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-560">The first print ticket.</span></span></param>
        <param name="deltaPrintTicket"><span data-ttu-id="5d3f6-561">第二种打印票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-561">The second print ticket.</span></span> <span data-ttu-id="5d3f6-562">它可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-562">This can be <see langword="null" />.</span></span></param>
        <param name="scope"><span data-ttu-id="5d3f6-563">用于表示 <paramref name="deltaPrintTicket" /> 的作用域和 <see cref="T:System.Printing.ValidationResult" /> 中返回的打印票证的作用域是一个页面、文档，还是整个作业的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-563">A value indicating whether the scope of <paramref name="deltaPrintTicket" />, and the scope of the print ticket returned in the <see cref="T:System.Printing.ValidationResult" />, is a page, a document, or the whole job.</span></span></param>
        <summary><span data-ttu-id="5d3f6-564">合并两种 <see cref="T:System.Printing.PrintTicket" />，保证所得的 <see cref="T:System.Printing.PrintTicket" /> 有效，不请求打印机所不支持的任何打印功能，且限于指定的作用域。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-564">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid, does not ask for any printing functionality that the printer does not support, and is limited to the specified scope.</span></span></summary>
        <returns><span data-ttu-id="5d3f6-565">一个 <see cref="T:System.Printing.ValidationResult" />，其中包括合并的 <see cref="T:System.Printing.PrintTicket" /> 和一个指示，该指示表明是否为了保证可行性而不得不更改其任何设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-565">A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-566">方法生成可行的打印票证;也就是说，不请求打印机不支持打印功能的票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-566">The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support.</span></span> <span data-ttu-id="5d3f6-567">方法首先根据 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397)验证两个输入打印票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-567">The method first validates the two input print tickets against the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span> <span data-ttu-id="5d3f6-568">如果两者都无效，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-568">If either is invalid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5d3f6-569">然后合并这两个票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-569">The two tickets are then merged.</span></span> <span data-ttu-id="5d3f6-570">如果特定属性的值不同，则生成的合并票证最初使用增量票证的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-570">If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.</span></span>  
  
 <span data-ttu-id="5d3f6-571">然后，根据打印机的实际功能检查合并的票证。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-571">The merged ticket is then checked against the actual capabilities of the printer.</span></span> <span data-ttu-id="5d3f6-572">如果票证中的任何设置与打印机功能不兼容，则打印机驱动程序将使用所需的任何逻辑更改这些设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-572">If any settings in the ticket are incompatible with the printer's capabilities, then the printer driver changes those settings by using whatever logic it wants.</span></span> <span data-ttu-id="5d3f6-573">通常情况下，它会将用户或打印机的默认值替换为设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-573">Typically, it substitutes the user's or printer's default value for the setting.</span></span> <span data-ttu-id="5d3f6-574">驱动程序的替代值的源与的票证 `basePrintTicket` 不同，则合并的票证可能具有与这两个输入票证不同的设置。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-574">It the driver's source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets.</span></span> <span data-ttu-id="5d3f6-575">如果打印机驱动程序必须更改任何设置，则此事实在 <xref:System.Printing.ValidationResult.ConflictStatus%2A> 的属性中报告 <xref:System.Printing.ValidationResult> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-575">If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.</span></span>  
  
 <span data-ttu-id="5d3f6-576">若要基于打印队列的默认设置进行合并和验证，应将设置 `basePrintTicket` 为 <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> 或 <xref:System.Printing.PrintQueue.UserPrintTicket%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-576">To merge and validate based on a print queue's default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="5d3f6-577">`deltaPrintTicket`参数可以为 `null` ，在这种情况下，将对 `basePrintTicket` 进行验证、检查可行性并返回，并可能会发生更改。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-577">The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.</span></span>  
  
 <span data-ttu-id="5d3f6-578">如果 `scope` 是作业，则在中返回的打印票证 <xref:System.Printing.ValidationResult> 可包含带有作业、文档和页前缀的 [打印架构](https://go.microsoft.com/fwlink/?LinkId=186397) 参数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-578">If the `scope` is a job, then the print ticket returned in the <xref:System.Printing.ValidationResult> can include [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) parameters with Job, Document, and Page prefixes.</span></span> <span data-ttu-id="5d3f6-579">如果 `scope` 是一个文档，则中的每个作业设置 `deltaPrintTicket` 将被忽略，并且返回的票证可以包含具有文档前缀和页前缀的参数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-579">If the `scope` is a document, then per-job settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with Document and Page prefixes.</span></span> <span data-ttu-id="5d3f6-580">如果 `scope` 是页，则将忽略每个作业的设置和中的每个文档的设置 `deltaPrintTicket` ，并且返回的票证可以包含只有页前缀的参数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-580">If the `scope` is a page, then the per-job settings and the per-document settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with only the Page prefix.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5d3f6-581">至少有一个输入打印票证无效。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-581">At least one of the input print tickets is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5d3f6-582"><paramref name="basePrintTicket" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-582">The <paramref name="basePrintTicket" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5d3f6-583"><paramref name="scope" /> 参数不含有效的 <see cref="T:System.Printing.PrintTicketScope" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-583">The <paramref name="scope" /> parameter does not have a valid <see cref="T:System.Printing.PrintTicketScope" /> value.</span></span></exception>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="5d3f6-584">验证、合并和可行性检查操作失败。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-584">The validation, merger, and viability checking operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override sealed string Name { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Name As String" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Printing.PrintQueue.Name" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public override sealed string Name { get; set; }" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Property Name As String" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Printing.PrintQueue.Name" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-585">获取或设置打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-585">Gets or sets the print queue's name.</span></span></summary>
        <value><span data-ttu-id="5d3f6-586">打印队列的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-586">The name of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-587"><xref:System.Printing.PrintQueue>对象还具有只读 <xref:System.Printing.PrintQueue.FullName%2A> 属性和可写 <xref:System.Printing.PrintQueue.ShareName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-587">The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.ShareName%2A> property.</span></span>  
  
 <span data-ttu-id="5d3f6-588">对于本地打印服务器上的队列， <xref:System.Printing.PrintQueue.Name%2A> 和 <xref:System.Printing.PrintQueue.FullName%2A> 相同。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-588">For queues on the local print server, <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.FullName%2A> are the same.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-589">下面的示例演示如何使用此属性来列出可用打印队列的子集。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-589">The following example shows how to use this property to list a subset of available print queues.</span></span>  
  
 [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CPP/Program.cpp#listsubsetofprintqueues)]
 [!code-csharp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CSharp/Program.cs#listsubsetofprintqueues)]
 [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/visualbasic/program.vb#listsubsetofprintqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedUserIntervention">
      <MemberSignature Language="C#" Value="public bool NeedUserIntervention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedUserIntervention" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.NeedUserIntervention" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NeedUserIntervention As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NeedUserIntervention { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NeedUserIntervention : bool" Usage="System.Printing.PrintQueue.NeedUserIntervention" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-590">获取用于指示打印机是否需要人工关注的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-590">Gets a value that indicates whether the printer needs the attention of a human being.</span></span></summary>
        <value><span data-ttu-id="5d3f6-591">如果打印机需要人工关注，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-591"><see langword="true" /> if the printer needs human attention; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-592">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-592">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-593">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-593">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfJobs">
      <MemberSignature Language="C#" Value="public virtual int NumberOfJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfJobs" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.NumberOfJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfJobs As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfJobs { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfJobs : int" Usage="System.Printing.PrintQueue.NumberOfJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-594">获取在打印队列中排队的作业总数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-594">Gets the total number of jobs lined up in the print queue.</span></span></summary>
        <value><span data-ttu-id="5d3f6-595">队列中的作业数。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-595">The number of jobs in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePunt">
      <MemberSignature Language="C#" Value="public bool PagePunt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PagePunt" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.PagePunt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagePunt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PagePunt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PagePunt : bool" Usage="System.Printing.PrintQueue.PagePunt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-596">获取用于指示打印机是否无法打印当前页的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-596">Gets a value that indicates whether the printer is unable to print the current page.</span></span></summary>
        <value><span data-ttu-id="5d3f6-597">如果打印机无法打印当前页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-597"><see langword="true" /> if the printer is unable to print the current page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-598">如果打印机不支持具有这种含义的信号，则属性始终为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-598">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Pause();" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="printQueue.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-599">暂停打印队列。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-599">Pauses the print queue.</span></span> <span data-ttu-id="5d3f6-600">它保持暂停状态，直到执行 <see cref="M:System.Printing.PrintQueue.Resume" /> 为止。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-600">It remains paused until <see cref="M:System.Printing.PrintQueue.Resume" /> is executed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d3f6-601">无法暂停打印机。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-601">The printer cannot be paused.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Resume" />
      </Docs>
    </Member>
    <Member MemberName="PrintingIsCancelled">
      <MemberSignature Language="C#" Value="public bool PrintingIsCancelled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintingIsCancelled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.PrintingIsCancelled" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintingIsCancelled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintingIsCancelled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PrintingIsCancelled : bool with get, set" Usage="System.Printing.PrintQueue.PrintingIsCancelled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-602">获取或设置用于指示是否正在取消当前打印作业的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-602">Gets or sets a value that indicates whether the current print job is being cancelled.</span></span></summary>
        <value><span data-ttu-id="5d3f6-603">如果正在取消打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-603"><see langword="true" /> if the print job is being cancelled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public virtual int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Printing.PrintQueue.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-604">获取或设置该打印队列相对于由同一打印服务器承载并使用同一物理打印机的其他打印队列的优先级。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-604">Gets or sets the priority of the print queue relative to other print queues that are hosted by the same print server and that use the same physical printer.</span></span></summary>
        <value><span data-ttu-id="5d3f6-605">该打印队列的优先级。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-605">The priority for the print queue.</span></span> <span data-ttu-id="5d3f6-606">可取值的范围是 1-99。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-606">Possible values are from 1 through 99.</span></span> <span data-ttu-id="5d3f6-607">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-607">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-608">将此属性与 <xref:System.Printing.PrintQueue.DefaultPriority%2A> 有关队列中打印作业的相对优先级的属性进行比较。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-608">Contrast this property with the <xref:System.Printing.PrintQueue.DefaultPriority%2A> property which is about the relative priority of print jobs in the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public virtual void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Purge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Purge();" />
      <MemberSignature Language="F#" Value="abstract member Purge : unit -&gt; unit&#xA;override this.Purge : unit -&gt; unit" Usage="printQueue.Purge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-609">移除打印队列中的所有作业。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-609">Removes all the jobs in the print queue.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d3f6-610">有些打印作业未能从队列中移除。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-610">Some print jobs could not be removed from the queue.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueAttributes">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueueAttributes QueueAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintQueueAttributes QueueAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueAttributes As PrintQueueAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueueAttributes QueueAttributes { System::Printing::PrintQueueAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueAttributes : System.Printing.PrintQueueAttributes" Usage="System.Printing.PrintQueue.QueueAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueueAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-611">获取打印队列的属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-611">Gets the properties of the print queue.</span></span></summary>
        <value><span data-ttu-id="5d3f6-612"><see cref="T:System.Printing.PrintQueueAttributes" /> 枚举值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-612">A bitwise combination of the <see cref="T:System.Printing.PrintQueueAttributes" /> enumeration values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueDriver">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintDriver QueueDriver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintDriver QueueDriver" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueDriver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueueDriver As PrintDriver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintDriver ^ QueueDriver { System::Printing::PrintDriver ^ get(); void set(System::Printing::PrintDriver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueueDriver : System.Printing.PrintDriver with get, set" Usage="System.Printing.PrintQueue.QueueDriver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintDriver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-613">获取或设置该队列的打印机驱动程序。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-613">Gets or sets the printer driver for the queue.</span></span></summary>
        <value><span data-ttu-id="5d3f6-614">队列使用的 <see cref="T:System.Printing.PrintDriver" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-614">The <see cref="T:System.Printing.PrintDriver" /> that the queue uses.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuePort">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintPort QueuePort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintPort QueuePort" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueuePort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueuePort As PrintPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintPort ^ QueuePort { System::Printing::PrintPort ^ get(); void set(System::Printing::PrintPort ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueuePort : System.Printing.PrintPort with get, set" Usage="System.Printing.PrintQueue.QueuePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintPort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-615">获取或设置队列使用的端口。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-615">Gets or sets the port that the queue uses.</span></span></summary>
        <value><span data-ttu-id="5d3f6-616">分配给打印队列的 <see cref="T:System.Printing.PrintPort" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-616">The <see cref="T:System.Printing.PrintPort" /> that is assigned to the print queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuePrintProcessor">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintProcessor QueuePrintProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintProcessor QueuePrintProcessor" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueuePrintProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueuePrintProcessor As PrintProcessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintProcessor ^ QueuePrintProcessor { System::Printing::PrintProcessor ^ get(); void set(System::Printing::PrintProcessor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueuePrintProcessor : System.Printing.PrintProcessor with get, set" Usage="System.Printing.PrintQueue.QueuePrintProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintProcessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-617">获取或设置队列使用的打印处理器。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-617">Gets or sets the print processor that the queue uses.</span></span></summary>
        <value><span data-ttu-id="5d3f6-618">队列使用的 <see cref="T:System.Printing.PrintProcessor" />，如 WinPrint 或 ModiPrint。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-618">The <see cref="T:System.Printing.PrintProcessor" /> that the queue uses, such as WinPrint or ModiPrint.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueStatus">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueueStatus QueueStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintQueueStatus QueueStatus" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueStatus As PrintQueueStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueueStatus QueueStatus { System::Printing::PrintQueueStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueStatus : System.Printing.PrintQueueStatus" Usage="System.Printing.PrintQueue.QueueStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueueStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-619">获取用于表示打印机状态的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-619">Gets a value that represents the status of the printer.</span></span> <span data-ttu-id="5d3f6-620">这些状态包括“正在预热”、“正在初始化”、“正在打印”等。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-620">These include "warming up," "initializing," "printing," and others.</span></span></summary>
        <value><span data-ttu-id="5d3f6-621">当前的 <see cref="T:System.Printing.PrintQueueStatus" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-621">The current <see cref="T:System.Printing.PrintQueueStatus" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d3f6-622">下面的示例演示如何将此属性用作调查所有打印机是否可能出现错误状态。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-622">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueattributes)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueattributes)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="printQueue.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-623">使用来自打印机的值和计算机上运行的打印队列实用工具更新 <see cref="T:System.Printing.PrintQueue" /> 对象的属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-623">Updates the properties of the <see cref="T:System.Printing.PrintQueue" /> object with values from the printer and the print queue utility that runs on the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-624"><xref:System.Printing.PrintQueue>当执行时，程序对对象的属性所做的更改将丢失 <xref:System.Printing.PrintQueue.Refresh%2A> ，除非已使用将它们写入打印机和打印队列 <xref:System.Printing.PrintQueue.Commit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-624">Changes your program makes to a <xref:System.Printing.PrintQueue> object's properties are lost when <xref:System.Printing.PrintQueue.Refresh%2A> executes, unless they have been written to the printer and print queue with <xref:System.Printing.PrintQueue.Commit%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-625">下面的示例演示如何将此方法用作调查所有打印机是否可能出现错误状态的一部分。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-625">The following example shows how to use this method as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#surveyqueues)]
 [!code-csharp[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#surveyqueues)]
 [!code-vb[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#surveyqueues)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d3f6-626">有些属性未能刷新。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-626">Some of the properties could not be refreshed.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Commit" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Resume();" />
      <MemberSignature Language="F#" Value="abstract member Resume : unit -&gt; unit&#xA;override this.Resume : unit -&gt; unit" Usage="printQueue.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d3f6-627">重新启动暂停的打印队列。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-627">Restarts a print queue that was paused.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5d3f6-628">下面的示例演示如何使用此方法恢复暂停的打印队列。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-628">The following example shows how to use this method to resume a paused print queue.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="5d3f6-629">打印机无法继续。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-629">The printer cannot resume.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Pause" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleCompletedJobsFirst">
      <MemberSignature Language="C#" Value="public bool ScheduleCompletedJobsFirst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScheduleCompletedJobsFirst" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ScheduleCompletedJobsFirst" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScheduleCompletedJobsFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScheduleCompletedJobsFirst { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScheduleCompletedJobsFirst : bool" Usage="System.Printing.PrintQueue.ScheduleCompletedJobsFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-630">获取一个值，该值指示打印机是否先打印已经完成后台处理过程的作业，然后再打印尚未完全完成后台处理的作业，即使后者先进入队列，或者具有较高的优先级。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-630">Gets a value that indicates whether the printer prints jobs that have completed the spooling process before jobs that have not fully spooled even if the latter entered the queue first or have a higher priority.</span></span></summary>
        <value><span data-ttu-id="5d3f6-631">如果打印机先打印已经完成后台处理过程的作业，然后再打印尚未完全完成后台处理的作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-631"><see langword="true" /> if the printer prints jobs that have completed the spooling process before jobs that have not fully spooled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorFile">
      <MemberSignature Language="C#" Value="public virtual string SeparatorFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorFile" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.SeparatorFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SeparatorFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorFile : string with get, set" Usage="System.Printing.PrintQueue.SeparatorFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-632">获取或设置在每个打印作业的开头插入的文件的路径和文件名。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-632">Gets or sets the path and file name of a file that is inserted at the beginning of each print job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-633">分隔符文件的路径和文件名。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-633">The path and file name of the separator file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-634">这通常是一种单页文件，用于更轻松地分隔不同打印作业的输出。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-634">This is normally a single-page file used to make it easier to separate the output of different print jobs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareName">
      <MemberSignature Language="C#" Value="public virtual string ShareName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShareName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ShareName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShareName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShareName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShareName : string with get, set" Usage="System.Printing.PrintQueue.ShareName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-635">获取或设置网络上的用户可以看到的共享打印机的名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-635">Gets or sets a name for the printer that is seen by users on the network when it is shared.</span></span></summary>
        <value><span data-ttu-id="5d3f6-636">共享打印机的公共名称。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-636">The public name of a shared printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-637"><xref:System.Printing.PrintQueue>对象还具有只读 <xref:System.Printing.PrintQueue.FullName%2A> 属性和可写 <xref:System.Printing.PrintQueue.Name%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-637">The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.Name%2A> property.</span></span> <span data-ttu-id="5d3f6-638">对于本地打印服务器上的队列，这些属性具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-638">For queues on the local print server, these properties have the same value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTimeOfDay">
      <MemberSignature Language="C#" Value="public virtual int StartTimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.StartTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int StartTimeOfDay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeOfDay : int with get, set" Usage="System.Printing.PrintQueue.StartTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-639">获取或设置打印机在一天中开始打印作业的最早时间，用协调世界时 (UTC)（也称格林尼治标准时间 [GMT]）午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-639">Gets or sets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-640">打印机在一天中的最早工作时间，用午夜 (UTC) 后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-640">The time of day that the printer first becomes available, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="5d3f6-641">最大值为 1439。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-641">The maximum value is 1439.</span></span> <span data-ttu-id="5d3f6-642">使用 Microsoft Windows 添加打印机向导首次安装打印机时，打印机默认为可用状态，并且此属性在所有时区都返回0。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-642">When a printer is first installed by using the Microsoft Windows Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-643">如果你不在 UTC 时区，则必须添加或减去60的倍数，才能设置或获取时区的正确时间。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-643">If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone.</span></span> <span data-ttu-id="5d3f6-644">例如，如果你处于太平洋时区的北美并且夏令时不起作用，则本地时间比 UTC 早8小时。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-644">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="5d3f6-645">若要将时区设置 <xref:System.Printing.PrintQueue.StartTimeOfDay%2A> 为 12 am，请将其设置为上午8点 UTC，即 480 (= 8 \* 60) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-645">To set <xref:System.Printing.PrintQueue.StartTimeOfDay%2A> to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 \* 60).</span></span> <span data-ttu-id="5d3f6-646">还必须记住，时间在24小时后会滚动到零 (即，1439th 分钟后) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-646">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="5d3f6-647">若要将其设置为时区中的下午6点，请将其设置为凌晨2点 UTC，即 120 (= 2 \* 60) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-647">To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \* 60).</span></span> <span data-ttu-id="5d3f6-648"><xref:System.TimeZone> <xref:System.TimeSpan> 有关有用的时区操作方法，请参阅、和 <xref:System.DateTime> 类。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-648">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.</span></span>  
  
 <span data-ttu-id="5d3f6-649">如果打印机始终可用，则此属性在所有时区都返回0。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-649">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-650">下面的示例演示如何使用此属性来确定打印机当前是否可用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-650">The following example shows how to use this property to determine whether a printer is available at the present time.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#usingstartanduntiltimes)]
 [!code-csharp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#usingstartanduntiltimes)]
 [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#usingstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="UntilTimeOfDay">
      <MemberSignature Language="C#" Value="public virtual int UntilTimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UntilTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.UntilTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UntilTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UntilTimeOfDay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UntilTimeOfDay : int with get, set" Usage="System.Printing.PrintQueue.UntilTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-651">获取或设置打印机打印作业的最晚时间，用协调世界时 (UTC)（也称格林尼治标准时间 [GMT]）午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-651">Gets or sets the latest time, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-652">一天中不再使用打印机的时间，用午夜 (UTC) 过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-652">The time of day that the printer is no longer available, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="5d3f6-653">最大值为 1439。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-653">The maximum value is 1439.</span></span> <span data-ttu-id="5d3f6-654">使用 Microsoft Windows 添加打印机向导首次安装打印机时，打印机默认为可用状态，并且此属性在所有时区都返回0。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-654">When a printer is first installed by using the Microsoft Windows Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-655">如果你不在 UTC 时区，则必须添加或减去60的倍数，才能设置或获取时区的正确时间。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-655">If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone.</span></span> <span data-ttu-id="5d3f6-656">例如，如果你处于太平洋时区的北美并且夏令时不起作用，则本地时间比 UTC 早8小时。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-656">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="5d3f6-657">若要将时区设置 <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A> 为 12 am，请将其设置为上午8点 UTC，即 480 (= 8 \* 60) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-657">To set <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A> to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 \* 60).</span></span> <span data-ttu-id="5d3f6-658">还必须记住，时间将在24日小时 (1439th 分钟) 之后滚动到零。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-658">You also must remember that time rolls over to zero after the 24th hour (the 1439th minute).</span></span> <span data-ttu-id="5d3f6-659">若要将其设置为时区中的下午6点，请将其设置为凌晨2点 UTC，即 120 (= 2 \* 60) 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-659">To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \* 60).</span></span> <span data-ttu-id="5d3f6-660"><xref:System.TimeZone> <xref:System.TimeSpan> 有关有用的时区操作方法，请参阅、和 <xref:System.DateTime> 类。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-660">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.</span></span>  
  
 <span data-ttu-id="5d3f6-661">如果打印机始终可用，则此属性在所有时区都返回0。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-661">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-662">下面的示例演示如何使用此属性来确定打印机当前是否可用。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-662">The following example shows how to use this property to determine whether a printer is available at the present time.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#usingstartanduntiltimes)]
 [!code-csharp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#usingstartanduntiltimes)]
 [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#usingstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="UserPrintTicket">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintTicket UserPrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket UserPrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.UserPrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserPrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintTicket ^ UserPrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserPrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Printing.PrintQueue.UserPrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d3f6-663">获取或设置当前用户的默认 <see cref="T:System.Printing.PrintTicket" /> 对象，该对象中包含有关打印作业的详细信息。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-663">Gets or sets the current user's default <see cref="T:System.Printing.PrintTicket" /> object which contains detailed information about the print job.</span></span></summary>
        <value><span data-ttu-id="5d3f6-664">当前用户的 <see cref="T:System.Printing.PrintTicket" />，或者如果尚未指定用户 <see cref="T:System.Printing.PrintTicket" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-664">The <see cref="T:System.Printing.PrintTicket" /> for the current user, or <see langword="null" /> if a user <see cref="T:System.Printing.PrintTicket" /> has not been specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d3f6-665">每个用户都可以有自己的默认值 <xref:System.Printing.PrintTicket> 。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-665">Each user can have his or her own default <xref:System.Printing.PrintTicket>.</span></span>  
  
 <span data-ttu-id="5d3f6-666">此属性可为 `null`。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-666">This property can be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d3f6-667">下面的示例演示如何在合并两个打印票证时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="5d3f6-667">The following example shows how to use this property while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintQueue.DefaultPrintTicket" />
      </Docs>
    </Member>
  </Members>
</Type>
