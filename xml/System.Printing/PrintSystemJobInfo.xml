<Type Name="PrintSystemJobInfo" FullName="System.Printing.PrintSystemJobInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="716813300ad761155ab078e3e23a299853c1ff91" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86796279" /></Metadata><TypeSignature Language="C#" Value="public class PrintSystemJobInfo : System.Printing.PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintSystemJobInfo extends System.Printing.PrintSystemObject" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintSystemJobInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintSystemJobInfo&#xA;Inherits PrintSystemObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintSystemJobInfo : System::Printing::PrintSystemObject" />
  <TypeSignature Language="F#" Value="type PrintSystemJobInfo = class&#xA;    inherit PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintSystemJobInfo extends System.Printing.PrintSystemObject" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4ed88-101">详细定义打印作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-101">Defines a print job in detail.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-102">此类没有公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="4ed88-102">This class has no public constructor.</span></span> <span data-ttu-id="4ed88-103">若要获取对对象的引用 <xref:System.Printing.PrintSystemJobInfo> ，请使用静态 <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> 方法或以下 <xref:System.Printing.PrintQueue> 实例方法之一： <xref:System.Printing.PrintQueue.GetJob%2A> 、 <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> 或 <xref:System.Printing.PrintQueue.AddJob%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-103">To get a reference to a <xref:System.Printing.PrintSystemJobInfo> object, use the static <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> method or one of the following <xref:System.Printing.PrintQueue> instance methods: <xref:System.Printing.PrintQueue.GetJob%2A>, <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>, or <xref:System.Printing.PrintQueue.AddJob%2A>.</span></span>  
  
 <span data-ttu-id="4ed88-104">许多打印作业属性（例如作业是否已完成）必须先从打印机传递到 <xref:System.Printing.PrintSystemJobInfo> 对象，然后应用程序才能读取相应的属性 (<xref:System.Printing.PrintSystemJobInfo.IsCompleted%2A>) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-104">Many print job properties, such as whether a job is completed, must be passed from the printer to the <xref:System.Printing.PrintSystemJobInfo> object before your application reads the corresponding property (<xref:System.Printing.PrintSystemJobInfo.IsCompleted%2A>).</span></span> <span data-ttu-id="4ed88-105"><xref:System.Printing.PrintSystemJobInfo.Refresh%2A>方法提供此功能。</span><span class="sxs-lookup"><span data-stu-id="4ed88-105">The <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method provides this functionality.</span></span>  
  
 <span data-ttu-id="4ed88-106">同样，如果应用程序更改属性的值 <xref:System.Printing.PrintSystemJobInfo.JobName%2A> ，则必须将更改写入计算机上的打印队列实用工具中。</span><span class="sxs-lookup"><span data-stu-id="4ed88-106">Similarly, when your application changes the value of the <xref:System.Printing.PrintSystemJobInfo.JobName%2A> property, the change must be written to the print queue utility on the computer.</span></span> <span data-ttu-id="4ed88-107"><xref:System.Printing.PrintSystemJobInfo.Commit%2A>方法提供此功能。</span><span class="sxs-lookup"><span data-stu-id="4ed88-107">The <xref:System.Printing.PrintSystemJobInfo.Commit%2A> method provides this functionality.</span></span>  
  
 <span data-ttu-id="4ed88-108">如果从派生 <xref:System.Printing.PrintSystemJobInfo> 具有其他可写属性的类，则必须实现和方法的重写 <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> <xref:System.Printing.PrintSystemJobInfo.Commit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-108">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional writable properties, then you must implement an override of the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> and <xref:System.Printing.PrintSystemJobInfo.Commit%2A> methods.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4ed88-109">命名空间中的类 <xref:System.Printing> 不支持在 Windows 服务或 ASP.NET 应用程序或服务中使用。</span><span class="sxs-lookup"><span data-stu-id="4ed88-109">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="4ed88-110">尝试从这些应用程序类型之一中使用这些类可能会产生意外的问题，例如降低服务性能和运行时异常。</span><span class="sxs-lookup"><span data-stu-id="4ed88-110">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="4ed88-111">如果要从 Windows 窗体应用程序进行打印，请参阅 <xref:System.Drawing.Printing> 命名空间。</span><span class="sxs-lookup"><span data-stu-id="4ed88-111">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="printSystemJobInfo.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ed88-112">取消打印作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-112">Cancels the print job.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-113">下面的示例演示如何使用此方法取消打印作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-113">The following example shows how to use this method to cancel print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="printSystemJobInfo.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ed88-114">将 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对象属性的任何更改写入该对象所代表的实际打印作业中。</span><span class="sxs-lookup"><span data-stu-id="4ed88-114">Writes any changes to the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object to the actual print job that the object represents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-115">只有 <xref:System.Printing.PrintSystemJobInfo.JobName%2A> 属性是可写的。</span><span class="sxs-lookup"><span data-stu-id="4ed88-115">Only the <xref:System.Printing.PrintSystemJobInfo.JobName%2A> property is writable.</span></span> <span data-ttu-id="4ed88-116">如果派生的类 <xref:System.Printing.PrintSystemJobInfo> 具有其他可写属性，则必须使用自己的实现来重写 <xref:System.Printing.PrintSystemJobInfo.Commit%2A> 和 <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4ed88-116">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional writable properties, you must override the <xref:System.Printing.PrintSystemJobInfo.Commit%2A> and <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> methods with implementations of your own.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static System.Printing.PrintSystemJobInfo Get (System.Printing.PrintQueue printQueue, int jobIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Printing.PrintSystemJobInfo Get(class System.Printing.PrintQueue printQueue, int32 jobIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Get (printQueue As PrintQueue, jobIdentifier As Integer) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Printing::PrintSystemJobInfo ^ Get(System::Printing::PrintQueue ^ printQueue, int jobIdentifier);" />
      <MemberSignature Language="F#" Value="static member Get : System.Printing.PrintQueue * int -&gt; System.Printing.PrintSystemJobInfo" Usage="System.Printing.PrintSystemJobInfo.Get (printQueue, jobIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="jobIdentifier" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="4ed88-117">承载打印作业的打印队列。</span><span class="sxs-lookup"><span data-stu-id="4ed88-117">The print queue hosting the print job.</span></span></param>
        <param name="jobIdentifier"><span data-ttu-id="4ed88-118">打印作业的数字 ID。</span><span class="sxs-lookup"><span data-stu-id="4ed88-118">A numerical ID for the print job.</span></span></param>
        <summary><span data-ttu-id="4ed88-119">在指定的 <see cref="T:System.Printing.PrintSystemJobInfo" /> 中获取指定作业的 <see cref="T:System.Printing.PrintQueue" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-119">Gets the <see cref="T:System.Printing.PrintSystemJobInfo" /> for the specified job in the specified <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="4ed88-120">与 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对应的 <paramref name="jobIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-120">The <see cref="T:System.Printing.PrintSystemJobInfo" /> that corresponds to the <paramref name="jobIdentifier" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-121">还可以将方法用于 <xref:System.Printing.PrintQueue.GetJob%2A?displayProperty=nameWithType> 相同的目的。</span><span class="sxs-lookup"><span data-stu-id="4ed88-121">You can also use the <xref:System.Printing.PrintQueue.GetJob%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintQueue.GetJob(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HostingPrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue HostingPrintQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue HostingPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.HostingPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostingPrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ HostingPrintQueue { System::Printing::PrintQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintQueue : System.Printing.PrintQueue" Usage="System.Printing.PrintSystemJobInfo.HostingPrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-122">获取承载打印作业的打印队列。</span><span class="sxs-lookup"><span data-stu-id="4ed88-122">Gets the print queue that is hosting the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-123">一个 <see cref="T:System.Printing.PrintQueue" /> 值，表示拥有打印作业的打印队列。</span><span class="sxs-lookup"><span data-stu-id="4ed88-123">A <see cref="T:System.Printing.PrintQueue" /> value that represents the print queue that owns the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-124">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-124">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingPrintServer">
      <MemberSignature Language="C#" Value="public System.Printing.PrintServer HostingPrintServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintServer HostingPrintServer" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.HostingPrintServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostingPrintServer As PrintServer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintServer ^ HostingPrintServer { System::Printing::PrintServer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintServer : System.Printing.PrintServer" Usage="System.Printing.PrintSystemJobInfo.HostingPrintServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-125">获取承载打印作业的打印队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="4ed88-125">Gets the print server that is hosting the print queue for the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-126">一个 <see cref="T:System.Printing.PrintServer" /> 值，表示拥有打印作业的 <see cref="T:System.Printing.PrintQueue" /> 的宿主打印服务器（通常是一台计算机）。</span><span class="sxs-lookup"><span data-stu-id="4ed88-126">A <see cref="T:System.Printing.PrintServer" /> value that represents the hosting print server (usually a computer) for the <see cref="T:System.Printing.PrintQueue" /> that owns the print job.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override sealed void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : bool -&gt; unit" Usage="printSystemJobInfo.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="4ed88-127">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-127"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="4ed88-128">释放由 <see cref="T:System.Printing.PrintSystemJobInfo" /> 占用的非托管资源，还可以选择释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="4ed88-128">Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintSystemJobInfo" /> and optionally, releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBlocked">
      <MemberSignature Language="C#" Value="public bool IsBlocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlocked" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsBlocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBlocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBlocked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBlocked : bool" Usage="System.Printing.PrintSystemJobInfo.IsBlocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-129">获取一个值，该值指示打印作业是否因被阻止而没有打印。</span><span class="sxs-lookup"><span data-stu-id="4ed88-129">Gets a value that indicates whether the print job is blocked and therefore, not printing.</span></span></summary>
        <value><span data-ttu-id="4ed88-130">如果已阻止打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-130"><see langword="true" /> if the print job is blocked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-131">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-131">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Printing.PrintSystemJobInfo.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-132">获取一个值，该值指示打印作业是否已完成。</span><span class="sxs-lookup"><span data-stu-id="4ed88-132">Gets a value that indicates whether the print job is finished.</span></span></summary>
        <value><span data-ttu-id="4ed88-133">如果已完成打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-133"><see langword="true" /> if the print job is finished; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-134">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-134">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeleted">
      <MemberSignature Language="C#" Value="public bool IsDeleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsDeleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleted : bool" Usage="System.Printing.PrintSystemJobInfo.IsDeleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-135">获取一个值，该值指示打印作业（由 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对象表示）是否已从打印队列中删除。</span><span class="sxs-lookup"><span data-stu-id="4ed88-135">Gets a value that indicates whether the print job, which is represented by the <see cref="T:System.Printing.PrintSystemJobInfo" /> object, was deleted from the print queue.</span></span></summary>
        <value><span data-ttu-id="4ed88-136">如果已删除打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-136"><see langword="true" /> if the print job was deleted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-137">最初，对象可以将自己的状态报告为 "已删除"，但要记住的是， <xref:System.Printing.PrintSystemJobInfo> 对象只 *表示* 真实的打印作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-137">It may seem paradoxical at first that an object can report its own status as deleted, but keep in mind that the <xref:System.Printing.PrintSystemJobInfo> object only *represents* a real print job.</span></span> <span data-ttu-id="4ed88-138">从其打印队列中删除后，不会自动 <xref:System.Printing.PrintSystemJobInfo> 在应用程序中释放对象。</span><span class="sxs-lookup"><span data-stu-id="4ed88-138">Deleting the latter from its print queue does not automatically dispose of the <xref:System.Printing.PrintSystemJobInfo> object in your application.</span></span> <span data-ttu-id="4ed88-139">同样，该对象不会从已 <xref:System.Printing.PrintJobInfoCollection> 删除其代表的打印作业之前创建的任何中删除。</span><span class="sxs-lookup"><span data-stu-id="4ed88-139">Similarly, the object is not removed from any <xref:System.Printing.PrintJobInfoCollection> that was created before the print job it represents was deleted.</span></span> <span data-ttu-id="4ed88-140">例如，如果在 <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> 删除打印作业之前运行方法，则返回的集合将包含 <xref:System.Printing.PrintSystemJobInfo> 表示打印作业的对象。</span><span class="sxs-lookup"><span data-stu-id="4ed88-140">For example, if the <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> method is run before the print job was deleted, the returned collection will include a <xref:System.Printing.PrintSystemJobInfo> object that represents the print job.</span></span> <span data-ttu-id="4ed88-141">删除打印作业时，不会从集合中删除此对象。</span><span class="sxs-lookup"><span data-stu-id="4ed88-141">This object is not removed from the collection when the print job is deleted.</span></span> <span data-ttu-id="4ed88-142">但如果 <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> 随后再次运行，则返回的集合将不包含表示已删除打印作业的成员。</span><span class="sxs-lookup"><span data-stu-id="4ed88-142">But if <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> is then run again, the returned collection will have no members that represent the deleted print jobs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-143">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-143">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeleting">
      <MemberSignature Language="C#" Value="public bool IsDeleting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsDeleting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleting : bool" Usage="System.Printing.PrintSystemJobInfo.IsDeleting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-144">获取一个值，该值指示是否正在从打印队列中删除打印作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-144">Gets a value that indicates whether the print job is being deleted from the print queue.</span></span></summary>
        <value><span data-ttu-id="4ed88-145">如果正在删除打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-145"><see langword="true" /> if the print job is being deleted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-146">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-146">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInError">
      <MemberSignature Language="C#" Value="public bool IsInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInError" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInError : bool" Usage="System.Printing.PrintSystemJobInfo.IsInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-147">获取一个值，该值指示错误条件是否与打印作业相关联。</span><span class="sxs-lookup"><span data-stu-id="4ed88-147">Gets a value that indicates whether an error condition is associated with the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-148">如果错误条件与打印作业相关联，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-148"><see langword="true" /> if an error condition is associated with the print job; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-149">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-149">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Printing.PrintSystemJobInfo.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-150">获取一个值，该值指示打印机是否脱机。</span><span class="sxs-lookup"><span data-stu-id="4ed88-150">Gets a value that indicates whether the printer is offline.</span></span></summary>
        <value><span data-ttu-id="4ed88-151">如果打印机脱机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-151"><see langword="true" /> if the printer is offline; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-152">此值将传播到 <xref:System.Printing.PrintSystemJobInfo> 宿主的属性中的所有对象 <xref:System.Printing.PrintQueue.IsOffline%2A> <xref:System.Printing.PrintQueue> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-152">This value is propagated to all the <xref:System.Printing.PrintSystemJobInfo> objects from the <xref:System.Printing.PrintQueue.IsOffline%2A> property of the hosting <xref:System.Printing.PrintQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-153">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-153">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaperOut">
      <MemberSignature Language="C#" Value="public bool IsPaperOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaperOut" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPaperOut" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaperOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaperOut { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaperOut : bool" Usage="System.Printing.PrintSystemJobInfo.IsPaperOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-154">获取一个值，该值指示打印机是否已用完打印作业所需的纸张大小和类型。</span><span class="sxs-lookup"><span data-stu-id="4ed88-154">Gets a value that indicates whether the printer has run out of the paper size and type that the print job requires.</span></span></summary>
        <value><span data-ttu-id="4ed88-155">如果打印机已用完所需的纸张，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-155"><see langword="true" /> if the printer has run out of the required paper; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-156">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-156">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Printing.PrintSystemJobInfo.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-157">获取一个值，该值指示打印作业是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="4ed88-157">Gets a value that indicates whether the print job is paused.</span></span></summary>
        <value><span data-ttu-id="4ed88-158">如果打印作业已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-158"><see langword="true" /> if the print job is paused; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-159">还可以暂停整个打印队列。</span><span class="sxs-lookup"><span data-stu-id="4ed88-159">The entire print queue can also be paused.</span></span> <span data-ttu-id="4ed88-160">例如， <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A?displayProperty=nameWithType> `false` 当属性的值为时，的值可以是 <xref:System.Printing.PrintQueue.IsPaused%2A?displayProperty=nameWithType> `true` 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-160">For example, the value of <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A?displayProperty=nameWithType> can be `false` even when the value of the <xref:System.Printing.PrintQueue.IsPaused%2A?displayProperty=nameWithType> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-161">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-161">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
      </Docs>
    </Member>
    <Member MemberName="IsPrinted">
      <MemberSignature Language="C#" Value="public bool IsPrinted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPrinted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinted : bool" Usage="System.Printing.PrintSystemJobInfo.IsPrinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-162">获取一个值，该值指示打印作业是否已打印。</span><span class="sxs-lookup"><span data-stu-id="4ed88-162">Gets a value that indicates whether the print job printed.</span></span></summary>
        <value><span data-ttu-id="4ed88-163">如果打印作业已打印，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-163"><see langword="true" /> if the print job has printed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-164">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-164">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrinting">
      <MemberSignature Language="C#" Value="public bool IsPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinting : bool" Usage="System.Printing.PrintSystemJobInfo.IsPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-165">获取一个值，该值指示打印作业是否正在被打印。</span><span class="sxs-lookup"><span data-stu-id="4ed88-165">Gets a value that indicates whether the print job is being printed.</span></span></summary>
        <value><span data-ttu-id="4ed88-166">如果打印机正在打印，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-166"><see langword="true" /> if the printer is printing; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-167">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-167">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRestarted">
      <MemberSignature Language="C#" Value="public bool IsRestarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestarted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsRestarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRestarted : bool" Usage="System.Printing.PrintSystemJobInfo.IsRestarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-168">获取一个值，该值指示打印作业是否已重新启动。</span><span class="sxs-lookup"><span data-stu-id="4ed88-168">Gets a value that indicates whether the print job has been restarted.</span></span></summary>
        <value><span data-ttu-id="4ed88-169">如果打印机正在打印，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-169"><see langword="true" /> if the printer is printing; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-170">当重新启动某个作业时，它会完全打印。</span><span class="sxs-lookup"><span data-stu-id="4ed88-170">When a job is restarted, it prints in its entirety.</span></span> <span data-ttu-id="4ed88-171">使用方法重新启动对比度 <xref:System.Printing.PrintSystemJobInfo.Resume%2A> ，这会在暂停时恢复作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-171">Contrast restarting with using the <xref:System.Printing.PrintSystemJobInfo.Resume%2A> method, which resumes a job at the point it was paused.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="IsRetained">
      <MemberSignature Language="C#" Value="public bool IsRetained { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRetained" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsRetained" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRetained As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRetained { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRetained : bool" Usage="System.Printing.PrintSystemJobInfo.IsRetained" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-172">获取一个值，该值指示打印作业在被打印后是否已保存到队列中。</span><span class="sxs-lookup"><span data-stu-id="4ed88-172">Gets a value that indicates whether the print job was saved in the queue after it printed.</span></span></summary>
        <value><span data-ttu-id="4ed88-173">如果已保存打印作业，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-173"><see langword="true" /> if the print job was saved; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-174">如果 <xref:System.Printing.PrintQueue.KeepPrintedJobs%2A> 对象的属性 <xref:System.Printing.PrintQueue> 设置为 `true` ，并且队列的属性已使用的方法提交， <xref:System.Printing.PrintQueue.Commit%2A> 则打印队列将保留打印的作业 <xref:System.Printing.PrintQueue> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-174">A print queue retains printed jobs if the <xref:System.Printing.PrintQueue.KeepPrintedJobs%2A> property of the <xref:System.Printing.PrintQueue> object is set to `true` and if the properties of the queue have been committed with the <xref:System.Printing.PrintQueue.Commit%2A> method of the <xref:System.Printing.PrintQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpooling">
      <MemberSignature Language="C#" Value="public bool IsSpooling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpooling" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsSpooling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpooling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpooling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpooling : bool" Usage="System.Printing.PrintSystemJobInfo.IsSpooling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-175">获取一个值，该值指示打印作业是否正在进行后台处理。</span><span class="sxs-lookup"><span data-stu-id="4ed88-175">Gets a value that indicates whether the print job is being spooled.</span></span></summary>
        <value><span data-ttu-id="4ed88-176">如果打印作业正在进行后台处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-176"><see langword="true" /> if the print job is being spooled; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-177">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-177">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInterventionRequired">
      <MemberSignature Language="C#" Value="public bool IsUserInterventionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserInterventionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsUserInterventionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserInterventionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserInterventionRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUserInterventionRequired : bool" Usage="System.Printing.PrintSystemJobInfo.IsUserInterventionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-178">获取一个值，该值指示打印机是否需要用户干预。</span><span class="sxs-lookup"><span data-stu-id="4ed88-178">Gets a value that indicates whether the printer needs user intervention.</span></span></summary>
        <value><span data-ttu-id="4ed88-179">如果需要用户干预，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-179"><see langword="true" /> if user intervention is needed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-180">此值将传播到 <xref:System.Printing.PrintSystemJobInfo> 宿主的属性中的所有对象 <xref:System.Printing.PrintQueue.NeedUserIntervention%2A> <xref:System.Printing.PrintQueue> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-180">This value propagates to all <xref:System.Printing.PrintSystemJobInfo> objects from the <xref:System.Printing.PrintQueue.NeedUserIntervention%2A> property of the hosting <xref:System.Printing.PrintQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-181">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-181">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobIdentifier">
      <MemberSignature Language="C#" Value="public int JobIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobIdentifier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobIdentifier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.JobIdentifier : int" Usage="System.Printing.PrintSystemJobInfo.JobIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-182">获取打印作业的标识号。</span><span class="sxs-lookup"><span data-stu-id="4ed88-182">Gets the identification number for the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-183">一个标识打印作业的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-183">An <see cref="T:System.Int32" /> that identifies the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-184">使用的编号系统由打印服务器的操作系统和打印服务器是计算机还是打印服务器设备确定。</span><span class="sxs-lookup"><span data-stu-id="4ed88-184">Which numbering system is used is determined by the operating system of the print server and whether the print server is a computer or a print server appliance.</span></span> <span data-ttu-id="4ed88-185">例如，Microsoft Windows XP 的操作系统以这种方式确定编号：打开打印服务器时，如果其所有打印队列都为空，则由任何用户在服务器上提交的第一个打印作业，并为其分配 ID 号2。</span><span class="sxs-lookup"><span data-stu-id="4ed88-185">For example, the operating system for Microsoft Windows XP determines the numbering in this way: when a print server is turned on, if all its print queues are empty, the first print job submitted on the server by any user and to any queue is assigned ID number 2.</span></span> <span data-ttu-id="4ed88-186">为服务器上的每个后续作业分配一个数字，该数字比该服务器上的上一个打印作业要大1。</span><span class="sxs-lookup"><span data-stu-id="4ed88-186">Each subsequent job on the server is assigned a number that is one greater than the previous print job on that server.</span></span>  
  
 <span data-ttu-id="4ed88-187">打印作业的打印队列对其编号没有影响：如果作业按顺序发送到 QueueA、QueueB 和 QueueA，则 QueueA 具有作业2和4，QueueB 具有作业3。</span><span class="sxs-lookup"><span data-stu-id="4ed88-187">The print queue for the print job has no effect on its number: if jobs are sent to QueueA, QueueB, and QueueA, in that order, then QueueA has jobs 2 and 4, and QueueB has job 3.</span></span>  
  
 <span data-ttu-id="4ed88-188">为作业分配一个数字后，该数字将永远不会更改，即使其他作业完成打印或被取消或者服务器已重新启动。</span><span class="sxs-lookup"><span data-stu-id="4ed88-188">After a job is assigned a number, the number never changes, even if other jobs finish printing or are canceled, or if the server is restarted.</span></span> <span data-ttu-id="4ed88-189">如果在服务器重新启动时一个或多个队列中已经有作业，则会为第一个新作业分配一个编号，该编号大于服务器启动时队列中的最高编号作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-189">If there are already jobs in one or more queues when the server is restarted, the first new job is assigned a number that is one greater than the highest numbered job that was in the queue when the server started.</span></span> <span data-ttu-id="4ed88-190">但是，在重新启动之前，打印服务器不会重复使用数字。</span><span class="sxs-lookup"><span data-stu-id="4ed88-190">However, until it restarts, a print server does not reuse a number.</span></span> <span data-ttu-id="4ed88-191">即使编号最大的作业在打印前被取消，下一个作业也会获得一个较高的数字。</span><span class="sxs-lookup"><span data-stu-id="4ed88-191">Even if the highest numbered job is canceled before it is printed, the next job gets a number that is one higher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-192">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-192">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobName">
      <MemberSignature Language="C#" Value="public string JobName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JobName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobName" />
      <MemberSignature Language="VB.NET" Value="Public Property JobName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ JobName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.JobName : string with get, set" Usage="System.Printing.PrintSystemJobInfo.JobName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-193">获取或设置打印作业的名称。</span><span class="sxs-lookup"><span data-stu-id="4ed88-193">Gets or sets a name for the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-194">打印作业的 <see cref="T:System.String" /> 名称。</span><span class="sxs-lookup"><span data-stu-id="4ed88-194">A <see cref="T:System.String" /> name for the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-195">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-195">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobSize">
      <MemberSignature Language="C#" Value="public int JobSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobSize" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.JobSize : int" Usage="System.Printing.PrintSystemJobInfo.JobSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-196">获取打印作业的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="4ed88-196">Get the size, in bytes, of the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-197">一个 <see cref="T:System.Int32" />，它指示打印作业的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="4ed88-197">An <see cref="T:System.Int32" /> that states the size, in bytes, of the print job.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JobStatus">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobStatus JobStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintJobStatus JobStatus" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobStatus As PrintJobStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobStatus JobStatus { System::Printing::PrintJobStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.JobStatus : System.Printing.PrintJobStatus" Usage="System.Printing.PrintSystemJobInfo.JobStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-198">获取打印作业的当前状态。</span><span class="sxs-lookup"><span data-stu-id="4ed88-198">Gets the current status of the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-199">一个 <see cref="T:System.Printing.PrintJobStatus" /> 值。</span><span class="sxs-lookup"><span data-stu-id="4ed88-199">A <see cref="T:System.Printing.PrintJobStatus" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-200">此方法为您提供了一种避免单独检查每个状态属性的方法，例如 <xref:System.Printing.PrintSystemJobInfo.IsPrinting%2A> 和 <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-200">This method gives you a means to avoid individually checking each of the status properties, such as <xref:System.Printing.PrintSystemJobInfo.IsPrinting%2A> and <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-201">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-201">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobattributes)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobattributes)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream JobStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream JobStream" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ JobStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JobStream : System.IO.Stream" Usage="System.Printing.PrintSystemJobInfo.JobStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-202">获取对打印作业的 <see cref="T:System.IO.Stream" /> 的引用。</span><span class="sxs-lookup"><span data-stu-id="4ed88-202">Gets a reference to the <see cref="T:System.IO.Stream" /> of the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-203">一个包含打印作业的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-203">A <see cref="T:System.IO.Stream" /> that contains the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-204">从 Windows 8 及更高版本的操作系统上的 .NET Framework 4.5 开始，写入到此流的数据必须作为包流的 XPS 格式。</span><span class="sxs-lookup"><span data-stu-id="4ed88-204">Starting with the .NET Framework 4.5 on Windows 8 and later versions of the operating system, data written to this stream must be in XPS format as a package stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfPages">
      <MemberSignature Language="C#" Value="public int NumberOfPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfPages" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.NumberOfPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfPages { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfPages : int" Usage="System.Printing.PrintSystemJobInfo.NumberOfPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-205">获取打印作业中的页数。</span><span class="sxs-lookup"><span data-stu-id="4ed88-205">Gets the number of pages in the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-206">一个 <see cref="T:System.Int32" />，它指示打印作业的页数。</span><span class="sxs-lookup"><span data-stu-id="4ed88-206">An <see cref="T:System.Int32" /> that states the number of pages in the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-207">页面是纸张或其他打印介质的一侧。</span><span class="sxs-lookup"><span data-stu-id="4ed88-207">A page is one side of a sheet of paper or other print media.</span></span>  
  
 <span data-ttu-id="4ed88-208">下表显示了此属性的值和所用的工作表的数量如何受打印作业是否对双面打印 (双工) ，无论是调用多页打印还是同时为两者都调用。</span><span class="sxs-lookup"><span data-stu-id="4ed88-208">The following table shows how the value of this property, and the number of sheets used, is affected by whether the print job calls for two-sided printing (duplexing), whether it calls for multiple pages-per-sheet, or whether it calls for both.</span></span>  
  
### <a name="how-duplexing-and-multipage-printing-affect-printing"></a><span data-ttu-id="4ed88-209">双面打印和多页打印如何影响打印</span><span class="sxs-lookup"><span data-stu-id="4ed88-209">How duplexing and multipage printing affect printing</span></span>  
  
|<span data-ttu-id="4ed88-210">打印</span><span class="sxs-lookup"><span data-stu-id="4ed88-210">Duplexing</span></span>|<span data-ttu-id="4ed88-211">每页页数</span><span class="sxs-lookup"><span data-stu-id="4ed88-211">Pages per sheet</span></span>|<span data-ttu-id="4ed88-212">NumberOfPages 的值</span><span class="sxs-lookup"><span data-stu-id="4ed88-212">Value of NumberOfPages</span></span>|<span data-ttu-id="4ed88-213">纸张的物理页数</span><span class="sxs-lookup"><span data-stu-id="4ed88-213">Number of physical sheets of paper</span></span>|  
|---------------|---------------------|----------------------------|----------------------------------------|  
|<span data-ttu-id="4ed88-214">否</span><span class="sxs-lookup"><span data-stu-id="4ed88-214">No</span></span>|<span data-ttu-id="4ed88-215">1</span><span class="sxs-lookup"><span data-stu-id="4ed88-215">1</span></span>|<span data-ttu-id="4ed88-216">与文档中的页数相同。</span><span class="sxs-lookup"><span data-stu-id="4ed88-216">Identical to the number of pages in the document.</span></span>|<span data-ttu-id="4ed88-217">与文档中的页数相同。</span><span class="sxs-lookup"><span data-stu-id="4ed88-217">Identical to the number of pages in the document.</span></span>|  
|<span data-ttu-id="4ed88-218">是</span><span class="sxs-lookup"><span data-stu-id="4ed88-218">Yes</span></span>|<span data-ttu-id="4ed88-219">1</span><span class="sxs-lookup"><span data-stu-id="4ed88-219">1</span></span>|<span data-ttu-id="4ed88-220">与文档中的页数相同。</span><span class="sxs-lookup"><span data-stu-id="4ed88-220">Identical to the number of pages in the document.</span></span>|<span data-ttu-id="4ed88-221">文档页÷ 2 (向上舍入) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-221">Document pages ÷ 2 (rounded up).</span></span>|  
|<span data-ttu-id="4ed88-222">否</span><span class="sxs-lookup"><span data-stu-id="4ed88-222">No</span></span>|<span data-ttu-id="4ed88-223">多种</span><span class="sxs-lookup"><span data-stu-id="4ed88-223">Multiple</span></span>|<span data-ttu-id="4ed88-224">文档页在每张纸上增加页 (向上舍入) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-224">Document pages ÷ Pages per sheet (rounded up).</span></span>|<span data-ttu-id="4ed88-225">文档页在每张纸上增加页 (向上舍入) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-225">Document pages ÷ Pages per sheet (rounded up).</span></span>|  
|<span data-ttu-id="4ed88-226">是</span><span class="sxs-lookup"><span data-stu-id="4ed88-226">Yes</span></span>|<span data-ttu-id="4ed88-227">多种</span><span class="sxs-lookup"><span data-stu-id="4ed88-227">Multiple</span></span>|<span data-ttu-id="4ed88-228">文档页在每张纸上增加页 (向上舍入) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-228">Document pages ÷ Pages per sheet (rounded up).</span></span>|<span data-ttu-id="4ed88-229">[文档页每个工作表的页÷页面] ÷ 2 (向上舍入) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-229">[Document pages ÷ Pages per sheet] ÷ 2 (rounded up).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintTicket.Duplexing" />
        <altmember cref="P:System.Printing.PrintTicket.PagesPerSheet" />
      </Docs>
    </Member>
    <Member MemberName="NumberOfPagesPrinted">
      <MemberSignature Language="C#" Value="public int NumberOfPagesPrinted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfPagesPrinted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfPagesPrinted As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfPagesPrinted { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfPagesPrinted : int" Usage="System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-230">获取已打印的页数。</span><span class="sxs-lookup"><span data-stu-id="4ed88-230">Gets the number of pages that have already printed.</span></span></summary>
        <value><span data-ttu-id="4ed88-231">一个 <see cref="T:System.Int32" />，它指示已打印的页数。</span><span class="sxs-lookup"><span data-stu-id="4ed88-231">An <see cref="T:System.Int32" /> that states the number of pages that have already printed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="printSystemJobInfo.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ed88-232">暂停打印作业，直到 <see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> 运行。</span><span class="sxs-lookup"><span data-stu-id="4ed88-232">Halts printing of the job until <see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> runs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-233">如果队列中有另一个作业，则会在当前作业暂停时开始打印。</span><span class="sxs-lookup"><span data-stu-id="4ed88-233">If another job is in the queue, it begins printing when the current job is paused.</span></span>  
  
 <span data-ttu-id="4ed88-234">宿主 <xref:System.Printing.PrintQueue> 还具有 <xref:System.Printing.PrintQueue.Pause%2A> 和 <xref:System.Printing.PrintQueue.Resume%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4ed88-234">The hosting <xref:System.Printing.PrintQueue> also has <xref:System.Printing.PrintQueue.Pause%2A> and <xref:System.Printing.PrintQueue.Resume%2A> methods.</span></span> <span data-ttu-id="4ed88-235">如果打印队列已暂停，恢复单个作业不会导致该作业恢复打印。</span><span class="sxs-lookup"><span data-stu-id="4ed88-235">If the print queue is paused, resuming an individual job does not cause that job to resume printing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
      </Docs>
    </Member>
    <Member MemberName="PositionInPrintQueue">
      <MemberSignature Language="C#" Value="public int PositionInPrintQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionInPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.PositionInPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositionInPrintQueue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionInPrintQueue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PositionInPrintQueue : int" Usage="System.Printing.PrintSystemJobInfo.PositionInPrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-236">获取打印作业在打印队列中的位置。</span><span class="sxs-lookup"><span data-stu-id="4ed88-236">Gets the print job's place in the print queue.</span></span></summary>
        <value><span data-ttu-id="4ed88-237">一个 <see cref="T:System.Int32" />，它指示打印作业在打印队列中的位置。</span><span class="sxs-lookup"><span data-stu-id="4ed88-237">An <see cref="T:System.Int32" /> that states the print job's place in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobPriority Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintJobPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.Priority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Priority As PrintJobPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobPriority Priority { System::Printing::PrintJobPriority get(); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Printing.PrintJobPriority" Usage="System.Printing.PrintSystemJobInfo.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-238">获取一个非数字表达式，该表达式表示打印作业相对于打印队列中其他作业的优先级。</span><span class="sxs-lookup"><span data-stu-id="4ed88-238">Gets a non-numerical expression that represents the priority of the print job relative to other jobs in the print queue.</span></span></summary>
        <value><span data-ttu-id="4ed88-239">一个 <see cref="T:System.Printing.PrintJobPriority" />，表示打印作业的优先级，如 <see cref="F:System.Printing.PrintJobPriority.Maximum" />、<see cref="F:System.Printing.PrintJobPriority.Minimum" />、<see cref="F:System.Printing.PrintJobPriority.Default" /> 或 <see cref="F:System.Printing.PrintJobPriority.None" />。</span><span class="sxs-lookup"><span data-stu-id="4ed88-239">A <see cref="T:System.Printing.PrintJobPriority" /> that represents the priority of the print job as <see cref="F:System.Printing.PrintJobPriority.Maximum" />, <see cref="F:System.Printing.PrintJobPriority.Minimum" />, <see cref="F:System.Printing.PrintJobPriority.Default" />, or <see cref="F:System.Printing.PrintJobPriority.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="printSystemJobInfo.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ed88-240">更新 <see cref="T:System.Printing.PrintSystemJobInfo" /> 对象的属性，以便它们的值与该对象所代表的实际打印作业的值相匹配。</span><span class="sxs-lookup"><span data-stu-id="4ed88-240">Updates the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object so that their values match the values of the actual print job that the object represents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-241">对对象的属性所做的任何更改都 <xref:System.Printing.PrintSystemJobInfo> 必须使用方法写入实际打印作业 <xref:System.Printing.PrintSystemJobInfo.Commit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-241">Any changes that you make to the properties of a <xref:System.Printing.PrintSystemJobInfo> object must be written to the actual print job by using the <xref:System.Printing.PrintSystemJobInfo.Commit%2A> method.</span></span> <span data-ttu-id="4ed88-242">当该方法运行时，所有未提交的更改都将丢失 <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-242">Any changes that you have not committed are lost when the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method runs.</span></span>  
  
 <span data-ttu-id="4ed88-243">如果从派生 <xref:System.Printing.PrintSystemJobInfo> 具有其他属性的类，则必须 <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> 用自己的实现重写方法。</span><span class="sxs-lookup"><span data-stu-id="4ed88-243">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional properties, then you must override the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method with an implementation of your own.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Commit" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="printSystemJobInfo.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ed88-244">从头开始重新启动打印作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-244">Restarts a print job from the beginning.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-245">或者，您可以使用 <xref:System.Printing.PrintSystemJobInfo.Resume%2A> 方法，该方法将重新启动暂停的打印作业，并从暂停的点开始。</span><span class="sxs-lookup"><span data-stu-id="4ed88-245">Optionally, you can use the <xref:System.Printing.PrintSystemJobInfo.Resume%2A> method, which restarts a paused print job, starting at the point it was paused.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="printSystemJobInfo.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ed88-246">继续打印暂停的打印作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-246">Resumes the printing of a paused print job.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-247">宿主 <xref:System.Printing.PrintQueue> 还具有 <xref:System.Printing.PrintQueue.Pause%2A> 和 <xref:System.Printing.PrintQueue.Resume%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4ed88-247">The hosting <xref:System.Printing.PrintQueue> also has <xref:System.Printing.PrintQueue.Pause%2A> and <xref:System.Printing.PrintQueue.Resume%2A> methods.</span></span> <span data-ttu-id="4ed88-248">如果打印队列已暂停，则恢复单个作业不会恢复打印作业的打印。</span><span class="sxs-lookup"><span data-stu-id="4ed88-248">If the print queue is paused, resuming an individual job does not resume the printing of the print job.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-249">下面的示例演示如何使用此方法恢复暂停的打印作业。</span><span class="sxs-lookup"><span data-stu-id="4ed88-249">The following example shows how to use this method to resume a paused print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
      </Docs>
    </Member>
    <Member MemberName="StartTimeOfDay">
      <MemberSignature Language="C#" Value="public int StartTimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartTimeOfDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeOfDay : int" Usage="System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-250">获取一天中打印作业可以开始打印的最早时间，用协调世界时 (UTC)（也称为格林尼治标准时间 [GMT]）午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="4ed88-250">Gets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</span></span></summary>
        <value><span data-ttu-id="4ed88-251">一个 <see cref="T:System.Int32" />，指定打印作业可能的最早开始时间，用 (UTC) 午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="4ed88-251">An <see cref="T:System.Int32" /> specifying the earliest possible start time for the print job, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="4ed88-252">最大值为 1439。</span><span class="sxs-lookup"><span data-stu-id="4ed88-252">The maximum value is 1439.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-253"><xref:System.Printing.PrintSystemJobInfo> <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> <xref:System.Printing.PrintQueue> 在作业进入队列时，此值会从托管的属性传播到每个对象。</span><span class="sxs-lookup"><span data-stu-id="4ed88-253">This value is propagated to each <xref:System.Printing.PrintSystemJobInfo> object from the <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> property of the hosting <xref:System.Printing.PrintQueue> at the time the job enters the queue.</span></span> <span data-ttu-id="4ed88-254">如果 <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> 更改，则 <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A?displayProperty=nameWithType> 早于的任何值都将 <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> 更改为的值 <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-254">If <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> is changed, then any <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A?displayProperty=nameWithType> value that is earlier than <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> is changed to the value of <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4ed88-255">将作业添加到队列后，可以 <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> 通过提供新值 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] （前提是它不早于） <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-255">After the job is added to the queue, it can be given a new <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> value through the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], provided that it is not earlier than <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4ed88-256">如果你不在 UTC 时区，则必须添加或减去60的倍数，才能获取时区的正确时间。</span><span class="sxs-lookup"><span data-stu-id="4ed88-256">If you are not in the UTC time zone, you must add or subtract multiples of 60 to get the correct time for your time zone.</span></span> <span data-ttu-id="4ed88-257">例如，如果你处于太平洋时区的北美并且夏令时不起作用，则本地时间比 UTC 早8小时。</span><span class="sxs-lookup"><span data-stu-id="4ed88-257">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="4ed88-258">如果 <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> 返回960，则意味着 16:00 (4:00 PM) UTC (，因为 960/60 = 16) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-258">If <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> returns 960, that means 16:00 (4:00 PM) in UTC (because 960/60 = 16).</span></span> <span data-ttu-id="4ed88-259">若要将此转换为太平洋时间，则必须将 480 (= 8 \* 60) 分钟。</span><span class="sxs-lookup"><span data-stu-id="4ed88-259">To convert this to Pacific Time, you must subtract 480 (= 8 \* 60) minutes.</span></span>  
  
 <span data-ttu-id="4ed88-260">还必须记住，时间在24小时后会滚动到零 (即，1439th 分钟后) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-260">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="4ed88-261">如果 <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> 返回120，表示 UTC 中的 2:00 AM。</span><span class="sxs-lookup"><span data-stu-id="4ed88-261">If <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> returns 120, that means 2:00 AM in UTC.</span></span> <span data-ttu-id="4ed88-262">若要将此转换为太平洋时间，必须减去480分钟，这会导致-360。</span><span class="sxs-lookup"><span data-stu-id="4ed88-262">To convert this to Pacific Time, you must subtract 480 minutes, which results in -360.</span></span> <span data-ttu-id="4ed88-263">若要获取有意义的正值，请将负数添加到一天的总分钟数1440，结果为 1080 (6:00 PM) 太平洋时间的最终值。</span><span class="sxs-lookup"><span data-stu-id="4ed88-263">To get a positive value that has meaning, add the negative number to the total minutes in a day, 1440, resulting in a final value of 1080 (6:00 PM) Pacific Time.</span></span>  
  
 <span data-ttu-id="4ed88-264"><xref:System.TimeZone> <xref:System.TimeSpan> <xref:System.DateTime> 有关帮助进行时区调整的方法，请参阅、和。</span><span class="sxs-lookup"><span data-stu-id="4ed88-264">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> for methods that help make time-zone adjustments.</span></span>  
  
 <span data-ttu-id="4ed88-265">如果打印机始终可用，则此属性在所有时区都返回0。</span><span class="sxs-lookup"><span data-stu-id="4ed88-265">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-266">下面的示例演示如何在诊断有问题的打印作业的过程中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-266">The following example shows how to use this property as part of the process of diagnosing a problematic print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#usingjobstartanduntiltimes)]
 [!code-csharp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#usingjobstartanduntiltimes)]
 [!code-vb[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#usingjobstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="Submitter">
      <MemberSignature Language="C#" Value="public string Submitter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Submitter" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.Submitter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Submitter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Submitter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Submitter : string" Usage="System.Printing.PrintSystemJobInfo.Submitter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-267">获取提交打印作业的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="4ed88-267">Gets the name of the user who submitted the print job.</span></span></summary>
        <value><span data-ttu-id="4ed88-268">一个 <see cref="T:System.String" />，它标识提交打印作业的用户。</span><span class="sxs-lookup"><span data-stu-id="4ed88-268">A <see cref="T:System.String" /> that identifies the user who submitted the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ed88-269">下面的示例演示如何在诊断打印作业的问题时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-269">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeJobSubmitted">
      <MemberSignature Language="C#" Value="public DateTime TimeJobSubmitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeJobSubmitted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.TimeJobSubmitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeJobSubmitted As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeJobSubmitted { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeJobSubmitted : DateTime" Usage="System.Printing.PrintSystemJobInfo.TimeJobSubmitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-270">获取提交打印作业的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="4ed88-270">Gets the date and time that the print job is submitted.</span></span></summary>
        <value><span data-ttu-id="4ed88-271">一个 <see cref="T:System.DateTime" /> 对象，它包含提交打印作业的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="4ed88-271">A <see cref="T:System.DateTime" /> object containing the date and time that the print job is submitted.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSinceStartedPrinting">
      <MemberSignature Language="C#" Value="public int TimeSinceStartedPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TimeSinceStartedPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeSinceStartedPrinting As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TimeSinceStartedPrinting { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeSinceStartedPrinting : int" Usage="System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-272">获取自打印作业开始打印后已过去的时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="4ed88-272">Gets the time, in milliseconds, since the print job started printing.</span></span></summary>
        <value><span data-ttu-id="4ed88-273">一个 <see cref="T:System.Int32" />，它表示打印作业开始后已过去的时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="4ed88-273">An <see cref="T:System.Int32" /> that represents the time, in milliseconds, since the print job started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UntilTimeOfDay">
      <MemberSignature Language="C#" Value="public int UntilTimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UntilTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UntilTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UntilTimeOfDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UntilTimeOfDay : int" Usage="System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ed88-274">获取一天中打印作业可以开始打印的最晚时间，用协调世界时 (UTC)（也称为格林尼治标准时间 [GMT]）午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="4ed88-274">Gets the last time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</span></span></summary>
        <value><span data-ttu-id="4ed88-275">一个 <see cref="T:System.Int32" />，指定作业可以打印的最晚时间，用 (UTC) 午夜过后的分钟数表示。</span><span class="sxs-lookup"><span data-stu-id="4ed88-275">An <see cref="T:System.Int32" /> that specifies the last time that the job can print, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="4ed88-276">最大值为 1439。</span><span class="sxs-lookup"><span data-stu-id="4ed88-276">The maximum value is 1439.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ed88-277"><xref:System.Printing.PrintSystemJobInfo> <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> <xref:System.Printing.PrintQueue> 在作业进入队列时，此值会从托管的属性传播到每个对象。</span><span class="sxs-lookup"><span data-stu-id="4ed88-277">This value is propagated to each <xref:System.Printing.PrintSystemJobInfo> object from the <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> property of the hosting <xref:System.Printing.PrintQueue> at the time the job enters the queue.</span></span> <span data-ttu-id="4ed88-278">如果 <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> 更改，则任何 <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A?displayProperty=nameWithType> 晚于的值 <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> 都将更改为的值 <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-278">If <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> is changed, then any <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A?displayProperty=nameWithType> value that is later than <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> is changed to the value of <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4ed88-279">将作业添加到队列后，可以通过提供新 <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> 值 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] （前提是它不晚于） <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-279">After the job is added to the queue, it can be given a new <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> value through the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], provided that it is not later than <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4ed88-280">如果你不在 UTC 时区，则必须添加或减去60的倍数，才能获取时区的正确时间。</span><span class="sxs-lookup"><span data-stu-id="4ed88-280">If you are not in the UTC time zone, you must add or subtract multiples of 60 to get the correct time for your time zone.</span></span> <span data-ttu-id="4ed88-281">例如，如果你处于太平洋时区的北美并且夏令时不起作用，则本地时间比 UTC 早8小时。</span><span class="sxs-lookup"><span data-stu-id="4ed88-281">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="4ed88-282">如果 <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> 返回960，则意味着 16:00 (4:00 PM) UTC (，因为 960/60 = 16) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-282">If <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> returns 960, that means 16:00 (4:00 PM) in UTC (because 960/60 = 16).</span></span> <span data-ttu-id="4ed88-283">若要将此转换为太平洋时间，则必须将 480 (= 8 \* 60) 分钟。</span><span class="sxs-lookup"><span data-stu-id="4ed88-283">To convert this to Pacific Time, you must subtract 480 (= 8 \* 60) minutes.</span></span>  
  
 <span data-ttu-id="4ed88-284">还必须记住，时间在24小时后会滚动到零 (即，1439th 分钟后) 。</span><span class="sxs-lookup"><span data-stu-id="4ed88-284">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="4ed88-285">如果 <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> 返回120，表示 UTC 中的 2:00 AM。</span><span class="sxs-lookup"><span data-stu-id="4ed88-285">If <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> returns 120, that means 2:00 AM in UTC.</span></span> <span data-ttu-id="4ed88-286">若要将此转换为太平洋时间，必须减去480分钟，这会导致-360。</span><span class="sxs-lookup"><span data-stu-id="4ed88-286">To convert this to Pacific Time, you must subtract 480 minutes, which results in -360.</span></span> <span data-ttu-id="4ed88-287">若要获取有意义的正值，请将负数添加到一天的总分钟数1440，结果为 1080 (6:00 PM) 太平洋时间的最终值。</span><span class="sxs-lookup"><span data-stu-id="4ed88-287">To get a positive value that has meaning, add the negative number to the total minutes in a day, 1440, resulting in a final value of 1080 (6:00 PM) Pacific Time.</span></span>  
  
 <span data-ttu-id="4ed88-288"><xref:System.TimeZone> <xref:System.TimeSpan> <xref:System.DateTime> 有关帮助进行时区调整的方法，请参阅、和。</span><span class="sxs-lookup"><span data-stu-id="4ed88-288">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> for methods that help make time-zone adjustments.</span></span>  
  
 <span data-ttu-id="4ed88-289">如果打印机始终可用，则此属性在所有时区都返回0。</span><span class="sxs-lookup"><span data-stu-id="4ed88-289">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ed88-290">下面的示例演示如何在诊断有问题的打印作业的过程中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4ed88-290">The following example shows how to use this property as part of the process of diagnosing a problematic print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#usingjobstartanduntiltimes)]
 [!code-csharp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#usingjobstartanduntiltimes)]
 [!code-vb[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#usingjobstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      </Docs>
    </Member>
  </Members>
</Type>
