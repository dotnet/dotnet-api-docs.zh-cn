<Type Name="PrintQueueCollection" FullName="System.Printing.PrintQueueCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3bce960e80845277cfb0010ebe33576b41b7b36" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89785642" /></Metadata><TypeSignature Language="C#" Value="public class PrintQueueCollection : System.Printing.PrintSystemObjects, IDisposable, System.Collections.Generic.IEnumerable&lt;System.Printing.PrintQueue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintQueueCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintQueue&gt;, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintQueueCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintQueueCollection&#xA;Inherits PrintSystemObjects&#xA;Implements IDisposable, IEnumerable(Of PrintQueue)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintQueueCollection : System::Printing::PrintSystemObjects, IDisposable, System::Collections::Generic::IEnumerable&lt;System::Printing::PrintQueue ^&gt;" />
  <TypeSignature Language="F#" Value="type PrintQueueCollection = class&#xA;    inherit PrintSystemObjects&#xA;    interface seq&lt;PrintQueue&gt;&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintQueueCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintQueue&gt;, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObjects</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Printing.PrintQueue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="17ae3-101">表示 <see cref="T:System.Printing.PrintQueue" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="17ae3-101">Represents a collection of <see cref="T:System.Printing.PrintQueue" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="17ae3-102">命名空间中的类 <xref:System.Printing> 不支持在 Windows 服务或 ASP.NET 应用程序或服务中使用。</span><span class="sxs-lookup"><span data-stu-id="17ae3-102">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="17ae3-103">尝试从这些应用程序类型之一中使用这些类可能会产生意外的问题，例如降低服务性能和运行时异常。</span><span class="sxs-lookup"><span data-stu-id="17ae3-103">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="17ae3-104">如果要从 Windows 窗体应用程序进行打印，请参阅 <xref:System.Drawing.Printing> 命名空间。</span><span class="sxs-lookup"><span data-stu-id="17ae3-104">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17ae3-105">下面的示例演示如何使用此集合来测试打印机的功能，并配置打印作业以利用这些功能。</span><span class="sxs-lookup"><span data-stu-id="17ae3-105">The following example shows how to use this collection to test a printer's capabilities and configure a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17ae3-106">初始化 <see cref="T:System.Printing.PrintQueueCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="17ae3-106">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17ae3-107">初始化 <see cref="T:System.Printing.PrintQueueCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="17ae3-107">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection (System.Printing.PrintServer printServer, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, propertyFilter As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection(System::Printing::PrintServer ^ printServer, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueueCollection : System.Printing.PrintServer * string[] -&gt; System.Printing.PrintQueueCollection" Usage="new System.Printing.PrintQueueCollection (printServer, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17ae3-108">承载此集合的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="17ae3-108">The print server that hosts the collection.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="17ae3-109">已初始化的集合成员的属性。</span><span class="sxs-lookup"><span data-stu-id="17ae3-109">The properties of the collection members that are initialized.</span></span></param>
        <summary><span data-ttu-id="17ae3-110">为指定的 <see cref="T:System.Printing.PrintServer" /> 初始化 <see cref="T:System.Printing.PrintQueueCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="17ae3-110">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class for the specified <see cref="T:System.Printing.PrintServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ae3-111">仅初始化字符串数组中列出的属性。</span><span class="sxs-lookup"><span data-stu-id="17ae3-111">Only the properties that are listed in the string array are initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueueCollection (System.Printing.PrintServer printServer, string[] propertyFilter, System.Printing.EnumeratedPrintQueueTypes[] enumerationFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string[] propertyFilter, valuetype System.Printing.EnumeratedPrintQueueTypes[] enumerationFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (printServer As PrintServer, propertyFilter As String(), enumerationFlag As EnumeratedPrintQueueTypes())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueueCollection(System::Printing::PrintServer ^ printServer, cli::array &lt;System::String ^&gt; ^ propertyFilter, cli::array &lt;System::Printing::EnumeratedPrintQueueTypes&gt; ^ enumerationFlag);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueueCollection : System.Printing.PrintServer * string[] * System.Printing.EnumeratedPrintQueueTypes[] -&gt; System.Printing.PrintQueueCollection" Usage="new System.Printing.PrintQueueCollection (printServer, propertyFilter, enumerationFlag)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
        <Parameter Name="enumerationFlag" Type="System.Printing.EnumeratedPrintQueueTypes[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17ae3-112">承载此集合的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="17ae3-112">The print server that hosts the collection.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="17ae3-113">已初始化的集合成员的属性。</span><span class="sxs-lookup"><span data-stu-id="17ae3-113">The properties of the collection members that are initialized.</span></span></param>
        <param name="enumerationFlag"><span data-ttu-id="17ae3-114">一个用于指定集合中包含的打印队列类型的数组。</span><span class="sxs-lookup"><span data-stu-id="17ae3-114">An array that specifies the types of print queues that are included in the collection.</span></span></param>
        <summary><span data-ttu-id="17ae3-115">为指定的 <see cref="T:System.Printing.PrintQueueCollection" /> 初始化 <see cref="T:System.Printing.PrintServer" /> 类的一个新实例，仅包含指定 <see cref="T:System.Printing.EnumeratedPrintQueueTypes" /> 的打印服务器的队列。</span><span class="sxs-lookup"><span data-stu-id="17ae3-115">Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class for the specified <see cref="T:System.Printing.PrintServer" />, containing only the print server's queues of the specified <see cref="T:System.Printing.EnumeratedPrintQueueTypes" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ae3-116">仅初始化字符串数组中列出的属性。</span><span class="sxs-lookup"><span data-stu-id="17ae3-116">Only the properties that are listed in the string array are initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Printing.PrintQueue printObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Printing.PrintQueue printObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (printObject As PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Printing::PrintQueue ^ printObject);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Printing.PrintQueue -&gt; unit" Usage="printQueueCollection.Add printObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printObject" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printObject"><span data-ttu-id="17ae3-117">已添加的打印队列。</span><span class="sxs-lookup"><span data-stu-id="17ae3-117">The print queue that is added.</span></span></param>
        <summary><span data-ttu-id="17ae3-118">将 <see cref="T:System.Printing.PrintQueue" /> 添加到集合。</span><span class="sxs-lookup"><span data-stu-id="17ae3-118">Adds a <see cref="T:System.Printing.PrintQueue" /> to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool A_0);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool A_0) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (A_0 As Boolean)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool A_0);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printQueueCollection.Dispose A_0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool ) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose ( As Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printQueueCollection.Dispose " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="17ae3-119">为 <see langword="true" /> 则释放托管资源和非托管资源；为 <see langword="false" /> 则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="17ae3-119"><see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <param name=""><span data-ttu-id="17ae3-120">为 <see langword="true" /> 则释放托管资源和非托管资源；为 <see langword="false" /> 则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="17ae3-120"><see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="17ae3-121">释放正在由 <see cref="T:System.Printing.PrintQueueCollection" /> 使用的非托管资源，也可以选择性地释放正在使用的托管资源。</span><span class="sxs-lookup"><span data-stu-id="17ae3-121">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintQueueCollection" />, and optionally releases the managed resources that are being used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ae3-122">此方法由公共 `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="17ae3-122">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="17ae3-123">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将未命名的布尔参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="17ae3-123">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="17ae3-124"><xref:System.Object.Finalize%2A> 调用 `Dispose` 并将参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="17ae3-124"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="17ae3-125">如果布尔参数为 `true` ，此方法将释放该引用的任何托管对象所持有的所有资源 <xref:System.Printing.PrintQueueCollection> 。</span><span class="sxs-lookup"><span data-stu-id="17ae3-125">When the Boolean parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.Printing.PrintQueueCollection> references.</span></span> <span data-ttu-id="17ae3-126">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="17ae3-126">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="17ae3-127">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="17ae3-127">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="17ae3-128">重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="17ae3-128">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="17ae3-129">有关如何实现的详细信息 <see langword="Dispose(Boolean)" /> ，请参阅 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="17ae3-129">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="17ae3-130">有关和的详细 <see langword="Dispose" /> 信息 <see cref="M:System.Object.Finalize" /> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="17ae3-130">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Printing.PrintQueue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator(Of PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Printing::PrintQueue ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;" Usage="printQueueCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Printing.PrintQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17ae3-131">返回一个对象，该对象用于实现使用 <see cref="T:System.Collections.IEnumerator" /> 关闭的泛型 <see cref="T:System.Printing.PrintQueue" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="17ae3-131">Returns an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that has been closed with <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="17ae3-132">实现泛型 <see cref="T:System.Collections.IEnumerator" /> 的对象，该对象可以循环访问 <see cref="T:System.Printing.PrintQueue" /> 所包含的 <see cref="T:System.Printing.PrintQueueCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="17ae3-132">An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ae3-133">建议使用 `foreach` 语句来循环访问集合的所有成员。</span><span class="sxs-lookup"><span data-stu-id="17ae3-133">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="17ae3-134"><xref:System.Printing.PrintQueueCollection.GetEnumerator%2A>仅在需要自定义迭代时使用，例如通过跳过其他每个成员。</span><span class="sxs-lookup"><span data-stu-id="17ae3-134">Use <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17ae3-135">下面的示例演示如何使用此方法来测试打印机的功能，并配置打印作业以利用这些功能。</span><span class="sxs-lookup"><span data-stu-id="17ae3-135">The following example shows how to use this method to test a printer's capabilities and configure a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonGenericEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetNonGenericEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetNonGenericEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNonGenericEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetNonGenericEnumerator();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="printQueueCollection.GetNonGenericEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetNonGenericEnumerator() = System::Collections::IEnumerable::GetEnumerator;" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17ae3-136">获取实现非泛型 <see cref="T:System.Collections.IEnumerator" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="17ae3-136">Gets an object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface.</span></span></summary>
        <returns><span data-ttu-id="17ae3-137">实现非泛型 <see cref="T:System.Collections.IEnumerator" /> 的对象，该对象可以循环访问 <see cref="T:System.Printing.PrintQueue" /> 所包含的 <see cref="T:System.Printing.PrintQueueCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="17ae3-137">An object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17ae3-138">建议使用 `foreach` 语句来循环访问集合的所有成员。</span><span class="sxs-lookup"><span data-stu-id="17ae3-138">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="17ae3-139">仅当需要自定义迭代（如跳过每个其他成员）时，才使用自己的枚举器对象。</span><span class="sxs-lookup"><span data-stu-id="17ae3-139">Use your own enumerator object only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
 <span data-ttu-id="17ae3-140">如果需要自己的枚举器，建议使用泛型、类型安全函数 <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> 而不是 <xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="17ae3-140">If you need your own enumerator, we recommend that you use the generic, type-safe function <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> instead of <xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A>.</span></span> <span data-ttu-id="17ae3-141"><xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A>仅限公共以满足 <xref:System.Collections.IEnumerable> 此集合实现的接口的要求。</span><span class="sxs-lookup"><span data-stu-id="17ae3-141">The <xref:System.Printing.PrintQueueCollection.GetNonGenericEnumerator%2A> is public only to fulfill the requirements of the <xref:System.Collections.IEnumerable> interface, which is implemented by this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public static object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueueCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Printing.PrintQueueCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17ae3-142">获取可用于同步对 <see cref="T:System.Printing.PrintQueueCollection" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="17ae3-142">Gets an object that can be used to synchronize access to the <see cref="T:System.Printing.PrintQueueCollection" />.</span></span></summary>
        <value><span data-ttu-id="17ae3-143">用于同步对集合的访问的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="17ae3-143">A <see cref="T:System.Object" /> that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueueCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="printQueueCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17ae3-144">返回一个对象，该对象用于实现使用 <see cref="T:System.Collections.IEnumerator" /> 关闭的泛型 <see cref="T:System.Printing.PrintQueue" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="17ae3-144">Returns an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that has been closed with <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="17ae3-145">实现泛型 <see cref="T:System.Collections.IEnumerator" /> 的对象，该对象可以循环访问 <see cref="T:System.Printing.PrintQueue" /> 所包含的 <see cref="T:System.Printing.PrintQueueCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="17ae3-145">An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="17ae3-146">建议使用 `foreach` 语句来循环访问集合的所有成员。</span><span class="sxs-lookup"><span data-stu-id="17ae3-146">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="17ae3-147"><xref:System.Printing.PrintQueueCollection.GetEnumerator%2A>仅在需要自定义迭代时使用，例如通过跳过其他每个成员。</span><span class="sxs-lookup"><span data-stu-id="17ae3-147">Use <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> only when you need to customize iteration, such as by skipping every other member.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
