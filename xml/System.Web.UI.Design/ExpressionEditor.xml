<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e79ba0b177355b1faae71d67bd8ce0ebbf666326" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86675725" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c61c9-101">定义一组属性和方法，用来计算设计时与控件属性关联的表达式，并向可视化设计宿主提供表达式编辑器表，以便在表达式编辑器对话框中使用。</span><span class="sxs-lookup"><span data-stu-id="c61c9-101">Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box.</span></span> <span data-ttu-id="c61c9-102">此类为抽象类。</span><span class="sxs-lookup"><span data-stu-id="c61c9-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61c9-103">可视化设计器宿主（如 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] ）使用 <xref:System.Web.UI.Design.ExpressionEditor> 类向用户显示自定义表达式编辑器表，然后计算所选表达式的设计时呈现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-103">A visual designer host, such as [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], uses the <xref:System.Web.UI.Design.ExpressionEditor> class to present custom expression editor sheets to the user, and then evaluate the selected expression for design-time rendering.</span></span>  
  
 <span data-ttu-id="c61c9-104">在 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> "设计时属性" 网格中浏览控件的属性时，可视化设计器将显示一个对话框，用于为控件属性设置表达式。</span><span class="sxs-lookup"><span data-stu-id="c61c9-104">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time Properties grid, the visual designer displays a dialog box to set expressions for a control property.</span></span> <span data-ttu-id="c61c9-105">您可以选择基于表达式前缀列表的表达式类型。</span><span class="sxs-lookup"><span data-stu-id="c61c9-105">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="c61c9-106">从列表中选择表达式前缀时，可视化设计器会使用关联的 <xref:System.Web.UI.Design.ExpressionEditor> 和 <xref:System.Web.UI.Design.ExpressionEditorSheet> 对象来设置、计算和转换基于该类型表达式的语法的表达式字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-106">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to set, evaluate, and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="c61c9-107">可视化设计器设置关联控件属性的表达式，然后使用计算的表达式结果来分配设计图面上呈现的控件属性值。</span><span class="sxs-lookup"><span data-stu-id="c61c9-107">The visual designer sets the expression for the associated control property, and then uses the evaluated expression result to assign control property values that are rendered on the design surface.</span></span>  
  
 <span data-ttu-id="c61c9-108">静态 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 方法获取与特定表达式前缀或表达式生成器关联的表达式编辑器。</span><span class="sxs-lookup"><span data-stu-id="c61c9-108">The static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> methods get the expression editor that is associated with a particular expression prefix or expression builder.</span></span> <span data-ttu-id="c61c9-109"><xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>对象的属性 <xref:System.Web.UI.Design.ExpressionEditor> 返回配置的表达式前缀。</span><span class="sxs-lookup"><span data-stu-id="c61c9-109">The <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property for an <xref:System.Web.UI.Design.ExpressionEditor> object returns the configured expression prefix.</span></span> <span data-ttu-id="c61c9-110"><xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>方法计算输入表达式的字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-110">The <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method evaluates an input expression string.</span></span> <span data-ttu-id="c61c9-111"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法返回用于在 <xref:System.Web.UI.Design.ExpressionEditorSheet> "表达式" 对话框中提示输入自定义表达式属性的实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-111">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns the <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that is used to prompt for the custom expression properties in the expressions dialog box.</span></span>  
  
 <span data-ttu-id="c61c9-112">通常，若要在设计时支持新的表达式类型，请定义唯一的表达式前缀，并提供自定义 <xref:System.Web.Compilation.ExpressionBuilder> 和 <xref:System.Web.UI.Design.ExpressionEditor> 实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-112">Typically, to support a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="c61c9-113">还可以提供自定义 <xref:System.Web.UI.Design.ExpressionEditorSheet> 实现，该实现定义用于在 "表达式" 对话框中构成表达式的属性。</span><span class="sxs-lookup"><span data-stu-id="c61c9-113">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression in the expressions dialog box.</span></span>  
  
 <span data-ttu-id="c61c9-114">表达式前缀标识自定义表达式类型，并将表达式与表达式生成器和表达式编辑器相关联。</span><span class="sxs-lookup"><span data-stu-id="c61c9-114">The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor.</span></span> <span data-ttu-id="c61c9-115">当在页中分析自定义表达式时，表达式前缀用于创建关联的和类的实例 <xref:System.Web.Compilation.ExpressionBuilder> <xref:System.Web.UI.Design.ExpressionEditor> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-115">When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.</span></span> <span data-ttu-id="c61c9-116">若要将表达式前缀与表达式生成器和表达式编辑器相关联，请将 <xref:System.Web.Compilation.ExpressionEditorAttribute> 和属性应用于 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 自定义 <xref:System.Web.Compilation.ExpressionBuilder> 类，并在 `expressionBuilders` Web 配置文件中的元素中为表达式生成器配置表达式前缀。</span><span class="sxs-lookup"><span data-stu-id="c61c9-116">To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span> <span data-ttu-id="c61c9-117">前缀不是必需的，但强烈建议使用。</span><span class="sxs-lookup"><span data-stu-id="c61c9-117">The prefix is not required, but highly recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61c9-118">下面的代码示例演示如何从 <xref:System.Web.UI.Design.ExpressionEditor> 类派生以定义自定义表达式编辑器。</span><span class="sxs-lookup"><span data-stu-id="c61c9-118">The following code example demonstrates how to derive from the <xref:System.Web.UI.Design.ExpressionEditor> class to define a custom expression editor.</span></span>  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="c61c9-119">派生自定义类时需要执行以下步骤 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> ：</span><span class="sxs-lookup"><span data-stu-id="c61c9-119">The following steps are required in deriving a custom <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class:</span></span> 
<span data-ttu-id="c61c9-120">-重写 <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> 方法以在设计时计算自定义表达式类型。</span><span class="sxs-lookup"><span data-stu-id="c61c9-120">-   Override the <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> method to evaluate the custom expression type at design time.</span></span>  
  
<span data-ttu-id="c61c9-121">-（可选）重写 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 方法以返回一个自定义类，该类定义组合以形成自定义表达式的属性。</span><span class="sxs-lookup"><span data-stu-id="c61c9-121">-   Optionally, override the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method to return a custom class that defines properties that are combined to form the custom expression.</span></span>  
  
<span data-ttu-id="c61c9-122">-在 <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> 类声明上应用 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 属性，将自定义表达式生成器与派生的表达式编辑器类相关联。</span><span class="sxs-lookup"><span data-stu-id="c61c9-122">-   Apply the <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> attribute on the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class declaration to associate the custom expression builder with the derived expression editor class.</span></span>  
  
<span data-ttu-id="c61c9-123">例如， <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> 类派生自 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 类，并提供用于在设计时计算资源字符串引用并将资源字符串引用与控件属性关联的实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-123">For example, the <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> class derives from the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="c61c9-124"><see cref="T:System.Web.Compilation.ResourceExpressionBuilder" />类与表达式前缀和实现相关联 <see langword="Resources" /> <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-124">The <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> class is associated with the expression prefix <see langword="Resources" /> and the <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> implementation.</span></span> <span data-ttu-id="c61c9-125"><see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />方法返回 <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> ，它定义构成资源引用表达式的各个属性。</span><span class="sxs-lookup"><span data-stu-id="c61c9-125">The <see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method returns a <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />, which defines the individual properties that form a resource reference expression.</span></span></para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c61c9-126">初始化 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c61c9-126">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61c9-127">由于 <xref:System.Web.UI.Design.ExpressionEditor> 类是抽象类，因此不能  <xref:System.Web.UI.Design.ExpressionEditor> 使用构造函数直接创建类的实例 <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-127">Because the <xref:System.Web.UI.Design.ExpressionEditor> class is abstract, you cannot create an instance of the  <xref:System.Web.UI.Design.ExpressionEditor> class directly using the <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c61c9-128">从类派生时 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> ，重写 <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> 构造函数以实现表达式编辑器实现的自定义初始化操作。</span><span class="sxs-lookup"><span data-stu-id="c61c9-128">When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> constructor to implement custom initialization actions for your expression editor implementation.</span></span></para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="c61c9-129">要计算的表达式字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-129">An expression string to evaluate.</span></span> <span data-ttu-id="c61c9-130">该表达式不包含表达式前缀。</span><span class="sxs-lookup"><span data-stu-id="c61c9-130">The expression does not include the expression prefix.</span></span></param>
        <param name="parseTimeData"><span data-ttu-id="c61c9-131">一个包含附加分析信息（用以计算 <paramref name="expression" />）的对象。</span><span class="sxs-lookup"><span data-stu-id="c61c9-131">An object containing additional parsing information for evaluating <paramref name="expression" />.</span></span> <span data-ttu-id="c61c9-132">这通常是由表达式生成器提供的。</span><span class="sxs-lookup"><span data-stu-id="c61c9-132">This typically is provided by the expression builder.</span></span></param>
        <param name="propertyType"><span data-ttu-id="c61c9-133"><paramref name="expression" /> 绑定到的控件属性的类型。</span><span class="sxs-lookup"><span data-stu-id="c61c9-133">The type of the control property to which <paramref name="expression" /> is bound.</span></span></param>
        <param name="serviceProvider"><span data-ttu-id="c61c9-134">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</span><span class="sxs-lookup"><span data-stu-id="c61c9-134">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span></span></param>
        <summary><span data-ttu-id="c61c9-135">计算表达式字符串并提供控件属性的设计时值。</span><span class="sxs-lookup"><span data-stu-id="c61c9-135">Evaluates an expression string and provides the design-time value for a control property.</span></span></summary>
        <returns><span data-ttu-id="c61c9-136">如果表达式计算成功，则为由计算的表达式字符串引用的对象；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c61c9-136">The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61c9-137">可视化设计器宿主使用 <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> 方法来计算表达式，并为关联的控件属性提供设计时值。</span><span class="sxs-lookup"><span data-stu-id="c61c9-137">The visual designer host uses the <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method to evaluate an expression and provide the design-time value for an associated control property.</span></span>  
  
 <span data-ttu-id="c61c9-138">可视化设计器使用 <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> 方法在设计时分析表达式字符串，然后使用 <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> 分析的表达式数据调用方法。</span><span class="sxs-lookup"><span data-stu-id="c61c9-138">The visual designer uses the <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> method to parse the expression string at design time, and then calls the <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method with the parsed expression data.</span></span> <span data-ttu-id="c61c9-139">可视化设计器使用计算的表达式结果来分配设计图面上呈现的控件属性值。</span><span class="sxs-lookup"><span data-stu-id="c61c9-139">The visual designer uses the evaluated expression result to assign control property values that are rendered on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c61c9-140">从类派生的类 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 必须重写 <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> 方法，以便在设计时计算自定义表达式类型。</span><span class="sxs-lookup"><span data-stu-id="c61c9-140">Classes deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class must override the <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> method to evaluate the custom expression type at design time.</span></span>  
  
<span data-ttu-id="c61c9-141"><see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />实现至少必须使用以下步骤：</span><span class="sxs-lookup"><span data-stu-id="c61c9-141">At a minimum, an <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> implementation must use the following steps:</span></span> 
<span data-ttu-id="c61c9-142">1.</span><span class="sxs-lookup"><span data-stu-id="c61c9-142">1.</span></span>  <span data-ttu-id="c61c9-143">计算表达式字符串并确定表达式引用的对象。</span><span class="sxs-lookup"><span data-stu-id="c61c9-143">Evaluate the expression string and determine the object that is referenced by the expression.</span></span>  
  
<span data-ttu-id="c61c9-144">2.</span><span class="sxs-lookup"><span data-stu-id="c61c9-144">2.</span></span>  <span data-ttu-id="c61c9-145"><see langword="null" />如果表达式字符串无法计算，则返回。</span><span class="sxs-lookup"><span data-stu-id="c61c9-145">Return <see langword="null" />, if the expression string cannot be evaluated.</span></span>  
  
<span data-ttu-id="c61c9-146">3.</span><span class="sxs-lookup"><span data-stu-id="c61c9-146">3.</span></span>  <span data-ttu-id="c61c9-147">使用 <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> 上的方法 <paramref name="propertyType" /> 来确定是否可以将引用的对象直接分配给控件属性类型，然后，根据结果，完成下列操作之一：</span><span class="sxs-lookup"><span data-stu-id="c61c9-147">Use the <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> method on <paramref name="propertyType" /> to determine whether the referenced object can be assigned directly to the control property type, and then, depending on the result, complete one of the following actions:</span></span> 
<span data-ttu-id="c61c9-148">-如果可将引用的对象直接分配给控件属性，则返回表达式的引用对象。</span><span class="sxs-lookup"><span data-stu-id="c61c9-148">-   If the referenced object can be assigned directly to the control property, return the referenced object for the expression.</span></span>  
  
<span data-ttu-id="c61c9-149">-如果引用的对象是简单类型（如字符串），则返回被引用对象。</span><span class="sxs-lookup"><span data-stu-id="c61c9-149">-   If the referenced object is a simple type, such as a string, return the referenced object.</span></span>  
  
<span data-ttu-id="c61c9-150">-否则，确定引用的对象是否可以分配给或转换为属性类型。</span><span class="sxs-lookup"><span data-stu-id="c61c9-150">-   Otherwise, determine whether the referenced object can be assigned to or converted to the property type.</span></span>  
  
<span data-ttu-id="c61c9-151">4.</span><span class="sxs-lookup"><span data-stu-id="c61c9-151">4.</span></span>  <span data-ttu-id="c61c9-152">对 <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> 对象使用方法， <see cref="T:System.ComponentModel.TypeConverter" /> <paramref name="propertyType" /> 以确定引用的对象是否可以转换为控件属性类型，然后，根据结果，完成以下操作之一：</span><span class="sxs-lookup"><span data-stu-id="c61c9-152">Use the <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> method on the <see cref="T:System.ComponentModel.TypeConverter" /> object for <paramref name="propertyType" /> to determine whether the referenced object can be converted to the control property type, and then, depending on the result, complete one of the following actions:</span></span> 
<span data-ttu-id="c61c9-153">-如果对象可转换为控件属性类型，则使用方法返回转换后的对象 <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-153">-   If the object can be converted to the control property type, return the converted object using the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> method.</span></span>  
  
<span data-ttu-id="c61c9-154">-如果无法向引用的对象赋值或将其转换为 <paramref name="propertyType" /> ，则返回被引用的对象。</span><span class="sxs-lookup"><span data-stu-id="c61c9-154">-   If the referenced object cannot be assigned or converted to <paramref name="propertyType" />, return the referenced object.</span></span>  
  
<span data-ttu-id="c61c9-155">或者， <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> 实现可以使用 <paramref name="parseTimeData" /> 由实现提供的对象 <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> 来优化或帮助计算输入表达式字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-155">Optionally, the <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> implementation can use the <paramref name="parseTimeData" /> object that is supplied by the <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> implementation to optimize or help in the evaluation of the input expression string.</span></span></para></block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c61c9-156">获取表达式前缀，该前缀标识受表达式编辑器实现支持的表达式字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-156">Gets the expression prefix that identifies expression strings that are supported by the expression editor implementation.</span></span></summary>
        <value><span data-ttu-id="c61c9-157">表示从 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 派生的类所支持的表达式前缀的字符串；否则，如果表达式编辑器没有关联的表达式前缀，则为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="c61c9-157">A string representing the prefix for expressions supported by the class derived from the <see cref="T:System.Web.UI.Design.ExpressionEditor" />; otherwise, an empty string (""), if the expression editor does not have an associated expression prefix.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61c9-158">表达式前缀标识自定义表达式类型，并将表达式与表达式生成器和表达式编辑器相关联。</span><span class="sxs-lookup"><span data-stu-id="c61c9-158">The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor.</span></span> <span data-ttu-id="c61c9-159">当在页中分析自定义表达式时，表达式前缀用于创建关联的和类的实例 <xref:System.Web.Compilation.ExpressionBuilder> <xref:System.Web.UI.Design.ExpressionEditor> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-159">When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.</span></span> <span data-ttu-id="c61c9-160">若要将表达式前缀与表达式生成器和表达式编辑器相关联，请将 <xref:System.Web.Compilation.ExpressionEditorAttribute> 和属性应用于 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 自定义 <xref:System.Web.Compilation.ExpressionBuilder> 类，并在 `expressionBuilders` Web 配置文件中的元素中为表达式生成器配置表达式前缀。</span><span class="sxs-lookup"><span data-stu-id="c61c9-160">To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="c61c9-161">通常，派生类不重写 <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="c61c9-161">Typically, derived classes do not override the <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property.</span></span> <span data-ttu-id="c61c9-162">基类 <xref:System.Web.UI.Design.ExpressionEditor> <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> 根据 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 关联对象的特性设置值 <xref:System.Web.Compilation.ExpressionBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-162">The base <xref:System.Web.UI.Design.ExpressionEditor> class sets the <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> value based on the <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute for the associated <xref:System.Web.Compilation.ExpressionBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c61c9-163">返回与表达式前缀或表达式生成器关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-163">Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with an expression prefix or expression builder.</span></span></summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix"><span data-ttu-id="c61c9-164">用来查找相关联的表达式编辑器的表达式前缀。</span><span class="sxs-lookup"><span data-stu-id="c61c9-164">The expression prefix used to find the associated expression editor.</span></span></param>
        <param name="serviceProvider"><span data-ttu-id="c61c9-165">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</span><span class="sxs-lookup"><span data-stu-id="c61c9-165">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span></span></param>
        <summary><span data-ttu-id="c61c9-166">返回一个与指定的表达式前缀相关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-166">Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression prefix.</span></span></summary>
        <returns><span data-ttu-id="c61c9-167">与 <paramref name="expressionPrefix" /> 关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现；否则，如果未定义 <paramref name="expressionPrefix" /> 或者未将它与 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 关联，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c61c9-167">An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionPrefix" />; otherwise, <see langword="null" />, if <paramref name="expressionPrefix" /> is not defined or is not associated with an <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61c9-168">使用静态 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 方法重载可查找 <xref:System.Web.UI.Design.ExpressionEditor> 与特定表达式前缀或表达式生成器类型关联的对象。</span><span class="sxs-lookup"><span data-stu-id="c61c9-168">Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type.</span></span>  
  
 <span data-ttu-id="c61c9-169">对于每个自定义表达式类型，表达式前缀标识关联的表达式生成器和表达式编辑器。</span><span class="sxs-lookup"><span data-stu-id="c61c9-169">For each custom expression type, an expression prefix identifies the associated expression builder and expression editor.</span></span> <span data-ttu-id="c61c9-170">当在页中分析自定义表达式时，表达式前缀用于创建关联的和类的实例 <xref:System.Web.Compilation.ExpressionBuilder> <xref:System.Web.UI.Design.ExpressionEditor> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-170">When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.</span></span>  
  
 <span data-ttu-id="c61c9-171">若要将表达式前缀与表达式生成器和表达式编辑器相关联，请将 <xref:System.Web.Compilation.ExpressionEditorAttribute> 和属性应用于 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 自定义 <xref:System.Web.Compilation.ExpressionBuilder> 类，并在 `expressionBuilders` Web 配置文件中的元素中为表达式生成器配置表达式前缀。</span><span class="sxs-lookup"><span data-stu-id="c61c9-171">To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="c61c9-172">若要查找表达式前缀的关联表达式编辑器，该 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 方法可枚举 <xref:System.Web.Compilation.ExpressionBuilder> 匹配前缀的可用实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-172">To find the associated expression editor for an expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations for a matching prefix.</span></span> <span data-ttu-id="c61c9-173"><xref:System.Web.Compilation.ExpressionBuilder>可在 `expressionBuilders` Web 配置文件的节中配置实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-173">The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file.</span></span> <span data-ttu-id="c61c9-174">如果可用 <xref:System.Web.Compilation.ExpressionBuilder> 实现定义表达式前缀，则 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 方法返回在元数据的特性中指定的类型 <xref:System.Web.Compilation.ExpressionEditorAttribute> <xref:System.Web.Compilation.ExpressionBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-174">If an available <xref:System.Web.Compilation.ExpressionBuilder> implementation defines the expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c61c9-175"><paramref name="serviceProvider" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c61c9-175"><paramref name="serviceProvider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType"><span data-ttu-id="c61c9-176">派生的表达式生成器类的类型，用于定位相关联的表达式编辑器。</span><span class="sxs-lookup"><span data-stu-id="c61c9-176">The type of the derived expression builder class, used to locate the associated expression editor.</span></span></param>
        <param name="serviceProvider"><span data-ttu-id="c61c9-177">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</span><span class="sxs-lookup"><span data-stu-id="c61c9-177">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span></span></param>
        <summary><span data-ttu-id="c61c9-178">返回一个与指定表达式生成器类型相关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-178">Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression builder type.</span></span></summary>
        <returns><span data-ttu-id="c61c9-179">与 <paramref name="expressionBuilderType" /> 关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现；否则，如果无法定位 <paramref name="expressionBuilderType" /> 或者它没有关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c61c9-179">An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionBuilderType" />; otherwise, <see langword="null" />, if <paramref name="expressionBuilderType" /> cannot be located or has no associated <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61c9-180">使用静态 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 重载查找 <xref:System.Web.UI.Design.ExpressionEditor> 与特定表达式前缀或表达式生成器类型关联的对象。</span><span class="sxs-lookup"><span data-stu-id="c61c9-180">Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type.</span></span>  
  
 <span data-ttu-id="c61c9-181">对于每个自定义表达式类型，表达式前缀标识关联的表达式生成器和表达式编辑器。</span><span class="sxs-lookup"><span data-stu-id="c61c9-181">For each custom expression type, an expression prefix identifies the associated expression builder and expression editor.</span></span> <span data-ttu-id="c61c9-182">当在页中分析自定义表达式时，表达式前缀用于创建关联的和类的实例 <xref:System.Web.Compilation.ExpressionBuilder> <xref:System.Web.UI.Design.ExpressionEditor> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-182">When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.</span></span>  
  
 <span data-ttu-id="c61c9-183">若要将表达式前缀与表达式生成器和表达式编辑器相关联，请将 <xref:System.Web.Compilation.ExpressionEditorAttribute> 和属性应用于 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 自定义 <xref:System.Web.Compilation.ExpressionBuilder> 类，并在 `expressionBuilders` Web 配置文件中的元素中为表达式生成器配置表达式前缀。</span><span class="sxs-lookup"><span data-stu-id="c61c9-183">To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="c61c9-184"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>方法枚举可查找的可用 <xref:System.Web.Compilation.ExpressionBuilder> 实现 `expressionBuilderType` 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-184">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations to locate `expressionBuilderType`.</span></span> <span data-ttu-id="c61c9-185"><xref:System.Web.Compilation.ExpressionBuilder>可在 `expressionBuilders` Web 配置文件的节中配置实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-185">The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file.</span></span> <span data-ttu-id="c61c9-186">如果 `expressionBuilderType` 在可用的实现集中找到 <xref:System.Web.Compilation.ExpressionBuilder> ，则 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 方法返回在元数据的特性中指定的类型 <xref:System.Web.Compilation.ExpressionEditorAttribute> <xref:System.Web.Compilation.ExpressionBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-186">If `expressionBuilderType` is found in the set of available <xref:System.Web.Compilation.ExpressionBuilder> implementations, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c61c9-187"><paramref name="expressionBuilderType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c61c9-187"><paramref name="expressionBuilderType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c61c9-188">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c61c9-188">-or-</span></span> 
 <span data-ttu-id="c61c9-189"><paramref name="serviceProvider" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c61c9-189"><paramref name="serviceProvider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="c61c9-190">为控件属性设置的表达式字符串，用于初始化表达式编辑器表。</span><span class="sxs-lookup"><span data-stu-id="c61c9-190">The expression string set for a control property, used to initialize the expression editor sheet.</span></span></param>
        <param name="serviceProvider"><span data-ttu-id="c61c9-191">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</span><span class="sxs-lookup"><span data-stu-id="c61c9-191">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span></span></param>
        <summary><span data-ttu-id="c61c9-192">返回与当前表达式编辑器相关联的表达式编辑器表。</span><span class="sxs-lookup"><span data-stu-id="c61c9-192">Returns an expression editor sheet that is associated with the current expression editor.</span></span></summary>
        <returns><span data-ttu-id="c61c9-193">一个 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />，定义自定义的表达式的属性。</span><span class="sxs-lookup"><span data-stu-id="c61c9-193">An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> that defines the custom expression properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61c9-194"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法返回一个 <xref:System.Web.UI.Design.ExpressionEditorSheet> 实现，该实现定义组合起来以形成自定义表达式的字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-194">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns an <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines the strings that are combined to form a custom expression.</span></span> <span data-ttu-id="c61c9-195">可视化设计器使用表达式编辑器表来提示要合并到自定义表达式中的一个或多个字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-195">The visual designer uses an expression editor sheet to prompt for one or more strings that combine into a custom expression.</span></span> <span data-ttu-id="c61c9-196">基类方法返回一个默认表达式编辑器表，该编辑器使用单个输入字符串形成表达式。</span><span class="sxs-lookup"><span data-stu-id="c61c9-196">The base class method returns a default expression editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="c61c9-197">表达式编辑器表定义表达式的属性网格。</span><span class="sxs-lookup"><span data-stu-id="c61c9-197">The expression editor sheet defines the property grid for the expression.</span></span> <span data-ttu-id="c61c9-198">因此，表达式编辑器公开的属性将成为可为对话框中的表达式定义的属性。</span><span class="sxs-lookup"><span data-stu-id="c61c9-198">Therefore, the properties that the expression editor exposes become properties that can be defined for the expression in the dialog box.</span></span>  
  
 <span data-ttu-id="c61c9-199">从类派生的类 <xref:System.Web.UI.Design.ExpressionEditor> 可以选择重写 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 方法以提供自定义表达式编辑器表。</span><span class="sxs-lookup"><span data-stu-id="c61c9-199">Classes deriving from the <xref:System.Web.UI.Design.ExpressionEditor> class optionally can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to provide a custom expression editor sheet.</span></span> <span data-ttu-id="c61c9-200">自定义表达式编辑器表可以允许多个属性的设计时输入，这些属性组合在一起形成表达式字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-200">A custom expression editor sheet can allow design-time input for multiple properties, which are combined together to form the expression string.</span></span>  
  
 <span data-ttu-id="c61c9-201">例如， <xref:System.Web.UI.Design.ResourceExpressionEditor> 类派生自 <xref:System.Web.UI.Design.ExpressionEditor> 类，并提供用于在设计时计算资源字符串引用并将资源字符串引用与控件属性关联的实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-201">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="c61c9-202"><xref:System.Web.Compilation.ResourceExpressionBuilder>类与表达式前缀和实现相关联 `Resources` <xref:System.Web.UI.Design.ResourceExpressionEditor> 。</span><span class="sxs-lookup"><span data-stu-id="c61c9-202">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="c61c9-203"><xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType>方法返回 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> ，它定义构成资源引用表达式的各个属性。</span><span class="sxs-lookup"><span data-stu-id="c61c9-203">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c61c9-204">通常，若要在设计时提供新的表达式类型，请定义唯一的表达式前缀，并提供自定义 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 和 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="c61c9-204">Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <see cref="T:System.Web.Compilation.ExpressionBuilder" /> and <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementations.</span></span> <span data-ttu-id="c61c9-205">还可以提供自定义 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 实现，该实现定义用于构成表达式的属性。</span><span class="sxs-lookup"><span data-stu-id="c61c9-205">Optionally, you can provide a custom <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> implementation that defines properties that are used to form the expression.</span></span> <span data-ttu-id="c61c9-206">即使配置文件定义了前缀，也应应用 <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> 对象和 <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c61c9-206">Even though the configuration file defines the prefix, you should also apply an <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> object and an <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> object.</span></span>  
  
<span data-ttu-id="c61c9-207">重写 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 方法以返回定义自定义表达式中多个属性的设计时输入的表达式编辑器表。</span><span class="sxs-lookup"><span data-stu-id="c61c9-207">Override the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method to return an expression editor sheet that defines design-time input for multiple properties in a custom expression.</span></span> <span data-ttu-id="c61c9-208">选择控件属性和表达式编辑器类型时，可视化设计器 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 会调用方法，然后提供为控件属性设置的当前表达式字符串。</span><span class="sxs-lookup"><span data-stu-id="c61c9-208">When you select a control property and the expression editor type, the visual designer calls the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, and then supplies the current expression string that is set for the control property.</span></span> <span data-ttu-id="c61c9-209">使用 <paramref name="expression" /> 设置表达式属性的初始值。</span><span class="sxs-lookup"><span data-stu-id="c61c9-209">Use <paramref name="expression" /> to set the initial values for the expression properties.</span></span> <span data-ttu-id="c61c9-210">使用 <paramref name="serviceProvider" /> 初始化自定义表达式表构造函数并访问设计器宿主提供的服务。</span><span class="sxs-lookup"><span data-stu-id="c61c9-210">Use <paramref name="serviceProvider" /> to initialize a custom expression sheet constructor and to access services that are provided by the designer host.</span></span> <span data-ttu-id="c61c9-211">例如， <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 使用类型调用方法 <see cref="T:System.Web.UI.Design.IWebApplication" /> 来访问通过可视化设计器提供的项目项、文档或配置文件详细信息。</span><span class="sxs-lookup"><span data-stu-id="c61c9-211">For example, call the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method with the <see cref="T:System.Web.UI.Design.IWebApplication" /> type to access project items, documents, or configuration file details that are provided through the visual designer.</span></span></para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
