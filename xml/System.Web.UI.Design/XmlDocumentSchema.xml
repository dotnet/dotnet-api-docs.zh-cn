<Type Name="XmlDocumentSchema" FullName="System.Web.UI.Design.XmlDocumentSchema">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c6ea6fd2f24c75a5f1cad256e8c88c7167abfcc" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86674789" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlDocumentSchema : System.Web.UI.Design.IDataSourceSchema" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlDocumentSchema extends System.Object implements class System.Web.UI.Design.IDataSourceSchema" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XmlDocumentSchema" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlDocumentSchema&#xA;Implements IDataSourceSchema" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDocumentSchema sealed : System::Web::UI::Design::IDataSourceSchema" />
  <TypeSignature Language="F#" Value="type XmlDocumentSchema = class&#xA;    interface IDataSourceSchema" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.Design.IDataSourceSchema</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b80eb-101">表示 <see cref="T:System.Xml.XmlDocument" /> 的结构或架构。</span><span class="sxs-lookup"><span data-stu-id="b80eb-101">Represents the structure, or schema, of an <see cref="T:System.Xml.XmlDocument" />.</span></span> <span data-ttu-id="b80eb-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b80eb-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b80eb-103"><xref:System.Web.UI.Design.XmlDocumentSchema>自定义控件设计器组件使用类在设计时列出 XML 文档的结构元素。</span><span class="sxs-lookup"><span data-stu-id="b80eb-103">The <xref:System.Web.UI.Design.XmlDocumentSchema> class is used by custom control designer components to list the structural elements of an XML document at design time.</span></span> <span data-ttu-id="b80eb-104">使用 XmlDocumentSchema 类可填充文档元素列表，以允许用户在设计时选择 UI 功能中的文档元素。</span><span class="sxs-lookup"><span data-stu-id="b80eb-104">Use the XmlDocumentSchema class to populate lists of document elements to allow users to select document elements in UI features at design time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b80eb-105">下面的代码示例使用 <xref:System.Web.UI.Design.XmlDocumentSchema> 对象在控件中显示 XML 文档的结构 <xref:System.Web.UI.WebControls.TreeView> 。</span><span class="sxs-lookup"><span data-stu-id="b80eb-105">The following code example uses an <xref:System.Web.UI.Design.XmlDocumentSchema> object to display the structure of an XML document in a <xref:System.Web.UI.WebControls.TreeView> control.</span></span>  
  
 [!code-csharp[XmlDocumentSchemaSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlDocumentSchemaSample/CS/XmlDocumentSchemaSample.cs#1)]
 [!code-vb[XmlDocumentSchemaSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlDocumentSchemaSample/VB/XmlDocumentSchemaSample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlDocument" />
    <altmember cref="T:System.Web.UI.Design.IDataSourceSchema" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)"><span data-ttu-id="b80eb-106">扩展设计时支持</span><span class="sxs-lookup"><span data-stu-id="b80eb-106">Extending Design-Time Support</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocumentSchema (System.Xml.XmlDocument xmlDocument, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument xmlDocument, string xPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlDocument As XmlDocument, xPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocumentSchema(System::Xml::XmlDocument ^ xmlDocument, System::String ^ xPath);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.XmlDocumentSchema : System.Xml.XmlDocument * string -&gt; System.Web.UI.Design.XmlDocumentSchema" Usage="new System.Web.UI.Design.XmlDocumentSchema (xmlDocument, xPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlDocument" Type="System.Xml.XmlDocument" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlDocument"><span data-ttu-id="b80eb-107">一个 <see cref="T:System.Xml.XmlDocument" /> 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="b80eb-107">An instance of an <see cref="T:System.Xml.XmlDocument" /> object.</span></span></param>
        <param name="xPath"><span data-ttu-id="b80eb-108">一个 XPath 字符串，它标识文档根目录的子节点。</span><span class="sxs-lookup"><span data-stu-id="b80eb-108">An XPath string identifying the child nodes of the document root.</span></span></param>
        <summary><span data-ttu-id="b80eb-109">使用指定的 <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> 和一个 XPath 字符串来创建 <see cref="T:System.Xml.XmlDocument" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="b80eb-109">Creates an instance of the <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> class using a specified <see cref="T:System.Xml.XmlDocument" /> and an XPath string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b80eb-110">使用 `xPath` 参数指定要检查的 XML 文档中的特定节点，或指定空字符串 ( "" ) 以检查完整文档。</span><span class="sxs-lookup"><span data-stu-id="b80eb-110">Use the `xPath` parameter to specify either a specific node within the XML document to examine, or specify the empty string ("") to examine the complete document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocument" />
        <altmember cref="T:System.Web.UI.Design.IDataSourceSchema" />
        <related type="Article" href="/dotnet/standard/data/xml/selecting-evaluating-and-matching-xml-data-using-xpathnavigator"><span data-ttu-id="b80eb-111">使用 XPathNavigator 选择、计算和匹配 XML 数据</span><span class="sxs-lookup"><span data-stu-id="b80eb-111">Selecting, Evaluating and Matching XML Data using XPathNavigator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetViews">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.IDataSourceViewSchema[] GetViews ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.IDataSourceViewSchema[] GetViews() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDocumentSchema.GetViews" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViews () As IDataSourceViewSchema()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Web::UI::Design::IDataSourceViewSchema ^&gt; ^ GetViews();" />
      <MemberSignature Language="F#" Value="abstract member GetViews : unit -&gt; System.Web.UI.Design.IDataSourceViewSchema[]&#xA;override this.GetViews : unit -&gt; System.Web.UI.Design.IDataSourceViewSchema[]" Usage="xmlDocumentSchema.GetViews " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceSchema.GetViews</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IDataSourceViewSchema[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b80eb-112">获取一个数组，它包含从构造函数中的 <paramref name="xPath" /> 参数所标识的节点开始的每个子节点的有关信息，或者从文档根目录开始的每个子节点的有关信息（如果 <paramref name="xPath" /> 参数为空）。</span><span class="sxs-lookup"><span data-stu-id="b80eb-112">Gets an array containing information about each child node starting at the node identified by the <paramref name="xPath" /> parameter in the constructor, or each child node starting at the document root if the <paramref name="xPath" /> parameter is empty.</span></span></summary>
        <returns><span data-ttu-id="b80eb-113">一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="b80eb-113">An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)" />
        <altmember cref="T:System.Xml.XmlDocument" />
        <altmember cref="T:System.Web.UI.Design.IDataSourceSchema" />
      </Docs>
    </Member>
  </Members>
</Type>
