<Type Name="RouteValueExpressionEditor" FullName="System.Web.UI.Design.RouteValueExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fe6c1844fa2837f96df1c832fdc18035b8da5ea" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89801748" /></Metadata><TypeSignature Language="C#" Value="public class RouteValueExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteValueExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.RouteValueExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteValueExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteValueExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type RouteValueExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于在设计时组成 <see langword="RouteValue" /> 表达式的属性和方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 可视化设计器宿主（如 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] ）使用 <xref:System.Web.UI.Design.RouteValueExpressionEditor> 类来编写 `RouteValue` 标记表达式。

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
    <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteValueExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.RouteValueExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteValueExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditor" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.RouteValueExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="routeValueExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">要计算的 <see langword="RouteValue" /> 表达式。 该表达式不包含 <see langword="RouteValue" /> 表达式前缀。</param>
        <param name="parseTimeData">一个对象，其中包含用于计算表达式的其他分析信息。</param>
        <param name="propertyType">控件属性的类型。</param>
        <param name="serviceProvider">一个服务提供程序实现，它由设计器宿主提供，用于获取其他设计时服务。</param>
        <summary>计算 <see langword="RouteValue" /> 表达式并提供设计时值。</summary>
        <returns>如果表达式计算成功，则为指定 URL 参数的值；否则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 可视化设计器使用 <xref:System.Web.UI.Design.RouteValueExpressionEditor.EvaluateExpression%2A> 方法来计算 `RouteValue` 表达式，并为关联的控件属性提供设计时值。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="routeValueExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">一个表达式字符串，用于初始化表达式编辑器表。 该表达式不包含 <see langword="RouteValue" /> 表达式前缀。</param>
        <param name="serviceProvider">一个服务提供程序实现，它由设计器宿主提供，用于获取其他设计时服务。</param>
        <summary>返回 <see langword="RouteValue" /> 表达式的表达式编辑器表。</summary>
        <returns>一个 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> 实例，它定义 <see langword="RouteValue" /> 表达式属性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet%2A>方法返回表达式编辑器表的实现 `RouteValue` 。 表达式编辑器表 `RouteValue` 使用户能够选择 URL 参数。 用户选择了参数后，编辑器表实现将生成一个 `RouteValue` 返回到可视化设计器的表达式。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
      </Docs>
    </Member>
  </Members>
</Type>
