<Type Name="ResourceExpressionEditorSheet" FullName="System.Web.UI.Design.ResourceExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21ed0e56709230da5f779223467e670c6403d4ab" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86614651" /></Metadata><TypeSignature Language="C#" Value="public class ResourceExpressionEditorSheet : System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditorSheet extends System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditorSheet&#xA;Inherits ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditorSheet : System::Web::UI::Design::ExpressionEditorSheet" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditorSheet = class&#xA;    inherit ExpressionEditorSheet" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditorSheet</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在设计时表示设计器宿主 UI 中资源表达式属性的设计时编辑器表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可视化设计器将 <xref:System.Web.UI.Design.ResourceExpressionEditor> 类与类结合使用 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> ，以选择资源引用表达式的各个属性，并将所选的资源表达式属性值合并为资源表达式。  
  
 <xref:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> 方法将返回 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> 对象。 在 "表达式" 对话框中，选择控件属性并将其绑定到资源表达式时，可视化设计器将调用 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> 方法。 可视化设计器使用返回的 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> 对象来提示输入 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> 和 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> 属性。 选择资源表达式属性后，可视化设计器会调用方法， <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression%2A> 将属性合并为资源表达式字符串。  
  
 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A>必须在资源表达式中指定属性; 此属性将为资源值编制索引。 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> 属性为可选。 它引用定义全局资源文件夹中的资源的类键或文件名。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.HyperLink.Text%2A> 使用将控件的属性绑定 <xref:System.Web.UI.WebControls.HyperLink> 到资源表达式 <xref:System.Web.UI.Design.ResourceExpressionEditor> 。 使用示例：  
  
1.  在网站项目中，将名为 Strings 的新资源文件添加到 App_GlobalResources 文件夹。  
  
2.  将名为的字符串添加 `myLinkText` 到字符串 .resx 资源文件中，并将值设置为控件的文本 <xref:System.Web.UI.WebControls.HyperLink> 。 例如，将 `myLinkText` 字符串值设置为 `This is a link` 。  
  
3.  在 ASP.NET 网页中，添加一个 <xref:System.Web.UI.WebControls.HyperLink> 控件。  
  
4.  在控件的属性网格中 `Hyperlink` ，单击 " **表达式**"，然后单击省略号按钮 " (**..." ) ** 以显示 "表达式绑定" 对话框。  
  
5.  选择 `Text` 控件的属性，并将 **expression 类型** 设置为 `Resources` 表达式类型。 可视化设计器显示对象定义的资源表达式属性 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> 。  
  
6.  设置 **表达式属性** ，如下所示：  
  
    -   将 **ClassKey** 设置为 `Strings` ，即已编译的字符串 .resx 资源文件的类名称。  
  
    -   将 **ResourceKey** 设置为 `myLinkText` ，即字符串 .resx 中的字符串名称。  
  
 可视化设计器使用 <xref:System.Web.UI.Design.ResourceExpressionEditor> 对象为属性分配资源表达式 `Text` 。 下面的 aspx 源显示使用资源表达式设置的属性值的示例：  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As String, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ResourceExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ResourceExpressionEditorSheet" Usage="new System.Web.UI.Design.ResourceExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">一个资源表达式，用于初始化表达式编辑器表。</param>
        <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
        <summary>初始化 <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> 使用输入字符串设置初始值和属性值 `expression` 。 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A>使用输入实现设置属性 `serviceProvider` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="ClassKey">
      <MemberSignature Language="C#" Value="public string ClassKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClassKey : string with get, set" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与项目的全局资源文件夹中资源的文件名匹配的键。</summary>
        <value>全局资源文件夹中的资源文件的键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在中 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] ，全局资源文件位于 App_GlobalResources 文件夹中。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public override string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="override this.GetExpression : unit -&gt; string" Usage="resourceExpressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回由表达式编辑器表属性值形成的资源表达式。</summary>
        <returns>表中当前设置的资源表达式字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示资源表达式字符串是否有效。</summary>
        <value>如果资源表达式字符串有效，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此基实现始终返回 `true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : string with get, set" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.ResourceExpressionEditorSheet/ResourceKeyTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.ResourceExpressionEditorSheet/ResourceKeyTypeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置资源的名称，该名称可用作查找资源值的键。</summary>
        <value>资源的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A>资源表达式需要属性; 它表示资源的名称。 在运行时和设计时使用资源名称来查找资源，并将资源分配给控件属性。  
  
 例如，如果控件的 <xref:System.Web.UI.WebControls.Label.Text%2A> 属性分配给 <xref:System.Web.UI.WebControls.Label> 资源表达式 `<%$ Resources:Strings, labelText $>` ，则计算资源表达式，并将该 <xref:System.Web.UI.WebControls.Label.Text%2A> 字段分配给 `labelText` 类中的资源值 `Strings` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
  </Members>
</Type>
