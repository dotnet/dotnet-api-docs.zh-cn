<Type Name="VsaEngine" FullName="Microsoft.JScript.Vsa.VsaEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d965e90a7fa80fd98c527e618fc9a7d013ca4ffa" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89741116" /></Metadata><TypeSignature Language="C#" Value="public sealed class VsaEngine : Microsoft.Vsa.BaseVsaEngine, Microsoft.JScript.IEngine2, Microsoft.JScript.IRedirectOutput" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VsaEngine extends Microsoft.Vsa.BaseVsaEngine implements class Microsoft.JScript.IEngine2, class Microsoft.JScript.IRedirectOutput" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.Vsa.VsaEngine" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VsaEngine&#xA;Inherits BaseVsaEngine&#xA;Implements IEngine2, IRedirectOutput" />
  <TypeSignature Language="C++ CLI" Value="public ref class VsaEngine sealed : Microsoft::Vsa::BaseVsaEngine, Microsoft::JScript::IEngine2, Microsoft::JScript::IRedirectOutput" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type VsaEngine = class&#xA;    inherit BaseVsaEngine&#xA;    interface IEngine2&#xA;    interface IRedirectOutput" />
  <TypeSignature Language="C#" Value="public sealed class VsaEngine : Microsoft.JScript.Vsa.BaseVsaEngine, Microsoft.JScript.IEngine2, Microsoft.JScript.IRedirectOutput" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VsaEngine extends Microsoft.JScript.Vsa.BaseVsaEngine implements class Microsoft.JScript.IEngine2, class Microsoft.JScript.IRedirectOutput" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class VsaEngine sealed : Microsoft::JScript::Vsa::BaseVsaEngine, Microsoft::JScript::IEngine2, Microsoft::JScript::IRedirectOutput" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Vsa.BaseVsaEngine</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">Microsoft.JScript.Vsa.BaseVsaEngine</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JScript.IEngine2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.JScript.IRedirectOutput</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("B71E484D-93ED-4b56-BFB9-CEED5134822B")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("B71E484D-93ED-4b56-BFB9-CEED5134822B")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>实现 <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" /> 接口。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对脚本引擎，此类、成员或属性在内部，且不应从您的代码中调用。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VsaEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VsaEngine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VsaEngine (bool fast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool fast) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fast As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VsaEngine(bool fast);" />
      <MemberSignature Language="F#" Value="new Microsoft.JScript.Vsa.VsaEngine : bool -&gt; Microsoft.JScript.Vsa.VsaEngine" Usage="new Microsoft.JScript.Vsa.VsaEngine fast" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fast" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fast">如果为 <see langword="true" />，则指示快速模式；否则为 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> 类的新实例，并可以选择性地设置快速模式。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaEngine Clone (AppDomain domain);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Vsa.IVsaEngine Clone(class System.AppDomain domain) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Clone(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (domain As AppDomain) As IVsaEngine" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Vsa::IVsaEngine ^ Clone(AppDomain ^ domain);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="abstract member Clone : AppDomain -&gt; Microsoft.Vsa.IVsaEngine&#xA;override this.Clone : AppDomain -&gt; Microsoft.Vsa.IVsaEngine" Usage="vsaEngine.Clone domain" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaEngine Clone (AppDomain domain);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.Vsa.IJSVsaEngine Clone(class System.AppDomain domain) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (domain As AppDomain) As IJSVsaEngine" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::JScript::Vsa::IJSVsaEngine ^ Clone(AppDomain ^ domain);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Clone : AppDomain -&gt; Microsoft.JScript.Vsa.IJSVsaEngine&#xA;override this.Clone : AppDomain -&gt; Microsoft.JScript.Vsa.IJSVsaEngine" Usage="vsaEngine.Clone domain" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">Microsoft.Vsa.IVsaEngine</ReturnType>
        <ReturnType FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">Microsoft.JScript.Vsa.IJSVsaEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">要在其中创建新引擎的应用程序域。</param>
        <summary>新建一个在新的应用程序域中运行的相同引擎，该引擎具有相同的编译状态和命名项。</summary>
        <returns>新引擎。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompileEmpty">
      <MemberSignature Language="C#" Value="public bool CompileEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompileEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CompileEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CompileEmpty();" />
      <MemberSignature Language="F#" Value="abstract member CompileEmpty : unit -&gt; bool&#xA;override this.CompileEmpty : unit -&gt; bool" Usage="vsaEngine.CompileEmpty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.CompileEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>触发引擎中当前所有状态的编译。 所有引用、代码项、宿主项和资源都通过编译器运行。</summary>
        <returns>如果编译成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConnectEvents">
      <MemberSignature Language="C#" Value="public void ConnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.ConnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ConnectEvents();" />
      <MemberSignature Language="F#" Value="abstract member ConnectEvents : unit -&gt; unit&#xA;override this.ConnectEvents : unit -&gt; unit" Usage="vsaEngine.ConnectEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.ConnectEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通知引擎可以将具有事件的任何已注册事件源连接到任何全局事件处理程序。 此方法未在此类中实现。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngine">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.Vsa.VsaEngine CreateEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.Vsa.VsaEngine CreateEngine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngine () As VsaEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::Vsa::VsaEngine ^ CreateEngine();" />
      <MemberSignature Language="F#" Value="static member CreateEngine : unit -&gt; Microsoft.JScript.Vsa.VsaEngine" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.VsaEngine</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建引擎。</summary>
        <returns>新引擎。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngineAndGetGlobalScope">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScope (bool fast, string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScope(bool fast, string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScope(System.Boolean,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngineAndGetGlobalScope (fast As Boolean, assemblyNames As String()) As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::GlobalScope ^ CreateEngineAndGetGlobalScope(bool fast, cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="static member CreateEngineAndGetGlobalScope : bool * string[] -&gt; Microsoft.JScript.GlobalScope" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScope (fast, assemblyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fast" Type="System.Boolean" />
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="fast">如果为 <see langword="true" />，则指示快速模式；否则为 <see langword="false" />。</param>
        <param name="assemblyNames">程序集名称的数组。</param>
        <summary>创建引擎，并返回全局范围。</summary>
        <returns>全局范围。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngineAndGetGlobalScopeWithType">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithType (bool fast, string[] assemblyNames, RuntimeTypeHandle callingTypeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithType(bool fast, string[] assemblyNames, valuetype System.RuntimeTypeHandle callingTypeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithType(System.Boolean,System.String[],System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngineAndGetGlobalScopeWithType (fast As Boolean, assemblyNames As String(), callingTypeHandle As RuntimeTypeHandle) As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::GlobalScope ^ CreateEngineAndGetGlobalScopeWithType(bool fast, cli::array &lt;System::String ^&gt; ^ assemblyNames, RuntimeTypeHandle callingTypeHandle);" />
      <MemberSignature Language="F#" Value="static member CreateEngineAndGetGlobalScopeWithType : bool * string[] * RuntimeTypeHandle -&gt; Microsoft.JScript.GlobalScope" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithType (fast, assemblyNames, callingTypeHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fast" Type="System.Boolean" />
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="callingTypeHandle" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="fast">如果为 <see langword="true" />，则指示快速模式；否则为 <see langword="false" />。</param>
        <param name="assemblyNames">程序集名称的数组。</param>
        <param name="callingTypeHandle">调用类型句柄。</param>
        <summary>创建引擎，并返回具有调用类型句柄的全局范围。</summary>
        <returns>全局范围。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace (bool fast, string[] assemblyNames, RuntimeTypeHandle callingTypeHandle, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(bool fast, string[] assemblyNames, valuetype System.RuntimeTypeHandle callingTypeHandle, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(System.Boolean,System.String[],System.RuntimeTypeHandle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace (fast As Boolean, assemblyNames As String(), callingTypeHandle As RuntimeTypeHandle, rootNamespace As String) As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::GlobalScope ^ CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(bool fast, cli::array &lt;System::String ^&gt; ^ assemblyNames, RuntimeTypeHandle callingTypeHandle, System::String ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="static member CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace : bool * string[] * RuntimeTypeHandle * string -&gt; Microsoft.JScript.GlobalScope" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace (fast, assemblyNames, callingTypeHandle, rootNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fast" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callingTypeHandle" Type="System.RuntimeTypeHandle" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rootNamespace" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fast">如果为 <see langword="true" />，则指示快速模式；否则为 <see langword="false" />。</param>
        <param name="assemblyNames">程序集名称的数组。</param>
        <param name="callingTypeHandle">调用类型句柄。</param>
        <param name="rootNamespace">根命名空间。</param>
        <summary>创建引擎，并返回具有调用类型句柄和根命名空间的全局范围。</summary>
        <returns>全局范围。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngineWithType">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.Vsa.VsaEngine CreateEngineWithType (RuntimeTypeHandle callingTypeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.Vsa.VsaEngine CreateEngineWithType(valuetype System.RuntimeTypeHandle callingTypeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineWithType(System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngineWithType (callingTypeHandle As RuntimeTypeHandle) As VsaEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::Vsa::VsaEngine ^ CreateEngineWithType(RuntimeTypeHandle callingTypeHandle);" />
      <MemberSignature Language="F#" Value="static member CreateEngineWithType : RuntimeTypeHandle -&gt; Microsoft.JScript.Vsa.VsaEngine" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngineWithType callingTypeHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.VsaEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callingTypeHandle" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="callingTypeHandle">调用类型句柄。</param>
        <summary>使用指定的类型创建引擎。</summary>
        <returns>新引擎。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DisconnectEvents">
      <MemberSignature Language="C#" Value="public void DisconnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DisconnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisconnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectEvents();" />
      <MemberSignature Language="F#" Value="abstract member DisconnectEvents : unit -&gt; unit&#xA;override this.DisconnectEvents : unit -&gt; unit" Usage="vsaEngine.DisconnectEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.DisconnectEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示引擎从事件处理程序中断开与事件源的连接。 未实现此方法。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DoClose">
      <MemberSignature Language="C#" Value="protected override void DoClose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoClose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoClose" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoClose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoClose();" />
      <MemberSignature Language="F#" Value="override this.DoClose : unit -&gt; unit" Usage="vsaEngine.DoClose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭该引擎。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoCompile">
      <MemberSignature Language="C#" Value="protected override bool DoCompile ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DoCompile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoCompile" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DoCompile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DoCompile();" />
      <MemberSignature Language="F#" Value="override this.DoCompile : unit -&gt; bool" Usage="vsaEngine.DoCompile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使脚本引擎编译现有的源状态。</summary>
        <returns>如果成功编译，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoLoadSourceState">
      <MemberSignature Language="C#" Value="protected override void DoLoadSourceState (Microsoft.JScript.Vsa.IJSVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoLoadSourceState(class Microsoft.JScript.Vsa.IJSVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoLoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoLoadSourceState (site As IJSVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoLoadSourceState(Microsoft::JScript::Vsa::IJSVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="override this.DoLoadSourceState : Microsoft.JScript.Vsa.IJSVsaPersistSite -&gt; unit" Usage="vsaEngine.DoLoadSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaPersistSite" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="site">指定的源项目所在的站点。</param>
        <summary>指示引擎加载源项。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoLoadSourceState">
      <MemberSignature Language="C#" Value="protected override void DoLoadSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoLoadSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoLoadSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoLoadSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoLoadSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="override this.DoLoadSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="vsaEngine.DoLoadSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="site">指定的源项目所在的站点。</param>
        <summary>指示引擎加载源项。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoSaveCompiledState">
      <MemberSignature Language="C#" Value="protected override void DoSaveCompiledState (out byte[] pe, out byte[] pdb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoSaveCompiledState([out] unsigned int8[]&amp; pe, [out] unsigned int8[]&amp; pdb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoSaveCompiledState(System.Byte[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoSaveCompiledState (ByRef pe As Byte(), ByRef pdb As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoSaveCompiledState([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pe, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pdb);" />
      <MemberSignature Language="F#" Value="override this.DoSaveCompiledState : Byte[] * Byte[] -&gt; unit" Usage="vsaEngine.DoSaveCompiledState (pe, pdb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Byte[]" RefType="out" />
        <Parameter Name="pdb" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pe">引擎的编译状态。</param>
        <param name="pdb">.PDB 文件中包含的调试信息。</param>
        <summary>保存脚本引擎的编译状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoSaveSourceState">
      <MemberSignature Language="C#" Value="protected override void DoSaveSourceState (Microsoft.JScript.Vsa.IJSVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoSaveSourceState(class Microsoft.JScript.Vsa.IJSVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoSaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoSaveSourceState (site As IJSVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoSaveSourceState(Microsoft::JScript::Vsa::IJSVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="override this.DoSaveSourceState : Microsoft.JScript.Vsa.IJSVsaPersistSite -&gt; unit" Usage="vsaEngine.DoSaveSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaPersistSite" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="site">对其保存源状态的站点。</param>
        <summary>指示脚本引擎将其源状态保存到指定的对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoSaveSourceState">
      <MemberSignature Language="C#" Value="protected override void DoSaveSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoSaveSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoSaveSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoSaveSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoSaveSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="override this.DoSaveSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="vsaEngine.DoSaveSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="site">对其保存源状态的站点。</param>
        <summary>指示脚本引擎将其源状态保存到指定的对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetAssembly();" />
      <MemberSignature Language="F#" Value="abstract member GetAssembly : unit -&gt; System.Reflection.Assembly&#xA;override this.GetAssembly : unit -&gt; System.Reflection.Assembly" Usage="vsaEngine.GetAssembly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.GetAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取编译步骤所生成的已编译程序集。</summary>
        <returns>已编译的程序集。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetCustomOption">
      <MemberSignature Language="C#" Value="protected override object GetCustomOption (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetCustomOption(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetCustomOption(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCustomOption (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetCustomOption(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetCustomOption : string -&gt; obj" Usage="vsaEngine.GetCustomOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要获取的选项的名称。</param>
        <summary>获取引擎实现特定的选项。</summary>
        <returns>选项的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.IVsaScriptScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.IVsaScriptScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As IVsaScriptScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::JScript::IVsaScriptScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.IVsaScriptScope&#xA;override this.GetGlobalScope : unit -&gt; Microsoft.JScript.IVsaScriptScope" Usage="vsaEngine.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.GetGlobalScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.IVsaScriptScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取全局范围对象。</summary>
        <returns>全局范围对象。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaItem GetItem (string itemName);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Vsa.IVsaItem GetItem(string itemName) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (itemName As String) As IVsaItem" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Vsa::IVsaItem ^ GetItem(System::String ^ itemName);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.GetItem : string -&gt; Microsoft.Vsa.IVsaItem" Usage="vsaEngine.GetItem itemName" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaItem GetItem (string itemName);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.Vsa.IJSVsaItem GetItem(string itemName) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (itemName As String) As IJSVsaItem" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::Vsa::IJSVsaItem ^ GetItem(System::String ^ itemName);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.GetItem : string -&gt; Microsoft.JScript.Vsa.IJSVsaItem" Usage="vsaEngine.GetItem itemName" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">Microsoft.Vsa.IVsaItem</ReturnType>
        <ReturnType FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">Microsoft.JScript.Vsa.IJSVsaItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemName">要获取的项的名称。</param>
        <summary>从范围中获取由指定名称指定的项。</summary>
        <returns>具有指定名称的项目。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetItemAtIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaItem GetItemAtIndex (int index);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Vsa.IVsaItem GetItemAtIndex(int32 index) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetItemAtIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAtIndex (index As Integer) As IVsaItem" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Vsa::IVsaItem ^ GetItemAtIndex(int index);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.GetItemAtIndex : int -&gt; Microsoft.Vsa.IVsaItem" Usage="vsaEngine.GetItemAtIndex index" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaItem GetItemAtIndex (int index);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.Vsa.IJSVsaItem GetItemAtIndex(int32 index) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAtIndex (index As Integer) As IJSVsaItem" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::Vsa::IJSVsaItem ^ GetItemAtIndex(int index);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.GetItemAtIndex : int -&gt; Microsoft.JScript.Vsa.IJSVsaItem" Usage="vsaEngine.GetItemAtIndex index" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">Microsoft.Vsa.IVsaItem</ReturnType>
        <ReturnType FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">Microsoft.JScript.Vsa.IJSVsaItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要获取的项的索引。</param>
        <summary>从范围中获取由指定索引值指定的项。</summary>
        <returns>指定索引处的项。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetItemCount">
      <MemberSignature Language="C#" Value="public int GetItemCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetItemCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetItemCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItemCount();" />
      <MemberSignature Language="F#" Value="member this.GetItemCount : unit -&gt; int" Usage="vsaEngine.GetItemCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取范围中的项数。</summary>
        <returns>范围中的项数。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetMainScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetMainScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.GlobalScope GetMainScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetMainScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMainScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetMainScope();" />
      <MemberSignature Language="F#" Value="member this.GetMainScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="vsaEngine.GetMainScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取主范围。</summary>
        <returns>主范围。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetModule" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule () As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ GetModule();" />
      <MemberSignature Language="F#" Value="abstract member GetModule : unit -&gt; System.Reflection.Module&#xA;override this.GetModule : unit -&gt; System.Reflection.Module" Usage="vsaEngine.GetModule " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.GetModule</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取已编译的程序集中的代码模块。</summary>
        <returns>已编译的程序集中的代码模块。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetOriginalArrayConstructor">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ArrayConstructor GetOriginalArrayConstructor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ArrayConstructor GetOriginalArrayConstructor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalArrayConstructor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOriginalArrayConstructor () As ArrayConstructor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ArrayConstructor ^ GetOriginalArrayConstructor();" />
      <MemberSignature Language="F#" Value="member this.GetOriginalArrayConstructor : unit -&gt; Microsoft.JScript.ArrayConstructor" Usage="vsaEngine.GetOriginalArrayConstructor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ArrayConstructor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取原始 <see cref="T:Microsoft.JScript.ArrayConstructor" />。</summary>
        <returns>原始 <see cref="T:Microsoft.JScript.ArrayConstructor" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetOriginalObjectConstructor">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ObjectConstructor GetOriginalObjectConstructor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ObjectConstructor GetOriginalObjectConstructor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalObjectConstructor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOriginalObjectConstructor () As ObjectConstructor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ObjectConstructor ^ GetOriginalObjectConstructor();" />
      <MemberSignature Language="F#" Value="member this.GetOriginalObjectConstructor : unit -&gt; Microsoft.JScript.ObjectConstructor" Usage="vsaEngine.GetOriginalObjectConstructor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ObjectConstructor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取原始 <see cref="T:Microsoft.JScript.ObjectConstructor" />。</summary>
        <returns>原始 <see cref="T:Microsoft.JScript.ObjectConstructor" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetOriginalRegExpConstructor">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.RegExpConstructor GetOriginalRegExpConstructor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.RegExpConstructor GetOriginalRegExpConstructor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalRegExpConstructor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOriginalRegExpConstructor () As RegExpConstructor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::RegExpConstructor ^ GetOriginalRegExpConstructor();" />
      <MemberSignature Language="F#" Value="member this.GetOriginalRegExpConstructor : unit -&gt; Microsoft.JScript.RegExpConstructor" Usage="vsaEngine.GetOriginalRegExpConstructor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.RegExpConstructor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取原始 <see cref="T:Microsoft.JScript.RegExpConstructor" />。</summary>
        <returns>原始 <see cref="T:Microsoft.JScript.RegExpConstructor" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.JScript.Vsa.IJSVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.JScript.Vsa.IJSVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitVsaEngine (rootMoniker As String, site As IJSVsaSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitVsaEngine(System::String ^ rootMoniker, Microsoft::JScript::Vsa::IJSVsaSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member InitVsaEngine : string * Microsoft.JScript.Vsa.IJSVsaSite -&gt; unit&#xA;override this.InitVsaEngine : string * Microsoft.JScript.Vsa.IJSVsaSite -&gt; unit" Usage="vsaEngine.InitVsaEngine (rootMoniker, site)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaSite" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rootMoniker">脚本引擎的根名字对象。</param>
        <param name="site">由宿主实现的 <see cref="T:Microsoft.JScript.Vsa.IJSVsaSite" /> 对象，脚本引擎使用此对象与宿主通信。</param>
        <summary>初始化 <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.Vsa.IVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.Vsa.IVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.InitVsaEngine(System.String,Microsoft.Vsa.IVsaSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitVsaEngine (rootMoniker As String, site As IVsaSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitVsaEngine(System::String ^ rootMoniker, Microsoft::Vsa::IVsaSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member InitVsaEngine : string * Microsoft.Vsa.IVsaSite -&gt; unit&#xA;override this.InitVsaEngine : string * Microsoft.Vsa.IVsaSite -&gt; unit" Usage="vsaEngine.InitVsaEngine (rootMoniker, site)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.Vsa.IVsaSite)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaSite" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="rootMoniker">脚本引擎的根名字对象。</param>
        <param name="site">由宿主实现的 <see cref="T:Microsoft.Vsa.IVsaSite" /> 对象，脚本引擎使用此对象与宿主通信。</param>
        <summary>初始化 <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Interrupt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Interrupt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Interrupt();" />
      <MemberSignature Language="F#" Value="abstract member Interrupt : unit -&gt; unit&#xA;override this.Interrupt : unit -&gt; unit" Usage="vsaEngine.Interrupt " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.Interrupt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在正在运行脚本代码的线程上调用 <see cref="M:System.Threading.Thread.Abort" />。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public override bool IsValidIdentifier (string ident);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValidIdentifier(string ident) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValidIdentifier (ident As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValidIdentifier(System::String ^ ident);" />
      <MemberSignature Language="F#" Value="override this.IsValidIdentifier : string -&gt; bool" Usage="vsaEngine.IsValidIdentifier ident" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ident" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ident">作为标识符提供的字符串值。</param>
        <summary>检查提供的标识符是否对引擎有效。</summary>
        <returns>如果标识符有效，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsValidNamespaceName">
      <MemberSignature Language="C#" Value="protected override bool IsValidNamespaceName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValidNamespaceName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.IsValidNamespaceName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValidNamespaceName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValidNamespaceName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.IsValidNamespaceName : string -&gt; bool" Usage="vsaEngine.IsValidNamespaceName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">命名空间。</param>
        <summary>检查提供的命名空间是否对引擎有效。</summary>
        <returns>如果命名空间有效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LenientGlobalObject">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.LenientGlobalObject LenientGlobalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.JScript.LenientGlobalObject LenientGlobalObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.VsaEngine.LenientGlobalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LenientGlobalObject As LenientGlobalObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::JScript::LenientGlobalObject ^ LenientGlobalObject { Microsoft::JScript::LenientGlobalObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LenientGlobalObject : Microsoft.JScript.LenientGlobalObject" Usage="Microsoft.JScript.Vsa.VsaEngine.LenientGlobalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.LenientGlobalObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取宽松全局对象。</summary>
        <value>宽松全局对象。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LoadCompiledState">
      <MemberSignature Language="C#" Value="protected override System.Reflection.Assembly LoadCompiledState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.Assembly LoadCompiledState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.LoadCompiledState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function LoadCompiledState () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::Assembly ^ LoadCompiledState();" />
      <MemberSignature Language="F#" Value="override this.LoadCompiledState : unit -&gt; System.Reflection.Assembly" Usage="vsaEngine.LoadCompiledState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>加载编译状态。</summary>
        <returns>编译状态。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopScriptObject">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ScriptObject PopScriptObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ScriptObject PopScriptObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.PopScriptObject" />
      <MemberSignature Language="VB.NET" Value="Public Function PopScriptObject () As ScriptObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ScriptObject ^ PopScriptObject();" />
      <MemberSignature Language="F#" Value="member this.PopScriptObject : unit -&gt; Microsoft.JScript.ScriptObject" Usage="vsaEngine.PopScriptObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ScriptObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除并返回位于全局范围堆栈顶部的对象。</summary>
        <returns>位于全局范围堆栈顶部的对象。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PushScriptObject">
      <MemberSignature Language="C#" Value="public void PushScriptObject (Microsoft.JScript.ScriptObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushScriptObject(class Microsoft.JScript.ScriptObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.PushScriptObject(Microsoft.JScript.ScriptObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushScriptObject (obj As ScriptObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushScriptObject(Microsoft::JScript::ScriptObject ^ obj);" />
      <MemberSignature Language="F#" Value="member this.PushScriptObject : Microsoft.JScript.ScriptObject -&gt; unit" Usage="vsaEngine.PushScriptObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.JScript.ScriptObject" />
      </Parameters>
      <Docs>
        <param name="obj">要推送到堆栈中的对象。</param>
        <summary>在全局范围堆栈的顶部插入一个对象。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RegisterEventSource">
      <MemberSignature Language="C#" Value="public void RegisterEventSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterEventSource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.RegisterEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterEventSource (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterEventSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member RegisterEventSource : string -&gt; unit&#xA;override this.RegisterEventSource : string -&gt; unit" Usage="vsaEngine.RegisterEventSource name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">提供事件的添加项的名称。</param>
        <summary>指定被标记为事件源的项的名称，以便 <see cref="M:Microsoft.JScript.Vsa.VsaEngine.ConnectEvents" /> 方法可以确定要连接的事件。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="vsaEngine.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从运行状态中移除引擎，并自动断开与绑定事件处理程序的连接。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ResetCompiledState">
      <MemberSignature Language="C#" Value="protected override void ResetCompiledState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ResetCompiledState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.ResetCompiledState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ResetCompiledState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ResetCompiledState();" />
      <MemberSignature Language="F#" Value="override this.ResetCompiledState : unit -&gt; unit" Usage="vsaEngine.ResetCompiledState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重置编译状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Restart();" />
      <MemberSignature Language="F#" Value="abstract member Restart : unit -&gt; unit&#xA;override this.Restart : unit -&gt; unit" Usage="vsaEngine.Restart " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.Restart</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重启引擎。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Run(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (domain As AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Run(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="override this.Run : AppDomain -&gt; unit" Usage="vsaEngine.Run domain" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.Run(System.AppDomain)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">要在其中运行已编译的代码的应用程序域。</param>
        <summary>将在指定的应用程序域中运行已编译的代码。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RunEmpty">
      <MemberSignature Language="C#" Value="public void RunEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.RunEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RunEmpty();" />
      <MemberSignature Language="F#" Value="abstract member RunEmpty : unit -&gt; unit&#xA;override this.RunEmpty : unit -&gt; unit" Usage="vsaEngine.RunEmpty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.RunEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>运行当前 <see cref="T:System.AppDomain" /> 中的已编译代码。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ScriptObjectStackTop">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ScriptObject ScriptObjectStackTop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ScriptObject ScriptObjectStackTop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.ScriptObjectStackTop" />
      <MemberSignature Language="VB.NET" Value="Public Function ScriptObjectStackTop () As ScriptObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ScriptObject ^ ScriptObjectStackTop();" />
      <MemberSignature Language="F#" Value="member this.ScriptObjectStackTop : unit -&gt; Microsoft.JScript.ScriptObject" Usage="vsaEngine.ScriptObjectStackTop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ScriptObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回位于全局范围堆栈顶部的对象而不将其移除。</summary>
        <returns>位于全局范围堆栈顶部的对象。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetCustomOption">
      <MemberSignature Language="C#" Value="protected override void SetCustomOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetCustomOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.SetCustomOption(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetCustomOption (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetCustomOption(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetCustomOption : string * obj -&gt; unit" Usage="vsaEngine.SetCustomOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">要设置的选项的名称。</param>
        <param name="value">所设置的选项的值。</param>
        <summary>为该引擎设置特定于实现的选项。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputStream">
      <MemberSignature Language="C#" Value="public void SetOutputStream (Microsoft.JScript.IMessageReceiver output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputStream(class Microsoft.JScript.IMessageReceiver output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.SetOutputStream(Microsoft.JScript.IMessageReceiver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputStream (output As IMessageReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOutputStream(Microsoft::JScript::IMessageReceiver ^ output);" />
      <MemberSignature Language="F#" Value="abstract member SetOutputStream : Microsoft.JScript.IMessageReceiver -&gt; unit&#xA;override this.SetOutputStream : Microsoft.JScript.IMessageReceiver -&gt; unit" Usage="vsaEngine.SetOutputStream output" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IRedirectOutput.SetOutputStream(Microsoft.JScript.IMessageReceiver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Microsoft.JScript.IMessageReceiver" />
      </Parameters>
      <Docs>
        <param name="output">要重定向的输出。</param>
        <summary>将指定的输出流重定向到新流或数据存储。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRootMoniker">
      <MemberSignature Language="C#" Value="protected override void ValidateRootMoniker (string rootMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateRootMoniker(string rootMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.ValidateRootMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateRootMoniker (rootMoniker As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateRootMoniker(System::String ^ rootMoniker);" />
      <MemberSignature Language="F#" Value="override this.ValidateRootMoniker : string -&gt; unit" Usage="vsaEngine.ValidateRootMoniker rootMoniker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootMoniker">要验证的根名字。</param>
        <summary>验证指定的根 Moniker 对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
