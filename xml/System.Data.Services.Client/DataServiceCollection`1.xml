<Type Name="DataServiceCollection&lt;T&gt;" FullName="System.Data.Services.Client.DataServiceCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86d157f4dddfcedd07dbfd7b1260af4964fa7153" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102088402" /></Metadata><TypeSignature Language="C#" Value="public class DataServiceCollection&lt;T&gt; : System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceCollection`1&lt;T&gt; extends System.Collections.ObjectModel.ObservableCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceCollection(Of T)&#xA;Inherits ObservableCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataServiceCollection : System::Collections::ObjectModel::ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type DataServiceCollection&lt;'T&gt; = class&#xA;    inherit ObservableCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ObservableCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">一个实体类型。</typeparam>
    <summary>表示一个动态实体集合，可在添加、移除项目或刷新列表时提供通知。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WCF Data Services 提供 <xref:System.Data.Services.Client.DataServiceCollection%601> 类以支持将数据绑定到客户端应用程序中的控件。 此类继承自 <xref:System.Collections.ObjectModel.ObservableCollection%601> 类，该类实现 <xref:System.Collections.Specialized.INotifyCollectionChanged> 接口，是 WINDOWS PRESENTATION FOUNDATION (WPF) 和基于 Silverlight 的应用程序的主数据绑定机制。  
  
 可以通过使用实现了 <xref:System.Collections.ObjectModel.ObservableCollection%601> 接口的任何集合来加载 <xref:System.Collections.Generic.IEnumerable%601> 绑定集合。 加载到绑定集合中的项必须实现 <xref:System.ComponentModel.INotifyPropertyChanged> 接口。 有关详细信息，请参阅 [将数据绑定到控件](/dotnet/framework/data/wcf/binding-data-to-controls-wcf-data-services)。  
  
   
  
## Examples  
 下面的示例摘自在 WPF 中定义 `SalesOrders` 窗口的可扩展应用程序标记语言 (XAML) 页的代码隐藏页。 加载窗口时， <xref:System.Data.Services.Client.DataServiceCollection%601> 会根据查询结果创建，该查询返回具有相关对象的客户，并按国家/地区进行筛选。 此结果绑定到作为 WPF 窗口的根布局控件的 <xref:System.Windows.FrameworkElement.DataContext%2A> 的 <xref:System.Windows.Controls.StackPanel> 属性。  
  
 [!code-csharp[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf.xaml.cs#wpfdatabinding)]
 [!code-vb[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml.vb#wpfdatabinding)]  
  
 以下 XAML 在 WPF 中为上一个示例定义 `SalesOrders` 窗口。  
  
 [!code-xaml[Astoria Northwind Client#WpfDataBindingXaml](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml#wpfdatabindingxaml)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/wcf/binding-data-to-controls-wcf-data-services">将数据绑定到控件（WCF 数据服务）</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，将对 <xref:System.Data.Services.Client.DataServiceCollection%601> 启用自动更改跟踪。 您可以创建 <xref:System.Data.Services.Client.DataServiceCollection%601> 的实例，该实例在您使用可以为 <xref:System.Data.Services.Client.TrackingMode.None> 提供 <xref:System.Data.Services.Client.TrackingMode> 值的构造函数创建实例时，会使用手动更改跟踪。 使用手动跟踪时，必须实现 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 并处理引发事件，以便将更改手动报告到 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 将项加载到集合中后，将开始自动更改跟踪。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 或 LINQ 查询，可返回用于初始化集合的对象的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
        <summary>创建基于查询执行的 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为 <xref:System.Collections.Generic.IEnumerable%601> 提供的对象的 `items` 集合通常是可一个返回集合中各项的查询。 不过，可以提供正确类型的任何 <xref:System.Collections.Generic.IEnumerable%601> 集合。  
  
 默认情况下，将对 <xref:System.Data.Services.Client.DataServiceCollection%601> 启用自动更改跟踪。 您可以创建 <xref:System.Data.Services.Client.DataServiceCollection%601> 的实例，该实例在您使用可以为 <xref:System.Data.Services.Client.TrackingMode.None> 提供 <xref:System.Data.Services.Client.TrackingMode> 值的构造函数创建实例时，会使用手动更改跟踪。 使用手动跟踪时，必须实现 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 并处理引发事件，以便将更改手动报告到 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> 用于跟踪对集合中对象所做的更改。</param>
        <summary>创建 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 类的新实例，该实例使用指定的 <see cref="T:System.Data.Services.Client.DataServiceContext" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数可创建空 <xref:System.Data.Services.Client.DataServiceCollection%601>，在未对服务执行查询或 <xref:System.Collections.Generic.IEnumerable%601> 不可用时也可向其添加实体对象。  
  
 默认情况下，将对 <xref:System.Data.Services.Client.DataServiceCollection%601> 启用自动更改跟踪。 您可以创建 <xref:System.Data.Services.Client.DataServiceCollection%601> 的实例，该实例在您使用可以为 <xref:System.Data.Services.Client.TrackingMode.None> 提供 <xref:System.Data.Services.Client.TrackingMode> 值的构造函数创建实例时，会使用手动更改跟踪。 使用手动跟踪时，必须实现 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 并处理引发事件，以便将更改手动报告到 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T), trackingMode As TrackingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
      </Parameters>
      <Docs>
        <param name="items"><see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 或 LINQ 查询，可返回用于初始化集合的对象的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> 值，用于指示是否自动跟踪对集合中各项所做的更改。</param>
        <summary>创建基于查询执行并使用指定跟踪模式的 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，将对 <xref:System.Data.Services.Client.DataServiceCollection%601> 启用自动更改跟踪。 使用此类构造函数并为 <xref:System.Data.Services.Client.TrackingMode.None> 提供 `trackingMode` 值，以便创建使用手动更改跟踪的 <xref:System.Data.Services.Client.DataServiceCollection%601> 实例。 使用手动跟踪时，必须实现 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 并处理引发事件，以便将更改手动报告到 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 为 <xref:System.Collections.Generic.IEnumerable%601> 提供的对象的 `items` 集合通常是可一个返回集合中各项的查询。 不过，可以提供正确类型的任何 <xref:System.Collections.Generic.IEnumerable%601> 集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> 用于跟踪集合中的项。</param>
        <param name="entitySetName">集合中的对象实体集。</param>
        <param name="entityChangedCallback">一种委托，用于封装在实体更改时进行调用的方法。</param>
        <param name="collectionChangedCallback">一种委托，用于封装在实体集合更改时进行调用的方法。</param>
        <summary>创建使用所提供更改方法委托并使用指定的 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 的 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数可创建空 <xref:System.Data.Services.Client.DataServiceCollection%601>，在未对服务执行查询或 <xref:System.Collections.Generic.IEnumerable%601> 不可用时也可向其添加实体对象。  
  
 默认情况下，将对 <xref:System.Data.Services.Client.DataServiceCollection%601> 启用自动更改跟踪。 您可以创建 <xref:System.Data.Services.Client.DataServiceCollection%601> 的实例，该实例在您使用可以为 <xref:System.Data.Services.Client.TrackingMode.None> 提供 <xref:System.Data.Services.Client.TrackingMode> 值的构造函数创建实例时，会使用手动更改跟踪。 使用手动跟踪时，必须实现 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 并处理引发事件，以便将更改手动报告到 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T), trackingMode As TrackingMode, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 或 LINQ 查询，可返回用于初始化集合的对象的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> 值，用于指示是否自动跟踪对集合中各项所做的更改。</param>
        <param name="entitySetName">集合中的对象实体集。</param>
        <param name="entityChangedCallback">一种委托，用于封装在实体更改时进行调用的方法。</param>
        <param name="collectionChangedCallback">一种委托，用于封装在实体集合更改时进行调用的方法。</param>
        <summary>创建基于查询执行并使用所提供更改方法委托的 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entityChanged` 和 `collectionChanged` 函数分别由 <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> 事件调用。 `entityChanged` 方法使用 <xref:System.Data.Services.Client.EntityCollectionChangedParams> 值，而 `collectionChanged` 方法则使用 <xref:System.Data.Services.Client.EntityChangedParams> 值。 这两个方法都必须返回指示事件是否由函数进行处理的布尔值。 当该方法返回时 `true` ，默认行为仍将出现。  
  
 默认情况下，将对 <xref:System.Data.Services.Client.DataServiceCollection%601> 启用自动更改跟踪。 您可以创建 <xref:System.Data.Services.Client.DataServiceCollection%601> 的实例，该实例在您使用可以为 <xref:System.Data.Services.Client.TrackingMode.None> 提供 <xref:System.Data.Services.Client.TrackingMode> 值的构造函数创建实例时，会使用手动更改跟踪。 使用手动跟踪时，必须实现 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 并处理引发事件，以便将更改手动报告到 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, items As IEnumerable(Of T), trackingMode As TrackingMode, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> 用于跟踪集合中的项。</param>
        <param name="items"><see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 或 LINQ 查询，可返回用于初始化集合的对象的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> 值，用于指示是否自动跟踪对集合中各项所做的更改。</param>
        <param name="entitySetName">集合中的对象实体集。</param>
        <param name="entityChangedCallback">一种委托，用于封装在实体更改时进行调用的方法。</param>
        <param name="collectionChangedCallback">一种委托，用于封装在实体集合更改时进行调用的方法。</param>
        <summary>创建基于查询执行、使用所提供的更改方法委托并使用所提供的 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 的 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，将对 <xref:System.Data.Services.Client.DataServiceCollection%601> 启用自动更改跟踪。 使用此类构造函数为 <xref:System.Data.Services.Client.TrackingMode.None> 提供 `trackingMode` 值，以便创建使用手动更改跟踪的 <xref:System.Data.Services.Client.DataServiceCollection%601> 实例。 使用手动跟踪时，必须实现 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 并处理引发事件，以便将更改手动报告到 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 当 <xref:System.Data.Services.Client.DataServiceContext> 不是引用了 `items` 实例的 <xref:System.Data.Services.Client.DataServiceQuery%601> 或 <xref:System.Data.Services.Client.QueryOperationResponse%601> 时，必须提供 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 `entityChanged` 和 `collectionChanged` 函数分别由 <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> 事件调用。 `entityChanged` 方法使用 <xref:System.Data.Services.Client.EntityCollectionChangedParams> 值，而 `collectionChanged` 方法则使用 <xref:System.Data.Services.Client.EntityChangedParams> 值。 这两个方法都必须返回指示事件是否由函数进行处理的布尔值。 当该方法返回时 `true` ，默认行为仍将出现。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool stopTracking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(bool stopTracking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (stopTracking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(bool stopTracking);" />
      <MemberSignature Language="F#" Value="override this.Clear : bool -&gt; unit" Usage="dataServiceCollection.Clear stopTracking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopTracking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stopTracking">若为 <see langword="true" />，则从 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 中分离所有项。</param>
        <summary>移除集合中的所有项，并选择性地分离 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 中的所有项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 分离某项后，数据图中的所有相关对象也将从 <xref:System.Data.Services.Client.DataServiceContext> 中分离出来。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continuation">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; Continuation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!T&gt; Continuation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceCollection`1.Continuation" />
      <MemberSignature Language="VB.NET" Value="Public Property Continuation As DataServiceQueryContinuation(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ Continuation { System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ get(); void set(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Continuation : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; with get, set" Usage="System.Data.Services.Client.DataServiceCollection&lt;'T&gt;.Continuation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于返回下一分页结果集的延续对象。</summary>
        <value><see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 对象，包含用于返回下一分页结果集的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在数据服务中启用分页时，<xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> 属性将返回用于访问下一分页结果集的链接。 有关详细信息，请参阅 [配置数据服务](/dotnet/framework/data/wcf/configuring-the-data-service-wcf-data-services)。  
  
 将分页结果加载到 <xref:System.Data.Services.Client.DataServiceCollection%601> 中时，必须通过传递从 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29> 属性获取的 URI 的执行结果，调用 <xref:System.Data.Services.Client.DataServiceCollection%601> 的 <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> 方法来显式加载各页。  
  
   
  
## Examples  
 下面的示例摘自在 WPF 中定义 `SalesOrders` 窗口的可扩展应用程序标记语言 (XAML) 页的代码隐藏页。 加载此窗口时，将根据 <xref:System.Data.Services.Client.DataServiceCollection%601> 返回客户（按国家/地区筛选）的查询结果创建。 将加载此分页结果的所有页面和相关订单，并将这些页面绑定到作为 WPF 窗口的根布局控件的 <xref:System.Windows.FrameworkElement.DataContext%2A> 的 <xref:System.Windows.Controls.StackPanel> 属性。 有关详细信息，请参阅 [如何：将数据绑定到 Windows Presentation Foundation 元素](/dotnet/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services)。  
  
 [!code-csharp[Astoria Northwind Client#BindPagedData](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf3.xaml.cs#bindpageddata)]
 [!code-vb[Astoria Northwind Client#BindPagedData](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf3.xaml.vb#bindpageddata)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/wcf/loading-deferred-content-wcf-data-services">加载延迟的内容（WCF 数据服务）</related>
        <related type="Article" href="/dotnet/framework/data/wcf/binding-data-to-controls-wcf-data-services">将数据绑定到控件（WCF 数据服务）</related>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Detach" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach();" />
      <MemberSignature Language="F#" Value="member this.Detach : unit -&gt; unit" Usage="dataServiceCollection.Detach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>禁止 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 跟踪集合中的所有项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> 方法只能在 <xref:System.Data.Services.Client.DataServiceCollection%601> 是根集合时调用。  
  
 在属于根集合的集合上调用 <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> 方法时，也将停止对数据图中所有相关对象进行的跟踪。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'T -&gt; unit" Usage="dataServiceCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">要添加项的索引位置。</param>
        <param name="item">要添加的项。</param>
        <summary>将指定项添加到集合的指定索引位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 手动跟踪对集合所做的更改时，必须重写 <xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A> 方法，防止自动将项添加到集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将实体加载到集合中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.Load : seq&lt;'T&gt; -&gt; unit" Usage="dataServiceCollection.Load items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">要添加到 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 的实体对象的集合。</param>
        <summary>将实体对象的集合加载到集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> 方法时将附加集合中的所有对象（如果这些对象尚未附加到与 <xref:System.Data.Services.Client.DataServiceContext> 关联的 <xref:System.Data.Services.Client.DataServiceCollection%601>）。  
  
 使用 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> 方法附加对象时，还将附加所有相关对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(T item);" />
      <MemberSignature Language="F#" Value="member this.Load : 'T -&gt; unit" Usage="dataServiceCollection.Load item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">要添加的实体对象。</param>
        <summary>将单个实体对象加载到集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> 方法时将附加对象（如果该对象尚未附加到与 <xref:System.Data.Services.Client.DataServiceContext> 关联的 <xref:System.Data.Services.Client.DataServiceCollection%601>）。  
  
 使用 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> 方法附加对象时，还将附加所有相关对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
