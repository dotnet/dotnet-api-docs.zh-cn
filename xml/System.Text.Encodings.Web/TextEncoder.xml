<Type Name="TextEncoder" FullName="System.Text.Encodings.Web.TextEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87952b6030067055f3a9d6307b16f41289d84e04" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89942395" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encodings.Web.TextEncoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextEncoder abstract" />
  <TypeSignature Language="F#" Value="type TextEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encodings.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web 编码器的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
 TextEncoder 子类可用于执行 HTML 编码、URI 编码和 JavaScript 编码。 可以使用 <xref:System.Text.Encodings.Web.HtmlEncoder.Default?displayProperty=nameWithType> 、和属性访问此类子类的实例 <xref:System.Text.Encodings.Web.UrlEncoder.Default?displayProperty=nameWithType> <xref:System.Text.Encodings.Web.JavaScriptEncoder.Default?displayProperty=nameWithType> 。   

 此类型的源代码在 GitHub 上的 "system.web" [项目](https://github.com/dotnet/runtime/tree/master/src/libraries/System.Text.Encodings.Web) 中提供。 也可以作为代码示例的单元测试可在 GitHub 上的 " [system.web/测试](https://github.com/dotnet/runtime/tree/master/src/libraries/System.Text.Encodings.Web/tests) " 文件夹中找到。  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Text.Encodings.Web.TextEncoder" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Encode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string&#xA;override this.Encode : string -&gt; string" Usage="textEncoder.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">要编码的字符串。</param>
        <summary>编码所提供的字符串，并返回编码后的文本作为新字符串。</summary>
        <returns>编码的字符串。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><see cref="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" /> 方法失败。 编码器未正确实现 <see cref="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public void Encode (System.IO.TextWriter output, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encode(class System.IO.TextWriter output, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encode (output As TextWriter, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Encode(System::IO::TextWriter ^ output, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Encode : System.IO.TextWriter * string -&gt; unit" Usage="textEncoder.Encode (output, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="output">要写入编码文本的流。</param>
        <param name="value">要编码的字符串。</param>
        <summary>将指定的字符串编码为 <see cref="T:System.IO.TextWriter" /> 对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (System.IO.TextWriter output, char[] value, int startIndex, int characterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class System.IO.TextWriter output, char[] value, int32 startIndex, int32 characterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Encode (output As TextWriter, value As Char(), startIndex As Integer, characterCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Encode(System::IO::TextWriter ^ output, cli::array &lt;char&gt; ^ value, int startIndex, int characterCount);" />
      <MemberSignature Language="F#" Value="abstract member Encode : System.IO.TextWriter * char[] * int * int -&gt; unit&#xA;override this.Encode : System.IO.TextWriter * char[] * int * int -&gt; unit" Usage="textEncoder.Encode (output, value, startIndex, characterCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="characterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">要写入编码文本的流。</param>
        <param name="value">要编码的字符数组。</param>
        <param name="startIndex">要编码的第一个字符的数组索引。</param>
        <param name="characterCount">要编码的数组中的字符数。</param>
        <summary>对数组中的字符进行编码，并将其写入 <see cref="T:System.IO.TextWriter" /> 对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><see cref="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" /> 方法失败。 编码器未正确实现 <see cref="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> 超出范围。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="characterCount" /> 超出范围。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual void Encode (System.IO.TextWriter output, string value, int startIndex, int characterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class System.IO.TextWriter output, string value, int32 startIndex, int32 characterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Encode (output As TextWriter, value As String, startIndex As Integer, characterCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Encode(System::IO::TextWriter ^ output, System::String ^ value, int startIndex, int characterCount);" />
      <MemberSignature Language="F#" Value="abstract member Encode : System.IO.TextWriter * string * int * int -&gt; unit&#xA;override this.Encode : System.IO.TextWriter * string * int * int -&gt; unit" Usage="textEncoder.Encode (output, value, startIndex, characterCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="characterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">要写入编码文本的流。</param>
        <param name="value">要编码其子字符串的字符串。</param>
        <param name="startIndex">子字符串开始位置的索引。</param>
        <param name="characterCount">子字符串中的字符数。</param>
        <summary>对子字符串进行编码，并将其写入 <see cref="T:System.IO.TextWriter" /> 对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><see cref="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" /> 方法失败。 编码器未正确实现 <see cref="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> 超出范围。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="characterCount" /> 超出范围。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual System.Buffers.OperationStatus Encode (ReadOnlySpan&lt;char&gt; source, Span&lt;char&gt; destination, out int charsConsumed, out int charsWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Buffers.OperationStatus Encode(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsConsumed, [out] int32&amp; charsWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.Encode(System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (source As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsConsumed As Integer, ByRef charsWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="abstract member Encode : ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; * int * int * bool -&gt; System.Buffers.OperationStatus&#xA;override this.Encode : ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; * int * int * bool -&gt; System.Buffers.OperationStatus" Usage="textEncoder.Encode (source, destination, charsConsumed, charsWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="source">一个源缓冲区，包含要编码的字符。</param>
        <param name="destination">目标缓冲区，将向其中写入编码形式的 <paramref name="source" />。</param>
        <param name="charsConsumed">从 <paramref name="source" /> 缓冲区使用的字符数。</param>
        <param name="charsWritten">写入 <paramref name="destination" /> 缓冲区的字符数。</param>
        <param name="isFinalBlock"><see langword="true" /> 用于表示还有需要进行编码的源数据；否则 <see langword="false" />。</param>
        <summary>对提供的字符进行编码。</summary>
        <returns>用于描述编码操作结果的枚举值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

缓冲区 `source` 和 `destination` 不能重叠。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeUtf8">
      <MemberSignature Language="C#" Value="public virtual System.Buffers.OperationStatus EncodeUtf8 (ReadOnlySpan&lt;byte&gt; utf8Source, Span&lt;byte&gt; utf8Destination, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Buffers.OperationStatus EncodeUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Source, valuetype System.Span`1&lt;unsigned int8&gt; utf8Destination, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.EncodeUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EncodeUtf8 (utf8Source As ReadOnlySpan(Of Byte), utf8Destination As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="abstract member EncodeUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int * bool -&gt; System.Buffers.OperationStatus&#xA;override this.EncodeUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int * bool -&gt; System.Buffers.OperationStatus" Usage="textEncoder.EncodeUtf8 (utf8Source, utf8Destination, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="utf8Destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="utf8Source">一个源缓冲区，包含要编码的 UTF-8 文本。</param>
        <param name="utf8Destination">目标缓冲区，将向其中写入编码形式的 <paramref name="utf8Source" />。</param>
        <param name="bytesConsumed">从 <paramref name="utf8Source" /> 缓冲区使用的字节数。</param>
        <param name="bytesWritten">写入 <paramref name="utf8Destination" /> 缓冲区的字节数。</param>
        <param name="isFinalBlock"><see langword="true" /> 用于表示还有需要进行编码的源数据；否则 <see langword="false" />。</param>
        <summary>对提供的 UTF-8 文本进行编码。</summary>
        <returns>用于描述编码操作结果的状态代码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`utf8Source`和 `utf8Destination` 缓冲区不得重叠。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFirstCharacterToEncode">
      <MemberSignature Language="C#" Value="public abstract int FindFirstCharacterToEncode (char* text, int textLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 FindFirstCharacterToEncode(char* text, int32 textLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.FindFirstCharacterToEncode(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int FindFirstCharacterToEncode(char* text, int textLength);" />
      <MemberSignature Language="F#" Value="abstract member FindFirstCharacterToEncode : nativeptr&lt;char&gt; * int -&gt; int" Usage="textEncoder.FindFirstCharacterToEncode (text, textLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char*" />
        <Parameter Name="textLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">要搜索的文本缓冲区。</param>
        <param name="textLength"><paramref name="text" /> 中的字符数。</param>
        <summary>查找要编码的第一个字符的索引。</summary>
        <returns>第一个要编码的字符的索引。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
 此帮助器方法很少直接调用。
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFirstCharacterToEncodeUtf8">
      <MemberSignature Language="C#" Value="public virtual int FindFirstCharacterToEncodeUtf8 (ReadOnlySpan&lt;byte&gt; utf8Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 FindFirstCharacterToEncodeUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.FindFirstCharacterToEncodeUtf8(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirstCharacterToEncodeUtf8 (utf8Text As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int FindFirstCharacterToEncodeUtf8(ReadOnlySpan&lt;System::Byte&gt; utf8Text);" />
      <MemberSignature Language="F#" Value="abstract member FindFirstCharacterToEncodeUtf8 : ReadOnlySpan&lt;byte&gt; -&gt; int&#xA;override this.FindFirstCharacterToEncodeUtf8 : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="textEncoder.FindFirstCharacterToEncodeUtf8 utf8Text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Text" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="utf8Text">要搜索的 UTF-8 文本输入缓冲区。</param>
        <summary>查找 UTF-8 文本输入缓冲区中第一个要被当前编码器实例进行转义的元素。</summary>
        <returns><paramref name="utf8Text" /> 中第一个要被当前编码器实例进行转义的元素的索引，如果 <paramref name="utf8Text" /> 中没有任何数据需要转义，则为 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxOutputCharactersPerInputCharacter">
      <MemberSignature Language="C#" Value="public abstract int MaxOutputCharactersPerInputCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxOutputCharactersPerInputCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxOutputCharactersPerInputCharacter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxOutputCharactersPerInputCharacter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxOutputCharactersPerInputCharacter : int" Usage="System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此编码器可为每个输入码位生成的最大字符数。</summary>
        <value>最大字符数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeUnicodeScalar">
      <MemberSignature Language="C#" Value="public abstract bool TryEncodeUnicodeScalar (int unicodeScalar, char* buffer, int bufferLength, out int numberOfCharactersWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryEncodeUnicodeScalar(int32 unicodeScalar, char* buffer, int32 bufferLength, [out] int32&amp; numberOfCharactersWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryEncodeUnicodeScalar(int unicodeScalar, char* buffer, int bufferLength, [Runtime::InteropServices::Out] int % numberOfCharactersWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryEncodeUnicodeScalar : int * nativeptr&lt;char&gt; * int * int -&gt; bool" Usage="textEncoder.TryEncodeUnicodeScalar (unicodeScalar, buffer, bufferLength, numberOfCharactersWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicodeScalar" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Char*" />
        <Parameter Name="bufferLength" Type="System.Int32" />
        <Parameter Name="numberOfCharactersWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="unicodeScalar">一个 Unicode 标量值。</param>
        <param name="buffer">指向要写入编码文本的缓冲区的指针。</param>
        <param name="bufferLength">目标 <paramref name="buffer" /> 的长度（以字符为单位）。</param>
        <param name="numberOfCharactersWritten">方法返回时，指示写入 <paramref name="buffer" /> 的字符数。</param>
        <summary>编码一个 Unicode 标量值并将其写入缓冲区。</summary>
        <returns>如果 <paramref name="bufferLength" /> 太小，无法适应编码的文本，则为 <see langword="false" />；否则，将返回 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
 很少直接调用此方法。 <xref:System.Text.Encodings.Web.TextEncoder.Encode%2A>应改为使用重载之一。 类的实现 <xref:System.Text.Encodings.Web.TextEncoder> 必须是线程安全的，并且是无状态的。  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillEncode">
      <MemberSignature Language="C#" Value="public abstract bool WillEncode (int unicodeScalar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillEncode(int32 unicodeScalar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encodings.Web.TextEncoder.WillEncode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function WillEncode (unicodeScalar As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool WillEncode(int unicodeScalar);" />
      <MemberSignature Language="F#" Value="abstract member WillEncode : int -&gt; bool" Usage="textEncoder.WillEncode unicodeScalar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encodings.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicodeScalar" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicodeScalar">一个 Unicode 标量值。</param>
        <summary>确定是否将对给定的 Unicode 标量值进行编码。</summary>
        <returns>如果由此编码器编码 <paramref name="unicodeScalar" /> 值，则为 <see langword="true" />；否则，将返回 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
