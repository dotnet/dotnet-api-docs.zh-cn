<Type Name="PipeSecurity" FullName="System.IO.Pipes.PipeSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd92d6c629167b460489912a239a27bd8013956b" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90694351" /></Metadata><TypeSignature Language="C#" Value="public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipeSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.PipeSecurity" />
  <TypeSignature Language="VB.NET" Value="Public Class PipeSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeSecurity : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type PipeSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c8268-101">表示管道的访问控制和审核安全。</span><span class="sxs-lookup"><span data-stu-id="c8268-101">Represents the access control and audit security for a pipe.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-102"><xref:System.IO.Pipes.PipeSecurity>类指定管道的访问权限以及访问尝试的审核方式。</span><span class="sxs-lookup"><span data-stu-id="c8268-102">The <xref:System.IO.Pipes.PipeSecurity> class specifies the access rights for a pipe and how access attempts are audited.</span></span>  <span data-ttu-id="c8268-103">此类将访问权限和审核权限表示为一组规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-103">This class represents access and audit rights as a set of rules.</span></span> <span data-ttu-id="c8268-104">每个访问规则由一个 <xref:System.IO.Pipes.PipeAccessRule> 对象表示，而每个审核规则由一个 <xref:System.IO.Pipes.PipeAuditRule> 对象表示。</span><span class="sxs-lookup"><span data-stu-id="c8268-104">Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.</span></span>  
  
 <span data-ttu-id="c8268-105"><xref:System.IO.Pipes.PipeSecurity>类是基础 Microsoft Windows 文件安全系统的抽象。</span><span class="sxs-lookup"><span data-stu-id="c8268-105">The <xref:System.IO.Pipes.PipeSecurity> class is an abstraction of the underlying Microsoft Windows file security system.</span></span> <span data-ttu-id="c8268-106">在此系统中，每个管道都有 (DACL) 的自由访问控制列表，该列表控制对管道的访问，以及 (SACL) 的系统访问控制列表，后者指定审核的访问控制尝试。</span><span class="sxs-lookup"><span data-stu-id="c8268-106">In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.</span></span>  <span data-ttu-id="c8268-107"><xref:System.IO.Pipes.PipeAccessRule>和 <xref:System.IO.Pipes.PipeAuditRule> 类是包含 Dacl 和 Sacl (ace) 的访问控制项的抽象类。</span><span class="sxs-lookup"><span data-stu-id="c8268-107">The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.</span></span>  
  
 <span data-ttu-id="c8268-108"><xref:System.IO.Pipes.PipeSecurity>类隐藏了 dacl 和 sacl 的许多详细信息; 不必担心 ACE 顺序或 NULL dacl。</span><span class="sxs-lookup"><span data-stu-id="c8268-108">The <xref:System.IO.Pipes.PipeSecurity> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.</span></span>  
  
 <span data-ttu-id="c8268-109">使用 <xref:System.IO.Pipes.PipeSecurity> 类可检索、添加或更改表示管道的 DACL 和 SACL 的访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-109">Use the <xref:System.IO.Pipes.PipeSecurity> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.</span></span>  
  
 <span data-ttu-id="c8268-110">若要将新的或更改的访问或审核规则保存到管道，请使用 <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c8268-110">To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method.</span></span> <span data-ttu-id="c8268-111">若要从现有文件检索访问或审核规则，请使用 <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c8268-111">To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PipeSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8268-112">初始化 <see cref="T:System.IO.Pipes.PipeSecurity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c8268-112">Initializes a new instance of the <see cref="T:System.IO.Pipes.PipeSecurity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-113">此构造函数将创建一个 <xref:System.IO.Pipes.PipeSecurity> 不基于现有管道的空对象。</span><span class="sxs-lookup"><span data-stu-id="c8268-113">This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe.</span></span> <span data-ttu-id="c8268-114">然后，你可以使用访问控制信息填充对象并将其应用于管道。</span><span class="sxs-lookup"><span data-stu-id="c8268-114">You can then populate the object with access control information and apply it to a pipe.</span></span>  
  
 <span data-ttu-id="c8268-115">您可以使用方法向对象添加访问规则或审核规则 <xref:System.IO.Pipes.PipeSecurity> <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-115">You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method.</span></span> <span data-ttu-id="c8268-116">您可以使用方法删除访问或审核规则 <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-116">You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.</span></span>  
  
 <span data-ttu-id="c8268-117">若要将新的或更改的访问或审核规则保存到管道，请使用 <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c8268-117">To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method.</span></span> <span data-ttu-id="c8268-118">若要从现有文件检索访问或审核规则，请使用 <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c8268-118">To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.IO.Pipes.PipeSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8268-119">获取与当前 <see cref="T:System.Type" /> 对象关联的可保护对象的 <see cref="T:System.IO.Pipes.PipeSecurity" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-119">Gets the <see cref="T:System.Type" /> of the securable object that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <value><span data-ttu-id="c8268-120">与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的可保护对象的类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-120">The type of the securable object that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-121">派生自类的类将 <xref:System.Security.AccessControl.ObjectSecurity> 重写 <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> 属性，并返回它们用来表示访问权限的类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-121">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="c8268-122">当使用包含多个类型的安全对象的数组或集合时，请使用此属性来确定要用于每个安全对象的正确枚举类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-122">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AccessRuleFactory (identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="pipeSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="c8268-123">应用访问规则的标识。</span><span class="sxs-lookup"><span data-stu-id="c8268-123">The identity that the access rule applies to.</span></span> <span data-ttu-id="c8268-124">它必须是可以转换为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 对象的对象。</span><span class="sxs-lookup"><span data-stu-id="c8268-124">It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></param>
        <param name="accessMask"><span data-ttu-id="c8268-125">此规则的访问掩码。</span><span class="sxs-lookup"><span data-stu-id="c8268-125">The access mask of this rule.</span></span> <span data-ttu-id="c8268-126">访问掩码是 32 位的匿名位集合，其含义由单个集成者定义</span><span class="sxs-lookup"><span data-stu-id="c8268-126">The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</span></span></param>
        <param name="isInherited"><span data-ttu-id="c8268-127">如果此规则继承自父容器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-127"><see langword="true" /> if this rule is inherited from a parent container; otherwise, <see langword="false" />.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="c8268-128"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值之一，指定访问规则的继承属性。</span><span class="sxs-lookup"><span data-stu-id="c8268-128">One of the <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values that specifies the inheritance properties of the access rule.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="c8268-129"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 值之一，指定是否自动传播继承的访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-129">One of the <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that specifies whether inherited access rules are automatically propagated.</span></span> <span data-ttu-id="c8268-130">如果将 <paramref name="inheritanceFlags" /> 设置为 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />，则忽略传播标志。</span><span class="sxs-lookup"><span data-stu-id="c8268-130">The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="type"><span data-ttu-id="c8268-131">指定有效的访问控制类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-131">Specifies the valid access control type.</span></span></param>
        <summary><span data-ttu-id="c8268-132">用指定的值初始化 <see cref="T:System.Security.AccessControl.AccessRule" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c8268-132">Initializes a new instance of the <see cref="T:System.Security.AccessControl.AccessRule" /> class with the specified values.</span></span></summary>
        <returns><span data-ttu-id="c8268-133">此方法创建的 <see cref="T:System.Security.AccessControl.AccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c8268-133">The <see cref="T:System.Security.AccessControl.AccessRule" /> object that this method creates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-134">创建访问控制规则的建议方法是使用类的构造函数 <xref:System.IO.Pipes.PipeAccessRule> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-134">The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c8268-135"><paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="c8268-135"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-136"><paramref name="identityReference" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-136"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8268-137">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c8268-137">-or-</span></span> 
 <span data-ttu-id="c8268-138"><paramref name="accessMask" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="c8268-138"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8268-139"><paramref name="identityReference" /> 既不属于 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，也不属于可以转换为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型的类型（如 <see cref="T:System.Security.Principal.NTAccount" />）。</span><span class="sxs-lookup"><span data-stu-id="c8268-139"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type, such as <see cref="T:System.Security.Principal.NTAccount" />, that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.IO.Pipes.PipeSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8268-140">获取与当前 <see cref="T:System.Type" /> 对象的访问规则关联的对象的 <see cref="T:System.IO.Pipes.PipeSecurity" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-140">Gets the <see cref="T:System.Type" /> of the object that is associated with the access rules of the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <value><span data-ttu-id="c8268-141">与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象的访问规则关联的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-141">The type of the object that is associated with the access rules of the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-142">派生自类的类将 <xref:System.Security.AccessControl.ObjectSecurity> 重写 <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> 属性，并返回它们用来表示访问权限的类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-142">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="c8268-143">当使用包含多个类型的安全对象的数组或集合时，请使用此属性来确定要用于每个安全对象的正确枚举类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-143">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-144">要添加的访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-144">The access rule to add.</span></span></param>
        <summary><span data-ttu-id="c8268-145">将访问规则添加到与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL)。</span><span class="sxs-lookup"><span data-stu-id="c8268-145">Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-146"><xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>方法将新规则添加到对象包含的规则列表 <xref:System.IO.Pipes.PipeSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-146">The <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.</span></span> <span data-ttu-id="c8268-147">如果指定规则 (ACL) 的访问控制列表已存在，则该 <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> 方法仍将添加规则，但有一个例外： <xref:System.IO.Pipes.PipeAccessRule> 使用值创建的对象将 <xref:System.Security.AccessControl.AccessControlType.Deny> 取代使用该值创建的对象 <xref:System.Security.AccessControl.AccessControlType.Allow> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-147">If an access control list (ACL) already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType.Allow> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-148"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-148">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-149">要添加的审核规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-149">The audit rule to add.</span></span></param>
        <summary><span data-ttu-id="c8268-150">将审核规则添加到与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL)。</span><span class="sxs-lookup"><span data-stu-id="c8268-150">Adds an audit rule to the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-151"><xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A>方法将新的审核规则添加到对象包含的规则列表 <xref:System.IO.Pipes.PipeSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-151">The <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.</span></span>  
  
 <span data-ttu-id="c8268-152">如果指定的规则已存在审核规则，则该 <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> 方法仍将添加规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-152">If an audit rule already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method will still add the rule.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-153"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-153">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function AuditRuleFactory (identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="pipeSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="c8268-154">应用访问规则的标识。</span><span class="sxs-lookup"><span data-stu-id="c8268-154">The identity that the access rule applies to.</span></span> <span data-ttu-id="c8268-155">它必须是可以转换为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 对象的对象。</span><span class="sxs-lookup"><span data-stu-id="c8268-155">It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></param>
        <param name="accessMask"><span data-ttu-id="c8268-156">此规则的访问掩码。</span><span class="sxs-lookup"><span data-stu-id="c8268-156">The access mask of this rule.</span></span> <span data-ttu-id="c8268-157">访问掩码是 32 位的匿名位集合，其含义由单个集成者定义</span><span class="sxs-lookup"><span data-stu-id="c8268-157">The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</span></span></param>
        <param name="isInherited"><span data-ttu-id="c8268-158">如果此规则是从父级容器继承，则为 <see langword="true" />；否则为 false。</span><span class="sxs-lookup"><span data-stu-id="c8268-158"><see langword="true" /> if this rule is inherited from a parent container; otherwise, false.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="c8268-159"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值之一，指定访问规则的继承属性。</span><span class="sxs-lookup"><span data-stu-id="c8268-159">One of the <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values that specifies the inheritance properties of the access rule.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="c8268-160"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 值之一，指定是否自动传播继承的访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-160">One of the <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that specifies whether inherited access rules are automatically propagated.</span></span> <span data-ttu-id="c8268-161">如果将 <paramref name="inheritanceFlags" /> 设置为 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />，则忽略传播标志。</span><span class="sxs-lookup"><span data-stu-id="c8268-161">The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="flags"><span data-ttu-id="c8268-162"><see cref="T:System.Security.AccessControl.AuditFlags" /> 值之一，指定有效的访问控制类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-162">One of the <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specifies the valid access control type.</span></span></param>
        <summary><span data-ttu-id="c8268-163">用指定的值初始化 <see cref="T:System.Security.AccessControl.AuditRule" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c8268-163">Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule" /> class with the specified values.</span></span></summary>
        <returns><span data-ttu-id="c8268-164">此方法创建的 <see cref="T:System.Security.AccessControl.AuditRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c8268-164">The <see cref="T:System.Security.AccessControl.AuditRule" /> object that this method creates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-165">创建审核规则的建议方法是使用类的构造函数 <xref:System.IO.Pipes.PipeAuditRule> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-165">The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c8268-166"><paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 属性指定了无效值。</span><span class="sxs-lookup"><span data-stu-id="c8268-166">The <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> properties specify an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-167"><paramref name="identityReference" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-167">The <paramref name="identityReference" /> property is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8268-168">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c8268-168">-or-</span></span> 
<span data-ttu-id="c8268-169"><paramref name="accessMask" /> 属性为零。</span><span class="sxs-lookup"><span data-stu-id="c8268-169">The <paramref name="accessMask" /> property is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8268-170"><paramref name="identityReference" /> 属性既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，也不是可转换为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型的类型，如 <see cref="T:System.Security.Principal.NTAccount" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-170">The <paramref name="identityReference" /> property is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type, such as <see cref="T:System.Security.Principal.NTAccount" />, that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.IO.Pipes.PipeSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8268-171">获取与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象的审核规则关联的 <see cref="T:System.Type" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c8268-171">Gets the <see cref="T:System.Type" /> object associated with the audit rules of the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <value><span data-ttu-id="c8268-172">与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象的审核规则关联的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-172">The type of the object that is associated with the audit rules of the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-173">派生自类的类将 <xref:System.Security.AccessControl.ObjectSecurity> 重写 <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> 属性，并返回它们用来表示访问权限的类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-173">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="c8268-174">当使用包含多个类型的安全对象的数组或集合时，请使用此属性来确定要用于每个安全对象的正确枚举类型。</span><span class="sxs-lookup"><span data-stu-id="c8268-174">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8268-175">将与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的安全描述符的指定部分保存到永久性存储器。</span><span class="sxs-lookup"><span data-stu-id="c8268-175">Saves the specified sections of the security descriptor that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object to permanent storage.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (handle As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberSignature Language="F#" Value="override this.Persist : System.Runtime.InteropServices.SafeHandle -&gt; unit" Usage="pipeSecurity.Persist handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="c8268-176">与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的可保护对象的句柄。</span><span class="sxs-lookup"><span data-stu-id="c8268-176">The handle of the securable object that the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object is associated with.</span></span></param>
        <summary><span data-ttu-id="c8268-177">将与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的安全描述符的指定部分保存到永久性存储器。</span><span class="sxs-lookup"><span data-stu-id="c8268-177">Saves the specified sections of the security descriptor that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object to permanent storage.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.Persist : string -&gt; unit" Usage="pipeSecurity.Persist name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c8268-178">与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的可保护对象的名称。</span><span class="sxs-lookup"><span data-stu-id="c8268-178">The name of the securable object that the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object is associated with.</span></span></param>
        <summary><span data-ttu-id="c8268-179">将与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的安全描述符的指定部分保存到永久性存储器。</span><span class="sxs-lookup"><span data-stu-id="c8268-179">Saves the specified sections of the security descriptor that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object to permanent storage.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As PipeAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.IO.Pipes.PipeAccessRule -&gt; bool" Usage="pipeSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-180">要移除的访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-180">The access rule to remove.</span></span></param>
        <summary><span data-ttu-id="c8268-181">将访问规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL) 中移除。</span><span class="sxs-lookup"><span data-stu-id="c8268-181">Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="c8268-182">如果操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-182"><see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-183"><xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 从当前对象中移除所有匹配的访问规则或所有匹配 <xref:System.Security.AccessControl.AccessControlType.Allow> 的访问规则 <xref:System.IO.Pipes.PipeSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-183">The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object.</span></span> <span data-ttu-id="c8268-184">例如，你可以使用此方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 通过传递 <xref:System.IO.Pipes.PipeAccessRule> 使用 <xref:System.Security.AccessControl.AccessControlType.Deny> 值、 <xref:System.IO.Pipes.PipeAccessRights.Read> 值和用户帐户创建的对象来删除用户的所有访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-184">For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account.</span></span> <span data-ttu-id="c8268-185"><xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法删除任何指定 <xref:System.IO.Pipes.PipeAccessRights.Read> 值或值的拒绝规则 <xref:System.IO.Pipes.PipeAccessRights.Write> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-185">The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-186"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-186">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-187">要移除的访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-187">The access rule to remove.</span></span></param>
        <summary><span data-ttu-id="c8268-188">将指定的访问规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL) 中移除。</span><span class="sxs-lookup"><span data-stu-id="c8268-188">Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-189"><xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 从当前对象中移除所有匹配的访问规则或所有匹配 <xref:System.Security.AccessControl.AccessControlType.Allow> 的访问规则 <xref:System.IO.Pipes.PipeSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-189">The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object.</span></span> <span data-ttu-id="c8268-190">例如，你可以使用此方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 通过传递 <xref:System.IO.Pipes.PipeAccessRule> 使用 <xref:System.Security.AccessControl.AccessControlType.Deny> 值、 <xref:System.IO.Pipes.PipeAccessRights.Read> 值和用户帐户创建的对象来删除用户的所有访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-190">For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account.</span></span> <span data-ttu-id="c8268-191"><xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法删除任何指定 <xref:System.IO.Pipes.PipeAccessRights.Read> 值或值的拒绝规则 <xref:System.IO.Pipes.PipeAccessRights.Write> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-191">The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-192"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-192">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As PipeAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.IO.Pipes.PipeAuditRule -&gt; bool" Usage="pipeSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-193">要移除的审核规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-193">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="c8268-194">将审核规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL) 中移除。</span><span class="sxs-lookup"><span data-stu-id="c8268-194">Removes an audit rule from the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <returns><span data-ttu-id="c8268-195">如果审核规则已移除，则为 <see langword="true" />；否则为 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="c8268-195"><see langword="true" /> if the audit rule was removed; otherwise, <see langword="false" /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-196"><xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A>方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 从当前对象中移除所有匹配的审核规则或所有匹配 <xref:System.Security.AccessControl.AccessControlType.Allow> 的审核规则 <xref:System.IO.Pipes.PipeSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-196">The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.</span></span>  <span data-ttu-id="c8268-197">例如，你可以使用此方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 通过传递 <xref:System.Security.AccessControl.FileSystemAuditRule> 使用 <xref:System.Security.AccessControl.AccessControlType.Deny> 值、 <xref:System.Security.AccessControl.AuditFlags.Failure> 值和用户帐户创建的对象来删除用户的所有审核规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-197">For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.</span></span>  <span data-ttu-id="c8268-198">如果执行此操作， <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> 方法将删除任何指定 <xref:System.Security.AccessControl.AuditFlags.Failure> 值或值的拒绝规则 <xref:System.Security.AccessControl.AuditFlags.Success> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-198">When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-199"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-199">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-200">要移除的审核规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-200">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="c8268-201">将与指定的审核规则具有相同安全标识符的所有审核规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL) 中移除。</span><span class="sxs-lookup"><span data-stu-id="c8268-201">Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-202"><xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A>方法移除指定用户的所有审核规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-202">The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.</span></span>  <span data-ttu-id="c8268-203">它忽略 <xref:System.IO.Pipes.PipeAuditRule> 对象中除用户帐户之外的所有值。</span><span class="sxs-lookup"><span data-stu-id="c8268-203">It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-204"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-204">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-205">要移除的审核规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-205">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="c8268-206">将指定的审核规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL) 中移除。</span><span class="sxs-lookup"><span data-stu-id="c8268-206">Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-207"><xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A>方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 从当前对象中删除指定的匹配审核规则或指定的匹配 <xref:System.Security.AccessControl.AccessControlType.Allow> 审核规则 <xref:System.IO.Pipes.PipeSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-207">The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.</span></span>  <span data-ttu-id="c8268-208">例如，你可以使用此方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 通过传递 <xref:System.Security.AccessControl.FileSystemAuditRule> 使用 <xref:System.Security.AccessControl.AccessControlType.Deny> 值、 <xref:System.Security.AccessControl.AuditFlags.Failure> 值和用户帐户创建的对象来删除用户的指定审核规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-208">For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.</span></span>  <span data-ttu-id="c8268-209">执行此操作时， <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> 方法只删除指定值的拒绝规则 <xref:System.Security.AccessControl.AuditFlags.Failure> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-209">When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.</span></span>  <span data-ttu-id="c8268-210">它不会删除任何指定值的拒绝规则 <xref:System.Security.AccessControl.AuditFlags.Success> 。</span><span class="sxs-lookup"><span data-stu-id="c8268-210">It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-211"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-211">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-212">要添加的访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-212">The access rule to add.</span></span></param>
        <summary><span data-ttu-id="c8268-213">将所有访问规则从与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL) 中移除，然后添加指定的访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-213">Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object and then adds the specified access rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-214"><xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A>方法添加指定的访问控制列表 (ACL) 规则或覆盖与参数匹配的所有相同 ACL 规则 `rule` 。</span><span class="sxs-lookup"><span data-stu-id="c8268-214">The <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.</span></span>  <span data-ttu-id="c8268-215">例如，如果 `rule` 参数指定了一个 <xref:System.IO.Pipes.PipeAccessRights.Read> 值，并且该 <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> 方法找到了指定该值的相同 ACL 规则 <xref:System.IO.Pipes.PipeAccessRights.Read> ，则将覆盖相同的规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-215">For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.</span></span>  <span data-ttu-id="c8268-216">如果该 <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> 方法找到指定值的相同 ACL 规则 <xref:System.IO.Pipes.PipeAccessRights.Write> ，则相同的规则也会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="c8268-216">If the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will also be overwritten.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-217"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-217">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-218">要设置的规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-218">The rule to set.</span></span></param>
        <summary><span data-ttu-id="c8268-219">在与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的自定义访问控制列表 (DACL) 中设置访问规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-219">Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-220"><xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A>方法添加指定的访问控制列表 (ACL) 规则或覆盖与参数的值匹配的所有相同 ACL 规则 <xref:System.IO.Pipes.PipeAccessRights> `rule` 。</span><span class="sxs-lookup"><span data-stu-id="c8268-220">The <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.</span></span>  <span data-ttu-id="c8268-221">例如，如果 `rule` 参数指定了一个 <xref:System.IO.Pipes.PipeAccessRights.Read> 值，并且该 <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> 方法找到了指定该值的相同 ACL 规则 <xref:System.IO.Pipes.PipeAccessRights.Read> ，则将覆盖相同的规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-221">For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.</span></span>  <span data-ttu-id="c8268-222">如果 <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> 方法找到指定值的相同 ACL 规则 <xref:System.IO.Pipes.PipeAccessRights.Write> ，则不会覆盖相同的规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-222">If the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-223"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-223">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="c8268-224">要设置的规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-224">The rule to set.</span></span></param>
        <summary><span data-ttu-id="c8268-225">在与当前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 对象关联的系统访问控制列表 (SACL) 中设置审核规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-225">Sets an audit rule in the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8268-226"><xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A>方法添加指定的审核规则或覆盖与参数的值匹配的任何相同的审核规则 <xref:System.IO.Pipes.PipeAccessRights> `rule` 。</span><span class="sxs-lookup"><span data-stu-id="c8268-226">The <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.</span></span>  <span data-ttu-id="c8268-227">例如，如果 `rule` 参数指定一个值， <xref:System.IO.Pipes.PipeAccessRights.Read> 并且该 <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> 方法找到指定该值的相同审核规则 <xref:System.IO.Pipes.PipeAccessRights.Read> ，则将覆盖相同的规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-227">For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.</span></span>  <span data-ttu-id="c8268-228">如果该 <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> 方法找到指定值的相同审核规则 <xref:System.IO.Pipes.PipeAccessRights.Write> ，则不会覆盖相同的规则。</span><span class="sxs-lookup"><span data-stu-id="c8268-228">If the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8268-229"><paramref name="rule" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c8268-229">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
