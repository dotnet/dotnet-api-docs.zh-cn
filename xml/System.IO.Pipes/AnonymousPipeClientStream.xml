<Type Name="AnonymousPipeClientStream" FullName="System.IO.Pipes.AnonymousPipeClientStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66c2215d7a12bb2aa9cd8788d9e18ba8c6785f35" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86813270" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnonymousPipeClientStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeClientStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeClientStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeClientStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeClientStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type AnonymousPipeClientStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.Pipes" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4a7af-101">公开匿名管道流的客户端，该管道流既支持同步读写操作，也支持异步读写操作。</span><span class="sxs-lookup"><span data-stu-id="4a7af-101">Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7af-102">匿名管道有助于在子进程和父进程之间提供安全的进程间通信。</span><span class="sxs-lookup"><span data-stu-id="4a7af-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="4a7af-103"><xref:System.IO.Pipes.AnonymousPipeClientStream>类使子进程能够通过父进程连接到和交换信息。</span><span class="sxs-lookup"><span data-stu-id="4a7af-103">The <xref:System.IO.Pipes.AnonymousPipeClientStream> class enables a child process to connect to and exchange information with a parent process.</span></span>  
  
 <span data-ttu-id="4a7af-104">匿名管道是指通常在父进程和子进程之间传输数据的单向管道。</span><span class="sxs-lookup"><span data-stu-id="4a7af-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="4a7af-105">匿名管道始终是本地的;它们不能通过网络使用。</span><span class="sxs-lookup"><span data-stu-id="4a7af-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="4a7af-106"><xref:System.IO.Pipes.PipeDirection> <xref:System.IO.Pipes.PipeDirection.InOut> 不支持的值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="4a7af-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="4a7af-107">匿名管道不支持 <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 读取模式。</span><span class="sxs-lookup"><span data-stu-id="4a7af-107">Anonymous pipes do not support the <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span>  
  
 <span data-ttu-id="4a7af-108">必须通过调用方法，从服务器端提供的管道句柄创建匿名管道的客户端 <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a7af-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="4a7af-109">然后，在创建客户端进程时将该字符串作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="4a7af-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="4a7af-110">在客户端进程中，它 <xref:System.IO.Pipes.AnonymousPipeClientStream> 作为参数传递到构造函数 `pipeHandleAsString` 。</span><span class="sxs-lookup"><span data-stu-id="4a7af-110">From the client process, it is passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
## Examples  

<span data-ttu-id="4a7af-111">下面的示例使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="4a7af-111">The following example sends a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="4a7af-112">此示例在父进程中创建 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象，它的 <xref:System.IO.Pipes.PipeDirection> 值为 <xref:System.IO.Pipes.PipeDirection.Out>。</span><span class="sxs-lookup"><span data-stu-id="4a7af-112">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="4a7af-113">它还 <xref:System.IO.Pipes.AnonymousPipeClientStream> 在子进程中创建一个对象，该对象的 <xref:System.IO.Pipes.PipeDirection> 值为 <xref:System.IO.Pipes.PipeDirection.In> 。</span><span class="sxs-lookup"><span data-stu-id="4a7af-113">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="4a7af-114">接下来，父进程将用户提供的字符串发送给子进程。</span><span class="sxs-lookup"><span data-stu-id="4a7af-114">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="4a7af-115">此字符串将显示在控制台中。</span><span class="sxs-lookup"><span data-stu-id="4a7af-115">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="4a7af-116">此示例适用于客户端进程，该进程由服务器进程启动。</span><span class="sxs-lookup"><span data-stu-id="4a7af-116">This example is for the client process, which is started by the server process.</span></span> <span data-ttu-id="4a7af-117">在运行此示例时，将客户端代码中的可执行文件命名为 `pipeClient.exe` ，并将其复制到服务器可执行文件所在的目录中。</span><span class="sxs-lookup"><span data-stu-id="4a7af-117">Name the resulting executable from the client code `pipeClient.exe` and copy it to the same directory as the server executable when you run this example.</span></span> <span data-ttu-id="4a7af-118">有关完整的代码示例（包括管道客户端和服务器的代码），请参阅 [如何：使用匿名管道进行本地进程间通信](/dotnet/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication)。</span><span class="sxs-lookup"><span data-stu-id="4a7af-118">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](/dotnet/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a7af-119">初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4a7af-119">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::String ^ pipeHandleAsString);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : string -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream pipeHandleAsString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeHandleAsString"><span data-ttu-id="4a7af-120">一个表示管道句柄的字符串。</span><span class="sxs-lookup"><span data-stu-id="4a7af-120">A string that represents the pipe handle.</span></span></param>
        <summary><span data-ttu-id="4a7af-121">使用指定的管道句柄字符串表示形式初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="4a7af-121">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified string representation of the pipe handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7af-122">对于没有参数的构造函数 <xref:System.IO.Pipes.PipeDirection> ，默认方向是 <xref:System.IO.Pipes.PipeDirection.In> 。</span><span class="sxs-lookup"><span data-stu-id="4a7af-122">For constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a7af-123">下面的示例演示如何使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="4a7af-123">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="4a7af-124">在此示例中，在 <xref:System.IO.Pipes.AnonymousPipeClientStream> 子进程中创建了一个对象。</span><span class="sxs-lookup"><span data-stu-id="4a7af-124">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4a7af-125"><paramref name="pipeHandleAsString" /> 不是有效的管道句柄。</span><span class="sxs-lookup"><span data-stu-id="4a7af-125"><paramref name="pipeHandleAsString" /> is not a valid pipe handle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, safePipeHandle As SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : System.IO.Pipes.PipeDirection * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream (direction, safePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="4a7af-126">确定管道方向的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="4a7af-126">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="4a7af-127">匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-127">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="safePipeHandle"><span data-ttu-id="4a7af-128">此 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象将封装的管道的安全句柄。</span><span class="sxs-lookup"><span data-stu-id="4a7af-128">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object will encapsulate.</span></span></param>
        <summary><span data-ttu-id="4a7af-129">从指定的图柄初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4a7af-129">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class from the specified handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7af-130"><xref:System.IO.Pipes.PipeDirection> <xref:System.IO.Pipes.PipeDirection.InOut> 不支持的值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="4a7af-130">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a7af-131">下面的示例演示如何使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="4a7af-131">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="4a7af-132">在此示例中， <xref:System.IO.Pipes.AnonymousPipeClientStream> 对象是在具有值的子进程中创建的 <xref:System.IO.Pipes.PipeDirection> <xref:System.IO.Pipes.PipeDirection.In> 。</span><span class="sxs-lookup"><span data-stu-id="4a7af-132">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a7af-133"><paramref name="safePipeHandle" /> 不是有效的句图柄。</span><span class="sxs-lookup"><span data-stu-id="4a7af-133"><paramref name="safePipeHandle" /> is not a valid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a7af-134"><paramref name="safePipeHandle" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-134"><paramref name="safePipeHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4a7af-135">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-135"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4a7af-136">发生 I/O 错误，如磁盘错误。</span><span class="sxs-lookup"><span data-stu-id="4a7af-136">An I/O error, such as a disk error, has occurred.</span></span>  
  
 <span data-ttu-id="4a7af-137">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4a7af-137">-or-</span></span>  
  
 <span data-ttu-id="4a7af-138">已关闭流。</span><span class="sxs-lookup"><span data-stu-id="4a7af-138">The stream has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, System::String ^ pipeHandleAsString);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeClientStream : System.IO.Pipes.PipeDirection * string -&gt; System.IO.Pipes.AnonymousPipeClientStream" Usage="new System.IO.Pipes.AnonymousPipeClientStream (direction, pipeHandleAsString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="4a7af-139">确定管道方向的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="4a7af-139">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="4a7af-140">匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-140">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="pipeHandleAsString"><span data-ttu-id="4a7af-141">一个表示管道句柄的字符串。</span><span class="sxs-lookup"><span data-stu-id="4a7af-141">A string that represents the pipe handle.</span></span></param>
        <summary><span data-ttu-id="4a7af-142">使用指定的管道方向和管道句柄字符串表示形式初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="4a7af-142">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified pipe direction and a string representation of the pipe handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7af-143"><xref:System.IO.Pipes.PipeDirection> <xref:System.IO.Pipes.PipeDirection.InOut> 不支持的值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="4a7af-143">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a7af-144">下面的示例演示如何使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="4a7af-144">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="4a7af-145">在此示例中， <xref:System.IO.Pipes.AnonymousPipeClientStream> 对象是在具有值的子进程中创建的 <xref:System.IO.Pipes.PipeDirection> <xref:System.IO.Pipes.PipeDirection.In> 。</span><span class="sxs-lookup"><span data-stu-id="4a7af-145">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a7af-146"><paramref name="pipeHandleAsString" /> 是无效的句柄。</span><span class="sxs-lookup"><span data-stu-id="4a7af-146"><paramref name="pipeHandleAsString" /> is an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a7af-147"><paramref name="pipeHandleAsString" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-147"><paramref name="pipeHandleAsString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4a7af-148">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-148"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeClientStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeClientStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="anonymousPipeClientStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a7af-149">在通过垃圾回收将 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 实例回收之前，释放非托管资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="4a7af-149">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReadMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a7af-150">设置 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的读取模式。</span><span class="sxs-lookup"><span data-stu-id="4a7af-150">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></summary>
        <value><span data-ttu-id="4a7af-151"><see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 对象的 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-151">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="4a7af-152">匿名管道不支持 <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 读取模式。</span><span class="sxs-lookup"><span data-stu-id="4a7af-152">Anonymous pipes do not support the <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span>  
  
   
  
## Examples

<span data-ttu-id="4a7af-153">下面的示例使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="4a7af-153">The following example sends a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="4a7af-154">在此示例中，在 <xref:System.IO.Pipes.AnonymousPipeClientStream> 子进程中创建了一个对象。</span><span class="sxs-lookup"><span data-stu-id="4a7af-154">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a7af-155">传输模式无效。</span><span class="sxs-lookup"><span data-stu-id="4a7af-155">The transmission mode is not valid.</span></span> <span data-ttu-id="4a7af-156">对于匿名管道，只支持 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /></span><span class="sxs-lookup"><span data-stu-id="4a7af-156">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4a7af-157">转换模式为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-157">The transmission mode is <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4a7af-158">连接断开或出现其他 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="4a7af-158">The connection is broken or another I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4a7af-159">管道已关闭。</span><span class="sxs-lookup"><span data-stu-id="4a7af-159">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TransmissionMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a7af-160">获取当前管道支持的管道传输模式。</span><span class="sxs-lookup"><span data-stu-id="4a7af-160">Gets the pipe transmission mode supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="4a7af-161">当前管道支持的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />。</span><span class="sxs-lookup"><span data-stu-id="4a7af-161">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="4a7af-162">匿名管道不支持 <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 读取模式。</span><span class="sxs-lookup"><span data-stu-id="4a7af-162">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span> <span data-ttu-id="4a7af-163">由于此属性的默认值为，因此不需要 <xref:System.IO.Pipes.PipeTransmissionMode.Byte?displayProperty=nameWithType> 在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="4a7af-163">Because the default value of this property is <xref:System.IO.Pipes.PipeTransmissionMode.Byte?displayProperty=nameWithType>, there is never a reason to set this property in your code.</span></span> 
  
## Examples  

<span data-ttu-id="4a7af-164">下面的示例使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="4a7af-164">The following example sends a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="4a7af-165">在此示例中，在 <xref:System.IO.Pipes.AnonymousPipeClientStream> 子进程中创建一个对象，并 <xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A> 向控制台显示。</span><span class="sxs-lookup"><span data-stu-id="4a7af-165">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process and the <xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A> is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
