<Type Name="RegistrationBuilder" FullName="System.ComponentModel.Composition.Registration.RegistrationBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a28014b9999a266ccc85fd72e4e0c1c7d7aaec07" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89885877" /></Metadata><TypeSignature Language="C#" Value="public class RegistrationBuilder : System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegistrationBuilder extends System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistrationBuilder&#xA;Inherits CustomReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrationBuilder : System::Reflection::Context::CustomReflectionContext" />
  <TypeSignature Language="F#" Value="type RegistrationBuilder = class&#xA;    inherit CustomReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Context.CustomReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0550b-101">表示反射上下文，其有相关的协定，描述了规则，该规则用于修饰具有托管的扩展性框架 (MEF) 属性的条目。</span><span class="sxs-lookup"><span data-stu-id="0550b-101">Represents a reflection context that has associated conventions that describe rules for decorating entities with Managed Extensibility Framework (MEF) attributes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrationBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrationBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0550b-102">初始化 <see cref="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0550b-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForType">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ForType (type As Type) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.ForType : Type -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="registrationBuilder.ForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0550b-103">类型。</span><span class="sxs-lookup"><span data-stu-id="0550b-103">The type.</span></span></param>
        <summary><span data-ttu-id="0550b-104">获取表示适用于指定类型的规则的对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-104">Gets an object that represents a rule that applies to the specified type.</span></span></summary>
        <returns><span data-ttu-id="0550b-105">表示规则的对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-105">An object that represents the rule.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ForType&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!!T&gt; ForType&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function ForType(Of T) () As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ForType();" />
      <MemberSignature Language="F#" Value="member this.ForType : unit -&gt; System.ComponentModel.Composition.Registration.PartBuilder&lt;'T&gt;" Usage="registrationBuilder.ForType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="0550b-106">类型。</span><span class="sxs-lookup"><span data-stu-id="0550b-106">The type.</span></span></typeparam>
        <summary><span data-ttu-id="0550b-107">获取表示适用于指定类型的规则的强类型对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-107">Gets a strongly typed object that represents a rule that applies to the specified type.</span></span></summary>
        <returns><span data-ttu-id="0550b-108">表示该规则的强类型对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-108">A strongly typed object that represents the rule.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForTypesDerivedFrom">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ForTypesDerivedFrom (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ForTypesDerivedFrom(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ForTypesDerivedFrom (type As Type) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ForTypesDerivedFrom(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.ForTypesDerivedFrom : Type -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="registrationBuilder.ForTypesDerivedFrom type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0550b-109">类型。</span><span class="sxs-lookup"><span data-stu-id="0550b-109">The type.</span></span></param>
        <summary><span data-ttu-id="0550b-110">获取表示适用于实现指定类型的所有类型，但其不适用于指定类型的规则的对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-110">Gets an object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.</span></span></summary>
        <returns><span data-ttu-id="0550b-111">表示规则的对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-111">An object that represents the rule.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForTypesDerivedFrom&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ForTypesDerivedFrom&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!!T&gt; ForTypesDerivedFrom&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1" />
      <MemberSignature Language="VB.NET" Value="Public Function ForTypesDerivedFrom(Of T) () As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ForTypesDerivedFrom();" />
      <MemberSignature Language="F#" Value="member this.ForTypesDerivedFrom : unit -&gt; System.ComponentModel.Composition.Registration.PartBuilder&lt;'T&gt;" Usage="registrationBuilder.ForTypesDerivedFrom " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="0550b-112">类型。</span><span class="sxs-lookup"><span data-stu-id="0550b-112">The type.</span></span></typeparam>
        <summary><span data-ttu-id="0550b-113">获取表示适用于实现指定类型的所有类型，但其不适用于指定类型的规则的强类型对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-113">Gets a strongly typed object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.</span></span></summary>
        <returns><span data-ttu-id="0550b-114">表示该规则的强类型对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-114">A strongly typed object that represents the rule.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForTypesMatching">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder ForTypesMatching (Predicate&lt;Type&gt; typeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder ForTypesMatching(class System.Predicate`1&lt;class System.Type&gt; typeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ForTypesMatching (typeFilter As Predicate(Of Type)) As PartBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::PartBuilder ^ ForTypesMatching(Predicate&lt;Type ^&gt; ^ typeFilter);" />
      <MemberSignature Language="F#" Value="member this.ForTypesMatching : Predicate&lt;Type&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder" Usage="registrationBuilder.ForTypesMatching typeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="typeFilter"><span data-ttu-id="0550b-115">要匹配的谓词。</span><span class="sxs-lookup"><span data-stu-id="0550b-115">The predicate to match.</span></span></param>
        <summary><span data-ttu-id="0550b-116">获取表示适用于匹配指定谓词的所有类型的规则的对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-116">Gets an object that represents a rule applicable to all types that match the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="0550b-117">表示规则的对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-117">An object that represents the rule.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForTypesMatching&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt; ForTypesMatching&lt;T&gt; (Predicate&lt;Type&gt; typeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.PartBuilder`1&lt;!!T&gt; ForTypesMatching&lt;T&gt;(class System.Predicate`1&lt;class System.Type&gt; typeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ForTypesMatching(Of T) (typeFilter As Predicate(Of Type)) As PartBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::PartBuilder&lt;T&gt; ^ ForTypesMatching(Predicate&lt;Type ^&gt; ^ typeFilter);" />
      <MemberSignature Language="F#" Value="member this.ForTypesMatching : Predicate&lt;Type&gt; -&gt; System.ComponentModel.Composition.Registration.PartBuilder&lt;'T&gt;" Usage="registrationBuilder.ForTypesMatching typeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.PartBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="typeFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0550b-118">要返回的 <see cref="T:System.ComponentModel.Composition.Registration.PartBuilder`1" /> 对象的类型。</span><span class="sxs-lookup"><span data-stu-id="0550b-118">The type of <see cref="T:System.ComponentModel.Composition.Registration.PartBuilder`1" /> object to return.</span></span></typeparam>
        <param name="typeFilter"><span data-ttu-id="0550b-119">要匹配的谓词。</span><span class="sxs-lookup"><span data-stu-id="0550b-119">The predicate to match.</span></span></param>
        <summary><span data-ttu-id="0550b-120">获取表示适用于匹配指定谓词的所有类型的规则的强类型对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-120">Gets a strongly typed object that represents a rule applicable to all types that match the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="0550b-121">表示该规则的强类型对象。</span><span class="sxs-lookup"><span data-stu-id="0550b-121">A strongly typed object that represents the rule.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0550b-122">为指定对象提供自定义属性的修改集合，如此反射上下文中表示的那样。</span><span class="sxs-lookup"><span data-stu-id="0550b-122">Provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="registrationBuilder.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="0550b-123">将返回其自定义特性的成员。</span><span class="sxs-lookup"><span data-stu-id="0550b-123">The member whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="0550b-124">在其当前上下文中的成员特性的集合。</span><span class="sxs-lookup"><span data-stu-id="0550b-124">A collection of the member's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="0550b-125">为指定的成员提供自定义属性的列表，如此反射上下文中表示的那样。</span><span class="sxs-lookup"><span data-stu-id="0550b-125">Provides a list of custom attributes for the specified member, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="0550b-126">表示此反射上下文中指定的成员的自定义特性的集合。</span><span class="sxs-lookup"><span data-stu-id="0550b-126">A collection that represents the custom attributes of the specified member in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="registrationBuilder.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="0550b-127">其自定义属性将返回的参数。</span><span class="sxs-lookup"><span data-stu-id="0550b-127">The parameter whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="0550b-128">在其当前上下文中的参数特性的集合。</span><span class="sxs-lookup"><span data-stu-id="0550b-128">A collection of the parameter's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="0550b-129">为指定的参数提供自定义属性的列表，如此反射上下文中表示的那样。</span><span class="sxs-lookup"><span data-stu-id="0550b-129">Provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="0550b-130">表示此反射上下文中指定的参数的自定义特性的集合。</span><span class="sxs-lookup"><span data-stu-id="0550b-130">A collection that represents the custom attributes of the specified parameter in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
