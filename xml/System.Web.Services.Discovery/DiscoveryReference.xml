<Type Name="DiscoveryReference" FullName="System.Web.Services.Discovery.DiscoveryReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6aa2f67d60d46b22e1f89c0f8d05bbf30268fa5" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86842962" /></Metadata><TypeSignature Language="C#" Value="public abstract class DiscoveryReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DiscoveryReference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Discovery.DiscoveryReference" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DiscoveryReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscoveryReference abstract" />
  <TypeSignature Language="F#" Value="type DiscoveryReference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2ed24-101">使用 XML Web services 发现的可发现引用的基类。</span><span class="sxs-lookup"><span data-stu-id="2ed24-101">The base class for discoverable references using XML Web services discovery.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed24-102"><xref:System.Web.Services.Discovery.ContractReference>、 <xref:System.Web.Services.Discovery.SchemaReference> 和 <xref:System.Web.Services.Discovery.DiscoveryDocumentReference> 都继承自 <xref:System.Web.Services.Discovery.DiscoveryReference> ，并表示通过 XML Web services discovery 发现的三种文档类型：服务说明、xml 架构定义 (XSD) 架构和发现文档。</span><span class="sxs-lookup"><span data-stu-id="2ed24-102"><xref:System.Web.Services.Discovery.ContractReference>, <xref:System.Web.Services.Discovery.SchemaReference>, and <xref:System.Web.Services.Discovery.DiscoveryDocumentReference> all inherit from <xref:System.Web.Services.Discovery.DiscoveryReference>, and represent the three types of documents discoverable through XML Web services discovery: Service Descriptions, XML Schema Definition (XSD) schemas, and discovery documents, respectively.</span></span>  
  
   
  
## Examples  
 [!code-cpp[DiscoveryReference1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference1/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference1/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference1/VB/discoveryreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Discovery.ContractReference" />
    <altmember cref="T:System.Web.Services.Discovery.SchemaReference" />
    <altmember cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DiscoveryReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DiscoveryReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed24-103">初始化 <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2ed24-103">Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientProtocol">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryClientProtocol ClientProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Discovery.DiscoveryClientProtocol ClientProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientProtocol As DiscoveryClientProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Discovery::DiscoveryClientProtocol ^ ClientProtocol { System::Web::Services::Discovery::DiscoveryClientProtocol ^ get(); void set(System::Web::Services::Discovery::DiscoveryClientProtocol ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientProtocol : System.Web.Services.Discovery.DiscoveryClientProtocol with get, set" Usage="System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.XmlIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryClientProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed24-104">获取或设置在发现过程中使用的 <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="2ed24-104">Gets or sets the instance of <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> used in a discovery process.</span></span></summary>
        <value><span data-ttu-id="2ed24-105">发现过程中使用的 <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> 的实例</span><span class="sxs-lookup"><span data-stu-id="2ed24-105">An instance of <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> used in a discovery process</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilename">
      <MemberSignature Language="C#" Value="public virtual string DefaultFilename { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilename" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryReference.DefaultFilename" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultFilename As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultFilename { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFilename : string" Usage="System.Web.Services.Discovery.DiscoveryReference.DefaultFilename" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.XmlIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed24-106">获取在保存引用的发现文档、XSD 架构或服务说明时使用的默认文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2ed24-106">Gets the name of the default file to use when saving the referenced discovery document, XSD schema, or Service Description.</span></span></summary>
        <value><span data-ttu-id="2ed24-107">保存引用的文档时使用的默认文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2ed24-107">Name of the default file to use when saving the referenced document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilenameFromUrl">
      <MemberSignature Language="C#" Value="protected static string FilenameFromUrl (string url);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string FilenameFromUrl(string url) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function FilenameFromUrl (url As String) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ FilenameFromUrl(System::String ^ url);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="static member FilenameFromUrl : string -&gt; string" Usage="System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl url" />
      <MemberSignature Language="C#" Value="public static string FilenameFromUrl (string url);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FilenameFromUrl(string url) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FilenameFromUrl (url As String) As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FilenameFromUrl(System::String ^ url);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="2ed24-108">文件的名称所基于的 URL。</span><span class="sxs-lookup"><span data-stu-id="2ed24-108">The URL on which the name of the file is based.</span></span></param>
        <summary><span data-ttu-id="2ed24-109">返回基于传递的 URL 的文件名。</span><span class="sxs-lookup"><span data-stu-id="2ed24-109">Returns a file name based on the passed URL.</span></span></summary>
        <returns><span data-ttu-id="2ed24-110">基于传递的 URL 的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2ed24-110">Name of the file based on the passed URL.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocument">
      <MemberSignature Language="C#" Value="public abstract object ReadDocument (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadDocument(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.ReadDocument(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadDocument (stream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ReadDocument(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ReadDocument : System.IO.Stream -&gt; obj" Usage="discoveryReference.ReadDocument stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="2ed24-111">包含引用的文档的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="2ed24-111"><see cref="T:System.IO.Stream" /> containing the reference document.</span></span></param>
        <summary><span data-ttu-id="2ed24-112">读取传递的 <see cref="T:System.IO.Stream" /> 并返回表示所引用文档的类型的类的实例。</span><span class="sxs-lookup"><span data-stu-id="2ed24-112">Reads the passed <see cref="T:System.IO.Stream" /> and returns an instance of the class representing the type of referenced document.</span></span></summary>
        <returns><span data-ttu-id="2ed24-113"><see cref="T:System.Object" />，它具有与所引用文档的类型匹配的基础类型。</span><span class="sxs-lookup"><span data-stu-id="2ed24-113">An <see cref="T:System.Object" /> with an underlying type matching the type of referenced document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed24-114">返回值始终为 <xref:System.Object> 。</span><span class="sxs-lookup"><span data-stu-id="2ed24-114">The return value is always an <xref:System.Object>.</span></span> <span data-ttu-id="2ed24-115">但是，基础类型会有所不同，具体取决于引用的文档的类型。</span><span class="sxs-lookup"><span data-stu-id="2ed24-115">However, the underlying type varies, depending on the type of document referenced.</span></span> <span data-ttu-id="2ed24-116">例如，传入的将 <xref:System.IO.Stream> <xref:System.Web.Services.Discovery.SchemaReference.ReadDocument%2A?displayProperty=nameWithType> 返回的实例 <xref:System.Xml.Schema.XmlSchema> 。</span><span class="sxs-lookup"><span data-stu-id="2ed24-116">For instance, a <xref:System.IO.Stream> passed into <xref:System.Web.Services.Discovery.SchemaReference.ReadDocument%2A?displayProperty=nameWithType> returns an instance of <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ed24-117">解析引用的文档是否有效。</span><span class="sxs-lookup"><span data-stu-id="2ed24-117">Resolves whether the referenced document is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.Resolve" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve();" />
      <MemberSignature Language="F#" Value="member this.Resolve : unit -&gt; unit" Usage="discoveryReference.Resolve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed24-118">下载 <see cref="P:System.Web.Services.Discovery.DiscoveryReference.Url" /> 处的引用文档以解析引用的文档是否有效。</span><span class="sxs-lookup"><span data-stu-id="2ed24-118">Downloads the referenced document at <see cref="P:System.Web.Services.Discovery.DiscoveryReference.Url" /> to resolve whether the referenced document is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed24-119">下载引用的文档，然后调用 <xref:System.Web.Services.Discovery.DiscoveryReference.Resolve%2A> 采用 MIME 类型和的重载成员 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="2ed24-119">Downloads the referenced document and then invokes the overloaded <xref:System.Web.Services.Discovery.DiscoveryReference.Resolve%2A> member that takes a MIME type and a <xref:System.IO.Stream>.</span></span> <span data-ttu-id="2ed24-120">如果 MIME 类型和的内容 `stream` 与引用类型所需的内容相匹配，则的内容将 `stream` 添加到的 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 和 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 属性中 <xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2ed24-120">If the MIME type and the contents of `stream` match those expected by the reference type, then the contents of `stream` are added to the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> and <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> properties of <xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ed24-121"><see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2ed24-121">The <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="protected internal abstract void Resolve (string contentType, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Resolve(string contentType, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.Resolve(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Resolve (contentType As String, stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Resolve(System::String ^ contentType, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string * System.IO.Stream -&gt; unit" Usage="discoveryReference.Resolve (contentType, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="contentType"><span data-ttu-id="2ed24-122"><paramref name="stream" /> 的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="2ed24-122">The MIME type of <paramref name="stream" />.</span></span></param>
        <param name="stream"><span data-ttu-id="2ed24-123">包含所引用文档的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="2ed24-123">The <see cref="T:System.IO.Stream" /> containing the referenced document.</span></span></param>
        <summary><span data-ttu-id="2ed24-124">解析引用的文档是否有效。</span><span class="sxs-lookup"><span data-stu-id="2ed24-124">Resolves whether the referenced document is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed24-125">如果 MIME 类型和的内容 `stream` 与引用类型所需的内容相匹配，则的内容将 `stream` 添加到的 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 和 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 属性中 <xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2ed24-125">If the MIME type and the contents of `stream` match those expected by the reference type, then the contents of `stream` are added to the <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> and <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> properties of <xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryReference.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Services.Discovery.DiscoveryReference.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.XmlIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed24-126">获取或设置引用的文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="2ed24-126">Gets or sets the URL of the referenced document.</span></span></summary>
        <value><span data-ttu-id="2ed24-127">引用的文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="2ed24-127">The URL of the referenced document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteDocument (object document, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocument(object document, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.WriteDocument(System.Object,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteDocument (document As Object, stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocument(System::Object ^ document, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocument : obj * System.IO.Stream -&gt; unit" Usage="discoveryReference.WriteDocument (document, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="2ed24-128">要写入 <see cref="T:System.IO.Stream" /> 的文档。</span><span class="sxs-lookup"><span data-stu-id="2ed24-128">The document to write into a <see cref="T:System.IO.Stream" />.</span></span></param>
        <param name="stream"><span data-ttu-id="2ed24-129">将此 <paramref name="document" /> 写入到其中的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="2ed24-129">The <see cref="T:System.IO.Stream" /> into which the <paramref name="document" /> is written.</span></span></param>
        <summary><span data-ttu-id="2ed24-130">当在派生类中重写时，将此文档写入 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="2ed24-130">When overridden in a derived class, writes the document to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ed24-131">DiscoveryReference # 1</span><span class="sxs-lookup"><span data-stu-id="2ed24-131">DiscoveryReference#1</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
