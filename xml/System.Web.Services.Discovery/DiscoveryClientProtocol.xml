<Type Name="DiscoveryClientProtocol" FullName="System.Web.Services.Discovery.DiscoveryClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6862eb6d4622755caa45090b8b5c4bc7bb1d35ac" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89690744" /></Metadata><TypeSignature Language="C#" Value="public class DiscoveryClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscoveryClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Discovery.DiscoveryClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class DiscoveryClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscoveryClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type DiscoveryClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为以编程方式调用 XML Web services 发现提供支持。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 XML Web service 发现是查找或发现一个或多个描述可用 XML Web 服务的相关文档的过程。 它通过 XML Web services 发现，XML Web service 客户端了解给定 URL 处可用的 XML Web services 以及如何使用它们。 XML Web services 发现的工作原理是：您已通过目录服务（如）获取了对发现文档的 URL， http://uddi.microsoft.com 但您没有提供的 XML Web services 的详细信息。 通过 XML Web services 发现，可以发现有关特定 URL 内的中所列的 XML Web services 的详细信息 <xref:System.Web.Services.Discovery.DiscoveryDocument> 。

 XML Web service 客户端通过提供或方法的 URL 来启动 XML Web services 发现 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 。 通常，此 URL 引用发现文档，该文档又指描述一个或多个 XML Web services 的文档，这些文档已添加到属性中 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 。 此时，只会下载并验证该文档，以指向有关 XML Web services 的有效信息。 但是，在此阶段不验证包含在该文档中的引用。 相反，它们会添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 属性中。 若要验证引用是否有效，请调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 或 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 方法，这将向属性添加有效的引用文档 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 。 最后，如果客户端要将发现结果保存到磁盘，请调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A> 方法。

 如果不需要以编程方式访问 XML Web services 发现，Windows SDK 会提供 Web 服务发现工具 ( # A0) 用于在命令提示符下发现 XML Web services。 有关更多详细信息，请参阅 [Web 服务发现工具 ( # A0) ](https://msdn.microsoft.com/library/acd88078-c581-42bc-94ca-6633e2851979)。



## Examples
 下面的代码示例是一个 Web 窗体，演示如何 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol> 结合使用类和命名空间中的其他类 <xref:System.Web.Services.Discovery> ，以编程方式调用 XML Web services 发现。 此代码示例演示如何使用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 、 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 、 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 、 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 、 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll%2A> 和 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A> 方法。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[DiscoveryClientProtocol#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol/CS/discocs.aspx#1)]
 [!code-aspx-vb[DiscoveryClientProtocol#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol/VB/discovb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Discovery.DiscoveryDocument" />
    <altmember cref="T:System.Web.Services.Description.ServiceDescription" />
    <altmember cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiscoveryClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DiscoveryClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalInformation">
      <MemberSignature Language="C#" Value="public System.Collections.IList AdditionalInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList AdditionalInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalInformation As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ AdditionalInformation { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdditionalInformation : System.Collections.IList" Usage="System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取除在发现文档中找到的引用以外的信息。</summary>
        <value><see cref="T:System.Collections.IList" />，它包含在发现文档中找到的附加信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation%2A>属性主要包含 <xref:System.Web.Services.Discovery.SoapBinding> 在发现文档中定义的类所表示的 SOAP 绑定。



## Examples
 [!code-cpp[DiscoveryClientProtocol_AdditionalInformation#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryClientProtocol_AdditionalInformation/CPP/discoveryclientprotocol_additionalinformation.cpp#1)]
 [!code-csharp[DiscoveryClientProtocol_AdditionalInformation#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol_AdditionalInformation/CS/discoveryclientprotocol_additionalinformation.cs#1)]
 [!code-vb[DiscoveryClientProtocol_AdditionalInformation#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol_AdditionalInformation/VB/discoveryclientprotocol_additionalinformation.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryDocument Discover (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Services.Discovery.DiscoveryDocument Discover(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Discover (url As String) As DiscoveryDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Services::Discovery::DiscoveryDocument ^ Discover(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Discover : string -&gt; System.Web.Services.Discovery.DiscoveryDocument" Usage="discoveryClientProtocol.Discover url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">XML Web services 发现开始位置的 URL。</param>
        <summary>发现提供的 URL 以确定它是否为发现文档。</summary>
        <returns><see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />，它包含所提供 URL 处的 XML Web services 发现的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A>方法要求提供的 URL 是发现文档。 如果 URL 引用服务说明或 XML 架构，则会引发异常。 若要发现 XML 架构或服务说明，请调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 方法。

 如果提供的 URL 指向有效的发现文档，则提供的 URL 处的发现文档将添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 和 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 集合中。 此外，发现文档中的引用将添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 集合，但不会被验证为指向有效的发现文档。 若要验证引用，请指向有效的发现文档以调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 或 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 方法。



## Examples
 下面的代码示例是一个 Web 窗体，其中填充了 <xref:System.Web.UI.WebControls.DataGrid> 有关属性中的文档的详细信息，以及 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> XML Web services 发现期间每个文档中的引用。 `PopulateGrid`方法 <xref:System.Web.UI.WebControls.DataGrid> 使用调用的结果填充， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 然后调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 。

 [!code-csharp[DiscoveryClientProtocol.Discover#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol.Discover/CS/discocs.aspx#1)]
 [!code-vb[DiscoveryClientProtocol.Discover#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol.Discover/VB/discovb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">访问所提供的 URL 返回了一个 HTTP 状态代码而不是 <see cref="F:System.Net.HttpStatusCode.OK" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="url" /> 参数是有效的 URL，但未指向有效的发现文档。</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscoverAny">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryDocument DiscoverAny (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Services.Discovery.DiscoveryDocument DiscoverAny(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DiscoverAny (url As String) As DiscoveryDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Services::Discovery::DiscoveryDocument ^ DiscoverAny(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.DiscoverAny : string -&gt; System.Web.Services.Discovery.DiscoveryDocument" Usage="discoveryClientProtocol.DiscoverAny url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">XML Web services 发现开始位置的 URL。</param>
        <summary>发现提供的 URL 以确定它是否是发现文档、服务说明或 XML 架构定义 (XSD) 架构。</summary>
        <returns><see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />，它包含所提供 URL 处的 XML Web services 发现的结果。 如果 <paramref name="url" /> 参数引用服务说明或 XSD 架构，则在内存中为它创建 <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A>方法发现所提供的 URL 是否为发现文档、服务说明或 XSD 架构。 如果已知 URL 只引用发现文档，则 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 可能会调用方法。

 如果提供的 URL 指向有效的发现文档、XSD 架构或服务说明，则提供的 URL 处的发现文档将添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 和集合中 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 。 当提供的 URL 引用 XSD 架构或服务说明时， <xref:System.Web.Services.Discovery.DiscoveryDocument> 将在内存中创建，并将其添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 和 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 集合。 此外，发现文档中的引用将添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 集合，但不会被验证为指向有效的发现文档。 若要验证引用是否指向有效的发现文档，请调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 或 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 方法。



## Examples
 下面的代码示例是一个 Web 窗体，其中填充了 <xref:System.Web.UI.WebControls.DataGrid> 有关属性中的文档的详细信息，以及 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> XML Web services 发现过程中在每个文档中找到的引用。 `PopulateGrid`方法 <xref:System.Web.UI.WebControls.DataGrid> 使用调用的结果填充， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 然后调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 。

 [!code-csharp[DiscoveryClientProtocol.DiscoverAny#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol.DiscoverAny/CS/discocs.aspx#1)]
 [!code-vb[DiscoveryClientProtocol.DiscoverAny#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol.DiscoverAny/VB/discovb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">访问所提供的 URL 返回了一个 HTTP 状态代码而不是 <see cref="F:System.Net.HttpStatusCode.OK" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="url" /> 参数是有效的 URL，但未指向有效的发现文档、服务说明或 XSD 架构。</exception>
      </Docs>
    </Member>
    <Member MemberName="Documents">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryClientDocumentCollection Documents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Discovery.DiscoveryClientDocumentCollection Documents" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Documents As DiscoveryClientDocumentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Discovery::DiscoveryClientDocumentCollection ^ Documents { System::Web::Services::Discovery::DiscoveryClientDocumentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Documents : System.Web.Services.Discovery.DiscoveryClientDocumentCollection" Usage="System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryClientDocumentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取发现文档的集合。</summary>
        <value><see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />，它表示找到的发现文档的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 、 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 和方法的过程中，将填充集合 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 。 在调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 和方法时 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> ，如果提供的 URL 是有效的发现文档，则会将该文档添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 集合中。 在调用和方法的过程中 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> ，集合中的有效发现文档引用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 将添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 集合中。



## Examples
 下面的代码示例是一个 Web 窗体，该窗体 <xref:System.Web.UI.WebControls.DataGrid> 使用有关在 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> XML Web services 发现过程中发现的属性中的文档的详细信息填充。 `PopulateGrid`方法 <xref:System.Web.UI.WebControls.DataGrid> 使用调用的结果填充， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 然后调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[DiscoveryClientProtocol.Documents#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol.Documents/CS/discocs.aspx#1)]
 [!code-aspx-vb[DiscoveryClientProtocol.Documents#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol.Documents/VB/discovb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />
        <altmember cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(System.String)" />
        <altmember cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(System.String)" />
        <altmember cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel" />
        <altmember cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Download">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将所提供的 URL 处的发现文档下载到 <see cref="T:System.IO.Stream" /> 对象中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Download">
      <MemberSignature Language="C#" Value="public System.IO.Stream Download (ref string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream Download(string&amp; url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Download (ByRef url As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ Download(System::String ^ % url);" />
      <MemberSignature Language="F#" Value="member this.Download : string -&gt; System.IO.Stream" Usage="discoveryClientProtocol.Download url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="url">要下载的发现文档的 URL。</param>
        <summary>将所提供的 URL 处的发现文档下载到 <see cref="T:System.IO.Stream" /> 对象中。</summary>
        <returns><see cref="T:System.IO.Stream" />，它包含所提供的 URL 处的文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-cpp[DiscoveryClientProtocol_Download#2](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryClientProtocol_Download/CPP/discoveryclientprotocol_download.cpp#2)]
 [!code-csharp[DiscoveryClientProtocol_Download#2](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol_Download/CS/discoveryclientprotocol_download.cs#2)]
 [!code-vb[DiscoveryClientProtocol_Download#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol_Download/VB/discoveryclientprotocol_download.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">从所提供的 URL 进行的下载返回一个 HTTP 状态代码而不是 <see cref="F:System.Net.HttpStatusCode.OK" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Download">
      <MemberSignature Language="C#" Value="public System.IO.Stream Download (ref string url, ref string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream Download(string&amp; url, string&amp; contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Download (ByRef url As String, ByRef contentType As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ Download(System::String ^ % url, System::String ^ % contentType);" />
      <MemberSignature Language="F#" Value="member this.Download : string * string -&gt; System.IO.Stream" Usage="discoveryClientProtocol.Download (url, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" RefType="ref" />
        <Parameter Name="contentType" Type="System.String" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="url">要下载的发现文档的 URL。</param>
        <param name="contentType">下载的发现文档的 MIME 编码。</param>
        <summary>将位于提供的 URL 处的发现文档下载到 <see cref="T:System.IO.Stream" /> 对象中，并将 <paramref name="contentType" /> 参数设置为发现文档的 MIME 编码。</summary>
        <returns><see cref="T:System.IO.Stream" />，它包含所提供的 URL 处的文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-cpp[DiscoveryClientProtocol_Download2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryClientProtocol_Download2/CPP/discoveryclientprotocol_download.cpp#1)]
 [!code-csharp[DiscoveryClientProtocol_Download2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol_Download2/CS/discoveryclientprotocol_download.cs#1)]
 [!code-vb[DiscoveryClientProtocol_Download2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol_Download2/VB/discoveryclientprotocol_download.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">从所提供的 URL 进行的下载返回一个 HTTP 状态代码而不是 <see cref="F:System.Net.HttpStatusCode.OK" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryExceptionDictionary Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Discovery.DiscoveryExceptionDictionary Errors" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As DiscoveryExceptionDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Discovery::DiscoveryExceptionDictionary ^ Errors { System::Web::Services::Discovery::DiscoveryExceptionDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Web.Services.Discovery.DiscoveryExceptionDictionary" Usage="System.Web.Services.Discovery.DiscoveryClientProtocol.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryExceptionDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在调用此类方法的过程中发生的异常的集合。</summary>
        <value>异常的 <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors%2A>集合中填充了在 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 、 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 、 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 和方法的调用过程中发生的异常 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 。 <xref:System.Web.Services.Discovery.DiscoveryExceptionDictionary>在调用这些方法时，会清除。



## Examples
 [!code-cpp[DiscoveryClientProtocol_Errors#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryClientProtocol_Errors/CPP/discoveryclientprotocol_errors.cpp#1)]
 [!code-csharp[DiscoveryClientProtocol_Errors#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol_Errors/CS/discoveryclientprotocol_errors.cs#1)]
 [!code-vb[DiscoveryClientProtocol_Errors#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol_Errors/VB/discoveryclientprotocol_errors.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadExternals">
      <MemberSignature Language="C#" Value="public void LoadExternals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadExternals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadExternals ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadExternals();" />
      <MemberSignature Language="F#" Value="member this.LoadExternals : unit -&gt; unit" Usage="discoveryClientProtocol.LoadExternals " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method will be removed from a future version. The method call is no longer required for resource discovery", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method will be removed from a future version. The method call is no longer required for resource discovery", false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示 <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> 对象加载任意外部引用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAll">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryClientResultCollection ReadAll (string topLevelFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Services.Discovery.DiscoveryClientResultCollection ReadAll(string topLevelFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAll (topLevelFilename As String) As DiscoveryClientResultCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Services::Discovery::DiscoveryClientResultCollection ^ ReadAll(System::String ^ topLevelFilename);" />
      <MemberSignature Language="F#" Value="member this.ReadAll : string -&gt; System.Web.Services.Discovery.DiscoveryClientResultCollection" Usage="discoveryClientProtocol.ReadAll topLevelFilename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryClientResultCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topLevelFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="topLevelFilename">要读入的文件的名称，该文件包含已保存发现文档的映射。</param>
        <summary>读入包含已保存的发现文档的映射的文件，并使用该文件中引用的发现文档、XML 架构定义 (XSD) 架构和服务说明填充 <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> 和 <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" /> 属性。</summary>
        <returns><see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />，它包含在具有已保存发现文档的映射的文件中找到的结果。 文件格式是已序列化为 XML 的 <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile" /> 类；然而，通常只使用 <see cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)" /> 方法或 Disco.exe 创建该文件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 包含已保存发现文档的映射的文件可以通过 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A> 方法或 Disco.exe 创建。

 `topLevelFilename`如果文件在当前目录中不存在，则该参数必须包含完全限定的路径。



## Examples
 下面的代码示例是一个 Web 窗体，它 <xref:System.Web.UI.WebControls.DataGrid> 使用方法在现有发现映射文档中填充包含文档和引用的详细信息 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll%2A> 。

 [!code-csharp[DiscoveryClientProtocol.ReadAll#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol.ReadAll/CS/discocs.aspx#1)]
 [!code-vb[DiscoveryClientProtocol.ReadAll#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol.ReadAll/VB/discovb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="References">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryClientReferenceCollection References { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Discovery.DiscoveryClientReferenceCollection References" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property References As DiscoveryClientReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Discovery::DiscoveryClientReferenceCollection ^ References { System::Web::Services::Discovery::DiscoveryClientReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.References : System.Web.Services.Discovery.DiscoveryClientReferenceCollection" Usage="System.Web.Services.Discovery.DiscoveryClientProtocol.References" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryClientReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在已解析的发现文档中找到的引用的集合。</summary>
        <value>已发现的引用的 <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 、 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 和方法的过程中，将填充集合 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 。 在调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 和方法时 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> ，如果提供的 URL 是有效的发现文档，则会将该文档 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 与发现文档中找到的引用一起添加到集合中。 在调用期间添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover%2A> 和方法的引用并 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 不一定是有效的发现文档。 在的调用期间 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> ， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 会将集合中的引用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 验证为有效的发现文档。 如果它们有效并且包含引用，则它们也会添加到 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 集合中。



## Examples
 下面的代码示例是一个 Web 窗体，它 <xref:System.Web.UI.WebControls.DataGrid> 使用有关 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> XML Web services 发现过程中发现的属性中的引用的详细信息填充。 `PopulateGrid`方法 <xref:System.Web.UI.WebControls.DataGrid> 使用在对的调用中发现的引用填充 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[DiscoveryClientProtocol.References#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol.References/CS/discocs.aspx#1)]
 [!code-aspx-vb[DiscoveryClientProtocol.References#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol.References/VB/discovb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAll">
      <MemberSignature Language="C#" Value="public void ResolveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAll();" />
      <MemberSignature Language="F#" Value="member this.ResolveAll : unit -&gt; unit" Usage="discoveryClientProtocol.ResolveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>解析所有对 <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" /> 属性中的发现文档、XML 架构定义 (XSD) 架构和服务说明的引用以及在引用的发现文档中找到的引用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 解析它找到的所有有效引用并将其放在 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 属性中。 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>和均 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 可下载并验证属性中的 XSD 架构和服务说明 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 。 但是，这两种方法在处理发现文档的方式上有所不同。 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 解析属性内发现文档中的所有引用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> ; 如果发现文档包含对其他发现文档的引用，则 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 只解析这些发现文档。 在这些发现文档中找到的发现文档不会通过解析，而是由解析， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 而是 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 全部解决。 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 继续解析嵌套的发现文档中的引用，直到没有其他引用。

 在执行的验证过程中出现的错误 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 不会在发生时引发，而是收集并添加到属性中 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors%2A> 。



## Examples
 下面的代码示例是一个 Web 窗体，其中填充了 <xref:System.Web.UI.WebControls.DataGrid> 有关属性中的文档的详细信息，以及 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> XML Web services 发现过程中在每个文档中找到的引用。 `PopulateGrid`方法 <xref:System.Web.UI.WebControls.DataGrid> 使用调用的结果填充， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 然后调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 。

 [!code-csharp[DiscoveryClientProtocol.ResolveAll#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol.ResolveAll/CS/discocs.aspx#1)]
 [!code-vb[DiscoveryClientProtocol.ResolveAll#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol.ResolveAll/VB/discovb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveOneLevel">
      <MemberSignature Language="C#" Value="public void ResolveOneLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveOneLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveOneLevel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveOneLevel();" />
      <MemberSignature Language="F#" Value="member this.ResolveOneLevel : unit -&gt; unit" Usage="discoveryClientProtocol.ResolveOneLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>解析 <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" /> 中所有对发现文档、XML 架构定义 (XSD) 架构以及服务说明的引用以及在那些发现文档中找到的引用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 解析它找到的所有有效引用并将其放在 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 属性中。 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A>和均 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 可下载并验证属性中的 XSD 架构和服务说明 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 。 但是，这两种方法在处理发现文档的方式上有所不同。 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 解析属性内发现文档中的所有引用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 。 如果发现文档包含对其他发现文档的引用，则 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 只解析这些发现文档。 在这些发现文档中找到的发现文档不会通过解析，而是由解析， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 而是 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 解决所有问题。 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 继续解析嵌套的发现文档中的引用，直到没有其他引用。

 在执行的验证过程中出现的错误 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 不会在发生时引发，而是收集并添加到属性中 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors%2A> 。



## Examples
 下面的代码示例是一个 Web 窗体，其中填充了 <xref:System.Web.UI.WebControls.DataGrid> 有关属性中的文档的详细信息，以及 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> XML Web services 发现过程中在每个文档中找到的引用。 `PopulateGrid`方法 <xref:System.Web.UI.WebControls.DataGrid> 使用调用的结果填充， <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> 然后调用 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel%2A> 。

 [!code-csharp[DiscoveryClientProtocol.ResolveOneLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol.ResolveOneLevel/CS/discocs.aspx#1)]
 [!code-vb[DiscoveryClientProtocol.ResolveOneLevel#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol.ResolveOneLevel/VB/discovb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAll">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryClientResultCollection WriteAll (string directory, string topLevelFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Services.Discovery.DiscoveryClientResultCollection WriteAll(string directory, string topLevelFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAll (directory As String, topLevelFilename As String) As DiscoveryClientResultCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Services::Discovery::DiscoveryClientResultCollection ^ WriteAll(System::String ^ directory, System::String ^ topLevelFilename);" />
      <MemberSignature Language="F#" Value="member this.WriteAll : string * string -&gt; System.Web.Services.Discovery.DiscoveryClientResultCollection" Usage="discoveryClientProtocol.WriteAll (directory, topLevelFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryClientResultCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="topLevelFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">要将 <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> 属性中的当前所有文档保存到其中的目录。</param>
        <param name="topLevelFilename">要创建或覆盖的文件的名称，该文件包含所有已保存的文档的映射。</param>
        <summary>将 <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> 属性中的所有发现文档、XML 架构定义 (XSD) 架构和服务说明写入提供的目录并在此目录中创建一个文件。</summary>
        <returns>包含所有已保存文件的结果的 <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 `topLevelFilename` directory 参数指定的目录中的参数名称创建的文件包含已保存发现文档、XML 架构定义 (XSD) 架构和服务说明的映射。 可以使用方法读取此文件 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll%2A> ，以填充 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> 和 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> 属性。 文件的格式为 XML，其中包含类的序列化版本 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile> 。

 如果存在与参数中的参数同名的文件 `topLevelFilename` `directory` ，则方法将覆盖该文件 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A> 。 `topLevelFilename`如果文件在当前目录中不存在，则该参数必须包含完全限定的路径。



## Examples
 下面的代码示例是一个 Web 窗体，该窗体在调用和后调用方法，将 Web 服务发现的结果写入磁盘 <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll%2A> <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny%2A> <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll%2A> 。

 [!code-csharp[DiscoveryClientProtocol.WriteAll#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryClientProtocol.WriteAll/CS/discocs.aspx#1)]
 [!code-vb[DiscoveryClientProtocol.WriteAll#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryClientProtocol.WriteAll/VB/discovb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(System.String)" />
        <altmember cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile" />
      </Docs>
    </Member>
  </Members>
</Type>
