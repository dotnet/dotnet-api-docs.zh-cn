<Type Name="UCOMIStream" FullName="System.Runtime.InteropServices.UCOMIStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0eee5fcd03a3f043be1e9b0bf08c3d7dc6ec9306" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86762284" /></Metadata><TypeSignature Language="C#" Value="public interface UCOMIStream" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIStream" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIStream" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIStream" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIStream" />
  <TypeSignature Language="F#" Value="type UCOMIStream = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("0000000c-0000-0000-C000-000000000046")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("0000000c-0000-0000-C000-000000000046")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IStream instead. http://go.microsoft.com/fwlink/?linkid=14202", false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IStream instead. http://go.microsoft.com/fwlink/?linkid=14202", false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Obsolete]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("0000000c-0000-0000-c000-000000000046")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("0000000c-0000-0000-c000-000000000046")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>请改用 <see cref="T:System.Runtime.InteropServices.ComTypes.IStream" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream` `ISequentialStream` MSDN library 的 com 子文件夹中的和的现有文档。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out System.Runtime.InteropServices.UCOMIStream ppstm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clone([out] class System.Runtime.InteropServices.UCOMIStream&amp; ppstm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Clone(System.Runtime.InteropServices.UCOMIStream@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ppstm As UCOMIStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIStream ^ % ppstm);" />
      <MemberSignature Language="F#" Value="abstract member Clone : UCOMIStream -&gt; unit" Usage="uCOMIStream.Clone ppstm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppstm" Type="System.Runtime.InteropServices.UCOMIStream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppstm">成功返回时包含新的流对象。</param>
        <summary>创建具有自己的搜索指针的一个新的流对象，该指针引用与原始流相同的字节。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::Clone` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (int grfCommitFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(int32 grfCommitFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Commit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit (grfCommitFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(int grfCommitFlags);" />
      <MemberSignature Language="F#" Value="abstract member Commit : int -&gt; unit" Usage="uCOMIStream.Commit grfCommitFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCommitFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCommitFlags">控制提交对流对象的更改的方式。</param>
        <summary>确保对以事务模式打开的流对象所做的任何更改都能反映在父级存储中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::Commit` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Runtime.InteropServices.UCOMIStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Runtime.InteropServices.UCOMIStream pstm, int64 cb, native int pcbRead, native int pcbWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.CopyTo(System.Runtime.InteropServices.UCOMIStream,System.Int64,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (pstm As UCOMIStream, cb As Long, pcbRead As IntPtr, pcbWritten As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::Runtime::InteropServices::UCOMIStream ^ pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Runtime.InteropServices.UCOMIStream * int64 * nativeint * nativeint -&gt; unit" Usage="uCOMIStream.CopyTo (pstm, cb, pcbRead, pcbWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstm" Type="System.Runtime.InteropServices.UCOMIStream" />
        <Parameter Name="cb" Type="System.Int64" />
        <Parameter Name="pcbRead" Type="System.IntPtr" />
        <Parameter Name="pcbWritten" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pstm">对目标流的引用。</param>
        <param name="cb">要从源流复制的字节数。</param>
        <param name="pcbRead">成功返回时包含从源读取的实际字节数。</param>
        <param name="pcbWritten">成功返回时包含写入到目标的实际字节数。</param>
        <summary>将指定的字节数从流中的当前搜索指针复制到其他流中的当前搜索指针。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::CopyTo` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockRegion">
      <MemberSignature Language="C#" Value="public void LockRegion (long libOffset, long cb, int dwLockType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockRegion(int64 libOffset, int64 cb, int32 dwLockType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.LockRegion(System.Int64,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockRegion (libOffset As Long, cb As Long, dwLockType As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockRegion(long libOffset, long cb, int dwLockType);" />
      <MemberSignature Language="F#" Value="abstract member LockRegion : int64 * int64 * int -&gt; unit" Usage="uCOMIStream.LockRegion (libOffset, cb, dwLockType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libOffset" Type="System.Int64" />
        <Parameter Name="cb" Type="System.Int64" />
        <Parameter Name="dwLockType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="libOffset">范围开始的字节偏移量。</param>
        <param name="cb">要限制的范围的长度，以字节为单位。</param>
        <param name="dwLockType">针对访问该范围的请求的限制。</param>
        <summary>限制对流中特定范围的字节的访问。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::LockRegion` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public void Read (byte[] pv, int cb, IntPtr pcbRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read([out] unsigned int8[] pv, int32 cb, native int pcbRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Read(System.Byte[],System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Read (pv As Byte(), cb As Integer, pcbRead As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Read(cli::array &lt;System::Byte&gt; ^ pv, int cb, IntPtr pcbRead);" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * nativeint -&gt; unit" Usage="uCOMIStream.Read (pv, cb, pcbRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.Byte[]" />
        <Parameter Name="cb" Type="System.Int32" />
        <Parameter Name="pcbRead" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv">成功返回时包含从流中读取的数据。</param>
        <param name="cb">要从流对象读取的字节数。</param>
        <param name="pcbRead">指向 <see langword="ULONG" /> 变量的指针，该变量接收从流对象中读取的实际字节数。</param>
        <summary>将指定数目的字节从流对象读入到以当前搜索指针开始的内存。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `ISequentialStream::Read` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public void Revert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Revert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revert();" />
      <MemberSignature Language="F#" Value="abstract member Revert : unit -&gt; unit" Usage="uCOMIStream.Revert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>放弃自上一个 <see cref="M:System.Runtime.InteropServices.UCOMIStream.Commit(System.Int32)" /> 调用后对事务流进行的所有更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::Revert` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (long dlibMove, int dwOrigin, IntPtr plibNewPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Seek(int64 dlibMove, int32 dwOrigin, native int plibNewPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Seek(System.Int64,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (dlibMove As Long, dwOrigin As Integer, plibNewPosition As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(long dlibMove, int dwOrigin, IntPtr plibNewPosition);" />
      <MemberSignature Language="F#" Value="abstract member Seek : int64 * int * nativeint -&gt; unit" Usage="uCOMIStream.Seek (dlibMove, dwOrigin, plibNewPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dlibMove" Type="System.Int64" />
        <Parameter Name="dwOrigin" Type="System.Int32" />
        <Parameter Name="plibNewPosition" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dlibMove">要添加到 <paramref name="dwOrigin" /> 的置换。</param>
        <param name="dwOrigin">指定查找的起始地址。 该起始地址可以是文件的开头、当前查找指针或文件的结尾。</param>
        <param name="plibNewPosition">在成功返回时，包含距流的开始的搜索指针的偏移量。</param>
        <summary>将搜索指针更改为相对于流开始、流结束或当前搜索指针的新位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::Seek` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public void SetSize (long libNewSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSize(int64 libNewSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.SetSize(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSize (libNewSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSize(long libNewSize);" />
      <MemberSignature Language="F#" Value="abstract member SetSize : int64 -&gt; unit" Usage="uCOMIStream.SetSize libNewSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libNewSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="libNewSize">将流的新大小指定为字节数。</param>
        <summary>更改流对象的大小。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::SetSize` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stat">
      <MemberSignature Language="C#" Value="public void Stat (out System.Runtime.InteropServices.STATSTG pstatstg, int grfStatFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stat([out] valuetype System.Runtime.InteropServices.STATSTG&amp; pstatstg, int32 grfStatFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Stat(System.Runtime.InteropServices.STATSTG@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stat (ByRef pstatstg As STATSTG, grfStatFlag As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stat([Runtime::InteropServices::Out] System::Runtime::InteropServices::STATSTG % pstatstg, int grfStatFlag);" />
      <MemberSignature Language="F#" Value="abstract member Stat : STATSTG * int -&gt; unit" Usage="uCOMIStream.Stat (pstatstg, grfStatFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstatstg" Type="System.Runtime.InteropServices.STATSTG" RefType="out" />
        <Parameter Name="grfStatFlag" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pstatstg">成功返回时包含描述此流对象的 <see langword="STATSTG" /> 结构。</param>
        <param name="grfStatFlag">在 <see langword="STATSTG" /> 结构中指定此方法不返回的某些成员，从而节省一些内存分配操作。</param>
        <summary>检索此流的 <see cref="T:System.Runtime.InteropServices.STATSTG" /> 结构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::Stat` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockRegion">
      <MemberSignature Language="C#" Value="public void UnlockRegion (long libOffset, long cb, int dwLockType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockRegion(int64 libOffset, int64 cb, int32 dwLockType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.UnlockRegion(System.Int64,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnlockRegion (libOffset As Long, cb As Long, dwLockType As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockRegion(long libOffset, long cb, int dwLockType);" />
      <MemberSignature Language="F#" Value="abstract member UnlockRegion : int64 * int64 * int -&gt; unit" Usage="uCOMIStream.UnlockRegion (libOffset, cb, dwLockType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libOffset" Type="System.Int64" />
        <Parameter Name="cb" Type="System.Int64" />
        <Parameter Name="dwLockType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="libOffset">范围开始的字节偏移量。</param>
        <param name="cb">要限制的范围的长度，以字节为单位。</param>
        <param name="dwLockType">以前对范围施加的访问限制。</param>
        <summary>移除对先前使用 <see cref="M:System.Runtime.InteropServices.UCOMIStream.LockRegion(System.Int64,System.Int64,System.Int32)" /> 限制的字节范围的访问限制。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `IStream::UnlockRegion` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] pv, int cb, IntPtr pcbWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] pv, int32 cb, native int pcbWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Write(System.Byte[],System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (pv As Byte(), cb As Integer, pcbWritten As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ pv, int cb, IntPtr pcbWritten);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * nativeint -&gt; unit" Usage="uCOMIStream.Write (pv, cb, pcbWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.Byte[]" />
        <Parameter Name="cb" Type="System.Int32" />
        <Parameter Name="pcbWritten" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv">要写入此流的缓冲区。</param>
        <param name="cb">要写入此流的字节数。</param>
        <param name="pcbWritten">在成功返回时，包含写入流对象的实际字节数。 调用方可以将此指针设置为 <see langword="null" />，在此情况下该方法并不提供写入的实际字节数。</param>
        <summary>将指定数目的字节写入以当前搜索指针开始的流对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 `ISequentialStream::Write` MSDN library 中的现有文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
