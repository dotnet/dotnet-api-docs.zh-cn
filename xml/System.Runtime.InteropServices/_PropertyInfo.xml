<Type Name="_PropertyInfo" FullName="System.Runtime.InteropServices._PropertyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1389608baf483926dd829ad5a0c0244b9cb2e19d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86760763" /></Metadata><TypeSignature Language="C#" Value="public interface _PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _PropertyInfo" />
  <TypeSignature Language="F#" Value="type _PropertyInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1df20-101">向非托管代码公开 <see cref="T:System.Reflection.PropertyInfo" /> 类的公共成员。</span><span class="sxs-lookup"><span data-stu-id="1df20-101">Exposes the public members of the <see cref="T:System.Reflection.PropertyInfo" /> class to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-102">此接口用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-103">此接口保留 <xref:System.Reflection.PropertyInfo?displayProperty=nameWithType> 可由非托管 COM 对象访问的类成员的 vtable 顺序。</span><span class="sxs-lookup"><span data-stu-id="1df20-103">This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-104">为 COM 对象提供对 <see cref="P:System.Reflection.PropertyInfo.Attributes" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.Attributes" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-105">此属性的特性。</span><span class="sxs-lookup"><span data-stu-id="1df20-105">The attributes of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-106">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-107"><xref:System.Reflection.PropertyInfo.Attributes%2A>属性获取此属性的特性。</span><span class="sxs-lookup"><span data-stu-id="1df20-107">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-108">为 COM 对象提供对 <see cref="P:System.Reflection.PropertyInfo.CanRead" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanRead" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-109">如果此属性可读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-109"><see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-110">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-110">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-111"><xref:System.Reflection.PropertyInfo.CanRead%2A>属性获取一个值，该值指示是否可以读取属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-111">The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-112">为 COM 对象提供对 <see cref="P:System.Reflection.PropertyInfo.CanWrite" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-112">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanWrite" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-113">如果此属性可写，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-113"><see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-114">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-114">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-115"><xref:System.Reflection.PropertyInfo.CanWrite%2A>属性获取一个值，该值指示属性是否可以写入。</span><span class="sxs-lookup"><span data-stu-id="1df20-115">The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-116">为 COM 对象提供对 <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-116">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-117">声明该成员的类的 <see langword="Type" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-117">The <see langword="Type" /> object for the class that declares this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-118">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-118">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-119"><xref:System.Reflection.MemberInfo.DeclaringType%2A>属性获取声明该成员的类。</span><span class="sxs-lookup"><span data-stu-id="1df20-119">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_PropertyInfo.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="1df20-120">要与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-120">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="1df20-121">为 COM 对象提供对 <see cref="M:System.Object.Equals(System.Object)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-121">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-122">如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.Object" />，则为 <see cref="T:System.Object" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-122"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-123">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-123">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-124"><xref:System.Object.Equals%2A>方法确定指定的是否 <xref:System.Object> 等于当前的 <xref:System.Object> 。</span><span class="sxs-lookup"><span data-stu-id="1df20-124">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1df20-125">为 COM 对象提供对 <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-126">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-126">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-127"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法返回 `get` `set` 此属性上的和访问器的数组。</span><span class="sxs-lookup"><span data-stu-id="1df20-127">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> methods return an array of the `get` and `set` accessors on this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : unit -&gt; System.Reflection.MethodInfo[]" Usage="_PropertyInfo.GetAccessors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df20-128">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetAccessors" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-128">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-129">如果找到访问器，则返回一个 <see cref="T:System.Reflection.MethodInfo" /> 对象的数组，这些对象反射了由当前实例反射的属性的公共 <see langword="get" />、<see langword="set" /> 以及其他访问器；如果没有找到访问器，则返回包含零 (0) 个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="1df20-129">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-130">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-130">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-131"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法返回一个数组，其元素反射了 `get` `set` 由当前实例反射的属性的公共、以及其他访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-131">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="_PropertyInfo.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="1df20-132"><see langword="true" /> 表示在返回的 <see langword="MethodInfo" /> 数组中包含非公共方法；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-132"><see langword="true" /> to include non-public methods in the returned <see langword="MethodInfo" /> array; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1df20-133">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-133">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-134">一个 <see cref="T:System.Reflection.MethodInfo" /> 对象的数组，其元素反射了由当前实例反射的属性的 <see langword="get" />、<see langword="set" /> 及其他访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-134">An array of <see cref="T:System.Reflection.MethodInfo" /> objects whose elements reflect the <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance.</span></span> <span data-ttu-id="1df20-135">如果 <paramref name="nonPublic" /> 参数为 <see langword="true" />，则此数组包含公共及非公共 <see langword="get" />、<see langword="set" /> 及其他访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-135">If the <paramref name="nonPublic" /> parameter is <see langword="true" />, this array contains public and non-public <see langword="get" />, <see langword="set" />, and other accessors.</span></span> <span data-ttu-id="1df20-136">如果 <paramref name="nonPublic" /> 为 <see langword="false" />，则此数组仅包含公共 <see langword="get" />、<see langword="set" /> 及其他访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-136">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" />, <see langword="set" />, and other accessors.</span></span> <span data-ttu-id="1df20-137">如果没有找到具有指定可见性的访问器，则此方法将返回包含零 (0) 个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="1df20-137">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-138">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-139"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法返回一个数组，其元素反射了由当前实例反射的属性的公共和非公共 `get` 、 `set` 及其他访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-139">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1df20-140">为 COM 对象提供对 <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-140">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-141">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-141">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-142"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法返回应用于此成员的所有属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-142">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> methods return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_PropertyInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="1df20-143">如果要搜索此成员的继承链以查找属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-143"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1df20-144">为 COM 对象提供对 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-144">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-145">一个包含所有自定义属性的数组，在未定义任何特性时为包含零个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="1df20-145">An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-146">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-146">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-147"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法返回包含所有自定义属性的数组。</span><span class="sxs-lookup"><span data-stu-id="1df20-147">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_PropertyInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="1df20-148">要搜索的属性的类型。</span><span class="sxs-lookup"><span data-stu-id="1df20-148">The type of attribute to search for.</span></span> <span data-ttu-id="1df20-149">仅返回可分配给此类型的属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-149">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="1df20-150">如果要搜索此成员的继承链以查找属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-150"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1df20-151">为 COM 对象提供对 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-151">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-152">应用于此成员的自定义属性的数组；如果未应用任何特性，则为包含零 (0) 个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="1df20-152">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-153">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-153">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-154"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法返回由标识的自定义特性的数组 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="1df20-154">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1df20-155">为 COM 对象提供对 <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-155">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-156">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-156">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-157"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>方法返回一个对象，该 <xref:System.Reflection.MethodInfo> 对象表示 `get` 此属性的访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-157">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetGetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df20-158">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-158">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-159"><see cref="T:System.Reflection.MethodInfo" /> 对象，表示此属性的公共 <see langword="get" /> 访问器；如果 <see langword="null" /> 访问器是非公共的或不存在，则为 <see langword="get" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-159">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-160">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-160">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-161"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>方法返回 `get` 此属性的公共访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-161">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="1df20-162"><see langword="true" /> 表示返回非公共的 <see langword="get" /> 访问器；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-162"><see langword="true" /> to return a non-public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1df20-163">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-163">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-164">如果 <paramref name="nonPublic" /> 参数为 <see langword="true" />，则返回表示此属性的 <see langword="get" /> 访问器的 <see cref="T:System.Reflection.MethodInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-164">A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if the <paramref name="nonPublic" /> parameter is <see langword="true" />.</span></span> <span data-ttu-id="1df20-165">如果 <paramref name="nonPublic" /> 为 <see langword="false" /> 且 <see langword="get" /> 访问器是非公共的，或者 <paramref name="nonPublic" /> 为 <see langword="true" /> 但是不存在 <see langword="get" /> 访问器，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-165">Or <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-166">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-166">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-167"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>方法返回此属性的公共或非公共 `get` 访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-167">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_PropertyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df20-168">为 COM 对象提供对 <see cref="M:System.Object.GetHashCode" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-168">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-169">当前实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="1df20-169">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-170">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-170">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-171"><xref:System.Object.GetHashCode%2A>方法用作特定类型的哈希函数。</span><span class="sxs-lookup"><span data-stu-id="1df20-171">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="1df20-172"><xref:System.Object.GetHashCode%2A> 适合在哈希算法和数据结构（如哈希表）中使用。</span><span class="sxs-lookup"><span data-stu-id="1df20-172"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_PropertyInfo.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="1df20-173">留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="1df20-173">Reserved for future use.</span></span> <span data-ttu-id="1df20-174">必须为 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="1df20-174">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="1df20-175">要映射的名称的数组。</span><span class="sxs-lookup"><span data-stu-id="1df20-175">An array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="1df20-176">要映射的名称的计数。</span><span class="sxs-lookup"><span data-stu-id="1df20-176">The count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="1df20-177">要在其中解释名称的区域设置上下文。</span><span class="sxs-lookup"><span data-stu-id="1df20-177">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="1df20-178">调用方分配的数组，用于接收对应于这些名称的标识符。</span><span class="sxs-lookup"><span data-stu-id="1df20-178">An array allocated by the caller that receives the identifiers corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="1df20-179">将一组名称映射为对应的一组调度标识符。</span><span class="sxs-lookup"><span data-stu-id="1df20-179">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-180">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-180">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="1df20-181">有关的详细信息 `IDispatch::GetIDsOfNames` ，请参阅 MSDN library。</span><span class="sxs-lookup"><span data-stu-id="1df20-181">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="_PropertyInfo.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df20-182">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-183"><see cref="T:System.Reflection.ParameterInfo" /> 类型的数组，它包含索引的参数。</span><span class="sxs-lookup"><span data-stu-id="1df20-183">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters for the indexes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-184">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-184">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-185"><xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法返回属性的所有索引参数的数组。</span><span class="sxs-lookup"><span data-stu-id="1df20-185">The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1df20-186">为 COM 对象提供对 <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-186">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-187">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-187">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-188"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法返回一个对象，该 <xref:System.Reflection.MethodInfo> 对象表示 `set` 此属性的访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-188">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetSetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df20-189">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-189">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-190">如果 <see cref="T:System.Reflection.MethodInfo" /> 访问器是公共的，则为表示此属性的 <see langword="Set" /> 方法的 <see langword="set" /> 对象；如果 <see langword="null" /> 访问器是非公共的，则为 <see langword="set" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-190">The <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-191">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-191">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-192"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法返回 `set` 此属性的公共访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-192">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="1df20-193"><see langword="true" /> 表示返回非公共访问器；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-193"><see langword="true" /> to return a non-public accessor; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1df20-194">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-194">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-195">下表中的值之一。</span><span class="sxs-lookup"><span data-stu-id="1df20-195">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="1df20-196">“值”</span><span class="sxs-lookup"><span data-stu-id="1df20-196">Value</span></span> 
 </term><description> <span data-ttu-id="1df20-197">含义</span><span class="sxs-lookup"><span data-stu-id="1df20-197">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1df20-198">表示此属性的 <see cref="T:System.Reflection.MethodInfo" /> 方法的 <see langword="Set" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-198">A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property.</span></span>  
  
 </term><description> <span data-ttu-id="1df20-199"><see langword="set" /> 访问器是公共的。或者，<paramref name="nonPublic" /> 参数为 <see langword="true" /> 且 <see langword="set" /> 访问器是非公共的。</span><span class="sxs-lookup"><span data-stu-id="1df20-199">The <see langword="set" /> accessor is public, OR the <paramref name="nonPublic" /> parameter is <see langword="true" /> and the <see langword="set" /> accessor is non-public.</span></span>  
  
 </description></item><item><term><see langword="null" /></term><description> <span data-ttu-id="1df20-200"><paramref name="nonPublic" /> 参数为 <see langword="true" />，但属性为只读。或者，<paramref name="nonPublic" /> 参数为 <see langword="false" /> 且 <see langword="set" /> 访问器是非公共的。或者，没有 <see langword="set" /> 访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-200">The <paramref name="nonPublic" /> parameter is <see langword="true" />, but the property is read-only, OR the <paramref name="nonPublic" /> parameter is <see langword="false" /> and the <see langword="set" /> accessor is non-public, OR there is no <see langword="set" /> accessor.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-201">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-201">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-202"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法返回 `set` 此属性的访问器。</span><span class="sxs-lookup"><span data-stu-id="1df20-202">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_PropertyInfo.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df20-203">为 COM 对象提供对 <see cref="M:System.Object.GetType" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-203">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-204"><see cref="T:System.Type" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-204">A <see cref="T:System.Type" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-205">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-205">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-206"><xref:System.Object.GetType%2A>方法获取当前实例的类型。</span><span class="sxs-lookup"><span data-stu-id="1df20-206">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_PropertyInfo.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="1df20-207">要返回的类型信息。</span><span class="sxs-lookup"><span data-stu-id="1df20-207">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="1df20-208">类型信息的区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="1df20-208">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="1df20-209">指向请求的类型信息对象的指针。</span><span class="sxs-lookup"><span data-stu-id="1df20-209">A pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="1df20-210">检索对象的类型信息，然后可以使用该信息获取接口的类型信息。</span><span class="sxs-lookup"><span data-stu-id="1df20-210">Retrieves the type information for an object, which can be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-211">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-211">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="1df20-212">有关的详细信息 `IDispatch::GetTypeInfo` ，请参阅 MSDN library。</span><span class="sxs-lookup"><span data-stu-id="1df20-212">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount : uint32 -&gt; unit" Usage="_PropertyInfo.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="1df20-213">此方法返回时包含一个用于接收对象提供的类型信息接口数量的位置指针。</span><span class="sxs-lookup"><span data-stu-id="1df20-213">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="1df20-214">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="1df20-214">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="1df20-215">检索对象提供的类型信息接口的数量（0 或 1）。</span><span class="sxs-lookup"><span data-stu-id="1df20-215">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-216">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-216">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="1df20-217">有关的详细信息 `IDispatch::GetTypeInfoCount` ，请参阅 MSDN library。</span><span class="sxs-lookup"><span data-stu-id="1df20-217">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1df20-218">为 COM 对象提供对 <see cref="Overload:System.Reflection.PropertyInfo.GetValue" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-218">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetValue" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-219">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-219">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-220"><xref:System.Reflection.PropertyInfo.GetValue%2A>方法返回属性的值。</span><span class="sxs-lookup"><span data-stu-id="1df20-220">The <xref:System.Reflection.PropertyInfo.GetValue%2A> methods return the value of the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * obj[] -&gt; obj" Usage="_PropertyInfo.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1df20-221">将返回其属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-221">The object whose property value will be returned.</span></span></param>
        <param name="index"><span data-ttu-id="1df20-222">索引化属性的可选索引值。</span><span class="sxs-lookup"><span data-stu-id="1df20-222">Optional index values for indexed properties.</span></span> <span data-ttu-id="1df20-223">对于非索引化属性，该值应为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-223">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="1df20-224">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-224">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-225"><paramref name="obj" /> 参数的属性值。</span><span class="sxs-lookup"><span data-stu-id="1df20-225">The property value for the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-226">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-226">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-227"><xref:System.Reflection.PropertyInfo.GetValue%2A>方法通过编译器返回与属性关联的文本值。</span><span class="sxs-lookup"><span data-stu-id="1df20-227">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object, invokeAttr As BindingFlags, binder As Binder, index As Object(), culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="_PropertyInfo.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1df20-228">将返回其属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-228">The object whose property value will be returned.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="1df20-229">调用属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-229">The invocation attribute.</span></span> <span data-ttu-id="1df20-230">这必须是 <see langword="BindingFlags" /> 中的位标志：<see langword="InvokeMethod" /><see langword="CreateInstance" /><see langword="Static" /><see langword="GetField" /><see langword="SetField" /><see langword="GetProperty" /> 或 <see langword="SetProperty" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-230">This must be a bit flag from <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="1df20-231">必须指定合适的调用属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-231">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="1df20-232">如果要调用静态成员，则必须设置 <see langword="BindingFlags" /> 的 <see langword="Static" /> 标志。</span><span class="sxs-lookup"><span data-stu-id="1df20-232">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="1df20-233">一个对象，它启用绑定、对参数类型的强制、对成员的调用，以及通过反射对 <see langword="MemberInfo" /> 对象的检索。</span><span class="sxs-lookup"><span data-stu-id="1df20-233">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="1df20-234">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="1df20-234">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="1df20-235">索引化属性的可选索引值。</span><span class="sxs-lookup"><span data-stu-id="1df20-235">Optional index values for indexed properties.</span></span> <span data-ttu-id="1df20-236">对于非索引化属性，该值应为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-236">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="1df20-237"><see langword="CultureInfo" /> 对象，它表示资源将针对哪个区域性进行本地化。</span><span class="sxs-lookup"><span data-stu-id="1df20-237">The <see langword="CultureInfo" /> object that represents the culture for which the resource will be localized.</span></span> <span data-ttu-id="1df20-238">请注意，如果没有为此区域性本地化该资源，则在搜索匹配项的过程中将继续调用 <see langword="CultureInfo.Parent" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="1df20-238">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span></span> <span data-ttu-id="1df20-239">如果此值为 <see langword="null" />，则从 <see langword="CultureInfo.CurrentUICulture" /> 属性获得 <see langword="CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-239">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="1df20-240">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-240">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-241"><paramref name="obj" /> 参数的属性值。</span><span class="sxs-lookup"><span data-stu-id="1df20-241">The property value for the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-242">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-242">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-243"><xref:System.Reflection.PropertyInfo.GetValue%2A>方法返回具有指定绑定、索引和的属性的值 <xref:System.Globalization.CultureInfo> 。</span><span class="sxs-lookup"><span data-stu-id="1df20-243">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_PropertyInfo.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="1df20-244">成员的标识符。</span><span class="sxs-lookup"><span data-stu-id="1df20-244">An identifier of a member.</span></span></param>
        <param name="riid"><span data-ttu-id="1df20-245">留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="1df20-245">Reserved for future use.</span></span> <span data-ttu-id="1df20-246">必须为 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="1df20-246">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="1df20-247">要在其中解释自变量的区域设置上下文。</span><span class="sxs-lookup"><span data-stu-id="1df20-247">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="1df20-248">描述调用的上下文的标志。</span><span class="sxs-lookup"><span data-stu-id="1df20-248">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="1df20-249">指向一个结构的指针，该结构包含一个自变量数组、一个命名自变量的 DISPID 自变量数组和数组中元素数的计数。</span><span class="sxs-lookup"><span data-stu-id="1df20-249">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="1df20-250">指向结果存储位置的指针。</span><span class="sxs-lookup"><span data-stu-id="1df20-250">A pointer to the location where the result will be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="1df20-251">指向一个包含异常信息的结构的指针。</span><span class="sxs-lookup"><span data-stu-id="1df20-251">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="1df20-252">第一个出错参数的索引。</span><span class="sxs-lookup"><span data-stu-id="1df20-252">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="1df20-253">提供对某一对象公开的属性和方法的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-253">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-254">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-254">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="1df20-255">有关的详细信息 `IDispatch::Invoke` ，请参阅 MSDN library。</span><span class="sxs-lookup"><span data-stu-id="1df20-255">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_PropertyInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="1df20-256">将应用自定义属性的 <see cref="T:System.Type" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-256">The <see cref="T:System.Type" /> object to which the custom attributes are applied.</span></span></param>
        <param name="inherit"><span data-ttu-id="1df20-257">如果要搜索此成员的继承链以查找属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-257"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1df20-258">为 COM 对象提供对 <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-258">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-259">如果对此成员应用了 <paramref name="attributeType" /> 参数的一个或多个实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-259"><see langword="true" /> if one or more instances of the <paramref name="attributeType" /> parameter are applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-260">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-260">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-261"><xref:System.Reflection.MemberInfo.IsDefined%2A>方法指示是否将参数的一个或多个实例 `attributeType` 应用于此成员。</span><span class="sxs-lookup"><span data-stu-id="1df20-261">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-262">为 COM 对象提供对 <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-262">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-263">如果此属性是特殊名称，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-263"><see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-264">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-264">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-265"><xref:System.Reflection.PropertyInfo.IsSpecialName%2A>属性设置一个值，该值指示属性是否为特殊名称。</span><span class="sxs-lookup"><span data-stu-id="1df20-265">The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-266">为 COM 对象提供对 <see cref="P:System.Reflection.PropertyInfo.MemberType" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-266">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.MemberType" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-267"><see cref="T:System.Reflection.MemberTypes" /> 值之一，指示此成员是一个属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-267">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating that this member is a property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-268">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-268">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-269"><xref:System.Reflection.PropertyInfo.MemberType%2A>属性获取一个 <xref:System.Reflection.MemberTypes> 值，该值指示此成员是属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-269">The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-270">为 COM 对象提供对 <see cref="P:System.Reflection.MemberInfo.Name" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-270">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-271">包含此成员的名称的 <see cref="T:System.String" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-271">A <see cref="T:System.String" /> object containing the name of this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-272">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-272">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-273"><xref:System.Reflection.MemberInfo.Name%2A>属性获取当前成员的名称。</span><span class="sxs-lookup"><span data-stu-id="1df20-273">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-274">为 COM 对象提供对 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-274">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-275">此属性的类型。</span><span class="sxs-lookup"><span data-stu-id="1df20-275">The type of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-276">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-276">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-277"><xref:System.Reflection.PropertyInfo.PropertyType%2A>属性获取此属性的类型。</span><span class="sxs-lookup"><span data-stu-id="1df20-277">The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1df20-278">为 COM 对象提供对 <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> 属性的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-278">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span></span></summary>
        <value><span data-ttu-id="1df20-279"><see cref="T:System.Type" /> 对象，通过它获取了此 <see cref="T:System.Reflection.MemberInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-279">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-280">此属性用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-280">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-281"><xref:System.Reflection.MemberInfo.ReflectedType%2A>属性获取用于获取此对象的类对象 <xref:System.Reflection.MemberInfo> 。</span><span class="sxs-lookup"><span data-stu-id="1df20-281">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1df20-282">为 COM 对象提供对 <see cref="Overload:System.Reflection.PropertyInfo.SetValue" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-282">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.SetValue" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-283">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-283">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-284"><xref:System.Reflection.PropertyInfo.SetValue%2A>方法将给定对象的属性值设置为给定值。</span><span class="sxs-lookup"><span data-stu-id="1df20-284">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * obj[] -&gt; unit" Usage="_PropertyInfo.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1df20-285">将设置其属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-285">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="1df20-286">此属性的新值。</span><span class="sxs-lookup"><span data-stu-id="1df20-286">The new value for this property.</span></span></param>
        <param name="index"><span data-ttu-id="1df20-287">索引化属性的可选索引值。</span><span class="sxs-lookup"><span data-stu-id="1df20-287">Optional index values for indexed properties.</span></span> <span data-ttu-id="1df20-288">对于非索引化属性，该值应为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-288">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="1df20-289">为 COM 对象提供对 <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-289">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-290">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-290">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-291"><xref:System.Reflection.PropertyInfo.SetValue%2A>方法将属性的值设置为索引属性的可选索引值。</span><span class="sxs-lookup"><span data-stu-id="1df20-291">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object, invokeAttr As BindingFlags, binder As Binder, index As Object(), culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="_PropertyInfo.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1df20-292">将返回其属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="1df20-292">The object whose property value will be returned.</span></span></param>
        <param name="value"><span data-ttu-id="1df20-293">此属性的新值。</span><span class="sxs-lookup"><span data-stu-id="1df20-293">The new value for this property.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="1df20-294">调用属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-294">The invocation attribute.</span></span> <span data-ttu-id="1df20-295">这必须是 <see cref="T:System.Reflection.BindingFlags" /> 中的位标志：<see langword="InvokeMethod" /><see langword="CreateInstance" /><see langword="Static" /><see langword="GetField" /><see langword="SetField" /><see langword="GetProperty" /> 或 <see langword="SetProperty" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-295">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="1df20-296">必须指定合适的调用属性。</span><span class="sxs-lookup"><span data-stu-id="1df20-296">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="1df20-297">如果要调用静态成员，则必须设置 <see langword="BindingFlags" /> 的 <see langword="Static" /> 标志。</span><span class="sxs-lookup"><span data-stu-id="1df20-297">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="1df20-298">一个对象，它启用绑定、对参数类型的强制、对成员的调用，以及通过反射对 <see cref="T:System.Reflection.MemberInfo" /> 对象的检索。</span><span class="sxs-lookup"><span data-stu-id="1df20-298">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="1df20-299">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="1df20-299">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="1df20-300">索引化属性的可选索引值。</span><span class="sxs-lookup"><span data-stu-id="1df20-300">Optional index values for indexed properties.</span></span> <span data-ttu-id="1df20-301">对于非索引化属性，该值应为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-301">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="1df20-302"><see cref="T:System.Globalization.CultureInfo" /> 对象，它表示资源将针对哪个区域性进行本地化。</span><span class="sxs-lookup"><span data-stu-id="1df20-302">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture for which the resource will be localized.</span></span> <span data-ttu-id="1df20-303">请注意，如果没有为此区域性本地化该资源，则在搜索匹配项的过程中将继续调用 <see langword="CultureInfo.Parent" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="1df20-303">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span></span> <span data-ttu-id="1df20-304">如果此值为 <see langword="null" />，则从 <see langword="CultureInfo.CurrentUICulture" /> 属性获得 <see langword="CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="1df20-304">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="1df20-305">为 COM 对象提供对 <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-305">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-306">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-306">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="1df20-307"><xref:System.Reflection.FieldInfo.SetValue%2A>方法将给定对象的属性值设置为给定值。</span><span class="sxs-lookup"><span data-stu-id="1df20-307">The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_PropertyInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1df20-308">为 COM 对象提供对 <see cref="M:System.Object.ToString" /> 方法的与版本无关的访问。</span><span class="sxs-lookup"><span data-stu-id="1df20-308">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="1df20-309">表示当前 <see cref="T:System.Object" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="1df20-309">A string that represents the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1df20-310">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="1df20-310">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
