<Type Name="_TypeBuilder" FullName="System.Runtime.InteropServices._TypeBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc6f6b3ee70c098a8af222fb19e784f23a0e3d47" /><Meta Name="ms.sourcegitcommit" Value="5a1772308619a503b0c695dfca01b279c555fa43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/15/2021" /><Meta Name="ms.locfileid" Value="98239472" /></Metadata><TypeSignature Language="C#" Value="public interface _TypeBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _TypeBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._TypeBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface _TypeBuilder" />
  <TypeSignature Language="C++ CLI" Value="public interface class _TypeBuilder" />
  <TypeSignature Language="F#" Value="type _TypeBuilder = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("7E5678EE-48B3-3F83-B076-C58543498A58")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("7E5678EE-48B3-3F83-B076-C58543498A58")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.Emit.TypeBuilder))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.Emit.TypeBuilder))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a583-101">向非托管代码公开 <see cref="T:System.Reflection.Emit.TypeBuilder" /> 类。</span><span class="sxs-lookup"><span data-stu-id="4a583-101">Exposes the <see cref="T:System.Reflection.Emit.TypeBuilder" /> class to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a583-102">此接口用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="4a583-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_TypeBuilder.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="4a583-103">留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="4a583-103">Reserved for future use.</span></span> <span data-ttu-id="4a583-104">必须为 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="4a583-104">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="4a583-105">要映射的名称的数组。</span><span class="sxs-lookup"><span data-stu-id="4a583-105">An array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="4a583-106">要映射的名称的计数。</span><span class="sxs-lookup"><span data-stu-id="4a583-106">The count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="4a583-107">要在其中解释名称的区域设置上下文。</span><span class="sxs-lookup"><span data-stu-id="4a583-107">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="4a583-108">调用方分配的数组，用于接收对应于这些名称的标识符。</span><span class="sxs-lookup"><span data-stu-id="4a583-108">An array allocated by the caller that receives the identifiers corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="4a583-109">将一组名称映射为对应的一组调度标识符。</span><span class="sxs-lookup"><span data-stu-id="4a583-109">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a583-110">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="4a583-110">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="4a583-111">有关详细信息，请参阅 [IDispatch：： idispatch.getidsofnames](/windows/win32/api/oaidl/nf-oaidl-idispatch-getidsofnames)。</span><span class="sxs-lookup"><span data-stu-id="4a583-111">For more information, see [IDispatch::GetIDsOfNames](/windows/win32/api/oaidl/nf-oaidl-idispatch-getidsofnames).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_TypeBuilder.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="4a583-112">要返回的类型信息。</span><span class="sxs-lookup"><span data-stu-id="4a583-112">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="4a583-113">类型信息的区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="4a583-113">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="4a583-114">指向请求的类型信息对象的指针。</span><span class="sxs-lookup"><span data-stu-id="4a583-114">A pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="4a583-115">检索对象的类型信息，然后可以使用该信息获取接口的类型信息。</span><span class="sxs-lookup"><span data-stu-id="4a583-115">Retrieves the type information for an object, which can be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a583-116">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="4a583-116">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="4a583-117">有关详细信息，请参阅 [IDispatch：： GetTypeInfo](/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfo)。</span><span class="sxs-lookup"><span data-stu-id="4a583-117">For more information, see [IDispatch::GetTypeInfo](/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfo).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount : uint32 -&gt; unit" Usage="_TypeBuilder.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="4a583-118">如果如上述语法所示，这确实是一个 out 参数，则此处的信息应该为：此方法返回时，包含指向一个位置的指针，该位置接收对象提供的类型信息接口的数量。</span><span class="sxs-lookup"><span data-stu-id="4a583-118">If this is really an out parameter as the syntax above indicates, the wording here should be "When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="4a583-119">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="4a583-119">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="4a583-120">检索对象提供的类型信息接口的数量（0 或 1）。</span><span class="sxs-lookup"><span data-stu-id="4a583-120">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a583-121">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="4a583-121">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="4a583-122">有关详细信息，请参阅 [IDispatch：： GetTypeInfoCount](/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfocount)。</span><span class="sxs-lookup"><span data-stu-id="4a583-122">For more information, see [IDispatch::GetTypeInfoCount](/windows/win32/api/oaidl/nf-oaidl-idispatch-gettypeinfocount).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._TypeBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_TypeBuilder.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="4a583-123">成员的标识符。</span><span class="sxs-lookup"><span data-stu-id="4a583-123">An identifier of a member.</span></span></param>
        <param name="riid"><span data-ttu-id="4a583-124">留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="4a583-124">Reserved for future use.</span></span> <span data-ttu-id="4a583-125">必须为 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="4a583-125">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="4a583-126">要在其中解释自变量的区域设置上下文。</span><span class="sxs-lookup"><span data-stu-id="4a583-126">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="4a583-127">描述调用的上下文的标志。</span><span class="sxs-lookup"><span data-stu-id="4a583-127">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="4a583-128">指向一个结构的指针，该结构包含一个自变量数组、一个命名自变量的 DISPID 自变量数组和数组中元素数的计数。</span><span class="sxs-lookup"><span data-stu-id="4a583-128">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="4a583-129">指向结果存储位置的指针。</span><span class="sxs-lookup"><span data-stu-id="4a583-129">A pointer to the location where the result will be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="4a583-130">指向一个包含异常信息的结构的指针。</span><span class="sxs-lookup"><span data-stu-id="4a583-130">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="4a583-131">第一个出错参数的索引。</span><span class="sxs-lookup"><span data-stu-id="4a583-131">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="4a583-132">提供对某一对象公开的属性和方法的访问。</span><span class="sxs-lookup"><span data-stu-id="4a583-132">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a583-133">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="4a583-133">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="4a583-134">有关详细信息，请参阅 [IDispatch：： Invoke](/windows/win32/api/oaidl/nf-oaidl-idispatch-invoke)。</span><span class="sxs-lookup"><span data-stu-id="4a583-134">For more information, see [IDispatch::Invoke](/windows/win32/api/oaidl/nf-oaidl-idispatch-invoke).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
