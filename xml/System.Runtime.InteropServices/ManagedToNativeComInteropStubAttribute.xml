<Type Name="ManagedToNativeComInteropStubAttribute" FullName="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b72fdd0b673f8a3c557a9355fa343fc8cf45c78" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94461554" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagedToNativeComInteropStubAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagedToNativeComInteropStubAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagedToNativeComInteropStubAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagedToNativeComInteropStubAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ManagedToNativeComInteropStubAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime.InteropServices" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.InteropServices" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e3967-101">为用户在托管与 COM 互操作方案中自定义互操作存根提供支持。</span><span class="sxs-lookup"><span data-stu-id="e3967-101">Provides support for user customization of interop stubs in managed-to-COM interop scenarios.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3967-102">此特性允许具有有关封送的知识的互操作开发人员和互操作调用的内部工作原理来执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="e3967-102">This attribute enables interop developers who have knowledge about marshaling and the inner workings of interop calls to do the following:</span></span>  
  
-   <span data-ttu-id="e3967-103">在生成时（而非运行时）利用自定义的互操作存根。</span><span class="sxs-lookup"><span data-stu-id="e3967-103">Take advantage of customized interop stubs at build time instead of run time.</span></span>  
  
-   <span data-ttu-id="e3967-104">调试自定义的互操作存根。</span><span class="sxs-lookup"><span data-stu-id="e3967-104">Debug customized interop stubs.</span></span>  
  
-   <span data-ttu-id="e3967-105">在运行时不提供的存根内提供封送处理功能。</span><span class="sxs-lookup"><span data-stu-id="e3967-105">Provide marshaling capabilities within a stub that the runtime does not provide.</span></span>  
  
-   <span data-ttu-id="e3967-106">提供用户特定的方法调度功能。</span><span class="sxs-lookup"><span data-stu-id="e3967-106">Provide user-specific method dispatch capabilities.</span></span>  
  
 <span data-ttu-id="e3967-107">对接口中的方法应用属性，以指定托管到本机 COM 互操作的相应存根方法。</span><span class="sxs-lookup"><span data-stu-id="e3967-107">You apply the attribute on a method in an interface to specify a corresponding stub method for managed-to-native COM interop.</span></span>  
  
 <span data-ttu-id="e3967-108">如果在运行时遇到此属性，则公共语言运行时不会动态生成互操作存根。</span><span class="sxs-lookup"><span data-stu-id="e3967-108">If this attribute is encountered during run time, the common language runtime does not dynamically generate an interop stub.</span></span> <span data-ttu-id="e3967-109">相反，它调用生成时创建的自定义存根。</span><span class="sxs-lookup"><span data-stu-id="e3967-109">Instead, it invokes the custom stub that was created at build time.</span></span>  
  
 <span data-ttu-id="e3967-110">该 <xref:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute> 属性具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="e3967-110">The <xref:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute> attribute has the following characteristics:</span></span>  
  
-   <span data-ttu-id="e3967-111">特性仅可用于标记的接口中的方法 `[ComImport]` 。</span><span class="sxs-lookup"><span data-stu-id="e3967-111">The attribute can be used only on methods from interfaces that are marked `[ComImport]`.</span></span> <span data-ttu-id="e3967-112">如果该特性应用于非接口类型，则运行时将忽略该特性。</span><span class="sxs-lookup"><span data-stu-id="e3967-112">If the attribute is applied to non-interface types, it is ignored by the runtime.</span></span>  
  
-   <span data-ttu-id="e3967-113">特性只能在接口中的同一方法上使用一次。</span><span class="sxs-lookup"><span data-stu-id="e3967-113">The attribute can be used only once on the same method in an interface.</span></span> <span data-ttu-id="e3967-114">如果多次使用该方法，则编译器会生成重复的属性错误。</span><span class="sxs-lookup"><span data-stu-id="e3967-114">If it is used more than once, the compiler generates a duplicated attribute error.</span></span>  
  
-   <span data-ttu-id="e3967-115">该特性不能从基接口继承。</span><span class="sxs-lookup"><span data-stu-id="e3967-115">The attribute is not inheritable from a base interface.</span></span> <span data-ttu-id="e3967-116">派生接口必须显式分配属性。</span><span class="sxs-lookup"><span data-stu-id="e3967-116">Derived interfaces must explicitly assign the attribute.</span></span>  
  
-   <span data-ttu-id="e3967-117">包含特性化方法的程序集还必须包含自定义的存根。</span><span class="sxs-lookup"><span data-stu-id="e3967-117">The assembly that contains the attributed method must also contain the customized stub.</span></span>  
  
 <span data-ttu-id="e3967-118">重载的存根方法是有效的。</span><span class="sxs-lookup"><span data-stu-id="e3967-118">Overloaded stub methods are valid.</span></span> <span data-ttu-id="e3967-119">尽管仅指定存根方法的类型和名称，但运行时将发现相应的存根。</span><span class="sxs-lookup"><span data-stu-id="e3967-119">Although you specify only the type and the name of the stub method, the runtime will discover the corresponding stub.</span></span> <span data-ttu-id="e3967-120">它通过检查接口方法上的所有参数，然后使用显式指针执行完全签名匹配来实现此功能 `this` 。</span><span class="sxs-lookup"><span data-stu-id="e3967-120">It does this by examining all the arguments on the interface method, and then performing full signature matching by using an explicit `this` pointer.</span></span>  
  
 <span data-ttu-id="e3967-121">接口中的多个方法也可能共享相同的存根（stub）方法;但是，当你使用共享存根时，应小心。</span><span class="sxs-lookup"><span data-stu-id="e3967-121">It is also possible for multiple methods in an interface to share the same stub method; however, you should be careful when you use shared stubs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3967-122">存根方法必须是静态的。</span><span class="sxs-lookup"><span data-stu-id="e3967-122">Stub methods must be static.</span></span>  
  
 <span data-ttu-id="e3967-123">可以通知运行时在生成时使用自定义的互操作存根，而不是在运行时使用以下 c # 代码：</span><span class="sxs-lookup"><span data-stu-id="e3967-123">You could inform the runtime to use a customized interop stub at build time instead of run time with the following C# code:</span></span>  
  
```  
[ComImport]  
interface IMyInterface  
{  
    [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),  
              "ForwardTestStub")]  
    void GetString (string arg);  
}  
```  
  
 <span data-ttu-id="e3967-124">然后，可以使用以下代码声明相应的存根方法：</span><span class="sxs-lookup"><span data-stu-id="e3967-124">You could then use the following code to declare the corresponding stub method:</span></span>  
  
```  
class TestStubClass  
{  
    internal static void ForwardTestStub(IMyInterface thisObject,  
             string arg) {…}  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagedToNativeComInteropStubAttribute (Type classType, string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type classType, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classType As Type, methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagedToNativeComInteropStubAttribute(Type ^ classType, System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute : Type * string -&gt; System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" Usage="new System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute (classType, methodName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="e3967-125">包含所需的存根方法的类。</span><span class="sxs-lookup"><span data-stu-id="e3967-125">The class that contains the required stub method.</span></span></param>
        <param name="methodName"><span data-ttu-id="e3967-126">存根方法的名称。</span><span class="sxs-lookup"><span data-stu-id="e3967-126">The name of the stub method.</span></span></param>
        <summary><span data-ttu-id="e3967-127">使用指定的类类型和方法名称初始化 <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e3967-127">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute" /> class with the specified class type and method name.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e3967-128">找不到 <paramref name="methodName" />。</span><span class="sxs-lookup"><span data-stu-id="e3967-128"><paramref name="methodName" /> cannot be found.</span></span>  
  
<span data-ttu-id="e3967-129">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e3967-129">-or-</span></span> 
<span data-ttu-id="e3967-130">该方法不是静态或非泛型方法。</span><span class="sxs-lookup"><span data-stu-id="e3967-130">The method is not static or non-generic.</span></span>  
  
<span data-ttu-id="e3967-131">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e3967-131">-or-</span></span> 
<span data-ttu-id="e3967-132">该方法的参数列表与存根的预期参数列表不匹配。</span><span class="sxs-lookup"><span data-stu-id="e3967-132">The method's parameter list does not match the expected parameter list for the stub.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="e3967-133">由于存根方法具有私有或受保护的可访问性，或由于安全问题，包含托管互操作方法的接口无权访问存根方法。</span><span class="sxs-lookup"><span data-stu-id="e3967-133">The interface that contains the managed interop method has no access to the stub method, because the stub method has private or protected accessibility, or because of a security issue.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClassType">
      <MemberSignature Language="C#" Value="public Type ClassType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClassType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ClassType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassType : Type" Usage="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3967-134">获取包含所需存根方法的类。</span><span class="sxs-lookup"><span data-stu-id="e3967-134">Gets the class that contains the required stub method.</span></span></summary>
        <value><span data-ttu-id="e3967-135">包含自定义的互操作存根的类。</span><span class="sxs-lookup"><span data-stu-id="e3967-135">The class that contains the customized interop stub.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string" Usage="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3967-136">获取存根方法的名称。</span><span class="sxs-lookup"><span data-stu-id="e3967-136">Gets the name of the stub method.</span></span></summary>
        <value><span data-ttu-id="e3967-137">自定义的互操作存根的名称。</span><span class="sxs-lookup"><span data-stu-id="e3967-137">The name of a customized interop stub.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
