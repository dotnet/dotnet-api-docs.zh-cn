<Type Name="NativeLibrary" FullName="System.Runtime.InteropServices.NativeLibrary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff90136f384cdda009976a7822710c8c403f1955" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89784568" /></Metadata><TypeSignature Language="C#" Value="public static class NativeLibrary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NativeLibrary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.NativeLibrary" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeLibrary" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeLibrary abstract sealed" />
  <TypeSignature Language="F#" Value="type NativeLibrary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dc9cc-101">提供用于管理本机库的 API。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-101">Provides APIs for managing native libraries.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public static void Free (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Free(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Free (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Free(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member Free : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.NativeLibrary.Free handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="dc9cc-102">要释放的本机库 OS 句柄。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-102">The native library OS handle to be freed.</span></span></param>
        <summary><span data-ttu-id="dc9cc-103">使用给定的 OS 句柄释放已加载的库，或在输入句柄为 <see cref="F:System.IntPtr.Zero" /> 时不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-103">Frees a loaded library with the specified OS handle, or takes no action if the input handle is <see cref="F:System.IntPtr.Zero" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public static IntPtr GetExport (IntPtr handle, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExport(native int handle, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExport (handle As IntPtr, name As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExport(IntPtr handle, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetExport : nativeint * string -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.GetExport (handle, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="dc9cc-104">本机库 OS 句柄。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-104">The native library OS handle.</span></span></param>
        <param name="name"><span data-ttu-id="dc9cc-105">导出的符号的名称。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-105">The name of the exported symbol.</span></span></param>
        <summary><span data-ttu-id="dc9cc-106">获取导出的符号的地址。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-106">Gets the address of an exported symbol.</span></span></summary>
        <returns><span data-ttu-id="dc9cc-107">符号的地址。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-107">The address of the symbol.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="dc9cc-108">这是一个围绕 OS 调用的简单包装器，不会执行任何名称重整。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-108">This is a simple wrapper around OS calls and does not perform any name mangling.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc9cc-109"><paramref name="handle" /> 或 <paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-109"><paramref name="handle" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.EntryPointNotFoundException"><span data-ttu-id="dc9cc-110">未找到符号。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-110">The symbol is not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static IntPtr Load (string libraryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Load(string libraryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (libraryPath As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Load(System::String ^ libraryPath);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.Load libraryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="libraryPath"><span data-ttu-id="dc9cc-111">要加载的本机库的名称。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-111">The name of the native library to be loaded.</span></span></param>
        <summary><span data-ttu-id="dc9cc-112">提供一个简单 API，用于加载包装 OS 加载程序并使用模式标志的本机库。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-112">Provides a simple API for loading a native library that wraps the OS loader and uses default flags.</span></span></summary>
        <returns><span data-ttu-id="dc9cc-113">已加载的本机库的 OS 句柄。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-113">The OS handle for the loaded native library.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc9cc-114"><paramref name="libraryPath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-114"><paramref name="libraryPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.DllNotFoundException"><span data-ttu-id="dc9cc-115">找不到库。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-115">The library can't be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="dc9cc-116">库无效。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-116">The library is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static IntPtr Load (string libraryName, System.Reflection.Assembly assembly, System.Runtime.InteropServices.DllImportSearchPath? searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Load(string libraryName, class System.Reflection.Assembly assembly, valuetype System.Nullable`1&lt;valuetype System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (libraryName As String, assembly As Assembly, searchPath As Nullable(Of DllImportSearchPath)) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Load(System::String ^ libraryName, System::Reflection::Assembly ^ assembly, Nullable&lt;System::Runtime::InteropServices::DllImportSearchPath&gt; searchPath);" />
      <MemberSignature Language="F#" Value="static member Load : string * System.Reflection.Assembly * Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.Load (libraryName, assembly, searchPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="searchPath" Type="System.Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt;" />
      </Parameters>
      <Docs>
        <param name="libraryName"><span data-ttu-id="dc9cc-117">要加载的本机库的名称。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-117">The name of the native library to be loaded.</span></span></param>
        <param name="assembly"><span data-ttu-id="dc9cc-118">用于加载本机库的程序集。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-118">The assembly loading the native library.</span></span></param>
        <param name="searchPath"><span data-ttu-id="dc9cc-119">搜索路径。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-119">The search path.</span></span></param>
        <summary><span data-ttu-id="dc9cc-120">提供用于加载本机库的高级 API。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-120">Provides a high-level API for loading a native library.</span></span></summary>
        <returns><span data-ttu-id="dc9cc-121">已加载的库的 OS 句柄。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-121">The OS handle for the loaded library.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="dc9cc-122">如果给定了库名称，则此方法将根据调用程序集的运行时配置、输入参数和特性搜索特定路径。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-122">Given a library name, this method searches specific paths based on the  runtime configuration, input parameters, and attributes of the calling assembly.</span></span> <span data-ttu-id="dc9cc-123">如果该 `searchPath` 参数为非 null，则使用此枚举中的标志。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-123">If the `searchPath` parameter is non-null, the flags in this enumeration are used.</span></span> <span data-ttu-id="dc9cc-124">否则，将 <xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute> 使用在调用程序集（如果有）上指定的标志。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-124">Otherwise, the flags specified by the <xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute> on the calling assembly, if any are present, are used.</span></span> <span data-ttu-id="dc9cc-125">此方法不会调用使用方法注册的解析程序 <xref:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)> 。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-125">This method does not invoke the resolver registered using <xref:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)> method.</span></span> <span data-ttu-id="dc9cc-126">从 .NET 5 开始，此方法将调用 <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A?displayProperty=nameWithType> 方法和 <xref:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll?displayProperty=nameWithType> 事件。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-126">Starting with .NET 5, this method does invoke the <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A?displayProperty=nameWithType> method and the <xref:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll?displayProperty=nameWithType> event.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc9cc-127"><paramref name="libraryName" /> 或 <paramref name="assembly" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-127"><paramref name="libraryName" /> or <paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc9cc-128"><paramref name="assembly" /> 不是 <see langword="RuntimeAssembly" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-128"><paramref name="assembly" /> is not a <see langword="RuntimeAssembly" />.</span></span></exception>
        <exception cref="T:System.DllNotFoundException"><span data-ttu-id="dc9cc-129">找不到库。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-129">The library can't be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="dc9cc-130">库无效。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-130">The library is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetDllImportResolver">
      <MemberSignature Language="C#" Value="public static void SetDllImportResolver (System.Reflection.Assembly assembly, System.Runtime.InteropServices.DllImportResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDllImportResolver(class System.Reflection.Assembly assembly, class System.Runtime.InteropServices.DllImportResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDllImportResolver (assembly As Assembly, resolver As DllImportResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDllImportResolver(System::Reflection::Assembly ^ assembly, System::Runtime::InteropServices::DllImportResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member SetDllImportResolver : System.Reflection.Assembly * System.Runtime.InteropServices.DllImportResolver -&gt; unit" Usage="System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver (assembly, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resolver" Type="System.Runtime.InteropServices.DllImportResolver" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="dc9cc-131">已为其注册解析程序的程序集。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-131">The assembly for which the resolver is registered.</span></span></param>
        <param name="resolver"><span data-ttu-id="dc9cc-132">要注册的解析程序回调。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-132">The resolver callback to register.</span></span></param>
        <summary><span data-ttu-id="dc9cc-133">设置回调，用于解析从程序集进行的本机库导入。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-133">Sets a callback for resolving native library imports from an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="dc9cc-134">此每程序集冲突解决程序是第一次尝试解析此程序集启动的本机库加载。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-134">This per-assembly resolver is the first attempt to resolve native library loads initiated by this assembly.</span></span>
 
<span data-ttu-id="dc9cc-135">此方法的调用方应仅为自己的程序集注册解析程序。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-135">The callers of this method should register the resolver for their own assemblies only.</span></span>

<span data-ttu-id="dc9cc-136">每个程序集只能注册一个解析程序。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-136">Only one resolver can be registered per assembly.</span></span> <span data-ttu-id="dc9cc-137">尝试使用注册第二个冲突解决程序失败 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-137">Trying to register a second resolver fails with an <xref:System.InvalidOperationException>.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc9cc-138"><paramref name="assembly" /> 或 <paramref name="resolver" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-138"><paramref name="assembly" /> or <paramref name="resolver" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc9cc-139">已为此程序集设置解析程序。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-139">A resolver is already set for this assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public static bool TryGetExport (IntPtr handle, string name, out IntPtr address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetExport(native int handle, string name, [out] native int&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetExport (handle As IntPtr, name As String, ByRef address As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetExport(IntPtr handle, System::String ^ name, [Runtime::InteropServices::Out] IntPtr % address);" />
      <MemberSignature Language="F#" Value="static member TryGetExport : nativeint * string * nativeint -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryGetExport (handle, name, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="address" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="dc9cc-140">本机库 OS 句柄。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-140">The native library OS handle.</span></span></param>
        <param name="name"><span data-ttu-id="dc9cc-141">导出的符号的名称。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-141">The name of the exported symbol.</span></span></param>
        <param name="address"><span data-ttu-id="dc9cc-142">当方法返回时，包含符号地址（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-142">When the method returns, contains the symbol address, if it exists.</span></span></param>
        <summary><span data-ttu-id="dc9cc-143">获取导出的符号的地址，并返回一个指示方法调用是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-143">Gets the address of an exported symbol and returns a value that indicates whether the method call succeeded.</span></span></summary>
        <returns><span data-ttu-id="dc9cc-144">如果方法成功返回，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-144"><see langword="true" /> if the method returned successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc9cc-145"><paramref name="handle" /> 或 <paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-145"><paramref name="handle" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryLoad">
      <MemberSignature Language="C#" Value="public static bool TryLoad (string libraryPath, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoad(string libraryPath, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryLoad (libraryPath As String, ByRef handle As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryLoad(System::String ^ libraryPath, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="static member TryLoad : string * nativeint -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryLoad (libraryPath, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryPath" Type="System.String" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="libraryPath"><span data-ttu-id="dc9cc-146">要加载的本机库的名称。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-146">The name of the native library to be loaded.</span></span></param>
        <param name="handle"><span data-ttu-id="dc9cc-147">当方法返回时，已加载的本机库的 OS 句柄。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-147">When the method returns, the OS handle of the loaded native library.</span></span></param>
        <summary><span data-ttu-id="dc9cc-148">提供一个简单 API，用于加载本机库并返回一个指示操作是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-148">Provides a simple API for loading a native library and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="dc9cc-149">如果已成功加载本机库，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-149"><see langword="true" /> if the native library was loaded successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc9cc-150"><paramref name="libraryPath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-150"><paramref name="libraryPath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryLoad">
      <MemberSignature Language="C#" Value="public static bool TryLoad (string libraryName, System.Reflection.Assembly assembly, System.Runtime.InteropServices.DllImportSearchPath? searchPath, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoad(string libraryName, class System.Reflection.Assembly assembly, valuetype System.Nullable`1&lt;valuetype System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryLoad (libraryName As String, assembly As Assembly, searchPath As Nullable(Of DllImportSearchPath), ByRef handle As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryLoad(System::String ^ libraryName, System::Reflection::Assembly ^ assembly, Nullable&lt;System::Runtime::InteropServices::DllImportSearchPath&gt; searchPath, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="static member TryLoad : string * System.Reflection.Assembly * Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; * nativeint -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryLoad (libraryName, assembly, searchPath, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="searchPath" Type="System.Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt;" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="libraryName"><span data-ttu-id="dc9cc-151">要加载的本机库的名称。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-151">The name of the native library to be loaded.</span></span></param>
        <param name="assembly"><span data-ttu-id="dc9cc-152">用于加载本机库的程序集。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-152">The assembly loading the native library.</span></span></param>
        <param name="searchPath"><span data-ttu-id="dc9cc-153">搜索路径。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-153">The search path.</span></span></param>
        <param name="handle"><span data-ttu-id="dc9cc-154">当方法返回时，已加载的本机库的 OS 句柄。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-154">When the method returns, the OS handle of the loaded native library.</span></span></param>
        <summary><span data-ttu-id="dc9cc-155">提供一个高级 API，用于加载本机库并返回一个指示操作是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-155">Provides a high-level API that loads a native library and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="dc9cc-156">如果加载操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-156"><see langword="true" /> if the load operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc9cc-157"><paramref name="libraryPath" /> 或 <paramref name="assembly" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-157"><paramref name="libraryPath" /> or <paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc9cc-158"><paramref name="assembly" /> 不是 <see langword="RuntimeAssembly" />。</span><span class="sxs-lookup"><span data-stu-id="dc9cc-158"><paramref name="assembly" /> is not a <see langword="RuntimeAssembly" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
