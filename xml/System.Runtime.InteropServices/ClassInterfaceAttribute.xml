<Type Name="ClassInterfaceAttribute" FullName="System.Runtime.InteropServices.ClassInterfaceAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab21472ea715b963cb2ee7276324d4ce260fb9fa" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91923889" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClassInterfaceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClassInterfaceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClassInterfaceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClassInterfaceAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ClassInterfaceAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime.InteropServices" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.InteropServices" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="506e8-101">指示在完全生成某个接口后为要向 COM 公开的类生成的类接口类型。</span><span class="sxs-lookup"><span data-stu-id="506e8-101">Indicates the type of class interface to be generated for a class exposed to COM, if an interface is generated at all.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="506e8-102">可以将此特性应用于程序集或类。</span><span class="sxs-lookup"><span data-stu-id="506e8-102">You can apply this attribute to assemblies or classes.</span></span>  
  
 <span data-ttu-id="506e8-103">此属性控制类型库导出程序 ( # A0) 是否自动为特性化类生成类接口。</span><span class="sxs-lookup"><span data-stu-id="506e8-103">This attribute controls whether the Type Library Exporter (Tlbexp.exe) automatically generates a class interface for the attributed class.</span></span> <span data-ttu-id="506e8-104">类接口与类本身具有相同的名称，但名称以下划线作为前缀。</span><span class="sxs-lookup"><span data-stu-id="506e8-104">A class interface carries the same name as the class itself, but the name is prefixed with an underscore.</span></span> <span data-ttu-id="506e8-105">公开后，类接口包含 `public` 托管类的所有非 `static` 成员，包括从其基类继承的成员。</span><span class="sxs-lookup"><span data-stu-id="506e8-105">When exposed, the class interface contains all the `public`, non- `static` members of the managed class, including members inherited from its base class.</span></span> <span data-ttu-id="506e8-106">托管类不能访问类接口，并且无需像可以直接访问类成员。</span><span class="sxs-lookup"><span data-stu-id="506e8-106">Managed classes cannot access a class interface and have no need to as they can access the class members directly.</span></span> <span data-ttu-id="506e8-107">Tlbexp.exe 为类接口生成唯一的接口标识符 (IID) 。</span><span class="sxs-lookup"><span data-stu-id="506e8-107">Tlbexp.exe generates a unique interface identifier (IID) for the class interface.</span></span>  
  
 <span data-ttu-id="506e8-108">类接口可以是双重或仅调度接口。</span><span class="sxs-lookup"><span data-stu-id="506e8-108">Class interfaces can be dual or dispatch-only interfaces.</span></span> <span data-ttu-id="506e8-109">（可选）可以取消生成类接口并改为提供自定义接口。</span><span class="sxs-lookup"><span data-stu-id="506e8-109">Optionally, you can suppress the generation of the class interface and provide a custom interface instead.</span></span> <span data-ttu-id="506e8-110">通过指定枚举成员来公开或取消类接口 <xref:System.Runtime.InteropServices.ClassInterfaceType?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="506e8-110">You expose or suppress a class interface by specifying a <xref:System.Runtime.InteropServices.ClassInterfaceType?displayProperty=nameWithType> enumeration member.</span></span> <span data-ttu-id="506e8-111">当应用于 <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> 程序集时，属性将与程序集中的所有类相关，除非各个类使用其自己的特性重写设置。</span><span class="sxs-lookup"><span data-stu-id="506e8-111">When you apply <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> to an assembly, the attribute pertains to all classes in the assembly unless the individual classes override the setting with their own attribute.</span></span>  
  
 <span data-ttu-id="506e8-112">尽管类接口消除了显式定义每个类的接口的任务，但强烈建议不要在生产应用程序中使用它们。</span><span class="sxs-lookup"><span data-stu-id="506e8-112">Although class interfaces eliminate the task of explicitly defining interfaces for each class, their use in production applications is strongly discouraged.</span></span> <span data-ttu-id="506e8-113">通过双重类接口，客户端可以绑定到在类演变时可能会更改的特定接口布局。</span><span class="sxs-lookup"><span data-stu-id="506e8-113">Dual class interfaces allow clients to bind to a specific interface layout that is subject to change as the class evolves.</span></span> <span data-ttu-id="506e8-114">例如，假设有一个将类接口公开给 COM 客户端的托管类。</span><span class="sxs-lookup"><span data-stu-id="506e8-114">For example, consider a managed class that exposes a class interface to COM clients.</span></span> <span data-ttu-id="506e8-115">类的第一个版本包含方法 `North` 和 `South` 。</span><span class="sxs-lookup"><span data-stu-id="506e8-115">The first version of the class contains methods `North` and `South`.</span></span> <span data-ttu-id="506e8-116">非托管客户端可以绑定到类接口，该类接口将 `North` 作为第二个方法提供为类接口和方法中的第一个方法 `South` 。</span><span class="sxs-lookup"><span data-stu-id="506e8-116">An unmanaged client can bind to the class interface, which provides `North` as the first method in the class interface and method `South` as the second method.</span></span> <span data-ttu-id="506e8-117">现在，请考虑该类的下一个版本，该类具有一个在 `East` 方法和之间插入的新方法 `North` `South` 。</span><span class="sxs-lookup"><span data-stu-id="506e8-117">Now consider the next version of the class, which has a new method, `East`, inserted between methods `North` and `South`.</span></span> <span data-ttu-id="506e8-118">尝试通过旧类接口绑定到新类的非托管客户端 `East` 在要调用方法时最终调用方法 `South` ，因为该接口中的方法的位置已更改。</span><span class="sxs-lookup"><span data-stu-id="506e8-118">Unmanaged clients that try to bind to the new class through the old class interface end up calling method `East` when they intend to call method `South`, because the positioning of methods within the interface has changed.</span></span> <span data-ttu-id="506e8-119">此外，对基类布局所做的任何更改也会影响所有派生类的类接口的布局。</span><span class="sxs-lookup"><span data-stu-id="506e8-119">Moreover, any change to the layout of a base class also affects the layout of the class interface for all derived classes.</span></span> <span data-ttu-id="506e8-120">直接绑定到类的托管客户端不会表现出相同的版本控制问题。</span><span class="sxs-lookup"><span data-stu-id="506e8-120">Managed clients, which bind directly to classes, do not exhibit the same versioning problems.</span></span> <span data-ttu-id="506e8-121">有关使用类接口的特定准则，请参阅 [COM 可调用包装](/dotnet/framework/interop/com-callable-wrapper)器。</span><span class="sxs-lookup"><span data-stu-id="506e8-121">For specific guidelines on using a class interface, see [COM Callable Wrapper](/dotnet/framework/interop/com-callable-wrapper).</span></span>  
  
 <span data-ttu-id="506e8-122">[Tlbimp.exe (类型库导入程序) ](/dotnet/framework/tools/tlbimp-exe-type-library-importer)始终应用于已导入类 <xref:System.Runtime.InteropServices.ClassInterfaceType.None?displayProperty=nameWithType> 枚举成员，以指示现有 COM 类从不公开托管接口。</span><span class="sxs-lookup"><span data-stu-id="506e8-122">The [Tlbimp.exe (Type Library Importer)](/dotnet/framework/tools/tlbimp-exe-type-library-importer) always applies to imported classes the <xref:System.Runtime.InteropServices.ClassInterfaceType.None?displayProperty=nameWithType> enumeration member to indicate that existing COM classes never expose managed interfaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="506e8-123">下面的示例演示如何将与为 <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> <xref:System.Runtime.InteropServices.ClassInterfaceType> <xref:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch> 其生成 `IDispatch` 接口的值应用 `MyClass` 。</span><span class="sxs-lookup"><span data-stu-id="506e8-123">The following example shows how to apply the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> with the <xref:System.Runtime.InteropServices.ClassInterfaceType> value <xref:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch>, which generates an `IDispatch` interface for `MyClass`.</span></span>  
  
 [!code-cpp[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ClassInterfaceType" />
    <related type="Article" href="/dotnet/framework/tools/tlbexp-exe-type-library-exporter"><span data-ttu-id="506e8-124">Tlbexp.exe（类型库导出程序）</span><span class="sxs-lookup"><span data-stu-id="506e8-124">Tlbexp.exe (Type Library Exporter)</span></span></related>
    <related type="Article" href="/dotnet/framework/tools/tlbimp-exe-type-library-importer"><span data-ttu-id="506e8-125">Tlbimp.exe（类型库导入程序）</span><span class="sxs-lookup"><span data-stu-id="506e8-125">Tlbimp.exe (Type Library Importer)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="506e8-126">初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="506e8-126">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassInterfaceAttribute (short classInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 classInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classInterfaceType As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassInterfaceAttribute(short classInterfaceType);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ClassInterfaceAttribute : int16 -&gt; System.Runtime.InteropServices.ClassInterfaceAttribute" Usage="new System.Runtime.InteropServices.ClassInterfaceAttribute classInterfaceType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classInterfaceType" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="classInterfaceType"><span data-ttu-id="506e8-127">描述为类生成的接口的类型。</span><span class="sxs-lookup"><span data-stu-id="506e8-127">Describes the type of interface that is generated for a class.</span></span></param>
        <summary><span data-ttu-id="506e8-128">使用指定的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 枚举值初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="506e8-128">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> enumeration value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="506e8-129">此构造函数采用表示每个枚举成员的基础16位有符号整数 <xref:System.Runtime.InteropServices.ClassInterfaceType> 。</span><span class="sxs-lookup"><span data-stu-id="506e8-129">This constructor takes an underlying 16-bit signed integer that represents each <xref:System.Runtime.InteropServices.ClassInterfaceType> enumeration member.</span></span> <span data-ttu-id="506e8-130">[ (类型库导入程序) ](/dotnet/framework/tools/tlbimp-exe-type-library-importer)使用此构造函数的Tlbimp.exe。</span><span class="sxs-lookup"><span data-stu-id="506e8-130">The [Tlbimp.exe (Type Library Importer)](/dotnet/framework/tools/tlbimp-exe-type-library-importer) uses this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ClassInterfaceType" />
        <related type="Article" href="/dotnet/framework/tools/tlbimp-exe-type-library-importer"><span data-ttu-id="506e8-131">Tlbimp.exe（类型库导入程序）</span><span class="sxs-lookup"><span data-stu-id="506e8-131">Tlbimp.exe (Type Library Importer)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassInterfaceAttribute (System.Runtime.InteropServices.ClassInterfaceType classInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.InteropServices.ClassInterfaceType classInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classInterfaceType As ClassInterfaceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassInterfaceAttribute(System::Runtime::InteropServices::ClassInterfaceType classInterfaceType);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ClassInterfaceAttribute : System.Runtime.InteropServices.ClassInterfaceType -&gt; System.Runtime.InteropServices.ClassInterfaceAttribute" Usage="new System.Runtime.InteropServices.ClassInterfaceAttribute classInterfaceType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classInterfaceType" Type="System.Runtime.InteropServices.ClassInterfaceType" />
      </Parameters>
      <Docs>
        <param name="classInterfaceType"><span data-ttu-id="506e8-132"><see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值之一，描述为类生成的接口的类型。</span><span class="sxs-lookup"><span data-stu-id="506e8-132">One of the <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> values that describes the type of interface that is generated for a class.</span></span></param>
        <summary><span data-ttu-id="506e8-133">使用指定的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 枚举成员初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="506e8-133">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> enumeration member.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="506e8-134">对于不容易出错的可读代码，请始终使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="506e8-134">For readable code that is less prone to error, always use this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.ClassInterfaceType Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.ClassInterfaceType Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As ClassInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::ClassInterfaceType Value { System::Runtime::InteropServices::ClassInterfaceType get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : System.Runtime.InteropServices.ClassInterfaceType" Usage="System.Runtime.InteropServices.ClassInterfaceAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ClassInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="506e8-135">获取 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值，该值描述应为该类生成的接口的类型。</span><span class="sxs-lookup"><span data-stu-id="506e8-135">Gets the <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> value that describes which type of interface should be generated for the class.</span></span></summary>
        <value><span data-ttu-id="506e8-136">描述应该为该类生成哪种类型的接口的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="506e8-136">The <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> value that describes which type of interface should be generated for the class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
