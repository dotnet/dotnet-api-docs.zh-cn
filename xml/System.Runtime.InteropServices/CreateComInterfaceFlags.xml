<Type Name="CreateComInterfaceFlags" FullName="System.Runtime.InteropServices.CreateComInterfaceFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e6e4f09449293f034b3d076e60aab568dc3706c" /><Meta Name="ms.sourcegitcommit" Value="a7489f3d76a709f2da832aeda74f08de87ee0b7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/06/2021" /><Meta Name="ms.locfileid" Value="99629105" /></Metadata><TypeSignature Language="C#" Value="public enum CreateComInterfaceFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CreateComInterfaceFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CreateComInterfaceFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum CreateComInterfaceFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class CreateComInterfaceFlags" />
  <TypeSignature Language="F#" Value="type CreateComInterfaceFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Flags]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Flags&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定 <see cref="M:System.Runtime.InteropServices.ComWrappers.GetOrCreateComInterfaceForObject(System.Object,System.Runtime.InteropServices.CreateComInterfaceFlags)" /> 方法的标志。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CallerDefinedIUnknown">
      <MemberSignature Language="C#" Value="CallerDefinedIUnknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CreateComInterfaceFlags CallerDefinedIUnknown = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.CreateComInterfaceFlags.CallerDefinedIUnknown" />
      <MemberSignature Language="VB.NET" Value="CallerDefinedIUnknown" />
      <MemberSignature Language="C++ CLI" Value="CallerDefinedIUnknown" />
      <MemberSignature Language="F#" Value="CallerDefinedIUnknown = 1" Usage="System.Runtime.InteropServices.CreateComInterfaceFlags.CallerDefinedIUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CreateComInterfaceFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><para>调用方将提供 IUnknown Vtable。</para>
          <para>如果调用方无需依赖在不能运行托管代码时（即在垃圾回收期间）使用的 IUnknown 实例，则此标志非常有用。 这在传统的 COM 场景中很常见，但在垃圾回收过程中，可能出现<see href="/windows/win32/api/windows.ui.xaml.hosting.referencetracker/nn-windows-ui-xaml-hosting-referencetracker-ireferencetrackertarget">引用跟踪器托管</see>调用 IUnknown API 的情况。</para></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CreateComInterfaceFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.CreateComInterfaceFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.InteropServices.CreateComInterfaceFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CreateComInterfaceFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>用于指示未设置任何标志的标志。</summary>
      </Docs>
    </Member>
    <Member MemberName="TrackerSupport">
      <MemberSignature Language="C#" Value="TrackerSupport" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CreateComInterfaceFlags TrackerSupport = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.CreateComInterfaceFlags.TrackerSupport" />
      <MemberSignature Language="VB.NET" Value="TrackerSupport" />
      <MemberSignature Language="C++ CLI" Value="TrackerSupport" />
      <MemberSignature Language="F#" Value="TrackerSupport = 2" Usage="System.Runtime.InteropServices.CreateComInterfaceFlags.TrackerSupport" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CreateComInterfaceFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><para>用于指示 COM 接口应实现 <see href="https://docs.microsoft.com/windows/win32/api/windows.ui.xaml.hosting.referencetracker/nn-windows-ui-xaml-hosting-referencetracker-ireferencetrackertarget">IReferenceTrackerTarget</see> 的标志。</para>
          <para>传递此标志时，生成的 COM 接口将具有 <see href="/windows/win32/api/unknwn/nn-unknwn-iunknown">IUnknown</see> 的内部实现，因此调用方应不提供任何内容。</para></summary>
      </Docs>
    </Member>
  </Members>
</Type>
