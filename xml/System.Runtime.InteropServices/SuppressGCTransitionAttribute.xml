<Type Name="SuppressGCTransitionAttribute" FullName="System.Runtime.InteropServices.SuppressGCTransitionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22b107f5bb7aabc9eba9cf763bfcc2eaa8cfa6b5" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89862396" /></Metadata><TypeSignature Language="C#" Value="public sealed class SuppressGCTransitionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SuppressGCTransitionAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.SuppressGCTransitionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SuppressGCTransitionAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SuppressGCTransitionAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SuppressGCTransitionAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指示在进行非托管函数调用时应跳过垃圾回收转换。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

如果应用于不带的方法，则忽略此特性 <xref:System.Runtime.InteropServices.DllImportAttribute> 。
 
 放弃此转换可以在转换成本超过非托管函数的执行时间时产生优势。 但是，若要避免这种转换，会删除运行时通过普通 P/Invoke 提供的某些保证。 退出托管运行时以输入非托管函数时，GC 必须从协作模式转换为抢先模式。 有关这些模式的完整详细信息，请参阅 https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/clr-code-guide.md#2.1.8 。
禁止 GC 转换是一种高级方案，不应在不充分了解潜在后果的情况下执行此操作。
 
 其中的一个后果是对 [混合模式调试](https://docs.microsoft.com/visualstudio/debugger/how-to-debug-in-mixed-mode)的影响。
在混合模式调试期间，不能单步执行或设置已使用此特性标记的 P/Invoke 中的断点。 解决方法是切换到本机调试，并在本机函数中设置断点。
通常，如果调试 P/Invoke 非常重要（例如，逐句通过本机代码或诊断从本机代码引发的异常），则不建议使用此属性。
 
 应用此特性的 P/Invoke 方法必须具有以下所有属性：
 * 本机函数始终执行 (小于1微秒) 的时间。
 * 本机函数不会执行阻塞 syscall (例如，任何类型的 i/o) 。
 * 本机函数不回调到运行时 (例如，反向 P/Invoke) 。
 * 本机函数不引发异常。
 * 本机函数不操作锁或其他并发基元。
 
 此属性的无效用法的后果包括：
 
 * GC 不足。
 * 立即终止运行时。
 * 数据损坏。

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuppressGCTransitionAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SuppressGCTransitionAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SuppressGCTransitionAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>实例构造函数。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
