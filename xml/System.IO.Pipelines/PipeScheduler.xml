<Type Name="PipeScheduler" FullName="System.IO.Pipelines.PipeScheduler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="990f382f1fd693ad6e422aaefcea327c273b105d" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100287490" /></Metadata><TypeSignature Language="C#" Value="public abstract class PipeScheduler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipeScheduler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipelines.PipeScheduler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipeScheduler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeScheduler abstract" />
  <TypeSignature Language="F#" Value="type PipeScheduler = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipelines</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>用于运行 <see cref="T:System.IO.Pipelines.PipeReader" /> 和 <see cref="T:System.IO.Pipelines.PipeWriter" /> 回调和延续的抽象。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeScheduler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeScheduler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeScheduler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化新的 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inline">
      <MemberSignature Language="C#" Value="public static System.IO.Pipelines.PipeScheduler Inline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.Pipelines.PipeScheduler Inline" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeScheduler.Inline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Inline As PipeScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::Pipelines::PipeScheduler ^ Inline { System::IO::Pipelines::PipeScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Inline : System.IO.Pipelines.PipeScheduler" Usage="System.IO.Pipelines.PipeScheduler.Inline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>运行内联回调的 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 实现。</summary>
        <value><see cref="T:System.IO.Pipelines.PipeScheduler" />运行内联回调的实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="public abstract void Schedule (Action&lt;object&gt; action, object state);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Schedule(class System.Action`1&lt;object&gt; action, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeScheduler.Schedule(System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Schedule (action As Action(Of Object), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Schedule(Action&lt;System::Object ^&gt; ^ action, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Schedule : Action&lt;obj&gt; * obj -&gt; unit" Usage="pipeScheduler.Schedule (action, state)" />
      <MemberSignature Language="C#" Value="public abstract void Schedule (Action&lt;object?&gt; action, object? state);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">要计划的单参数操作委托。</param>
        <param name="state">要传递给 <paramref name="action" /> 委托的参数。</param>
        <summary>请求在传入 <paramref name="state" /> 的计划程序上运行 <paramref name="action" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadPool">
      <MemberSignature Language="C#" Value="public static System.IO.Pipelines.PipeScheduler ThreadPool { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.Pipelines.PipeScheduler ThreadPool" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeScheduler.ThreadPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ThreadPool As PipeScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::Pipelines::PipeScheduler ^ ThreadPool { System::IO::Pipelines::PipeScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadPool : System.IO.Pipelines.PipeScheduler" Usage="System.IO.Pipelines.PipeScheduler.ThreadPool" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>对线程池的回调进行排队的 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 实现。</summary>
        <value>将 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 回调排队到线程池的实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
