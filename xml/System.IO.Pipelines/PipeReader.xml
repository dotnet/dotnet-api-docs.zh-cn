<Type Name="PipeReader" FullName="System.IO.Pipelines.PipeReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3dc68463ea6a02e1ac30cf55937b1b8463fb4a2" /><Meta Name="ms.sourcegitcommit" Value="791d05c9a3dda5e564565284be4207d0f82b5a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/30/2020" /><Meta Name="ms.locfileid" Value="93062841" /></Metadata><TypeSignature Language="C#" Value="public abstract class PipeReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipeReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipelines.PipeReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipeReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeReader abstract" />
  <TypeSignature Language="F#" Value="type PipeReader = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipelines</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="227b4-101">定义提供对管道读取端的访问权限的类。</span><span class="sxs-lookup"><span data-stu-id="227b4-101">Defines a class that provides access to a read side of pipe.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="227b4-102">初始化 <see cref="T:System.IO.Pipelines.PipeReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="227b4-102">Initializes a new instance of the <see cref="T:System.IO.Pipelines.PipeReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AdvanceTo">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="227b4-103">将管道的读取光标向前移动到已使用的数据之后。</span><span class="sxs-lookup"><span data-stu-id="227b4-103">Moves forward the pipeline's read cursor to after the consumed data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="227b4-104">使用的数据的内存将被释放，并且不再可用。</span><span class="sxs-lookup"><span data-stu-id="227b4-104">The memory for the consumed data will be released and no longer available.</span></span> <span data-ttu-id="227b4-105">在 <xref:System.IO.Pipelines.ReadResult.Buffer%2A> 此调用后，不能访问先前从返回的 <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> 。</span><span class="sxs-lookup"><span data-stu-id="227b4-105">The <xref:System.IO.Pipelines.ReadResult.Buffer%2A> previously returned from <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> must not be accessed after this call.</span></span> <span data-ttu-id="227b4-106">检查的数据应告知更多的可用数据。</span><span class="sxs-lookup"><span data-stu-id="227b4-106">The examined data communicates to the pipeline when it should signal more data is available.</span></span>


          ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AdvanceTo">
      <MemberSignature Language="C#" Value="public abstract void AdvanceTo (SequencePosition consumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceTo(valuetype System.SequencePosition consumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AdvanceTo (consumed As SequencePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AdvanceTo(SequencePosition consumed);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceTo : SequencePosition -&gt; unit" Usage="pipeReader.AdvanceTo consumed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumed" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="consumed"><span data-ttu-id="227b4-107">标记已成功处理的数据范围。</span><span class="sxs-lookup"><span data-stu-id="227b4-107">Marks the extent of the data that has been successfully processed.</span></span></param>
        <summary><span data-ttu-id="227b4-108">将管道的读取光标向前移动到已使用的数据之后，将数据标记为“已处理”。</span><span class="sxs-lookup"><span data-stu-id="227b4-108">Moves forward the pipeline's read cursor to after the consumed data, marking the data as processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="227b4-109">使用的数据的内存将被释放，并且不再可用。</span><span class="sxs-lookup"><span data-stu-id="227b4-109">The memory for the consumed data will be released and no longer available.</span></span>

<span data-ttu-id="227b4-110">在 <xref:System.IO.Pipelines.ReadResult.Buffer> 此调用后，不能访问先前从返回的 <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> 。</span><span class="sxs-lookup"><span data-stu-id="227b4-110">The <xref:System.IO.Pipelines.ReadResult.Buffer> previously returned from <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> must not be accessed after this call.</span></span>

<span data-ttu-id="227b4-111">这等效于 <xref:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)> 使用相同的检查和使用位置进行调用。</span><span class="sxs-lookup"><span data-stu-id="227b4-111">This is equivalent to calling <xref:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)> with identical examined and consumed positions.</span></span>
<span data-ttu-id="227b4-112">检查的数据应告知更多的可用数据。</span><span class="sxs-lookup"><span data-stu-id="227b4-112">The examined data communicates to the pipeline when it should signal more data is available.</span></span>

<span data-ttu-id="227b4-113">由于使用的参数将加倍作为检查的参数，因此使用的参数应大于或等于上一次调用中检查的位置 `AdvanceTo` 。</span><span class="sxs-lookup"><span data-stu-id="227b4-113">Because the consumed parameter doubles as the examined parameter, the consumed parameter should be greater than or equal to the examined position in the previous call to `AdvanceTo`.</span></span> <span data-ttu-id="227b4-114">否则会引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="227b4-114">Otherwise, an <xref:System.InvalidOperationException> is thrown.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceTo">
      <MemberSignature Language="C#" Value="public abstract void AdvanceTo (SequencePosition consumed, SequencePosition examined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceTo(valuetype System.SequencePosition consumed, valuetype System.SequencePosition examined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AdvanceTo (consumed As SequencePosition, examined As SequencePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AdvanceTo(SequencePosition consumed, SequencePosition examined);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceTo : SequencePosition * SequencePosition -&gt; unit" Usage="pipeReader.AdvanceTo (consumed, examined)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumed" Type="System.SequencePosition" />
        <Parameter Name="examined" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="consumed"><span data-ttu-id="227b4-115">标记已成功处理的数据范围。</span><span class="sxs-lookup"><span data-stu-id="227b4-115">Marks the extent of the data that has been successfully processed.</span></span></param>
        <param name="examined"><span data-ttu-id="227b4-116">标记已读取并检查的数据范围。</span><span class="sxs-lookup"><span data-stu-id="227b4-116">Marks the extent of the data that has been read and examined.</span></span></param>
        <summary><span data-ttu-id="227b4-117">将管道的读取光标向前移动到已使用的数据之后，将数据标记为“已处理”、“已读取”和“已检查”。</span><span class="sxs-lookup"><span data-stu-id="227b4-117">Moves forward the pipeline's read cursor to after the consumed data, marking the data as processed, read and examined.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="227b4-118">使用的数据的内存将被释放，并且不再可用。</span><span class="sxs-lookup"><span data-stu-id="227b4-118">The memory for the consumed data will be released and no longer available.</span></span>

<span data-ttu-id="227b4-119">在 <xref:System.IO.Pipelines.ReadResult.Buffer> 此调用后，不能访问先前从返回的 <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> 。</span><span class="sxs-lookup"><span data-stu-id="227b4-119">The <xref:System.IO.Pipelines.ReadResult.Buffer> previously returned from <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> must not be accessed after this call.</span></span>

<span data-ttu-id="227b4-120">检查的数据应告知更多的可用数据。</span><span class="sxs-lookup"><span data-stu-id="227b4-120">The examined data communicates to the pipeline when it should signal more data is available.</span></span>

<span data-ttu-id="227b4-121">检查的参数应大于或等于上一次调用中检查的位置 `AdvanceTo` 。</span><span class="sxs-lookup"><span data-stu-id="227b4-121">The examined parameter should be greater than or equal to the examined position in the previous call to `AdvanceTo`.</span></span> <span data-ttu-id="227b4-122">否则会引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="227b4-122">Otherwise, an <xref:System.InvalidOperationException> is thrown.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream AsStream (bool leaveOpen = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream AsStream(bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AsStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsStream (Optional leaveOpen As Boolean = false) As Stream" />
      <MemberSignature Language="F#" Value="abstract member AsStream : bool -&gt; System.IO.Stream&#xA;override this.AsStream : bool -&gt; System.IO.Stream" Usage="pipeReader.AsStream leaveOpen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="leaveOpen"><span data-ttu-id="227b4-123">一个可选标志，它指示释放返回的 <see cref="T:System.IO.Stream" /> 会使 <see cref="T:System.IO.Pipelines.PipeReader" /> 保持打开 (<see langword="true" />) 还是完成 <see cref="T:System.IO.Pipelines.PipeReader" /> (<see langword="false" />)。</span><span class="sxs-lookup"><span data-stu-id="227b4-123">An optional flag that indicates whether disposing the returned <see cref="T:System.IO.Stream" /> leaves <see cref="T:System.IO.Pipelines.PipeReader" /> open (<see langword="true" />) or completes <see cref="T:System.IO.Pipelines.PipeReader" /> (<see langword="false" />).</span></span></param>
        <summary><span data-ttu-id="227b4-124">返回 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.IO.Pipelines.PipeReader" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="227b4-124">Returns a <see cref="T:System.IO.Stream" /> representation of the <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span></summary>
        <returns><span data-ttu-id="227b4-125">表示 <see cref="T:System.IO.Pipelines.PipeReader" /> 的流。</span><span class="sxs-lookup"><span data-stu-id="227b4-125">A stream that represents the <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRead">
      <MemberSignature Language="C#" Value="public abstract void CancelPendingRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelPendingRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CancelPendingRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelPendingRead ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelPendingRead();" />
      <MemberSignature Language="F#" Value="abstract member CancelPendingRead : unit -&gt; unit" Usage="pipeReader.CancelPendingRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="227b4-126">取消挂起的 <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> 操作，而不会导致操作异常抛出，也不会完成 <see cref="T:System.IO.Pipelines.PipeReader" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-126">Cancels the pending <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> operation without causing it to throw and without completing the <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span> <span data-ttu-id="227b4-127">如果没有挂起的操作，则取消下一个操作。</span><span class="sxs-lookup"><span data-stu-id="227b4-127">If there is no pending operation, this cancels the next operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="227b4-128">取消的 <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> 操作返回， <xref:System.IO.Pipelines.ReadResult> 其中 <xref:System.IO.Pipelines.ReadResult.IsCanceled> 是 `true` 。</span><span class="sxs-lookup"><span data-stu-id="227b4-128">The canceled <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> operation returns a <xref:System.IO.Pipelines.ReadResult> where <xref:System.IO.Pipelines.ReadResult.IsCanceled> is `true`.</span></span>

              ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public abstract void Complete (Exception exception = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.Complete(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Complete (Optional exception As Exception = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Complete : Exception -&gt; unit" Usage="pipeReader.Complete exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="227b4-129">可选 <see cref="T:System.Exception" />，该异常指示无法完成通道。</span><span class="sxs-lookup"><span data-stu-id="227b4-129">Optional <see cref="T:System.Exception" /> indicating a failure that's causing the pipeline to complete.</span></span></param>
        <summary><span data-ttu-id="227b4-130">对生成者发出使用者已完成读取的信号。</span><span class="sxs-lookup"><span data-stu-id="227b4-130">Signals to the producer that the consumer is done reading.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask CompleteAsync (Exception exception = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask CompleteAsync(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CompleteAsync(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteAsync (Optional exception As Exception = Nothing) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member CompleteAsync : Exception -&gt; System.Threading.Tasks.ValueTask&#xA;override this.CompleteAsync : Exception -&gt; System.Threading.Tasks.ValueTask" Usage="pipeReader.CompleteAsync exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="227b4-131">可选异常，指示导致读取器完成的失败。</span><span class="sxs-lookup"><span data-stu-id="227b4-131">An optional exception that indicates the failure that caused the reader to complete.</span></span></param>
        <summary><span data-ttu-id="227b4-132">将当前管道读取器实例标记为已完成，这意味着将不再从该实例中读取数据。</span><span class="sxs-lookup"><span data-stu-id="227b4-132">Marks the current pipe reader instance as being complete, meaning no more data will be read from it.</span></span></summary>
        <returns><span data-ttu-id="227b4-133">表示异步完成操作的值任务。</span><span class="sxs-lookup"><span data-stu-id="227b4-133">A value task that represents the asynchronous complete operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Pipelines.PipeWriter destination, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Pipelines.PipeWriter destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CopyToAsync(System.IO.Pipelines.PipeWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CopyToAsync (destination As PipeWriter, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Pipelines.PipeWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Pipelines.PipeWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeReader.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Pipelines.PipeWriter" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="227b4-134">当前流的内容将复制到的管道编写器。</span><span class="sxs-lookup"><span data-stu-id="227b4-134">The pipe writer to which the contents of the current stream will be copied.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="227b4-135">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="227b4-135">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="227b4-136">默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-136">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="227b4-137">使用指定缓冲区大小和取消标记从 <see cref="T:System.IO.Pipelines.PipeReader" /> 中异步读取字节并将它们写入到指定 <see cref="T:System.IO.Pipelines.PipeWriter" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-137">Asynchronously reads the bytes from the <see cref="T:System.IO.Pipelines.PipeReader" /> and writes them to the specified <see cref="T:System.IO.Pipelines.PipeWriter" />, using a specified buffer size and cancellation token.</span></span></summary>
        <returns><span data-ttu-id="227b4-138">表示异步复制操作的任务。</span><span class="sxs-lookup"><span data-stu-id="227b4-138">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CopyToAsync (destination As Stream, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeReader.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="227b4-139">当前流的内容将复制到的流。</span><span class="sxs-lookup"><span data-stu-id="227b4-139">The stream to which the contents of the current stream will be copied.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="227b4-140">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="227b4-140">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="227b4-141">默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-141">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="227b4-142">使用指定的取消令牌从 <see cref="T:System.IO.Pipelines.PipeReader" /> 中异步读取字节并将其写入到指定的流。</span><span class="sxs-lookup"><span data-stu-id="227b4-142">Asynchronously reads the bytes from the <see cref="T:System.IO.Pipelines.PipeReader" /> and writes them to the specified stream, using a specified cancellation token.</span></span></summary>
        <returns><span data-ttu-id="227b4-143">表示异步复制操作的任务。</span><span class="sxs-lookup"><span data-stu-id="227b4-143">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Pipelines.PipeReader Create (System.IO.Stream stream, System.IO.Pipelines.StreamPipeReaderOptions readerOptions = default);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Pipelines.PipeReader Create(class System.IO.Stream stream, class System.IO.Pipelines.StreamPipeReaderOptions readerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.Create(System.IO.Stream,System.IO.Pipelines.StreamPipeReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (stream As Stream, Optional readerOptions As StreamPipeReaderOptions = Nothing) As PipeReader" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.IO.Pipelines.StreamPipeReaderOptions -&gt; System.IO.Pipelines.PipeReader" Usage="System.IO.Pipelines.PipeReader.Create (stream, readerOptions)" />
      <MemberSignature Language="C#" Value="public static System.IO.Pipelines.PipeReader Create (System.IO.Stream stream, System.IO.Pipelines.StreamPipeReaderOptions? readerOptions = default);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="readerOptions" Type="System.IO.Pipelines.StreamPipeReaderOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="227b4-144">管道读取器将包装的流。</span><span class="sxs-lookup"><span data-stu-id="227b4-144">The stream that the pipe reader will wrap.</span></span></param>
        <param name="readerOptions"><span data-ttu-id="227b4-145">用于配置管道读取器的选项。</span><span class="sxs-lookup"><span data-stu-id="227b4-145">The options to configure the pipe reader.</span></span></param>
        <summary><span data-ttu-id="227b4-146">创建包装指定的 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.IO.Pipelines.PipeReader" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-146">Creates a <see cref="T:System.IO.Pipelines.PipeReader" /> wrapping the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="227b4-147">包装 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.IO.Pipelines.PipeReader" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-147">A <see cref="T:System.IO.Pipelines.PipeReader" /> that wraps the <see cref="T:System.IO.Stream" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriterCompleted">
      <MemberSignature Language="C#" Value="public abstract void OnWriterCompleted (Action&lt;Exception,object&gt; callback, object state);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWriterCompleted(class System.Action`2&lt;class System.Exception, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.OnWriterCompleted(System.Action{System.Exception,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub OnWriterCompleted (callback As Action(Of Exception, Object), state As Object)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void OnWriterCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="abstract member OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="pipeReader.OnWriterCompleted (callback, state)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public virtual void OnWriterCompleted (Action&lt;Exception,object&gt; callback, object state);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnWriterCompleted (callback As Action(Of Exception, Object), state As Object)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnWriterCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="F#" Value="abstract member OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit&#xA;override this.OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="pipeReader.OnWriterCompleted (callback, state)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="C#" Value="public virtual void OnWriterCompleted (Action&lt;Exception,object&gt;? callback, object state);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName Language="C#">[System.Obsolete("OnWriterCompleted may not be invoked on all implementations of PipeReader. This will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("OnWriterCompleted may not be invoked on all implementations of PipeReader. This will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Exception,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="227b4-148">要注册的回调。</span><span class="sxs-lookup"><span data-stu-id="227b4-148">The callback to register.</span></span></param>
        <param name="state"><span data-ttu-id="227b4-149">要在被调用时传递给 <paramref name="callback" /> 的状态对象。</span><span class="sxs-lookup"><span data-stu-id="227b4-149">The state object to pass to <paramref name="callback" /> when it's invoked.</span></span></param>
        <summary><span data-ttu-id="227b4-150">注册管道的 <see cref="T:System.IO.Pipelines.PipeWriter" /> 端已完成时执行的回调。</span><span class="sxs-lookup"><span data-stu-id="227b4-150">Registers a callback that executes when the <see cref="T:System.IO.Pipelines.PipeWriter" /> side of the pipe is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="227b4-151">`OnWriterCompleted` 不能在的所有实现上调用 <xref:System.IO.Pipelines.PipeWriter> 。</span><span class="sxs-lookup"><span data-stu-id="227b4-151">`OnWriterCompleted` may not be invoked on all implementations of <xref:System.IO.Pipelines.PipeWriter>.</span></span> <span data-ttu-id="227b4-152">未来版本中将删除此方法。</span><span class="sxs-lookup"><span data-stu-id="227b4-152">This method will be removed in a future release.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt; ReadAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.IO.Pipelines.ReadResult&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadAsync (Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of ReadResult)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt;" Usage="pipeReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="227b4-153">要监视取消请求的标记。</span><span class="sxs-lookup"><span data-stu-id="227b4-153">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="227b4-154">默认值为 <see langword="default" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-154">The default value is <see langword="default" />.</span></span></param>
        <summary><span data-ttu-id="227b4-155">以异步方式从当前 <see cref="T:System.IO.Pipelines.PipeReader" /> 读取一系列字节。</span><span class="sxs-lookup"><span data-stu-id="227b4-155">Asynchronously reads a sequence of bytes from the current <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span></summary>
        <returns><span data-ttu-id="227b4-156">表示异步读取操作的 <see cref="T:System.Threading.Tasks.ValueTask`1" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-156">A <see cref="T:System.Threading.Tasks.ValueTask`1" /> representing the asynchronous read operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRead">
      <MemberSignature Language="C#" Value="public abstract bool TryRead (out System.IO.Pipelines.ReadResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRead([out] valuetype System.IO.Pipelines.ReadResult&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.TryRead(System.IO.Pipelines.ReadResult@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryRead (ByRef result As ReadResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryRead([Runtime::InteropServices::Out] System::IO::Pipelines::ReadResult % result);" />
      <MemberSignature Language="F#" Value="abstract member TryRead : ReadResult -&gt; bool" Usage="pipeReader.TryRead result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IO.Pipelines.ReadResult" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="227b4-157">此方法返回 <see langword="true" /> 时，此值设置为表示读取调用结果的 <see cref="T:System.IO.Pipelines.ReadResult" /> 实例；否则，此值设置为 <see langword="default" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-157">When this method returns <see langword="true" />, this value is set to a <see cref="T:System.IO.Pipelines.ReadResult" /> instance that represents the result of the read call; otherwise, this value is set to <see langword="default" />.</span></span></param>
        <summary><span data-ttu-id="227b4-158">尝试同步读取数据 <see cref="T:System.IO.Pipelines.PipeReader" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-158">Attempts to synchronously read data the <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span></summary>
        <returns><span data-ttu-id="227b4-159">如果数据可用或如果调用已取消或编写器已完成，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="227b4-159"><see langword="true" /> if data was available, or if the call was canceled or the writer was completed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="227b4-160">如果管道返回 `false` ，则无需调用 <xref:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)> 。</span><span class="sxs-lookup"><span data-stu-id="227b4-160">If the pipe returns `false`, there is no need to call <xref:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
