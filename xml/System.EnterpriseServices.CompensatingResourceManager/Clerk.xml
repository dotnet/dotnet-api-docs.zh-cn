<Type Name="Clerk" FullName="System.EnterpriseServices.CompensatingResourceManager.Clerk">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0acc8a22af9fac9ffb3d7c2f96e689aad9fe0893" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69359394" /></Metadata><TypeSignature Language="C#" Value="public sealed class Clerk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clerk extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clerk" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clerk sealed" />
  <TypeSignature Language="F#" Value="type Clerk = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>将事务性操作的记录写入日志。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每个职员都与一个补偿器相关联，该补偿器回调以在事务的两阶段提交过程中执行操作。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此类。  
  
 [!code-cpp[EnterpriseServices_Crm#10](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#10)]
 [!code-csharp[EnterpriseServices_Crm#10](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#10)]
 [!code-vb[EnterpriseServices_Crm#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#10)]  
  
 下面的代码示例演示了相应的 <xref:System.EnterpriseServices.CompensatingResourceManager.Compensator> 类。  
  
 [!code-cpp[EnterpriseServices_Crm#30](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmclient.cpp#30)]
 [!code-csharp[EnterpriseServices_Crm#30](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmclient.cs#30)]
 [!code-vb[EnterpriseServices_Crm#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmclient.vb#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Clerk (string compensator, string description, System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string compensator, string description, valuetype System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (compensator As String, description As String, flags As CompensatorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Clerk(System::String ^ compensator, System::String ^ description, System::EnterpriseServices::CompensatingResourceManager::CompensatorOptions flags);" />
      <MemberSignature Language="F#" Value="new System.EnterpriseServices.CompensatingResourceManager.Clerk : string * string * System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions -&gt; System.EnterpriseServices.CompensatingResourceManager.Clerk" Usage="new System.EnterpriseServices.CompensatingResourceManager.Clerk (compensator, description, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compensator" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="flags" Type="System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" />
      </Parameters>
      <Docs>
        <param name="compensator">补偿器的名称。</param>
        <param name="description">补偿器的说明。</param>
        <param name="flags"><see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" /> 值的按位组合。</param>
        <summary>初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Clerk (Type compensator, string description, System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type compensator, string description, valuetype System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (compensator As Type, description As String, flags As CompensatorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Clerk(Type ^ compensator, System::String ^ description, System::EnterpriseServices::CompensatingResourceManager::CompensatorOptions flags);" />
      <MemberSignature Language="F#" Value="new System.EnterpriseServices.CompensatingResourceManager.Clerk : Type * string * System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions -&gt; System.EnterpriseServices.CompensatingResourceManager.Clerk" Usage="new System.EnterpriseServices.CompensatingResourceManager.Clerk (compensator, description, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compensator" Type="System.Type" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="flags" Type="System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" />
      </Parameters>
      <Docs>
        <param name="compensator">一个表示补偿器的类型。</param>
        <param name="description">补偿器的说明。</param>
        <param name="flags"><see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" /> 值的按位组合。</param>
        <summary>初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此构造函数。  
  
 [!code-cpp[EnterpriseServices_Crm#11](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#11)]
 [!code-csharp[EnterpriseServices_Crm#11](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#11)]
 [!code-vb[EnterpriseServices_Crm#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Clerk ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Clerk ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="clerk.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在由垃圾回收器回收之前释放当前 Clerk 的资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceLog">
      <MemberSignature Language="C#" Value="public void ForceLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceLog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceLog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceLog();" />
      <MemberSignature Language="F#" Value="member this.ForceLog : unit -&gt; unit" Usage="clerk.ForceLog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>强制将所有日志记录存入磁盘。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 补偿资源管理器（CRM）辅助角色和 CRM 补偿器使用此方法将记录延迟写入日志，这意味着在将记录强制写入日志之前，不会将记录设置为持久记录。 调用 <xref:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog%2A> 会使已写入的所有日志记录都持久保存在磁盘上。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此方法。  
  
 [!code-cpp[EnterpriseServices_Crm#12](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#12)]
 [!code-csharp[EnterpriseServices_Crm#12](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#12)]
 [!code-vb[EnterpriseServices_Crm#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceTransactionToAbort">
      <MemberSignature Language="C#" Value="public void ForceTransactionToAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceTransactionToAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceTransactionToAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceTransactionToAbort();" />
      <MemberSignature Language="F#" Value="member this.ForceTransactionToAbort : unit -&gt; unit" Usage="clerk.ForceTransactionToAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>对事务执行立即中断调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForgetLogRecord">
      <MemberSignature Language="C#" Value="public void ForgetLogRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForgetLogRecord() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForgetLogRecord ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForgetLogRecord();" />
      <MemberSignature Language="F#" Value="member this.ForgetLogRecord : unit -&gt; unit" Usage="clerk.ForgetLogRecord " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>不传递该接口的此实例已写入的最后的日志记录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这仅可用于忘记最后一条记录，没有嵌套概念;也就是说，"写入、忘记、写入、忘记" 有效，但不是 "写入、写入、忘记、忘记"。 在事务结果通知期间，已忘记的日志记录不会传递到补偿资源管理器（CRM）补偿器。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRecordCount">
      <MemberSignature Language="C#" Value="public int LogRecordCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LogRecordCount" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogRecordCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LogRecordCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LogRecordCount : int" Usage="System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取日志记录的数目。</summary>
        <value>日志记录的数目。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionUOW">
      <MemberSignature Language="C#" Value="public string TransactionUOW { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionUOW" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionUOW As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionUOW { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionUOW : string" Usage="System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示事务工作单元 (UOW) 的值。</summary>
        <value>表示 UOW 的 GUID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLogRecord">
      <MemberSignature Language="C#" Value="public void WriteLogRecord (object record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLogRecord(object record) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLogRecord (record As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLogRecord(System::Object ^ record);" />
      <MemberSignature Language="F#" Value="member this.WriteLogRecord : obj -&gt; unit" Usage="clerk.WriteLogRecord record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="record">要写入日志的日志记录。</param>
        <summary>将未结构化的日志记录写入日志。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此构造函数。  
  
 [!code-cpp[EnterpriseServices_Crm#11](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#11)]
 [!code-csharp[EnterpriseServices_Crm#11](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#11)]
 [!code-vb[EnterpriseServices_Crm#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
