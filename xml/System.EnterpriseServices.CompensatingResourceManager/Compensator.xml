<Type Name="Compensator" FullName="System.EnterpriseServices.CompensatingResourceManager.Compensator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e84c5e3ca6d661bb929bf2e81ac9eea241bb092e" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69247366" /></Metadata><TypeSignature Language="C#" Value="public class Compensator : System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Compensator extends System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" />
  <TypeSignature Language="VB.NET" Value="Public Class Compensator&#xA;Inherits ServicedComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class Compensator : System::EnterpriseServices::ServicedComponent" />
  <TypeSignature Language="F#" Value="type Compensator = class&#xA;    inherit ServicedComponent" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EnterpriseServices.ServicedComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1add9-101">表示所有补偿资源管理器 (CRM) 补偿器的基类。</span><span class="sxs-lookup"><span data-stu-id="1add9-101">Represents the base class for all Compensating Resource Manager (CRM) Compensators.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1add9-102">用户应从此对象扩展，以便编写自定义事务补偿器。</span><span class="sxs-lookup"><span data-stu-id="1add9-102">The user should extend from this object in order to write a custom transaction Compensator.</span></span>  
  
 <span data-ttu-id="1add9-103">补偿器必须始终具有公共构造函数;否则，恢复引擎无法创建它。</span><span class="sxs-lookup"><span data-stu-id="1add9-103">A Compensator must always have a public constructor; otherwise, the recovery engine cannot create it.</span></span>  
  
 <span data-ttu-id="1add9-104">有关详细信息，请参阅[如何：创建补偿资源管理器（CRM）](https://msdn.microsoft.com/library/0a8a024b-0be1-4519-a659-076577278029)。</span><span class="sxs-lookup"><span data-stu-id="1add9-104">For more information, see [How to: Create a Compensating Resource Manager (CRM)](https://msdn.microsoft.com/library/0a8a024b-0be1-4519-a659-076577278029).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1add9-105">下面的代码示例演示如何使用此类。</span><span class="sxs-lookup"><span data-stu-id="1add9-105">The following code example demonstrates the use of this class.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#20](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#20)]
 [!code-csharp[EnterpriseServices_Crm#20](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#20)]
 [!code-vb[EnterpriseServices_Crm#20](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#20)]  
  
 <span data-ttu-id="1add9-106">此补偿器由以下 worker 类使用。</span><span class="sxs-lookup"><span data-stu-id="1add9-106">This compensator is used by the following worker class.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#10](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#10)]
 [!code-csharp[EnterpriseServices_Crm#10](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#10)]
 [!code-vb[EnterpriseServices_Crm#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#10)]  
  
 <span data-ttu-id="1add9-107">下面的代码示例演示了一个试验此补偿器和辅助角色的客户端。</span><span class="sxs-lookup"><span data-stu-id="1add9-107">The following code example demonstrates a client that exercises this compensator and worker.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#30](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmclient.cpp#30)]
 [!code-csharp[EnterpriseServices_Crm#30](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmclient.cs#30)]
 [!code-vb[EnterpriseServices_Crm#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmclient.vb#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Compensator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Compensator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1add9-108">初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1add9-108">Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortRecord">
      <MemberSignature Language="C#" Value="public virtual bool AbortRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AbortRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbortRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AbortRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberSignature Language="F#" Value="abstract member AbortRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.AbortRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.AbortRecord rec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec"><span data-ttu-id="1add9-109">要传递的日志记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-109">The log record to be delivered.</span></span></param>
        <summary><span data-ttu-id="1add9-110">在中断阶段期间将日志记录传递到补偿资源管理器 (CRM) 补偿器。</span><span class="sxs-lookup"><span data-stu-id="1add9-110">Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.</span></span></summary>
        <returns><span data-ttu-id="1add9-111">如果应忘记传递的记录，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1add9-111"><see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-112">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-112">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#28](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#28)]
 [!code-csharp[EnterpriseServices_Crm#28](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#28)]
 [!code-vb[EnterpriseServices_Crm#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAbort">
      <MemberSignature Language="C#" Value="public virtual void BeginAbort (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAbort(bool fRecovery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginAbort (fRecovery As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAbort(bool fRecovery);" />
      <MemberSignature Language="F#" Value="abstract member BeginAbort : bool -&gt; unit&#xA;override this.BeginAbort : bool -&gt; unit" Usage="compensator.BeginAbort fRecovery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery"><span data-ttu-id="1add9-113">若要开始中断阶段，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1add9-113"><see langword="true" /> to begin abort phase; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1add9-114">通知补偿资源管理器 (CRM) 补偿器事务完成的中断阶段，并且通知即将传递记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-114">Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase of the transaction completion, and the upcoming delivery of records.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-115">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-115">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#27](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#27)]
 [!code-csharp[EnterpriseServices_Crm#27](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#27)]
 [!code-vb[EnterpriseServices_Crm#27](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public virtual void BeginCommit (bool fRecovery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginCommit(bool fRecovery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginCommit (fRecovery As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginCommit(bool fRecovery);" />
      <MemberSignature Language="F#" Value="abstract member BeginCommit : bool -&gt; unit&#xA;override this.BeginCommit : bool -&gt; unit" Usage="compensator.BeginCommit fRecovery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fRecovery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fRecovery"><span data-ttu-id="1add9-116">若要开始提交阶段，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1add9-116"><see langword="true" /> to begin commit phase; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1add9-117">通知补偿资源管理器 (CRM) 补偿器事务完成的提交阶段，并且通知即将传递记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-117">Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of the transaction completion and the upcoming delivery of records.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-118">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-118">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#24](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#24)]
 [!code-csharp[EnterpriseServices_Crm#24](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#24)]
 [!code-vb[EnterpriseServices_Crm#24](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrepare">
      <MemberSignature Language="C#" Value="public virtual void BeginPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginPrepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginPrepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginPrepare();" />
      <MemberSignature Language="F#" Value="abstract member BeginPrepare : unit -&gt; unit&#xA;override this.BeginPrepare : unit -&gt; unit" Usage="compensator.BeginPrepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1add9-119">通知补偿资源管理器 (CRM) 补偿器事务完成的准备阶段，并且通知即将传递记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-119">Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase of the transaction completion and the upcoming delivery of records.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-120">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-120">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#21](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#21)]
 [!code-csharp[EnterpriseServices_Crm#21](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#21)]
 [!code-vb[EnterpriseServices_Crm#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clerk">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clerk As Clerk" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::CompensatingResourceManager::Clerk ^ Clerk { System::EnterpriseServices::CompensatingResourceManager::Clerk ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clerk : System.EnterpriseServices.CompensatingResourceManager.Clerk" Usage="System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.CompensatingResourceManager.Clerk</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1add9-121">获取一个值，该值表示补偿资源管理器 (CRM) <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1add9-121">Gets a value representing the Compensating Resource Manager (CRM) <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</span></span></summary>
        <value><span data-ttu-id="1add9-122"><see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1add9-122">The <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitRecord">
      <MemberSignature Language="C#" Value="public virtual bool CommitRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommitRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CommitRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberSignature Language="F#" Value="abstract member CommitRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.CommitRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.CommitRecord rec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec"><span data-ttu-id="1add9-123">要转发的日志记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-123">The log record to forward.</span></span></param>
        <summary><span data-ttu-id="1add9-124">在提交阶段期间以前向顺序传递日志记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-124">Delivers a log record in forward order during the commit phase.</span></span></summary>
        <returns><span data-ttu-id="1add9-125">如果应忘记传递的记录，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1add9-125"><see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-126">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-126">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#25](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#25)]
 [!code-csharp[EnterpriseServices_Crm#25](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#25)]
 [!code-vb[EnterpriseServices_Crm#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAbort">
      <MemberSignature Language="C#" Value="public virtual void EndAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAbort();" />
      <MemberSignature Language="F#" Value="abstract member EndAbort : unit -&gt; unit&#xA;override this.EndAbort : unit -&gt; unit" Usage="compensator.EndAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1add9-127">通知补偿资源管理器 (CRM) 补偿器在中断阶段期间已接收所有可用日志记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-127">Notifies the Compensating Resource Manager (CRM) Compensator that it has received all the log records available during the abort phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-128">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-128">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#29](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#29)]
 [!code-csharp[EnterpriseServices_Crm#29](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#29)]
 [!code-vb[EnterpriseServices_Crm#29](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public virtual void EndCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndCommit();" />
      <MemberSignature Language="F#" Value="abstract member EndCommit : unit -&gt; unit&#xA;override this.EndCommit : unit -&gt; unit" Usage="compensator.EndCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1add9-129">通知补偿资源管理器 (CRM) 补偿器在提交阶段期间已传递所有可用日志记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-129">Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all the log records available during the commit phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-130">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-130">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#26](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#26)]
 [!code-csharp[EnterpriseServices_Crm#26](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#26)]
 [!code-vb[EnterpriseServices_Crm#26](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPrepare">
      <MemberSignature Language="C#" Value="public virtual bool EndPrepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndPrepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndPrepare () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndPrepare();" />
      <MemberSignature Language="F#" Value="abstract member EndPrepare : unit -&gt; bool&#xA;override this.EndPrepare : unit -&gt; bool" Usage="compensator.EndPrepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1add9-131">通知补偿资源管理器 (CRM) 补偿器在准备阶段期间已具有所有可用日志记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-131">Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log records available during the prepare phase.</span></span></summary>
        <returns><span data-ttu-id="1add9-132">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1add9-132"><see langword="true" /> if successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-133">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-133">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#23](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#23)]
 [!code-csharp[EnterpriseServices_Crm#23](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#23)]
 [!code-vb[EnterpriseServices_Crm#23](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareRecord">
      <MemberSignature Language="C#" Value="public virtual bool PrepareRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrepareRecord(class System.EnterpriseServices.CompensatingResourceManager.LogRecord rec) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrepareRecord (rec As LogRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PrepareRecord(System::EnterpriseServices::CompensatingResourceManager::LogRecord ^ rec);" />
      <MemberSignature Language="F#" Value="abstract member PrepareRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool&#xA;override this.PrepareRecord : System.EnterpriseServices.CompensatingResourceManager.LogRecord -&gt; bool" Usage="compensator.PrepareRecord rec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rec" Type="System.EnterpriseServices.CompensatingResourceManager.LogRecord" />
      </Parameters>
      <Docs>
        <param name="rec"><span data-ttu-id="1add9-134">要转发的日志记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-134">The log record to forward.</span></span></param>
        <summary><span data-ttu-id="1add9-135">在准备阶段期间以前向顺序传递日志记录。</span><span class="sxs-lookup"><span data-stu-id="1add9-135">Delivers a log record in forward order during the prepare phase.</span></span></summary>
        <returns><span data-ttu-id="1add9-136">如果应忘记传递的记录，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1add9-136"><see langword="true" /> if the delivered record should be forgotten; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1add9-137">下面的代码示例演示了此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="1add9-137">The following code example demonstrates the implementation of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#22](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#22)]
 [!code-csharp[EnterpriseServices_Crm#22](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#22)]
 [!code-vb[EnterpriseServices_Crm#22](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
