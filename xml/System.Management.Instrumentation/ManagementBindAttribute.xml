<Type Name="ManagementBindAttribute" FullName="System.Management.Instrumentation.ManagementBindAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="900ecfeecdfc65bcb102410e55d618cd7f0a13ed" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86811788" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementBindAttribute : System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementBindAttribute extends System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementBindAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementBindAttribute&#xA;Inherits ManagementNewInstanceAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementBindAttribute sealed : System::Management::Instrumentation::ManagementNewInstanceAttribute" />
  <TypeSignature Language="F#" Value="type ManagementBindAttribute = class&#xA;    inherit ManagementNewInstanceAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementNewInstanceAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ManagementBind 属性指示使用了一种方法来返回与特定密钥值相关联的 WMI 类的实例。  
  
注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。 [MI API](https://docs.microsoft.com/previous-versions/windows/desktop/wmi_v2/windows-management-infrastructure) 应用于所有新的开发。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此特性标记基础结构用于执行 WMI get 操作的方法。 方法必须将相应 WMI 类的键值作为参数，并返回 WMI 类的关联实例。  
  
 > [!IMPORTANT]
 > 方法参数必须与类的键参数具有完全相同的名称和类型。 密钥参数由 <xref:System.Management.Instrumentation.ManagementKeyAttribute> 属性标识。
  
 方法必须将值分配给类的所有检测属性。  
  
 当 WMI 提供程序扩展基础结构需要此绑定功能时，它会首先搜索具有此属性的构造函数。 如果未找到任何内容，则它会搜索返回 WMI 类类型的静态方法。  
  
 此特性的目标必须是方法或静态方法。  
  
   
  
## Examples  
 下面的示例演示如何使用 ManagementBind 特性标记类的构造函数。  
  
```csharp  
// Use the ManagementBind attribute to specify that this constructor  
// is used to attach a class instance to a specific WMI  
// instance. The constructor should set the values of the  
// key properties of the WMI instance.  
[ManagementBind]  
public ClassConstructor(int Id)  
{  
     // Set this class instance to a specific instance  
     // by assigning property values and   
     // giving unique values to the key properties.   
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementBindAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementBindAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Management.Instrumentation.ManagementBindAttribute" /> 类的新实例。 这是无参数构造函数。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementBindAttribute.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Property Schema As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Schema { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schema : Type with get, set" Usage="System.Management.Instrumentation.ManagementBindAttribute.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值定义用 ManagementEnumerator 特性标记的方法将输出的输出类型。</summary>
        <value>一个 <see cref="T:System.Type" /> 值，指示用 <see cref="T:System.Management.Instrumentation.ManagementBindAttribute" /> 特性标记的方法将输出的输出类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果返回的类型为 <xref:System.Object?displayProperty=nameWithType> ，则输出应视为类型的值 <xref:System.Object?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
