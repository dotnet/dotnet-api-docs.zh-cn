<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0676258be331fbaf14d2c3a6bc0712236f635f9a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89819872" /></Metadata><TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Assembly)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Assembly)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>WmiConfiguration 属性指示程序集包含通过使用 WMI.NET 提供程序扩展模型实现 WMI 提供程序的代码。 该属性接受建立所实现的 WMI 提供程序的高级配置的参数。  
  
注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。 [MI API](https://docs.microsoft.com/previous-versions/windows/desktop/wmi_v2/windows-management-infrastructure) 应用于所有新的开发。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表列出了此特性接受的参数，以及允许您控制的提供程序配置的各个方面。  
  
|参数|Fsocs|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|提供程序用于公开类的命名空间。|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|-安全 (DACL) 使用的命名空间。|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|-提供程序将使用的承载模型。|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|-提供程序的模拟模式。|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|提供程序所属的宿主组。 此参数仅适用于进程内提供程序。|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|WMI 提供程序上的安全 (DACL) 。|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">提供程序将用于公开类的 WMI 命名空间。 例如“root\MyProviderNamespace”。</param>
        <summary>初始化 <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" /> 类的新实例，该类指定 WMI 提供程序用于公开类的 WMI 命名空间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI 提供程序必须在命名空间中公开其类。 这就是构造函数需要将作用域作为参数的原因。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WMI 提供程序的承载组。</summary>
        <value>一个 <see cref="T:System.String" /> 值，指示 WMI 提供程序的承载组。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 宿主组仅适用于在进程内托管的提供程序。 分离的提供程序将忽略该值。  
  
 宿主组是一组进程内提供程序，它们均分配有相同的主机组名称。 宿主组名称是一个字符串，你可以定义该字符串来对提供程序进行逻辑分组。 在同一安全上下文中运行的同一托管组中的所有进程内提供程序都托管在 Wmiprvse.exe 进程的单个实例中。 因此，共享相同托管组和安全上下文的提供程序共享同一个服务主机进程。  
  
   
  
## Examples  
 在下面的示例中， <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 用来指示它所包含的程序集实现在 networkservice 安全上下文下运行的进程内提供程序，并在该 Wmiprvse.exe 进程的实例中承载，该进程也托管在 networkservice 安全上下文中运行的同一主机组中的任何其他进程内提供程序。  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WMI 提供程序的承载模型。</summary>
        <value>一个 <see cref="T:System.Management.Instrumentation.ManagementHostingModel" /> 值，指示 WMI 提供程序的承载模型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI 提供程序可以由应用程序或 WMI 服务托管。 应用程序托管的 WMI 提供程序称为分离的提供程序。 WMI 服务托管的提供程序称为进程内提供程序。 宿主模型值确定宿主模型，在进程内提供程序的情况下，该帐户将 (安全上下文) 提供程序在其下运行。 有关 HostingModel 的可能值的更多详细信息，请参阅 <xref:System.Management.Instrumentation.ManagementHostingModel> 。  
  
 若要了解有关托管模型的详细信息，请参阅 MSDN 上的 WMI SDK 中的 [提供程序托管和安全](https://go.microsoft.com/fwlink/?LinkId=100075) 主题。  
  
   
  
## Examples  
 在下面的示例中， <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 用于指示包含它的程序集实现通过 root\NVPair 命名空间公开的提供程序。 因为托管模型不是 <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> ，所以它是一个进程内提供程序。 值 <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> 指示进程内提供程序在 NetworkService 安全上下文下运行。  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 在下一个示例中， <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 用来指示它所包含的程序集实现通过 root\NVPair 命名空间公开的提供程序。 值 <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> 指示它是一个分离的提供程序。  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，指定 WMI 提供程序是否可以模拟其调用方。 如果该值为 false，则说明提供程序无法模拟；如果该值为 true，则说明提供程序可以模拟。</summary>
        <value>一个布尔值，指示提供程序是否可以模拟其调用方。 如果该值为 false，则说明提供程序无法模拟；如果该值为 true，则说明提供程序可以模拟。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅上 MSDN library 中的 "提供程序托管和安全" 主题 [http://www.msdn.com](https://www.msdn.com/) 。  
  
   
  
## Examples  
 下面的示例演示如何使用 IdentifyLevel 参数指示提供程序可以模拟其调用方。  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个安全描述符定义语言 (SDDL) 字符串，它指定提供程序用于公开管理对象的命名空间的安全描述符。</summary>
        <value>一个 SDDL 字符串，表示提供程序用于公开管理对象的命名空间的安全描述符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关如何以 SDDL 格式表示安全描述符的详细信息，请参阅 MSDN 库中的 [安全描述符字符串格式](https://go.microsoft.com/fwlink/?LinkId=100763) 主题。  
  
   
  
## Examples  
 下面的示例演示如何使用 NamespaceSecurity 参数设置根/SDTest 命名空间上的安全描述符，其中在此程序集中实现的提供程序公开 WMI 类。  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WMI 提供程序用于公开类的 WMI 命名空间。</summary>
        <value>一个 <see cref="T:System.String" /> 值，指示 WMI 提供程序用于公开类的命名空间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI 命名空间是 WMI 存储库中的一个类别。 常用的根/cimv2 命名空间包含描述由桌面管理任务组 (DMTF) 协会定义的通用信息模型，版本2的类。 如果在标准 CIM 模型上进行扩展，则只应在该命名空间中公开提供程序。 否则，应创建相应的命名空间，以使用户清楚地了解他们可以在命名空间中找到的 WMI 类的类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WMI 提供程序的安全描述符。 有关详细信息，请参阅 MSDN 联机库中的 "__Win32Provider" 主题中的 SecurityDescriptor 属性信息 [http://www.msdn.com](https://www.msdn.com/) 。</summary>
        <value>一个 <see cref="T:System.String" /> 值，其中包含 WMI 提供程序的安全描述符。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
