<Type Name="ManagementTaskAttribute" FullName="System.Management.Instrumentation.ManagementTaskAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9e812371a42e8db2db1e5a8c5142a5fa427a737" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89920909" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementTaskAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementTaskAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementTaskAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementTaskAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementTaskAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <TypeSignature Language="F#" Value="type ManagementTaskAttribute = class&#xA;    inherit ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="49941-101">ManagementTask 属性指示目标方法实施 WMI 方法。</span><span class="sxs-lookup"><span data-stu-id="49941-101">The ManagementTask attribute indicates that the target method implements a WMI method.</span></span>  
  
<span data-ttu-id="49941-102">注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。</span><span class="sxs-lookup"><span data-stu-id="49941-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span></span> <span data-ttu-id="49941-103">[MI API](https://docs.microsoft.com/previous-versions/windows/desktop/wmi_v2/windows-management-infrastructure) 应用于所有新的开发。</span><span class="sxs-lookup"><span data-stu-id="49941-103">The [MI APIs](https://docs.microsoft.com/previous-versions/windows/desktop/wmi_v2/windows-management-infrastructure) should be used for all new development.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49941-104">默认情况下，WMI 方法的名称将是目标方法的名称。</span><span class="sxs-lookup"><span data-stu-id="49941-104">By default, the WMI method name will be the name of the target method.</span></span> <span data-ttu-id="49941-105">此属性的父类 <xref:System.Management.Instrumentation.ManagementMemberAttribute> 包含一个名称参数。</span><span class="sxs-lookup"><span data-stu-id="49941-105">The parent class of this attribute, <xref:System.Management.Instrumentation.ManagementMemberAttribute>, includes a Name parameter.</span></span> <span data-ttu-id="49941-106">您可以使用该参数更改通过 WMI 公开的方法的名称，而无需更改您的内部方法名称。</span><span class="sxs-lookup"><span data-stu-id="49941-106">You can use that parameter to change the name of the method that is exposed through WMI without changing your internal method name.</span></span>  
  
 <span data-ttu-id="49941-107">方法必须是公共的，并且它可能是静态的。</span><span class="sxs-lookup"><span data-stu-id="49941-107">The method must be public and it may be static.</span></span> <span data-ttu-id="49941-108">它可以包含 [in]、[out]、[in/out]、数组或对象引用参数的任意组合。</span><span class="sxs-lookup"><span data-stu-id="49941-108">It can include any combination of [in], [out], [in/out], array or object reference parameters.</span></span> <span data-ttu-id="49941-109">由于 WMI 施加的限制，数组参数不能是多维或交错的。</span><span class="sxs-lookup"><span data-stu-id="49941-109">Array parameters cannot be multidimensional or jagged because of limitations imposed by WMI.</span></span>  
  
 <span data-ttu-id="49941-110">方法的返回类型可以是 void、标量、string、datetime 或 object。</span><span class="sxs-lookup"><span data-stu-id="49941-110">The return type of the method can be: void, scalar, string, datetime or object.</span></span> <span data-ttu-id="49941-111">它不能是数组。</span><span class="sxs-lookup"><span data-stu-id="49941-111">It cannot be an array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49941-112">下面的示例演示如何使用 ManagementTask 特性标记方法以便向 WMI 公开方法。</span><span class="sxs-lookup"><span data-stu-id="49941-112">The following example shows how to mark a method with the ManagementTask attribute to expose the method to WMI.</span></span> <span data-ttu-id="49941-113">此方法将在 WMI 中显示为 ResetCounters。</span><span class="sxs-lookup"><span data-stu-id="49941-113">The method will show up in WMI as ResetCounters.</span></span>  
  
```csharp  
// Use the ManagementTask attribute to specify that a method  
// is exposed to WMI through this provider. Consumers will be  
// able to execute this method through WMI.  
[ManagementTask]  
public void ResetCounters()  
{  
    counter.Reset();  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementProbeAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementKeyAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementTaskAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementTaskAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49941-114">初始化 <see cref="T:System.Management.Instrumentation.ManagementTaskAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="49941-114">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementTaskAttribute" /> class.</span></span> <span data-ttu-id="49941-115">这是无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="49941-115">This is the parameterless constructor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Property Schema As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Schema { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schema : Type with get, set" Usage="System.Management.Instrumentation.ManagementTaskAttribute.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49941-116">获取或设置一个值，该值定义用 ManagementTask 特性标记的方法将输出的输出类型。</span><span class="sxs-lookup"><span data-stu-id="49941-116">Gets or sets a value that defines the type of output that the method that is marked with the ManagementTask attribute will output.</span></span></summary>
        <value><span data-ttu-id="49941-117">一个 <see cref="T:System.Type" /> 值，指示用 ManagementTask 特性标记的方法将输出的输出类型。</span><span class="sxs-lookup"><span data-stu-id="49941-117">A <see cref="T:System.Type" /> value that indicates the type of output that the method that is marked with the ManagementTask attribute will output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49941-118">如果返回的类型为 <xref:System.Object?displayProperty=nameWithType> ，则输出应视为类型的值 <xref:System.Object?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="49941-118">If the returned type is <xref:System.Object?displayProperty=nameWithType>, then the output should be treated as a value of type <xref:System.Object?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
