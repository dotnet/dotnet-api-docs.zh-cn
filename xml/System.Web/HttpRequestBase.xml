<Type Name="HttpRequestBase" FullName="System.Web.HttpRequestBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0d0a8b99cb138cbe2fab6208b0b4ca6ae454c86d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89800398" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpRequestBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpRequestBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpRequestBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestBase abstract" />
  <TypeSignature Language="F#" Value="type HttpRequestBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Abstractions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Web.Abstractions" FromVersion="4.0.0.0" To="System.Web" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b303-101">用作一些类的基类，这些类使 ASP.NET 可以读取客户端在 Web 请求过程中发送的 HTTP 值。</span><span class="sxs-lookup"><span data-stu-id="2b303-101">Serves as the base class for classes that enable ASP.NET to read the HTTP values sent by a client during a Web request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b303-102"><xref:System.Web.HttpRequestBase>类是一个抽象类，它包含与类相同的成员 <xref:System.Web.HttpRequest> 。</span><span class="sxs-lookup"><span data-stu-id="2b303-102">The <xref:System.Web.HttpRequestBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="2b303-103"><xref:System.Web.HttpRequestBase>利用类，您可以创建类似于类的派生类 <xref:System.Web.HttpRequest> ，但可以自定义该派生类并在 ASP.NET 管道之外工作。</span><span class="sxs-lookup"><span data-stu-id="2b303-103">The <xref:System.Web.HttpRequestBase> class enables you to create derived classes that are like the <xref:System.Web.HttpRequest> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="2b303-104">执行单元测试时，通常使用派生类来实现具有自定义行为的成员，该行为可满足你要测试的方案。</span><span class="sxs-lookup"><span data-stu-id="2b303-104">When you perform unit testing, you typically use a derived class to implement members that have customized behavior that fulfills the scenario that you are testing.</span></span>  
  
 <span data-ttu-id="2b303-105"><xref:System.Web.HttpRequestWrapper> 类是从 <xref:System.Web.HttpRequestBase> 类派生的。</span><span class="sxs-lookup"><span data-stu-id="2b303-105">The <xref:System.Web.HttpRequestWrapper> class derives from the <xref:System.Web.HttpRequestBase> class.</span></span> <span data-ttu-id="2b303-106"><xref:System.Web.HttpRequestWrapper>类用作类的包装 <xref:System.Web.HttpRequest> 。</span><span class="sxs-lookup"><span data-stu-id="2b303-106">The <xref:System.Web.HttpRequestWrapper> class serves as a wrapper for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="2b303-107">在运行时，通常使用类的实例 <xref:System.Web.HttpRequestWrapper> 来调用对象的成员 <xref:System.Web.HttpRequest> 。</span><span class="sxs-lookup"><span data-stu-id="2b303-107">At run time, you typically use an instance of the <xref:System.Web.HttpRequestWrapper> class to invoke members of the <xref:System.Web.HttpRequest> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpRequestBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpRequestBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b303-108">初始化该类供继承的类实例使用。</span><span class="sxs-lookup"><span data-stu-id="2b303-108">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="2b303-109">此构造函数只能由继承的类调用。</span><span class="sxs-lookup"><span data-stu-id="2b303-109">This constructor can only be called by an inherited class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="httpRequestBase.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b303-110">强制地终止基础 TCP 连接，会导致任何显著的 I/O 失败。</span><span class="sxs-lookup"><span data-stu-id="2b303-110">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b303-111">此方法是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="2b303-111">This method is thread-safe.</span></span> <span data-ttu-id="2b303-112">任何线程都可以随时调用它。</span><span class="sxs-lookup"><span data-stu-id="2b303-112">Any thread may call it at any time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public virtual string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequestBase.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-113">在派生类中替代时，获取客户端支持的 MIME 接受类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2b303-113">When overridden in a derived class, gets an array of client-supported MIME accept types.</span></span></summary>
        <value><span data-ttu-id="2b303-114">客户端支持的 MIME 接受类型的数组。</span><span class="sxs-lookup"><span data-stu-id="2b303-114">An array of client-supported MIME accept types.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-115">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-115">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public virtual string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequestBase.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-116">在派生类中替代时，获取用户的匿名标识符(如果存在)。</span><span class="sxs-lookup"><span data-stu-id="2b303-116">When overridden in a derived class, gets the anonymous identifier for the user, if it is available.</span></span></summary>
        <value><span data-ttu-id="2b303-117">当前匿名用户标识符。</span><span class="sxs-lookup"><span data-stu-id="2b303-117">The current anonymous user identifier.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-118">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-118">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public virtual string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequestBase.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-119">在派生类中替代时，获取服务器上的 ASP.NET 应用程序的虚拟根路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-119">When overridden in a derived class, gets the virtual root path of the ASP.NET application on the server.</span></span></summary>
        <value><span data-ttu-id="2b303-120">当前应用程序的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-120">The virtual path of the current application.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-121">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-121">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public virtual string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequestBase.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-122">在派生类中替代时，获取应用程序根目录的虚拟路径，并通过对应用程序根目录使用波形符 (\~) 表示法（例如，以“\~/page.aspx”的形式）使该路径成为相对路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-122">When overridden in a derived class, gets the virtual path of the application root and makes it relative by using the tilde (\~) notation for the application root (as in "\~/page.aspx").</span></span></summary>
        <value><span data-ttu-id="2b303-123">当前请求的应用程序根目录的虚拟路径(添加了波形符运算符 (~))。</span><span class="sxs-lookup"><span data-stu-id="2b303-123">The virtual path of the application root for the current request with the tilde operator (~) added.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-124">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-124">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public virtual byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="abstract member BinaryRead : int -&gt; byte[]&#xA;override this.BinaryRead : int -&gt; byte[]" Usage="httpRequestBase.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="2b303-125">要读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="2b303-125">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="2b303-126">在派生类中替代时，对当前输入流执行指定字节数的二进制读取。</span><span class="sxs-lookup"><span data-stu-id="2b303-126">When overridden in a derived class, performs a binary read of a specified number of bytes from the current input stream.</span></span></summary>
        <returns><span data-ttu-id="2b303-127">包含二进制数据的数组。</span><span class="sxs-lookup"><span data-stu-id="2b303-127">An array that contains the binary data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-128">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-128">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpBrowserCapabilitiesBase Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilitiesBase Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Browser As HttpBrowserCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpBrowserCapabilitiesBase ^ Browser { System::Web::HttpBrowserCapabilitiesBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilitiesBase" Usage="System.Web.HttpRequestBase.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-129">在派生类中替代时，获取有关请求客户端的浏览器功能的信息。</span><span class="sxs-lookup"><span data-stu-id="2b303-129">When overridden in a derived class, gets information about the requesting client's browser capabilities.</span></span></summary>
        <value><span data-ttu-id="2b303-130">表示客户端浏览器功能的对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-130">An object that represents the capabilities of the client browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-131">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-131">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequestBase.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-132">在派生类中替代时，获取当前请求的客户端安全证书。</span><span class="sxs-lookup"><span data-stu-id="2b303-132">When overridden in a derived class, gets the current request's client security certificate.</span></span></summary>
        <value><span data-ttu-id="2b303-133">客户端的安全证书。</span><span class="sxs-lookup"><span data-stu-id="2b303-133">The client's security certificate.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-134">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-134">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequestBase.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-135">在派生类中替代时，获取或设置客户端提供的数据的字符集。</span><span class="sxs-lookup"><span data-stu-id="2b303-135">When overridden in a derived class, gets or sets the character set of the data that is provided by the client.</span></span></summary>
        <value><span data-ttu-id="2b303-136">客户端的字符集。</span><span class="sxs-lookup"><span data-stu-id="2b303-136">The client's character set.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-137">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-137">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequestBase.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-138">在派生类中替代时，获取客户端发送的内容的长度(以字节为单位)。</span><span class="sxs-lookup"><span data-stu-id="2b303-138">When overridden in a derived class, gets the length, in bytes, of content that was sent by the client.</span></span></summary>
        <value><span data-ttu-id="2b303-139">客户端发送的内容的长度(以字节为单位)。</span><span class="sxs-lookup"><span data-stu-id="2b303-139">The length, in bytes, of content that was sent by the client.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-140">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-140">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequestBase.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-141">在派生类中替代时，获取或设置请求的 MIME 内容类型。</span><span class="sxs-lookup"><span data-stu-id="2b303-141">When overridden in a derived class, gets or sets the MIME content type of the request.</span></span></summary>
        <value><span data-ttu-id="2b303-142">请求的 MIME 内容类型(如 "text/html")。</span><span class="sxs-lookup"><span data-stu-id="2b303-142">The MIME content type of the request, such as "text/html".</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-143">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-143">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequestBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-144">在派生类中替代时，获取客户端发送的 cookie 的集合。</span><span class="sxs-lookup"><span data-stu-id="2b303-144">When overridden in a derived class, gets the collection of cookies that were sent by the client.</span></span></summary>
        <value><span data-ttu-id="2b303-145">客户端的 cookie。</span><span class="sxs-lookup"><span data-stu-id="2b303-145">The client's cookies.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-146">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-146">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public virtual string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequestBase.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-147">在派生类中替代时，获取当前请求的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-147">When overridden in a derived class, gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="2b303-148">当前正在执行的页处理程序的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-148">The virtual path of the page handler that is currently executing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b303-149"><xref:System.Web.HttpRequestBase.CurrentExecutionFilePath%2A>属性返回当前正在执行的页处理程序的文件路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-149">The <xref:System.Web.HttpRequestBase.CurrentExecutionFilePath%2A> property returns the file path of the currently executing page handler.</span></span>  
  
 <span data-ttu-id="2b303-150">使用方法或方法重定向请求时 <xref:System.Web.HttpServerUtility.Execute%2A?displayProperty=nameWithType> <xref:System.Web.HttpServerUtility.Transfer%2A?displayProperty=nameWithType> ， <xref:System.Web.HttpRequestBase.CurrentExecutionFilePath%2A> 属性将返回要重定向到 (子页) 的页面的路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-150">When you redirect a request using either the <xref:System.Web.HttpServerUtility.Execute%2A?displayProperty=nameWithType> method or the <xref:System.Web.HttpServerUtility.Transfer%2A?displayProperty=nameWithType> method, the <xref:System.Web.HttpRequestBase.CurrentExecutionFilePath%2A> property returns the path of the page that you are redirecting to (the child page).</span></span> <span data-ttu-id="2b303-151">但是，当客户端重定向到另一页时， <xref:System.Web.HttpRequestBase.FilePath%2A> 属性将返回原始页的路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-151">However, when the client is redirected to another page, the <xref:System.Web.HttpRequestBase.FilePath%2A> property returns the path to the original page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-152">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-152">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public virtual string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequestBase.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-153">在派生类中实现时，获取在 <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> 属性中指定的文件名扩展名。</span><span class="sxs-lookup"><span data-stu-id="2b303-153">When implemented in a derived class, gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></summary>
        <value><span data-ttu-id="2b303-154"><see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> 属性中指定的文件名的扩展名。</span><span class="sxs-lookup"><span data-stu-id="2b303-154">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public virtual string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequestBase.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-155">在派生类中替代时，获取当前请求的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-155">When overridden in a derived class, gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="2b303-156">当前请求的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-156">The virtual path of the current request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-157">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-157">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpFileCollectionBase Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollectionBase Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Files" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Files As HttpFileCollectionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpFileCollectionBase ^ Files { System::Web::HttpFileCollectionBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollectionBase" Usage="System.Web.HttpRequestBase.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollectionBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-158">在派生类中替代时，获取客户端上载的文件的集合(多部分 MIME 格式)。</span><span class="sxs-lookup"><span data-stu-id="2b303-158">When overridden in a derived class, gets the collection of files that were uploaded by the client, in multipart MIME format.</span></span></summary>
        <value><span data-ttu-id="2b303-159">客户端上载的文件。</span><span class="sxs-lookup"><span data-stu-id="2b303-159">The files that were uploaded by the client.</span></span> <span data-ttu-id="2b303-160"><see cref="T:System.Web.HttpFileCollection" /> 对象中的项的类型为 <see cref="T:System.Web.HttpPostedFile" />。</span><span class="sxs-lookup"><span data-stu-id="2b303-160">The items in the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-161">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-161">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequestBase.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-162">在派生类中替代时，获取或设置要在读取当前输入流时使用的筛选器。</span><span class="sxs-lookup"><span data-stu-id="2b303-162">When overridden in a derived class, gets or sets the filter to use when the current input stream is being read.</span></span></summary>
        <value><span data-ttu-id="2b303-163">要用作筛选器的对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-163">An object to use as the filter.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-164">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-164">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Form" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequestBase.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-165">在派生类中替代时，获取客户端发送的窗体变量的集合。</span><span class="sxs-lookup"><span data-stu-id="2b303-165">When overridden in a derived class, gets the collection of form variables that were sent by the client.</span></span></summary>
        <value><span data-ttu-id="2b303-166">窗体变量。</span><span class="sxs-lookup"><span data-stu-id="2b303-166">The form variables.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-167">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-167">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="abstract member GetBufferedInputStream : unit -&gt; System.IO.Stream&#xA;override this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequestBase.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b303-168">在派生类中实现时，获取一个 <see cref="T:System.IO.Stream" /> 对象，它可用于读取传入 HTTP 实体主体。</span><span class="sxs-lookup"><span data-stu-id="2b303-168">When implemented in a derived class, gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="2b303-169">可用于读取传入的 HTTP 实体主体的 <see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-169">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span> <span data-ttu-id="2b303-170">由于保留了此信息，如 ASP.NET Web 窗体页面（.aspx 文件）这样的下游代码将成功运行。</span><span class="sxs-lookup"><span data-stu-id="2b303-170">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="2b303-171">这不同于使用 <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> 方法的情况。</span><span class="sxs-lookup"><span data-stu-id="2b303-171">This is not the case with the <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b303-172">在派生类中实现时，获取一个 <see cref="T:System.IO.Stream" /> 对象，它可用于读取传入 HTTP 实体主体。</span><span class="sxs-lookup"><span data-stu-id="2b303-172">When implemented in a derived class, gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="abstract member GetBufferlessInputStream : unit -&gt; System.IO.Stream&#xA;override this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequestBase.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b303-173">在派生类中实现时，获取可用于读取传入 HTTP 实体主体的 <see cref="T:System.IO.Stream" /> 对象，从而可选择性地禁用在 <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> 属性中设置的请求长度限制。</span><span class="sxs-lookup"><span data-stu-id="2b303-173">When implemented in a derived class, gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span></span></summary>
        <returns><span data-ttu-id="2b303-174">可用于读取传入的 HTTP 实体主体的 <see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-174">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="abstract member GetBufferlessInputStream : bool -&gt; System.IO.Stream&#xA;override this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequestBase.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength"><span data-ttu-id="2b303-175">若要禁用请求长度限制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b303-175"><see langword="true" /> to disable the request length limit; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b303-176">在派生类中实现时，获取可用于读取传入 HTTP 实体主体的 <see cref="T:System.IO.Stream" /> 对象，从而可选择性地禁用在 <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> 属性中设置的请求长度限制。</span><span class="sxs-lookup"><span data-stu-id="2b303-176">When implemented in a derived class, gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span></span></summary>
        <returns><span data-ttu-id="2b303-177">可用于读取传入的 HTTP 实体主体的 <see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-177">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequestBase.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-178">在派生类中替代时，获取客户端发送的 HTTP 标头的集合。</span><span class="sxs-lookup"><span data-stu-id="2b303-178">When overridden in a derived class, gets the collection of HTTP headers that were sent by the client.</span></span></summary>
        <value><span data-ttu-id="2b303-179">请求标头。</span><span class="sxs-lookup"><span data-stu-id="2b303-179">The request headers.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-180">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-180">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequestBase.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-181">在派生类中替代时，获取当前 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 实例的 <see cref="T:System.Web.HttpWorkerRequest" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-181">When overridden in a derived class, gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></summary>
        <value><span data-ttu-id="2b303-182">当前 <see cref="T:System.Web.HttpWorkerRequest" /> 实例的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-182">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-183">当前的 <see cref="T:System.Web.HttpWorkerRequest" /> 对象不是 <see langword="System.Web.Hosting.IIS7WorkerRequest" /> 对象或 <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-183">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public virtual string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequestBase.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-184">在派生类中替代时，获取客户端使用的 HTTP 数据传输方法(如 <see langword="GET" />、<see langword="POST" /> 或 <see langword="HEAD" />)。</span><span class="sxs-lookup"><span data-stu-id="2b303-184">When overridden in a derived class, gets the HTTP data-transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) that was used by the client.</span></span></summary>
        <value><span data-ttu-id="2b303-185">客户端使用的 HTTP 数据传输方法。</span><span class="sxs-lookup"><span data-stu-id="2b303-185">The HTTP data-transfer method that was used by the client.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-186">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-186">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequestBase.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-187">在派生类中替代时，获取传入的 HTTP 实体主体的内容。</span><span class="sxs-lookup"><span data-stu-id="2b303-187">When overridden in a derived class, gets the contents of the incoming HTTP entity body.</span></span></summary>
        <value><span data-ttu-id="2b303-188">传入的 HTTP 实体主体的内容。</span><span class="sxs-lookup"><span data-stu-id="2b303-188">The contents of the incoming HTTP entity body.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-189">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-189">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b303-190">在派生类中实现时，为用于将 HTTP 请求实体主体插入内存的 IIS 方法提供托管包装。</span><span class="sxs-lookup"><span data-stu-id="2b303-190">When implemented in a derived class, provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public virtual void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="abstract member InsertEntityBody : unit -&gt; unit&#xA;override this.InsertEntityBody : unit -&gt; unit" Usage="httpRequestBase.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b303-191">在派生类中实现时，向 IIS 提供 HTTP 请求实体主体的副本。</span><span class="sxs-lookup"><span data-stu-id="2b303-191">When implemented in a derived class, provides a copy of the HTTP request entity body to IIS.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public virtual void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member InsertEntityBody : byte[] * int * int -&gt; unit&#xA;override this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequestBase.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2b303-192">一个包含请求实体数据的数组。</span><span class="sxs-lookup"><span data-stu-id="2b303-192">An array that contains the request entity data.</span></span></param>
        <param name="offset"><span data-ttu-id="2b303-193"><paramref name="buffer" /> 中开始存储请求实体数据的位置，该位置从零开始计数。</span><span class="sxs-lookup"><span data-stu-id="2b303-193">The zero-based position in <paramref name="buffer" /> at which to begin storing the request entity data.</span></span></param>
        <param name="count"><span data-ttu-id="2b303-194">要读取到 <paramref name="buffer" /> 数组中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2b303-194">The number of bytes to read into the <paramref name="buffer" /> array.</span></span></param>
        <summary><span data-ttu-id="2b303-195">在派生类中实现时，向 IIS 提供 HTTP 请求实体主体的副本以及有关请求实体对象的信息。</span><span class="sxs-lookup"><span data-stu-id="2b303-195">When implemented in a derived class, provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequestBase.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-196">在派生类中替代时，获取指示请求是否已经过身份验证的值。</span><span class="sxs-lookup"><span data-stu-id="2b303-196">When overridden in a derived class, gets a value that indicates whether the request has been authenticated.</span></span></summary>
        <value><span data-ttu-id="2b303-197">如果请求已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b303-197"><see langword="true" /> if the request has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-198">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-198">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public virtual bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequestBase.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-199">在派生类中替代时，获取指示请求是否来自本地计算机的值。</span><span class="sxs-lookup"><span data-stu-id="2b303-199">When overridden in a derived class, gets a value that indicates whether the request is from the local computer.</span></span></summary>
        <value><span data-ttu-id="2b303-200">如果请求来自本地计算机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b303-200"><see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-201">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-201">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public virtual bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequestBase.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-202">在派生类中替代时，获取指示 HTTP 连接是否使用安全套接字(HTTPS 协议)的值。</span><span class="sxs-lookup"><span data-stu-id="2b303-202">When overridden in a derived class, gets a value that indicates whether the HTTP connection uses secure sockets (HTTPS protocol).</span></span></summary>
        <value><span data-ttu-id="2b303-203">如果连接为使用 HTTPS 协议的 SSL 连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b303-203"><see langword="true" /> if the connection is an SSL connection that uses HTTPS protocol; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-204">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-204">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequestBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2b303-205">要获取的集合成员的名称。</span><span class="sxs-lookup"><span data-stu-id="2b303-205">The name of the collection member to get.</span></span></param>
        <summary><span data-ttu-id="2b303-206">在派生类中替代时，从 <see cref="P:System.Web.HttpRequestBase.Cookies" />、<see cref="P:System.Web.HttpRequestBase.Form" />、<see cref="P:System.Web.HttpRequestBase.QueryString" /> 或 <see cref="P:System.Web.HttpRequestBase.ServerVariables" /> 集合获取指定的对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-206">When overridden in a derived class, gets the specified object from the <see cref="P:System.Web.HttpRequestBase.Cookies" />, <see cref="P:System.Web.HttpRequestBase.Form" />, <see cref="P:System.Web.HttpRequestBase.QueryString" />, or <see cref="P:System.Web.HttpRequestBase.ServerVariables" /> collections.</span></span></summary>
        <value><span data-ttu-id="2b303-207">由 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 指定的 <see cref="P:System.Web.HttpRequestBase.Form" />、<see cref="P:System.Web.HttpRequestBase.Cookies" />、<see cref="P:System.Web.HttpRequestBase.ServerVariables" /> 或 <paramref name="key" /> 集合成员。</span><span class="sxs-lookup"><span data-stu-id="2b303-207">The <see cref="P:System.Web.HttpRequestBase.QueryString" />, <see cref="P:System.Web.HttpRequestBase.Form" />, <see cref="P:System.Web.HttpRequestBase.Cookies" />, or <see cref="P:System.Web.HttpRequestBase.ServerVariables" /> collection member that is specified by <paramref name="key" />.</span></span> <span data-ttu-id="2b303-208">如果未找到指定的 <paramref name="key" /> 值，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b303-208">If the specified <paramref name="key" /> value is not found, <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-209">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-209">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequestBase.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-210">在派生类中重写时，获取当前用户的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="2b303-210">When overridden in a derived class, gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span></span></summary>
        <value><span data-ttu-id="2b303-211">当前用户的标识。</span><span class="sxs-lookup"><span data-stu-id="2b303-211">The identity for the current user.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-212">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-212">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public virtual int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="abstract member MapImageCoordinates : string -&gt; int[]&#xA;override this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequestBase.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="2b303-213">图像映射的名称。</span><span class="sxs-lookup"><span data-stu-id="2b303-213">The name of the image map.</span></span></param>
        <summary><span data-ttu-id="2b303-214">在派生类中替代时，将传入的图像字段窗体参数映射到合适的 x 坐标和 y 坐标值。</span><span class="sxs-lookup"><span data-stu-id="2b303-214">When overridden in a derived class, maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span></span></summary>
        <returns><span data-ttu-id="2b303-215">二维整数数组。</span><span class="sxs-lookup"><span data-stu-id="2b303-215">A two-dimensional array of integers.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-216">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-216">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b303-217">在派生类中替代时，将请求的 URL 中的虚拟路径映射到服务器上的物理路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-217">When overridden in a derived class, maps the virtual path in the requested URL to a physical path on the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member MapPath : string -&gt; string&#xA;override this.MapPath : string -&gt; string" Usage="httpRequestBase.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="2b303-218">要映射到物理路径的虚拟路径(绝对路径或相对路径)。</span><span class="sxs-lookup"><span data-stu-id="2b303-218">The virtual path (absolute or relative) to map to a physical path.</span></span></param>
        <summary><span data-ttu-id="2b303-219">在派生类中替代时，将指定的虚拟路径映射到服务器上的物理路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-219">When overridden in a derived class, maps the specified virtual path to a physical path on the server.</span></span></summary>
        <returns><span data-ttu-id="2b303-220">由 <paramref name="virtualPath" /> 指定的服务器上的物理路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-220">The physical path on the server that is specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-221">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-221">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="abstract member MapPath : string * string * bool -&gt; string&#xA;override this.MapPath : string * string * bool -&gt; string" Usage="httpRequestBase.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="2b303-222">要映射到物理路径的虚拟路径(绝对路径或相对路径)。</span><span class="sxs-lookup"><span data-stu-id="2b303-222">The virtual path (absolute or relative) to map to a physical path.</span></span></param>
        <param name="baseVirtualDir"><span data-ttu-id="2b303-223">用于相对解析的虚拟基目录路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-223">The virtual base directory path that is used for relative resolution.</span></span></param>
        <param name="allowCrossAppMapping"><span data-ttu-id="2b303-224">如果为 <see langword="true" />，则指示 <paramref name="virtualPath" /> 可以属于另一个应用程序；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b303-224"><see langword="true" /> to indicate that <paramref name="virtualPath" /> can belong to another application; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b303-225">在派生类中替代时，将指定的虚拟路径映射到服务器上的物理路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-225">When overridden in a derived class, maps the specified virtual path to a physical path on the server.</span></span></summary>
        <returns><span data-ttu-id="2b303-226">服务器上的物理路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-226">The physical path on the server.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-227">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-227">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public virtual double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="abstract member MapRawImageCoordinates : string -&gt; double[]&#xA;override this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequestBase.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="2b303-228">图像字段的名称。</span><span class="sxs-lookup"><span data-stu-id="2b303-228">The name of the image field.</span></span></param>
        <summary><span data-ttu-id="2b303-229">将传入图像字段窗体参数映射为适当的 x 和 y 坐标值。</span><span class="sxs-lookup"><span data-stu-id="2b303-229">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span></span></summary>
        <returns><span data-ttu-id="2b303-230">x 和 y 坐标值。</span><span class="sxs-lookup"><span data-stu-id="2b303-230">The x and y coordinate values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Params" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequestBase.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-231">在派生类中替代时，获取 <see cref="P:System.Web.HttpRequest.QueryString" />、<see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.ServerVariables" /> 和 <see cref="P:System.Web.HttpRequest.Cookies" /> 项的组合集合。</span><span class="sxs-lookup"><span data-stu-id="2b303-231">When overridden in a derived class, gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.ServerVariables" />, and <see cref="P:System.Web.HttpRequest.Cookies" /> items.</span></span></summary>
        <value><span data-ttu-id="2b303-232">组合值的集合。</span><span class="sxs-lookup"><span data-stu-id="2b303-232">The collection of combined values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-233">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-233">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequestBase.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-234">在派生类中替代时，获取当前请求的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-234">When overridden in a derived class, gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="2b303-235">当前请求的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-235">The virtual path of the current request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-236">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-236">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public virtual string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequestBase.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-237">在派生类中替代时，获取具有 URL 扩展名的资源的附加路径信息。</span><span class="sxs-lookup"><span data-stu-id="2b303-237">When overridden in a derived class, gets additional path information for a resource that has a URL extension.</span></span></summary>
        <value><span data-ttu-id="2b303-238">资源的附加路径信息。</span><span class="sxs-lookup"><span data-stu-id="2b303-238">The additional path information for the resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b303-239">对于 URL `http://www.contoso.com/virdir/page.html/tail` ， <xref:System.Web.HttpRequestBase.PathInfo%2A> 值为/tail。</span><span class="sxs-lookup"><span data-stu-id="2b303-239">For the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequestBase.PathInfo%2A> value is /tail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-240">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-240">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public virtual string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequestBase.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-241">在派生类中替代时，获取当前应用程序的根目录的物理文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-241">When overridden in a derived class, gets the physical file-system path of the current application's root directory.</span></span></summary>
        <value><span data-ttu-id="2b303-242">当前应用程序的根目录的文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-242">The file-system path of the current application's root directory.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-243">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-243">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public virtual string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequestBase.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-244">在派生类中替代时，获取请求的资源的物理文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-244">When overridden in a derived class, gets the physical file-system path of the requested resource.</span></span></summary>
        <value><span data-ttu-id="2b303-245">请求的资源的文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-245">The file-system path of the requested resource.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-246">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-246">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequestBase.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-247">在派生类中替代时，获取 HTTP 查询字符串变量的集合。</span><span class="sxs-lookup"><span data-stu-id="2b303-247">When overridden in a derived class, gets the collection of HTTP query-string variables.</span></span></summary>
        <value><span data-ttu-id="2b303-248">当前请求的 URL 中由客户端发送的查询字符串变量。</span><span class="sxs-lookup"><span data-stu-id="2b303-248">The query-string variables that were sent by the client in the URL of the current request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-249">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-249">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public virtual string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequestBase.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-250">在派生类中替代时，获取当前请求的完整 URL。</span><span class="sxs-lookup"><span data-stu-id="2b303-250">When overridden in a derived class, gets the complete URL of the current request.</span></span></summary>
        <value><span data-ttu-id="2b303-251">当前请求的完整 URL。</span><span class="sxs-lookup"><span data-stu-id="2b303-251">The complete URL of the current request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-252">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-252">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequestBase.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-253">在派生类中实现时，获取一个值，该值指示是否已读取请求实体主体，若已读取，是以何方式读取。</span><span class="sxs-lookup"><span data-stu-id="2b303-253">When implemented in a derived class, gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span></span></summary>
        <value><span data-ttu-id="2b303-254">该值指示如何读取请求实体主体，或指示其尚未被读取。</span><span class="sxs-lookup"><span data-stu-id="2b303-254">The value that indicates how the request entity body was read, or that it has not yet been read.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public virtual System.Web.Routing.RequestContext RequestContext { get; }" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestContext As RequestContext" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); };" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext" Usage="System.Web.HttpRequestBase.RequestContext" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual System.Web.Routing.RequestContext RequestContext { get; set; }" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequestContext As RequestContext" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequestBase.RequestContext" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-255">在派生类中替代时，获取当前请求的 <see cref="T:System.Web.Routing.RequestContext" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2b303-255">When overridden in a derived class, gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span></summary>
        <value><span data-ttu-id="2b303-256">当前请求的 <see cref="T:System.Web.Routing.RequestContext" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2b303-256">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span> <span data-ttu-id="2b303-257">对于非路由请求，返回的 <see cref="T:System.Web.Routing.RequestContext" /> 对象为空。</span><span class="sxs-lookup"><span data-stu-id="2b303-257">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b303-258">此属性为当前请求提供对对象的访问 <xref:System.Web.Routing.RouteData> 。</span><span class="sxs-lookup"><span data-stu-id="2b303-258">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-259">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-259">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public virtual string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequestBase.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-260">在派生类中替代时，获取或设置客户端使用的 HTTP 数据传输方法(<see langword="GET" /> 或 <see langword="POST" />)。</span><span class="sxs-lookup"><span data-stu-id="2b303-260">When overridden in a derived class, gets or sets the HTTP data-transfer method (<see langword="GET" /> or <see langword="POST" />) that was used by the client.</span></span></summary>
        <value><span data-ttu-id="2b303-261">客户端使用的 HTTP 数据传输方法类型。</span><span class="sxs-lookup"><span data-stu-id="2b303-261">The HTTP data-transfer method type that was used by the client.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-262">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-262">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public virtual void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="abstract member SaveAs : string * bool -&gt; unit&#xA;override this.SaveAs : string * bool -&gt; unit" Usage="httpRequestBase.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="2b303-263">物理驱动器路径。</span><span class="sxs-lookup"><span data-stu-id="2b303-263">The physical drive path.</span></span></param>
        <param name="includeHeaders"><span data-ttu-id="2b303-264">指定是否将 HTTP 标头保存到磁盘的值。</span><span class="sxs-lookup"><span data-stu-id="2b303-264">A value that specifies whether to save HTTP headers to disk.</span></span></param>
        <summary><span data-ttu-id="2b303-265">在派生类中替代时，将 HTTP 请求保存到磁盘。</span><span class="sxs-lookup"><span data-stu-id="2b303-265">When overridden in a derived class, saves an HTTP request to disk.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-266">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-266">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequestBase.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-267">在派生类中替代时，获取 Web 服务器变量的集合。</span><span class="sxs-lookup"><span data-stu-id="2b303-267">When overridden in a derived class, gets a collection of Web server variables.</span></span></summary>
        <value><span data-ttu-id="2b303-268">服务器变量。</span><span class="sxs-lookup"><span data-stu-id="2b303-268">The server variables.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-269">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-269">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public virtual System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequestBase.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-270">在派生类中实现时，当请求超时时获取去除的 <see cref="T:System.Threading.CancellationToken" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-270">When implemented in a derived class, gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span></span></summary>
        <value><span data-ttu-id="2b303-271">取消标记。</span><span class="sxs-lookup"><span data-stu-id="2b303-271">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b303-272">有关详细信息，请参阅 <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b303-272">For more information, see <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public virtual System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequestBase.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-273">获取或设置此实例的标记绑定信息。</span><span class="sxs-lookup"><span data-stu-id="2b303-273">Gets or sets the token binding information for this instance.</span></span></summary>
        <value><span data-ttu-id="2b303-274">此实例的标记绑定信息。</span><span class="sxs-lookup"><span data-stu-id="2b303-274">The token binding information for this instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public virtual int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequestBase.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-275">在派生类中替代时，获取当前输入流中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2b303-275">When overridden in a derived class, gets the number of bytes in the current input stream.</span></span></summary>
        <value><span data-ttu-id="2b303-276">输入流中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2b303-276">The number of bytes in the input stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-277">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-277">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Web.UnvalidatedRequestValuesBase Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValuesBase Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Unvalidated As UnvalidatedRequestValuesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UnvalidatedRequestValuesBase ^ Unvalidated { System::Web::UnvalidatedRequestValuesBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValuesBase" Usage="System.Web.HttpRequestBase.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValuesBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-278">在派生类中实现时，提供对 HTTP 请求值的访问权(在不触发请求验证的情况下)。</span><span class="sxs-lookup"><span data-stu-id="2b303-278">When implemented in a derived class, provides access to HTTP request values without triggering request validation.</span></span></summary>
        <value><span data-ttu-id="2b303-279">未经验证的请求值。</span><span class="sxs-lookup"><span data-stu-id="2b303-279">Unvalidated request values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b303-280">有关请求验证的详细信息，请参阅 <xref:System.Web.UnvalidatedRequestValues> 。</span><span class="sxs-lookup"><span data-stu-id="2b303-280">For more information about request validation, see <xref:System.Web.UnvalidatedRequestValues>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2b303-281">如果使用此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="2b303-281">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public virtual Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Url" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequestBase.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-282">在派生类中替代时，获取有关当前请求的 URL 的信息。</span><span class="sxs-lookup"><span data-stu-id="2b303-282">When overridden in a derived class, gets information about the URL of the current request.</span></span></summary>
        <value><span data-ttu-id="2b303-283">包含有关当前请求的 URL 的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="2b303-283">An object that contains information about the URL of the current request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-284">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-284">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public virtual Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequestBase.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-285">在派生类中替代时，获取有关链接到当前 URL 的客户端请求的 URL 的信息。</span><span class="sxs-lookup"><span data-stu-id="2b303-285">When overridden in a derived class, gets information about the URL of the client request that linked to the current URL.</span></span></summary>
        <value><span data-ttu-id="2b303-286">链接到当前请求的页面的 URL。</span><span class="sxs-lookup"><span data-stu-id="2b303-286">The URL of the page that linked to the current request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-287">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-287">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public virtual string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequestBase.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-288">在派生类中替代时，获取客户端的完整用户代理字符串。</span><span class="sxs-lookup"><span data-stu-id="2b303-288">When overridden in a derived class, gets the complete user-agent string of the client.</span></span></summary>
        <value><span data-ttu-id="2b303-289">客户端的完整用户代理字符串。</span><span class="sxs-lookup"><span data-stu-id="2b303-289">The complete user-agent string of the client.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-290">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-290">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public virtual string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequestBase.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-291">在派生类中替代时，获取客户端的 IP 主机地址。</span><span class="sxs-lookup"><span data-stu-id="2b303-291">When overridden in a derived class, gets the IP host address of the client.</span></span></summary>
        <value><span data-ttu-id="2b303-292">客户端的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="2b303-292">The IP address of the client.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-293">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-293">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public virtual string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequestBase.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-294">在派生类中替代时，获取客户端的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="2b303-294">When overridden in a derived class, gets the DNS name of the client.</span></span></summary>
        <value><span data-ttu-id="2b303-295">客户端的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="2b303-295">The DNS name of the client.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-296">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-296">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public virtual string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequestBase.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b303-297">在派生类中替代时，获取客户端语言首选项的已排序数组。</span><span class="sxs-lookup"><span data-stu-id="2b303-297">When overridden in a derived class, gets a sorted array of client language preferences.</span></span></summary>
        <value><span data-ttu-id="2b303-298">客户端语言首选项的已排序数组，如果数组为空，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b303-298">A sorted array of client language preferences, or <see langword="null" /> if the array is empty.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-299">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-299">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public virtual void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ValidateInput();" />
      <MemberSignature Language="F#" Value="abstract member ValidateInput : unit -&gt; unit&#xA;override this.ValidateInput : unit -&gt; unit" Usage="httpRequestBase.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b303-300">在派生类中替代时，引发对通过 <see cref="P:System.Web.HttpRequestBase.Cookies" />、<see cref="P:System.Web.HttpRequestBase.Form" /> 和 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 属性访问的集合的验证。</span><span class="sxs-lookup"><span data-stu-id="2b303-300">When overridden in a derived class, causes validation to occur for the collections that are accessed through the <see cref="P:System.Web.HttpRequestBase.Cookies" />, <see cref="P:System.Web.HttpRequestBase.Form" />, and <see cref="P:System.Web.HttpRequestBase.QueryString" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b303-301"><xref:System.Web.HttpRequestBase>类使用输入验证标志来确定是否对通过 <xref:System.Web.HttpRequest.Cookies%2A> 、和属性访问的请求集合执行验证 <xref:System.Web.HttpRequest.Form%2A> <xref:System.Web.HttpRequest.QueryString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2b303-301">The <xref:System.Web.HttpRequestBase> class uses input validation flags to determine whether to perform validation on the request collections that are accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="2b303-302"><xref:System.Web.HttpRequestBase.ValidateInput%2A>方法设置这些标志，以便在 `get` <xref:System.Web.HttpRequest.Cookies%2A> 调用、或属性的访问器时 <xref:System.Web.HttpRequest.Form%2A> <xref:System.Web.HttpRequest.QueryString%2A> ，执行输入验证。</span><span class="sxs-lookup"><span data-stu-id="2b303-302">The <xref:System.Web.HttpRequestBase.ValidateInput%2A> method sets these flags so that when the `get` accessors of the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> properties are invoked, input validation is performed.</span></span> <span data-ttu-id="2b303-303">验证的工作原理是，针对可能危险的数据的硬编码列表检查所有输入数据。</span><span class="sxs-lookup"><span data-stu-id="2b303-303">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2b303-304">始终。</span><span class="sxs-lookup"><span data-stu-id="2b303-304">Always.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
