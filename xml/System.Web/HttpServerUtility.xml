<Type Name="HttpServerUtility" FullName="System.Web.HttpServerUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7383a764cbdd7ba2bd6e38f9034fb638366a87bb" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83949222" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpServerUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpServerUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpServerUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpServerUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpServerUtility sealed" />
  <TypeSignature Language="F#" Value="type HttpServerUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e2634-101">提供用于处理 Web 请求的 Helper 方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-101">Provides helper methods for processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-102"><xref:System.Web.HttpServerUtility> 类的方法和属性通过 ASP.NET 提供的内部 <xref:System.Web.HttpContext.Server%2A> 对象公开。</span><span class="sxs-lookup"><span data-stu-id="e2634-102">The methods and properties of the <xref:System.Web.HttpServerUtility> class are exposed through the intrinsic <xref:System.Web.HttpContext.Server%2A> object provided by ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-103">本主题提供了包含源代码的 Visual Studio 网站项目：[下载](https://go.microsoft.com/fwlink/?LinkId=192870)。</span><span class="sxs-lookup"><span data-stu-id="e2634-103">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkId=192870).</span></span>  
  
 <span data-ttu-id="e2634-104">下面的示例演示如何使用 <xref:System.Web.HttpServerUtility.HtmlEncode%2A> 方法和 <xref:System.Web.HttpServerUtility> 类的 <xref:System.Web.HttpServerUtility.UrlEncode%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-104">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="e2634-105"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> 方法可帮助确保任何用户提供的字符串输入都将在浏览器中呈现为静态文本，而不是可执行脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="e2634-105">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements.</span></span> <span data-ttu-id="e2634-106"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 方法将 Url 编码，以便在 HTTP 流中正确传输它们。</span><span class="sxs-lookup"><span data-stu-id="e2634-106">The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpServerUtility1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpServerUtility1/cs/HttpServerUtilityCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpServerUtility1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpServerUtility1/vb/HttpServerUtilityVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpContext" />
  </Docs>
  <Members>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearError();" />
      <MemberSignature Language="F#" Value="member this.ClearError : unit -&gt; unit" Usage="httpServerUtility.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2634-107">清除前一个异常。</span><span class="sxs-lookup"><span data-stu-id="e2634-107">Clears the previous exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2634-108">下面的示例将清除引发的最后一个异常。</span><span class="sxs-lookup"><span data-stu-id="e2634-108">The following example clears the last exception that was thrown.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.GetLastError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2634-109">创建 COM 对象的一个服务器实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-109">Creates a server instance of a COM object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string -&gt; obj" Usage="httpServerUtility.CreateObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID"><span data-ttu-id="e2634-110">要创建其实例的对象的类或类型。</span><span class="sxs-lookup"><span data-stu-id="e2634-110">The class or type of object to create an instance of.</span></span></param>
        <summary><span data-ttu-id="e2634-111">创建 COM 对象的服务器实例，该 COM 对象由对象的程序标识符 (ProgID) 标识。</span><span class="sxs-lookup"><span data-stu-id="e2634-111">Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</span></span></summary>
        <returns><span data-ttu-id="e2634-112">新对象。</span><span class="sxs-lookup"><span data-stu-id="e2634-112">The new object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2634-113">下面的示例通过使用对象的 ProgID 来创建对象。</span><span class="sxs-lookup"><span data-stu-id="e2634-113">The following example creates an object by using the object's ProgID.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-114">无法创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-114">An instance of the object could not be created.</span></span></exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type -&gt; obj" Usage="httpServerUtility.CreateObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e2634-115"><see cref="T:System.Type" /> 表示要创建的对象。</span><span class="sxs-lookup"><span data-stu-id="e2634-115">A <see cref="T:System.Type" /> representing the object to create.</span></span></param>
        <summary><span data-ttu-id="e2634-116">创建由对象类型标识的 COM 对象的一个服务器实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-116">Creates a server instance of a COM object identified by the object's type.</span></span></summary>
        <returns><span data-ttu-id="e2634-117">新对象。</span><span class="sxs-lookup"><span data-stu-id="e2634-117">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectFromClsid">
      <MemberSignature Language="C#" Value="public object CreateObjectFromClsid (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObjectFromClsid(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectFromClsid (clsid As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObjectFromClsid(System::String ^ clsid);" />
      <MemberSignature Language="F#" Value="member this.CreateObjectFromClsid : string -&gt; obj" Usage="httpServerUtility.CreateObjectFromClsid clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid"><span data-ttu-id="e2634-118">要创建其实例的对象的类标识符。</span><span class="sxs-lookup"><span data-stu-id="e2634-118">The class identifier of the object to create an instance of.</span></span></param>
        <summary><span data-ttu-id="e2634-119">创建 COM 对象的服务器实例，该对象由对象的类标识符 (CLSID) 标识。</span><span class="sxs-lookup"><span data-stu-id="e2634-119">Creates a server instance of a COM object identified by the object's class identifier (CLSID).</span></span></summary>
        <returns><span data-ttu-id="e2634-120">新对象。</span><span class="sxs-lookup"><span data-stu-id="e2634-120">The new object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2634-121">下面的示例演示如何使用 <xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A> 方法创建 COM 对象的服务器实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-121">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A> method to create a server instance of a COM object.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-122">无法创建对象的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-122">An instance of the object could not be created.</span></span></exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2634-123">在当前请求的上下文中执行指定资源的处理程序，然后将执行返回给调用它的页。</span><span class="sxs-lookup"><span data-stu-id="e2634-123">Executes the handler for a specified resource in the context of the current request and returns execution to the page that invoked it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Execute : string -&gt; unit" Usage="httpServerUtility.Execute path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-124">要执行的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-124">The URL path to execute.</span></span></param>
        <summary><span data-ttu-id="e2634-125">在当前请求的上下文中执行指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-125">Executes the handler for the specified virtual path in the context of the current request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-126">执行完新页后，<xref:System.Web.HttpServerUtility.Execute%2A> 方法将继续执行原始页。</span><span class="sxs-lookup"><span data-stu-id="e2634-126">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original page after execution of the new page is completed.</span></span> <span data-ttu-id="e2634-127"><xref:System.Web.HttpServerUtility.Transfer%2A> 方法无条件地将执行转移到其他处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-127">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="e2634-128">ASP.NET 不会验证当前用户是否有权查看 <xref:System.Web.HttpServerUtility.Execute%2A> 方法传递的资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-128">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="e2634-129">尽管 ASP.NET 授权和身份验证逻辑在调用原始资源处理程序之前运行，但 ASP.NET 会直接调用 <xref:System.Web.HttpServerUtility.Execute%2A> 方法所指示的处理程序，并且不会重新运行新资源的身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="e2634-129">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="e2634-130">如果应用程序的安全策略要求客户端具有适当的权限来访问资源，则应用程序应强制重新授权或提供自定义的访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="e2634-130">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="e2634-131">可以通过使用 <xref:System.Web.HttpResponse.Redirect%2A> 方法而不是 <xref:System.Web.HttpServerUtility.Execute%2A> 方法来强制重新授权。</span><span class="sxs-lookup"><span data-stu-id="e2634-131">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="e2634-132"><xref:System.Web.HttpResponse.Redirect%2A> 执行客户端重定向，浏览器请求新资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-132"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="e2634-133">由于此重定向是进入系统的新请求，因此会受到 Internet Information Services （IIS）和 ASP.NET 安全策略的所有身份验证和授权逻辑的验证。</span><span class="sxs-lookup"><span data-stu-id="e2634-133">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="e2634-134">可以通过在应用程序调用 <xref:System.Web.HttpServerUtility.Execute%2A> 方法之前，通过并入使用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 方法的自定义授权方法来验证用户是否有权查看资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-134">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-135">下面的示例在当前目录中显示 .aspx 页 "Updateinfo"。</span><span class="sxs-lookup"><span data-stu-id="e2634-135">The following example displays the .aspx page "Updateinfo.aspx" in the current directory.</span></span> <span data-ttu-id="e2634-136">在显示 Updateinfo 页后，程序执行将返回到起始页。</span><span class="sxs-lookup"><span data-stu-id="e2634-136">Program execution returns to the starting page after the Updateinfo.aspx page is displayed.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-137">当前的 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-137">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e2634-138">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-138">-or-</span></span> 
<span data-ttu-id="e2634-139">执行由 <paramref name="path" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e2634-139">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-140"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-140"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e2634-141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-141">-or-</span></span> 
 <span data-ttu-id="e2634-142"><paramref name="path" /> 不是虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-142"><paramref name="path" /> is not a virtual path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * bool -&gt; unit" Usage="httpServerUtility.Execute (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-143">要执行的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-143">The URL path to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="e2634-144">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-144"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="e2634-145">在当前请求的上下文中执行指定虚拟路径的处理器，并指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="e2634-145">Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2634-146">下面的示例演示如何在当前请求中执行 .aspx 页 `Updateinfo.aspx` 并保留 <xref:System.Web.HttpRequest.QueryString%2A> 和 <xref:System.Web.HttpRequest.Form%2A> 集合。</span><span class="sxs-lookup"><span data-stu-id="e2634-146">The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span> <span data-ttu-id="e2634-147">显示 `Updateinfo.aspx` 后，程序执行将返回到起始页。</span><span class="sxs-lookup"><span data-stu-id="e2634-147">Program execution returns to the starting page after `Updateinfo.aspx` is displayed.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute/CS/httpserverutility.execute_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute/VB/httpserverutility.execute_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-148">当前的 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-148">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e2634-149">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-149">-or-</span></span> 
<span data-ttu-id="e2634-150">执行由 <paramref name="path" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e2634-150">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-151"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-151"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e2634-152">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-152">-or-</span></span> 
 <span data-ttu-id="e2634-153"><paramref name="path" /> 不是虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-153"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.Execute (path, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-154">要执行的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-154">The URL path to execute.</span></span></param>
        <param name="writer"><span data-ttu-id="e2634-155">要捕获输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-155">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <summary><span data-ttu-id="e2634-156">在当前请求的上下文中执行指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-156">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="e2634-157"><see cref="T:System.IO.TextWriter" /> 捕获执行的处理程序的输出。</span><span class="sxs-lookup"><span data-stu-id="e2634-157">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-158">完成指定的虚拟路径后，<xref:System.Web.HttpServerUtility.Execute%2A> 方法将继续执行原始请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-158">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the virtual path specified is completed.</span></span> <span data-ttu-id="e2634-159"><xref:System.Web.HttpServerUtility.Transfer%2A> 方法无条件地将执行转移到其他处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-159">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="e2634-160">ASP.NET 不会验证当前用户是否有权查看 <xref:System.Web.HttpServerUtility.Execute%2A> 方法传递的资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-160">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="e2634-161">尽管 ASP.NET 授权和身份验证逻辑在调用原始资源处理程序之前运行，但 ASP.NET 会直接调用 <xref:System.Web.HttpServerUtility.Execute%2A> 方法所指示的处理程序，并且不会重新运行新资源的身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="e2634-161">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="e2634-162">如果应用程序的安全策略要求客户端具有适当的权限来访问资源，则应用程序应强制重新授权或提供自定义的访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="e2634-162">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="e2634-163">可以通过使用 <xref:System.Web.HttpResponse.Redirect%2A> 方法而不是 <xref:System.Web.HttpServerUtility.Execute%2A> 方法来强制重新授权。</span><span class="sxs-lookup"><span data-stu-id="e2634-163">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="e2634-164"><xref:System.Web.HttpResponse.Redirect%2A> 执行客户端重定向，浏览器请求新资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-164"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="e2634-165">由于此重定向是进入系统的新请求，因此会受到 Internet Information Services （IIS）和 ASP.NET 安全策略的所有身份验证和授权逻辑的验证。</span><span class="sxs-lookup"><span data-stu-id="e2634-165">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="e2634-166">可以通过在应用程序调用 <xref:System.Web.HttpServerUtility.Execute%2A> 方法之前，通过并入使用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 方法的自定义授权方法来验证用户是否有权查看资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-166">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-167">下面的示例将在当前目录中的服务器上执行 `Login.aspx` 页，并通过 <xref:System.IO.StringWriter> 对象 `writer`接收该页的输出。</span><span class="sxs-lookup"><span data-stu-id="e2634-167">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="e2634-168">它将从 `writer` 收到的 HTML 流写入 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="e2634-168">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-169">当前的 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-169">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e2634-170">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-170">-or-</span></span> 
<span data-ttu-id="e2634-171">执行由 <paramref name="path" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e2634-171">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-172"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-172"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e2634-173">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-173">-or-</span></span> 
 <span data-ttu-id="e2634-174"><paramref name="path" /> 不是虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-174"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtility.Execute (path, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-175">要执行的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-175">The URL path to execute.</span></span></param>
        <param name="writer"><span data-ttu-id="e2634-176">要捕获输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-176">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="e2634-177">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-177"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="e2634-178">在当前请求的上下文中执行指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-178">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="e2634-179"><see cref="T:System.IO.TextWriter" /> 捕获页面输出，布尔参数则指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="e2634-179">A <see cref="T:System.IO.TextWriter" /> captures output from the page and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-180">当完成指定的虚拟路径完成后，<xref:System.Web.HttpServerUtility.Execute%2A> 方法将继续执行原始请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-180">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the specified virtual path is completed.</span></span> <span data-ttu-id="e2634-181"><xref:System.Web.HttpServerUtility.Transfer%2A> 方法无条件地将执行转移到其他处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-181">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="e2634-182">ASP.NET 不会验证当前用户是否有权查看 <xref:System.Web.HttpServerUtility.Execute%2A> 方法传递的资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-182">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="e2634-183">尽管 ASP.NET 授权和身份验证逻辑在调用原始资源处理程序之前运行，但 ASP.NET 会直接调用 <xref:System.Web.HttpServerUtility.Execute%2A> 方法所指示的处理程序，并且不会重新运行新资源的身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="e2634-183">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="e2634-184">如果应用程序的安全策略要求客户端具有适当的权限来访问资源，则应用程序应强制重新授权或提供自定义的访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="e2634-184">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="e2634-185">可以通过使用 <xref:System.Web.HttpResponse.Redirect%2A> 方法而不是 <xref:System.Web.HttpServerUtility.Execute%2A> 方法来强制重新授权。</span><span class="sxs-lookup"><span data-stu-id="e2634-185">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="e2634-186"><xref:System.Web.HttpResponse.Redirect%2A> 执行客户端重定向，浏览器请求新资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-186"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="e2634-187">由于此重定向是进入系统的新请求，因此会受到 Internet Information Services （IIS）和 ASP.NET 安全策略的所有身份验证和授权逻辑的验证。</span><span class="sxs-lookup"><span data-stu-id="e2634-187">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="e2634-188">可以通过在应用程序调用 <xref:System.Web.HttpServerUtility.Execute%2A> 方法之前，通过并入使用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 方法的自定义授权方法来验证用户是否有权查看资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-188">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-189">下面的示例将在当前目录中的服务器上执行 `Login.aspx` 页，并通过 <xref:System.IO.StringWriter> 对象 `writer`接收该页的输出。</span><span class="sxs-lookup"><span data-stu-id="e2634-189">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="e2634-190">它将从 `writer` 收到的 HTML 流写入 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="e2634-190">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span> <span data-ttu-id="e2634-191">保留 <xref:System.Web.HttpRequest.Form%2A> 和 <xref:System.Web.HttpRequest.QueryString%2A> 集合的内容。</span><span class="sxs-lookup"><span data-stu-id="e2634-191">The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute02#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute02/CS/httpserverutility.execute02_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute02#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute02/VB/httpserverutility.execute02_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-192">当前 <see cref="T:System.Web.HttpContext" /> 为 NULL 引用（Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="e2634-192">The current <see cref="T:System.Web.HttpContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="e2634-193">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-193">-or-</span></span> 
 <span data-ttu-id="e2634-194"><paramref name="path" /> 以句点 (.) 结尾。</span><span class="sxs-lookup"><span data-stu-id="e2634-194"><paramref name="path" /> ends with a period (.).</span></span>  
  
<span data-ttu-id="e2634-195">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-195">-or-</span></span> 
<span data-ttu-id="e2634-196">执行由 <paramref name="path" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e2634-196">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-197"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-197"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2634-198"><paramref name="path" /> 不是虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-198"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Web.IHttpHandler handler, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (handler As IHttpHandler, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Web::IHttpHandler ^ handler, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Web.IHttpHandler * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtility.Execute (handler, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="e2634-199">实现 <see cref="T:System.Web.IHttpHandler" /> 以便向其传输当前请求的 HTTP 处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-199">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span></span></param>
        <param name="writer"><span data-ttu-id="e2634-200">要捕获输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-200">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="e2634-201">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-201"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="e2634-202">在当前请求的上下文中执行指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-202">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="e2634-203"><see cref="T:System.IO.TextWriter" /> 捕获执行的处理程序的输出，布尔参数则指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="e2634-203">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-204">你可以编写自定义 HTTP 处理程序来处理任何符合公共语言规范（CLS）的语言的特定、预定义类型的 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-204">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="e2634-205">在 HTTP 处理程序类中定义的可执行代码（而不是传统 ASP）页面或 ASP.NET 页将响应这些特定请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-205">Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="e2634-206">HTTP 处理程序允许与运行 Internet Information Services （IIS）的 Web 服务器的低级请求和响应服务进行交互，并提供类似于 ISAPI 扩展的功能，但具有更简单的编程模型。</span><span class="sxs-lookup"><span data-stu-id="e2634-206">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="e2634-207">ASP.NET 不会验证当前用户是否有权查看由 <xref:System.Web.HttpServerUtility.Execute%2A> 方法传递的资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-207">ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="e2634-208">尽管 ASP.NET 授权和身份验证逻辑在调用原始资源处理程序之前运行，但 ASP.NET 会直接调用 <xref:System.Web.HttpServerUtility.Execute%2A> 方法所指示的处理程序，并且不会重新运行新资源的身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="e2634-208">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="e2634-209">如果你的应用程序的安全策略要求客户端具有适当的授权才能获取对资源的访问权限，则应用程序应强制重新授权或提供自定义的访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="e2634-209">If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="e2634-210">可以通过使用 <xref:System.Web.HttpResponse.Redirect%2A> 方法而不是 <xref:System.Web.HttpServerUtility.Execute%2A> 方法来强制重新授权。</span><span class="sxs-lookup"><span data-stu-id="e2634-210">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="e2634-211"><xref:System.Web.HttpResponse.Redirect%2A> 执行客户端重定向，浏览器请求新资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-211">The <xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="e2634-212">由于此重定向是进入系统的新请求，因此会受到 IIS 和 ASP.NET 安全策略的所有身份验证和授权逻辑的验证。</span><span class="sxs-lookup"><span data-stu-id="e2634-212">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="e2634-213">可以通过在应用程序调用 <xref:System.Web.HttpServerUtility.Execute%2A> 方法之前，通过并入使用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 方法的自定义授权方法来验证用户是否有权查看资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-213">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-214">执行由 <paramref name="handler" /> 指定的处理程序时发生错误。</span><span class="sxs-lookup"><span data-stu-id="e2634-214">An error occurred while executing the handler specified by <paramref name="handler" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-215">
          <paramref name="handler" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-215">The <paramref name="handler" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="GetLastError">
      <MemberSignature Language="C#" Value="public Exception GetLastError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetLastError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.GetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastError () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetLastError();" />
      <MemberSignature Language="F#" Value="member this.GetLastError : unit -&gt; Exception" Usage="httpServerUtility.GetLastError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2634-216">返回前一个异常。</span><span class="sxs-lookup"><span data-stu-id="e2634-216">Returns the previous exception.</span></span></summary>
        <returns><span data-ttu-id="e2634-217">引发的前一个异常。</span><span class="sxs-lookup"><span data-stu-id="e2634-217">The previous exception that was thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2634-218">下面的示例将对应用程序的上一个错误的说明打印到 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="e2634-218">The following example prints a description of the application's last error to the HTTP output stream.</span></span> <span data-ttu-id="e2634-219">如果未遇到任何错误，它将打印 "无错误"。</span><span class="sxs-lookup"><span data-stu-id="e2634-219">It prints "No Errors" if no errors have been encountered.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.ClearError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2634-220">对已被编码以消除无效 HTML 字符的字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-220">Decodes a string that has been encoded to eliminate invalid HTML characters.</span></span>  
  
<span data-ttu-id="e2634-221">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span><span class="sxs-lookup"><span data-stu-id="e2634-221">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.HtmlDecode : string -&gt; string" Usage="httpServerUtility.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-222">要解码的 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-222">The HTML string to decode.</span></span></param>
        <summary><span data-ttu-id="e2634-223">对 HTML 编码的字符串进行解码，并返回已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-223">Decodes an HTML-encoded string and returns the decoded string.</span></span></summary>
        <returns><span data-ttu-id="e2634-224">已解码的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-224">The decoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-225">HTML 编码可确保文本在浏览器中正确显示，并且浏览器不会将其解释为 HTML 格式。</span><span class="sxs-lookup"><span data-stu-id="e2634-225">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="e2634-226">例如，如果文本字符串包含小于号（\<）或大于号（>），则浏览器会将这些字符解释为 HTML 标记的左括号或右括号。</span><span class="sxs-lookup"><span data-stu-id="e2634-226">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="e2634-227">如果字符是 HTML 编码的，则会将它们转换为 `&lt;` 和 `&gt;`的字符串，这将导致浏览器显示小于号和大于号。</span><span class="sxs-lookup"><span data-stu-id="e2634-227">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span> <span data-ttu-id="e2634-228"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 解码已传输到服务器的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-228"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="e2634-229">此方法是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-229">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-230">在内部，此方法使用 <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> 对字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-230">Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="e2634-231">在 ASP.NET 网页的代码隐藏文件中，通过 `Server` 属性访问 <xref:System.Web.HttpServerUtility> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-231">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="e2634-232">在不在代码隐藏文件中的类中，使用 `HttpContext.Current.Server` 访问 <xref:System.Web.HttpServerUtility> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-232">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="e2634-233">在 web 应用程序之外，使用 <xref:System.Net.WebUtility> 类对值进行编码或解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-233">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-234">下面的示例包含 `LoadDecodedFile`函数，该函数对文件中的数据进行解码并将其复制到一个字符串中。</span><span class="sxs-lookup"><span data-stu-id="e2634-234">The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.</span></span>  
  
 [!code-aspx-csharp[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-235">要解码的 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-235">The HTML string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="e2634-236"><see cref="T:System.IO.TextWriter" /> 输出包含已解码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="e2634-236">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span></span></param>
        <summary><span data-ttu-id="e2634-237">对 HTML 编码的字符串进行解码，并将结果输出发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="e2634-237">Decodes an HTML-encoded string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-238">HTML 编码可确保文本在浏览器中正确显示，并且浏览器不会将其解释为 HTML 格式。</span><span class="sxs-lookup"><span data-stu-id="e2634-238">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="e2634-239">例如，如果文本字符串包含小于号（\<）或大于号（>），则浏览器会将这些字符解释为 HTML 标记的左括号或右括号。</span><span class="sxs-lookup"><span data-stu-id="e2634-239">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="e2634-240">如果字符是 HTML 编码的，则会将它们转换为 `&lt;` 和 `&gt;`的字符串，这将导致浏览器显示小于号和大于号。</span><span class="sxs-lookup"><span data-stu-id="e2634-240">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="e2634-241"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 解码已传输到服务器的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-241"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="e2634-242"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-242"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-243"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 使用 <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> 对字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-243">Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="e2634-244">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e2634-244">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-245">下面的示例对经过 HTML 编码的字符串进行解码以便通过 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="e2634-245">The following example decodes a string that has been HTML-encoded for transmission over HTTP.</span></span> <span data-ttu-id="e2634-246">它会对提供的名为 `EncodedString` 的字符串进行解码，该字符串包含文本 "This is a &lt;Test String&gt;."，并将其复制到名为 `DecodedString` 的字符串中，如 "这是一个 \<的测试字符串 >"。</span><span class="sxs-lookup"><span data-stu-id="e2634-246">It decodes the supplied string named `EncodedString` which contains the text "This is a &lt;Test String&gt;.", and copies it into the string named `DecodedString` as "This is a \<Test String>.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2634-247">对要在浏览器中显示的字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-247">Encodes a string to be displayed in a browser.</span></span>  
  
<span data-ttu-id="e2634-248">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span><span class="sxs-lookup"><span data-stu-id="e2634-248">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : string -&gt; string" Usage="httpServerUtility.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-249">要编码的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-249">The text string to encode.</span></span></param>
        <summary><span data-ttu-id="e2634-250">对字符串进行 HTML 编码并返回已编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-250">HTML-encodes a string and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="e2634-251">HTML 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-251">The HTML-encoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-252">HTML 编码可确保文本在浏览器中正确显示，并且浏览器不会将其解释为 HTML 格式。</span><span class="sxs-lookup"><span data-stu-id="e2634-252">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="e2634-253">例如，如果文本字符串包含小于号（\<）或大于号（>），则浏览器会将这些字符解释为 HTML 标记的左括号或右括号。</span><span class="sxs-lookup"><span data-stu-id="e2634-253">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="e2634-254">如果字符是 HTML 编码的，则会将它们转换为 `&lt;` 和 `&gt;`的字符串，这将导致浏览器显示小于号和大于号。</span><span class="sxs-lookup"><span data-stu-id="e2634-254">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="e2634-255">此方法是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-255">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-256">在内部，此方法使用 <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> 对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-256">Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="e2634-257">在 ASP.NET 网页的代码隐藏文件中，通过 `Server` 属性访问 <xref:System.Web.HttpServerUtility> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-257">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="e2634-258">在不在代码隐藏文件中的类中，使用 `HttpContext.Current.Server` 访问 <xref:System.Web.HttpServerUtility> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-258">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="e2634-259">在 web 应用程序之外，使用 <xref:System.Net.WebUtility> 类对值进行编码或解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-259">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-260">下面的示例演示如何对可能对不安全代码进行编码的值进行 HTML 编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-260">The following example shows how to HTML-encode a value that potentially codes unsafe code.</span></span> <span data-ttu-id="e2634-261">代码驻留在网页的代码隐藏文件中。</span><span class="sxs-lookup"><span data-stu-id="e2634-261">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="e2634-262">要编码的值在此示例中为硬编码，这只是为了简化示例，并显示可以进行 HTML 编码的值的类型。</span><span class="sxs-lookup"><span data-stu-id="e2634-262">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode.</span></span> <span data-ttu-id="e2634-263">通常，您需要对从用户或请求收到的值进行 HTML 编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-263">Typically, you would HTML-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="e2634-264">`Result` 引用 `Literal` 控件。</span><span class="sxs-lookup"><span data-stu-id="e2634-264">`Result` refers to a `Literal` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="e2634-265">下面的示例与前面的示例类似，只不过它演示了如何对不在代码隐藏文件中的类中的值进行 HTML 编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-265">The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-266">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-266">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="e2634-267"><see cref="T:System.IO.TextWriter" /> 输出包含已编码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="e2634-267">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span></span></param>
        <summary><span data-ttu-id="e2634-268">对字符串进行 HTML 解码，并将结果输出发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="e2634-268">HTML-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-269">HTML 编码可确保文本在浏览器中正确显示，而不会被浏览器解释为 HTML 格式。</span><span class="sxs-lookup"><span data-stu-id="e2634-269">HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML.</span></span> <span data-ttu-id="e2634-270">例如，如果文本字符串包含小于号（\<）或大于号（>），则浏览器会将这些字符解释为 HTML 标记的左括号或右括号。</span><span class="sxs-lookup"><span data-stu-id="e2634-270">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="e2634-271">这两个字符的 HTML 编码分别 `&lt;` 和 `&gt;`，导致浏览器显示小于号和大于号。</span><span class="sxs-lookup"><span data-stu-id="e2634-271">The HTML encoding of these two characters is `&lt;` and `&gt;`, respectively, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="e2634-272"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> 是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-272"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-273"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> 使用 <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> 对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-273">Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="e2634-274">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e2634-274">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-275">下面的示例对字符串进行编码以便通过 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="e2634-275">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="e2634-276">它对名为 `TestString`的字符串进行编码，该字符串包含文本 "This is a \<Test String >."，并将其复制到名为 `EncodedString` 的字符串中，如 "这是一个 &lt;测试字符串&gt;"。</span><span class="sxs-lookup"><span data-stu-id="e2634-276">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This is a &lt;Test String&gt;.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Web.HttpServerUtility.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2634-277">获取服务器的计算机名称。</span><span class="sxs-lookup"><span data-stu-id="e2634-277">Gets the server's computer name.</span></span></summary>
        <value><span data-ttu-id="e2634-278">本地计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="e2634-278">The name of the local computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2634-279">下面的示例将服务器的计算机名称存储为字符串变量。</span><span class="sxs-lookup"><span data-stu-id="e2634-279">The following example stores the server's computer name as a string variable.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-280">找不到计算机名称。</span><span class="sxs-lookup"><span data-stu-id="e2634-280">The computer name cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpServerUtility.MapPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-281">Web 应用程序中的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-281">The virtual path in the Web application.</span></span></param>
        <summary><span data-ttu-id="e2634-282">返回与指定虚拟路径相对应的物理路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-282">Returns the physical file path that corresponds to the specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="e2634-283">对应于 <paramref name="path" /> 的 Web 服务器上的物理文件路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-283">The physical file path on the Web server that corresponds to <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-284">如果 `null``path`，则 <xref:System.Web.HttpServerUtility.MapPath%2A> 方法返回包含路径当前请求的目录的完整物理路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-284">If `path` is `null`, the <xref:System.Web.HttpServerUtility.MapPath%2A> method returns the full physical path of the directory that contains the current request for the path.</span></span> <span data-ttu-id="e2634-285">相对路径不需要为此方法指定一个现有的文件或文件夹来返回值。</span><span class="sxs-lookup"><span data-stu-id="e2634-285">The relative path does not need to specify an existing file or folder for this method to return a value.</span></span> <span data-ttu-id="e2634-286">但是，不能指定 Web 应用程序之外的路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-286">However, you cannot specify a path outside of the Web application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2634-287"><xref:System.Web.HttpServerUtility.MapPath%2A> 方法可能包含有关宿主环境的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="e2634-287">The <xref:System.Web.HttpServerUtility.MapPath%2A> method potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="e2634-288">不应向用户显示返回值。</span><span class="sxs-lookup"><span data-stu-id="e2634-288">The return value should not be displayed to users.</span></span>  
  
 <span data-ttu-id="e2634-289">驻留在 `C:\ExampleSites\TestMapPath` 的 Web 应用程序将返回以下结果：</span><span class="sxs-lookup"><span data-stu-id="e2634-289">A Web application that resides at `C:\ExampleSites\TestMapPath` would return the following results:</span></span>  
  
|<span data-ttu-id="e2634-290">请求来自</span><span class="sxs-lookup"><span data-stu-id="e2634-290">Request from</span></span>|`path`|<span data-ttu-id="e2634-291">返回值</span><span class="sxs-lookup"><span data-stu-id="e2634-291">Returned value</span></span>|  
|------------------|------------|--------------------|  
|<span data-ttu-id="e2634-292">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="e2634-292">RootLevelPage.aspx</span></span>|`null`|<span data-ttu-id="e2634-293">C:\ExampleSites\TestMapPath</span><span class="sxs-lookup"><span data-stu-id="e2634-293">C:\ExampleSites\TestMapPath</span></span>|  
|<span data-ttu-id="e2634-294">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="e2634-294">RootLevelPage.aspx</span></span>|<span data-ttu-id="e2634-295">"/DownOneLevel/DownLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="e2634-295">"/DownOneLevel/DownLevelPage.aspx"</span></span>|<span data-ttu-id="e2634-296">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="e2634-296">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span></span>|  
|<span data-ttu-id="e2634-297">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="e2634-297">RootLevelPage.aspx</span></span>|<span data-ttu-id="e2634-298">"/NotRealFolder"</span><span class="sxs-lookup"><span data-stu-id="e2634-298">"/NotRealFolder"</span></span>|<span data-ttu-id="e2634-299">C:\ExampleSites\TestMapPath\NotRealFolder</span><span class="sxs-lookup"><span data-stu-id="e2634-299">C:\ExampleSites\TestMapPath\NotRealFolder</span></span>|  
|<span data-ttu-id="e2634-300">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="e2634-300">RootLevelPage.aspx</span></span>|<span data-ttu-id="e2634-301">"../OutsideApplication"</span><span class="sxs-lookup"><span data-stu-id="e2634-301">"../OutsideApplication"</span></span>|<xref:System.Web.HttpException>|  
|<span data-ttu-id="e2634-302">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="e2634-302">/DownOneLevel/DownLevelPage.aspx</span></span>|`null`|<span data-ttu-id="e2634-303">C:\ExampleSites\TestMapPath\DownOneLevel</span><span class="sxs-lookup"><span data-stu-id="e2634-303">C:\ExampleSites\TestMapPath\DownOneLevel</span></span>|  
|<span data-ttu-id="e2634-304">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="e2634-304">/DownOneLevel/DownLevelPage.aspx</span></span>|<span data-ttu-id="e2634-305">"../RootLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="e2634-305">"../RootLevelPage.aspx"</span></span>|<span data-ttu-id="e2634-306">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="e2634-306">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e2634-307">下面的示例演示如何检索相对虚拟路径的物理文件。</span><span class="sxs-lookup"><span data-stu-id="e2634-307">The following example shows how to retrieve the physical file of a relative virtual path.</span></span> <span data-ttu-id="e2634-308">代码驻留在代码隐藏文件中，并使用默认的 `Server` 对象。</span><span class="sxs-lookup"><span data-stu-id="e2634-308">The code resides in the code-behind file for a web page and utilizes the default `Server` object.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="e2634-309">下面的示例与前面的示例类似，只不过它演示如何从代码隐藏文件之外的类中检索物理路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-309">The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-310">当前的 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-310">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>
        
<span data-ttu-id="e2634-311">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2634-311">-or-</span></span> 
<span data-ttu-id="e2634-312"><paramref name="path" /> 是物理路径，但应为虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-312"><paramref name="path" /> is a physical path, but a virtual path was expected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTimeout">
      <MemberSignature Language="C#" Value="public int ScriptTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScriptTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScriptTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTimeout : int with get, set" Usage="System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2634-313">获取或设置请求超时值（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="e2634-313">Gets or sets the request time-out value in seconds.</span></span></summary>
        <value><span data-ttu-id="e2634-314">请求的超时值设置。</span><span class="sxs-lookup"><span data-stu-id="e2634-314">The time-out value setting for requests.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-315"><xref:System.Web.HttpServerUtility.ScriptTimeout%2A> 属性可以在 web.config 文件中设置，方法是设置[httpRuntime](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100))元素的 `executionTimeout` 属性。</span><span class="sxs-lookup"><span data-stu-id="e2634-315">The <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property can be set in the Web.config file by setting the `executionTimeout` attribute of the [httpRuntime](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)) element.</span></span> <span data-ttu-id="e2634-316">使用 <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> 属性以编程方式设置超时优先于 web.config 设置。</span><span class="sxs-lookup"><span data-stu-id="e2634-316">Setting the time-out programmatically with the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property takes precedence over the Web.config setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2634-317">如果在 web.config 文件中将[httpRuntime](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100))元素的 `debug` 特性设置为 `true`，则将忽略 <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="e2634-317">If you set the `debug` attribute of the [httpRuntime](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)) element to `true` in the Web.config file, the value of <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> will be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-318">下面的示例将请求超时期限设置为60秒。</span><span class="sxs-lookup"><span data-stu-id="e2634-318">The following example sets the request time-out period to 60 seconds.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-319">当前的 <see cref="T:System.Web.HttpContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-319">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2634-320">超时期限为 <see langword="null" /> 或未能设置。</span><span class="sxs-lookup"><span data-stu-id="e2634-320">The time-out period is <see langword="null" /> or otherwise could not be set.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transfer">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2634-321">终止当前页的执行，并为当前请求开始执行新页。</span><span class="sxs-lookup"><span data-stu-id="e2634-321">Terminates execution of the current page and starts execution of a new page for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Transfer : string -&gt; unit" Usage="httpServerUtility.Transfer path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-322">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-322">The URL path of the new page on the server to execute.</span></span></param>
        <summary><span data-ttu-id="e2634-323">对于当前请求，终止当前页的执行，并使用指定的页 URL 路径来开始执行一个新页。</span><span class="sxs-lookup"><span data-stu-id="e2634-323">For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-324">传输到的页面应为另一个 .aspx 页面。</span><span class="sxs-lookup"><span data-stu-id="e2634-324">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="e2634-325">例如，传输到 .asp 或 .asmx 页无效。</span><span class="sxs-lookup"><span data-stu-id="e2634-325">For instance, a transfer to an .asp or .asmx page is not valid.</span></span> <span data-ttu-id="e2634-326"><xref:System.Web.HttpServerUtility.Transfer%2A> 方法保留 <xref:System.Web.HttpRequest.QueryString%2A> 和 <xref:System.Web.HttpRequest.Form%2A> 集合。</span><span class="sxs-lookup"><span data-stu-id="e2634-326">The <xref:System.Web.HttpServerUtility.Transfer%2A> method preserves the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span>  
  
 <span data-ttu-id="e2634-327"><xref:System.Web.HttpServerUtility.Transfer%2A> 调用 <xref:System.Web.HttpResponse.End%2A>，这会在完成时引发 <xref:System.Threading.ThreadAbortException> 异常。</span><span class="sxs-lookup"><span data-stu-id="e2634-327"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="e2634-328">ASP.NET 不会验证当前用户是否有权查看 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法传递的资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-328">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="e2634-329">尽管 ASP.NET 授权和身份验证逻辑在调用原始资源处理程序之前运行，但 ASP.NET 会直接调用 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法所指示的处理程序，并且不会重新运行新资源的身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="e2634-329">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="e2634-330">如果应用程序的安全策略要求客户端具有适当的权限来访问资源，则应用程序应强制重新授权或提供自定义的访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="e2634-330">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="e2634-331">可以通过使用 <xref:System.Web.HttpResponse.Redirect%2A> 方法而不是 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法来强制重新授权。</span><span class="sxs-lookup"><span data-stu-id="e2634-331">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="e2634-332"><xref:System.Web.HttpResponse.Redirect%2A> 方法执行客户端重定向，浏览器请求新资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-332">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="e2634-333">由于此重定向是进入系统的新请求，因此会受到 Internet Information Services （IIS）和 ASP.NET 安全策略的所有身份验证和授权逻辑的验证。</span><span class="sxs-lookup"><span data-stu-id="e2634-333">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="e2634-334">可以通过在应用程序调用 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法之前，通过并入使用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 方法的自定义授权方法来验证用户是否有权查看资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-334">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Transfer : string * bool -&gt; unit" Usage="httpServerUtility.Transfer (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-335">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-335">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="e2634-336">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-336"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="e2634-337">终止当前页的执行，并使用指定的页 URL 路径来开始执行一个新页。</span><span class="sxs-lookup"><span data-stu-id="e2634-337">Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span></span> <span data-ttu-id="e2634-338">指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="e2634-338">Specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-339">传输到的页面应为另一个 .aspx 页面。</span><span class="sxs-lookup"><span data-stu-id="e2634-339">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="e2634-340">例如，传输到 .asp 或 .asmx 页无效。</span><span class="sxs-lookup"><span data-stu-id="e2634-340">For instance, a transfer to an .asp or .asmx page is not valid.</span></span>  
  
 <span data-ttu-id="e2634-341"><xref:System.Web.HttpServerUtility.Transfer%2A> 调用 <xref:System.Web.HttpResponse.End%2A>，这会在完成时引发 <xref:System.Threading.ThreadAbortException> 异常。</span><span class="sxs-lookup"><span data-stu-id="e2634-341"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="e2634-342">如果将 `preserveForm` 参数设置为 `true`，则目标页将能够使用 <xref:System.Web.UI.Page.PreviousPage%2A> 属性访问上一页的视图状态。</span><span class="sxs-lookup"><span data-stu-id="e2634-342">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="e2634-343">出于安全考虑，应将 `enableViewStateMac` 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2634-343">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="e2634-344">ASP.NET 不会验证当前用户是否有权查看 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法传递的资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-344">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="e2634-345">尽管 ASP.NET 授权和身份验证逻辑在调用原始资源处理程序之前运行，但 ASP.NET 会直接调用 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法所指示的处理程序，并且不会重新运行新资源的身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="e2634-345">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="e2634-346">如果应用程序的安全策略要求客户端具有适当的权限来访问资源，则应用程序应强制重新授权或提供自定义的访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="e2634-346">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="e2634-347">可以通过使用 <xref:System.Web.HttpResponse.Redirect%2A> 方法而不是 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法来强制重新授权。</span><span class="sxs-lookup"><span data-stu-id="e2634-347">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="e2634-348"><xref:System.Web.HttpResponse.Redirect%2A> 方法执行客户端重定向，浏览器请求新资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-348">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="e2634-349">由于此重定向是进入系统的新请求，因此会受到 Internet Information Services （IIS）和 ASP.NET 安全策略的所有身份验证和授权逻辑的验证。</span><span class="sxs-lookup"><span data-stu-id="e2634-349">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="e2634-350">可以通过在应用程序调用 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法之前，通过并入使用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 方法的自定义授权方法来验证用户是否有权查看资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-350">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-351">下面的示例在与当前页相同的目录中执行一个新页。</span><span class="sxs-lookup"><span data-stu-id="e2634-351">The following example executes a new page in the same directory as the current page.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="e2634-352">当前页面请求为回调。</span><span class="sxs-lookup"><span data-stu-id="e2634-352">The current page request is a callback.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(class System.Web.IHttpHandler handler, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (handler As IHttpHandler, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::Web::IHttpHandler ^ handler, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Transfer : System.Web.IHttpHandler * bool -&gt; unit" Usage="httpServerUtility.Transfer (handler, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="e2634-353">实现 <see cref="T:System.Web.IHttpHandler" /> 以便向其传输当前请求的 HTTP 处理程序。</span><span class="sxs-lookup"><span data-stu-id="e2634-353">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="e2634-354">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-354"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="e2634-355">终止当前页的执行，然后使用实现 <see cref="T:System.Web.IHttpHandler" /> 接口的自定义 HTTP 处理程序开始新请求的执行，并指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="e2634-355">Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-356">你可以编写自定义 HTTP 处理程序来处理任何符合公共语言规范（CLS）的语言的特定、预定义类型的 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-356">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="e2634-357">在 HTTP 处理程序类中定义的可执行代码（而不是传统 ASP）页面或 ASP.NET 页将响应这些特定请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-357">Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="e2634-358">HTTP 处理程序允许与运行 Internet Information Services （IIS）的 Web 服务器的低级请求和响应服务进行交互，并提供类似于 ISAPI 扩展的功能，但具有更简单的编程模型。</span><span class="sxs-lookup"><span data-stu-id="e2634-358">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="e2634-359">如果将 `preserveForm` 参数设置为 `true`，则目标页将能够使用 <xref:System.Web.UI.Page.PreviousPage%2A> 属性访问上一页的视图状态。</span><span class="sxs-lookup"><span data-stu-id="e2634-359">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="e2634-360">出于安全考虑，应将 `enableViewStateMac` 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2634-360">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="e2634-361">ASP.NET 不会验证当前用户是否有权查看 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法传递的资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-361">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="e2634-362">尽管 ASP.NET 授权和身份验证逻辑在调用原始资源处理程序之前运行，但 ASP.NET 会直接调用 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法所指示的处理程序，并且不会重新运行新资源的身份验证和授权逻辑。</span><span class="sxs-lookup"><span data-stu-id="e2634-362">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method, and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="e2634-363">如果你的应用程序的安全策略要求客户端具有适当的权限来访问该资源，则应用程序应强制重新授权或提供自定义的访问控制机制。</span><span class="sxs-lookup"><span data-stu-id="e2634-363">If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="e2634-364">可以通过使用 <xref:System.Web.HttpResponse.Redirect%2A> 方法而不是 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法来强制重新授权。</span><span class="sxs-lookup"><span data-stu-id="e2634-364">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="e2634-365"><xref:System.Web.HttpResponse.Redirect%2A> 方法执行客户端重定向，浏览器请求新资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-365">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="e2634-366">由于此重定向是进入系统的新请求，因此会受到 IIS 和 ASP.NET 安全策略的所有身份验证和授权逻辑的验证。</span><span class="sxs-lookup"><span data-stu-id="e2634-366">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="e2634-367">可以通过在应用程序调用 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法之前，通过并入使用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 方法的自定义授权方法来验证用户是否有权查看资源。</span><span class="sxs-lookup"><span data-stu-id="e2634-367">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="e2634-368">当前页面请求为回调。</span><span class="sxs-lookup"><span data-stu-id="e2634-368">The current page request is a callback.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransferRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2634-369">异步执行指定的 URL。</span><span class="sxs-lookup"><span data-stu-id="e2634-369">Performs an asynchronous execution of the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-370"><xref:System.Web.HttpServerUtility.TransferRequest%2A> 是 .NET Framework 版本3.5 中引入的。</span><span class="sxs-lookup"><span data-stu-id="e2634-370"><xref:System.Web.HttpServerUtility.TransferRequest%2A> was introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="e2634-371">有关 .NET Framework 的摘要信息，请参阅[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e2634-371">For summary information about the .NET Framework, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string -&gt; unit" Usage="httpServerUtility.TransferRequest path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-372">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-372">The URL path of the new page on the server to execute.</span></span></param>
        <summary><span data-ttu-id="e2634-373">异步执行指定的 URL。</span><span class="sxs-lookup"><span data-stu-id="e2634-373">Performs an asynchronous execution of the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-374">此方法重载调用 <xref:System.Web.HttpServerUtility.TransferRequest%2A> 重载，并将 `preserveForm` 参数设置为 `false`，将 `method` 参数设置为 `null`，将 `headers` 参数设置为 `null`，将 `preserveUser` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2634-374">This method overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to `false`, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="e2634-375">有关详细信息，请参阅 <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29> 重载中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="e2634-375">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e2634-376">该请求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的集成管道模式。</span><span class="sxs-lookup"><span data-stu-id="e2634-376">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-377">服务器不可用于处理该请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-377">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-378">
          <paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-378">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2634-379"><paramref name="path" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="e2634-379">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-380">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-380">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="e2634-381">若要保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；若要清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-381"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <summary><span data-ttu-id="e2634-382">异步执行指定的 URL 并保留查询字符串参数。</span><span class="sxs-lookup"><span data-stu-id="e2634-382">Performs an asynchronous execution of the specified URL and preserves query string parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-383">此重载调用 <xref:System.Web.HttpServerUtility.TransferRequest%2A> 重载，并将 `preserveForm` 参数设置为传入的值、将 `method` 参数设置为 `null`、将 `headers` 参数设置为 `null`，并将 `preserveUser` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2634-383">This overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to the value passed in, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="e2634-384">有关详细信息，请参阅 <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="e2634-384">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 <span data-ttu-id="e2634-385"><xref:System.Web.HttpServerUtility.TransferRequest%2A> 在 .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="e2634-385"><xref:System.Web.HttpServerUtility.TransferRequest%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e2634-386">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="e2634-386">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e2634-387">该请求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的集成管道模式。</span><span class="sxs-lookup"><span data-stu-id="e2634-387">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-388">服务器不可用于处理该请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-388">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-389">
          <paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-389">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2634-390"><paramref name="path" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="e2634-390">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-391">服务器上要执行的新页的 URL 路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-391">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="e2634-392">若要保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；若要清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-392"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <param name="method"><span data-ttu-id="e2634-393">在执行新请求时使用的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-393">The HTTP method to use in the execution of the new request.</span></span></param>
        <param name="headers"><span data-ttu-id="e2634-394">用于新请求的请求标头的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-394">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of request headers for the new request.</span></span></param>
        <summary><span data-ttu-id="e2634-395">使用指定的 HTTP 方法和标头异步执行指定的 URL。</span><span class="sxs-lookup"><span data-stu-id="e2634-395">Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-396">此方法在使用中的集成管道模式运行时使用，以便 [!INCLUDE[iisver](~/includes/iisver-md.md)] 在使用正确的请求上下文执行目标请求时，将请求处理从一种资源类型传输到另一种资源类型。</span><span class="sxs-lookup"><span data-stu-id="e2634-396">This method is used when running with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</span></span> <span data-ttu-id="e2634-397">例如，可以使用 <xref:System.Web.HttpServerUtility.TransferRequest%2A> 方法将 ASPX 页的请求传输到 XML 页的请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-397">For example, you can use the <xref:System.Web.HttpServerUtility.TransferRequest%2A> method to transfer a request for an ASPX page to a request for an XML page.</span></span>  
  
 <span data-ttu-id="e2634-398"><xref:System.Web.HttpServerUtility.TransferRequest%2A> 方法执行指定 URL 的异步子执行，并具有以下条件：</span><span class="sxs-lookup"><span data-stu-id="e2634-398">The <xref:System.Web.HttpServerUtility.TransferRequest%2A> method performs an asynchronous child execution of the specified URL with the following conditions:</span></span>  
  
-   <span data-ttu-id="e2634-399">如果 `path` 参数指定了查询字符串，则它将用作新的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-399">If the `path` parameter specifies a query string, it will be used as the new query string.</span></span> <span data-ttu-id="e2634-400">如果不包括查询字符串，将重新使用请求的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-400">If no query string is included, the query string of the request will be re-used.</span></span>  
  
-   <span data-ttu-id="e2634-401">如果指定 `method` 参数，则将使用该参数。</span><span class="sxs-lookup"><span data-stu-id="e2634-401">If the `method` parameter is specified, it will be used.</span></span> <span data-ttu-id="e2634-402">如果 `null`，将使用原始请求的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-402">If it is `null`, the HTTP method of the original request will be used.</span></span>  
  
-   <span data-ttu-id="e2634-403">如果 `preserveForm` 参数 `true`，则请求的当前实体正文将可供目标请求使用。</span><span class="sxs-lookup"><span data-stu-id="e2634-403">If the `preserveForm` parameter is `true`, the current entity body of the request will be available to the target request.</span></span> <span data-ttu-id="e2634-404">这允许传输窗体发布和上载。</span><span class="sxs-lookup"><span data-stu-id="e2634-404">This allows form posts and uploads to be transferred.</span></span>  
  
-   <span data-ttu-id="e2634-405">如果用户标识当前是在原始请求上设置的，则会将标识传输到新请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-405">If the user identity is currently set on the original request, the identity will be transferred to the new request.</span></span> <span data-ttu-id="e2634-406">这允许经过身份验证的请求为新请求重复使用身份验证的结果。</span><span class="sxs-lookup"><span data-stu-id="e2634-406">This allows authenticated requests to re-use the result of the authentication for the new request.</span></span> <span data-ttu-id="e2634-407">如果你不希望传输用户，请在传输之前将用户设置为原始请求上的 `null`。</span><span class="sxs-lookup"><span data-stu-id="e2634-407">If you do not want the user to be transferred, set the user to `null` on the original request before transferring.</span></span>  
  
-   <span data-ttu-id="e2634-408">如果指定 `headers` 参数，则将用指定的标头执行新请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-408">If the `headers` parameter is specified, the new request will execute with the specified headers.</span></span> <span data-ttu-id="e2634-409">这可用于修改新请求的请求标头和 cookie，或添加指定原始请求接收位置的特殊标头。</span><span class="sxs-lookup"><span data-stu-id="e2634-409">This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</span></span>  
  
     <span data-ttu-id="e2634-410">此方法调用 <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29> 方法重载，并将 `preserveUser` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2634-410">This method calls the <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29> method overload with the `preserveUser` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e2634-411">该请求要求在集成模式下运行的 [!INCLUDE[iisver](~/includes/iisver-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="e2634-411">The request requires [!INCLUDE[iisver](~/includes/iisver-md.md)] running in integrated mode.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-412">服务器不可用于处理该请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-412">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-413">
          <paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-413">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2634-414"><paramref name="path" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="e2634-414">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers, bool preserveUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection, preserveUser As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers, bool preserveUser);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection * bool -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm, method, headers, preserveUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveUser" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e2634-415">路径。</span><span class="sxs-lookup"><span data-stu-id="e2634-415">The path.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="e2634-416">若要保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；若要清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-416"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <param name="method"><span data-ttu-id="e2634-417">要在新请求中使用的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-417">The HTTP method to use in the new request.</span></span></param>
        <param name="headers"><span data-ttu-id="e2634-418">一个包含用于新请求的请求标头的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2634-418">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains request headers for the new request.</span></span></param>
        <param name="preserveUser"><span data-ttu-id="e2634-419">若要保存用户标识，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-419"><see langword="true" /> to preserve the user identity; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e2634-420">此方法的另一个方法重载调用此重载且将此参数设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-420">The other method overloads of this method call this overload with this parameter set to <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="e2634-421">用指定的 HTTP 方法、标头和路径，执行指定的 URL 上的异步执行和选择保留格式值和用户标识。</span><span class="sxs-lookup"><span data-stu-id="e2634-421">Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-422">有关详细信息，请参阅 <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="e2634-422">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e2634-423">该请求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的集成管道模式。</span><span class="sxs-lookup"><span data-stu-id="e2634-423">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e2634-424">服务器不可用于处理该请求。</span><span class="sxs-lookup"><span data-stu-id="e2634-424">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-425">
          <paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-425">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2634-426"><paramref name="path" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="e2634-426">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2634-427">对字符串进行解码，该字符串针对 HTTP 传输进行了编码并在 URL 中发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="e2634-427">Decodes a string that was encoded for HTTP transmission and then sent to the server in a URL.</span></span>  
  
<span data-ttu-id="e2634-428">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span><span class="sxs-lookup"><span data-stu-id="e2634-428">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public string UrlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlDecode : string -&gt; string" Usage="httpServerUtility.UrlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-429">要解码的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-429">The text string to decode.</span></span></param>
        <summary><span data-ttu-id="e2634-430">对字符串进行 URL 解码并返回已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-430">URL-decodes a string and returns the decoded string.</span></span></summary>
        <returns><span data-ttu-id="e2634-431">已解码的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-431">The decoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-432">URL 编码可确保所有浏览器都能正确地传输 URL 字符串中的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-432">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="e2634-433">某些浏览器可能会截断或损坏诸如问号（？）、与号（&）、斜杠标记（/）和空格等字符。</span><span class="sxs-lookup"><span data-stu-id="e2634-433">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="e2634-434">因此，这些字符必须在 `<a>` 标记中进行编码，或在查询字符串中进行编码，浏览器可以通过请求字符串将字符串重新发送。</span><span class="sxs-lookup"><span data-stu-id="e2634-434">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="e2634-435">此方法是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-435">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-436">在内部，此方法使用 <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> 对字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-436">Internally, this method uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="e2634-437">在 ASP.NET 网页的代码隐藏文件中，通过 `Server` 属性访问 <xref:System.Web.HttpServerUtility> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-437">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="e2634-438">在不在代码隐藏文件中的类中，使用 `HttpContext.Current.Server` 访问 <xref:System.Web.HttpServerUtility> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-438">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="e2634-439">在 web 应用程序之外，使用 <xref:System.Net.WebUtility> 类对值进行编码或解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-439">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-440">下面的示例演示如何对从查询字符串中检索到的值进行 URL 解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-440">The following example shows how to URL-decode a value that is retrieved from the query string.</span></span> <span data-ttu-id="e2634-441">代码驻留在网页的代码隐藏文件中。</span><span class="sxs-lookup"><span data-stu-id="e2634-441">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="e2634-442">`ReturnPage` 引用 `HyperLink` 控件。</span><span class="sxs-lookup"><span data-stu-id="e2634-442">`ReturnPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="e2634-443">下面的示例与前面的示例类似，只不过它演示如何对不在代码隐藏文件中的类进行 URL 解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-443">The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public void UrlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.UrlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.UrlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-444">要解码的 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-444">The HTML string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="e2634-445"><see cref="T:System.IO.TextWriter" /> 输出包含已解码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="e2634-445">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span></span></param>
        <summary><span data-ttu-id="e2634-446">对在 URL 中接收的 HTML 字符串进行解码，并将结果输出发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="e2634-446">Decodes an HTML string received in a URL and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-447">URL 编码可确保所有浏览器都能正确地传输 URL 字符串中的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-447">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="e2634-448">某些浏览器可能会截断或损坏诸如问号（？）、与号（&）、斜杠标记（/）和空格等字符。</span><span class="sxs-lookup"><span data-stu-id="e2634-448">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="e2634-449">因此，这些字符必须在 `<a>` 标记中进行编码，或在查询字符串中进行编码，浏览器可以通过请求字符串将字符串重新发送。</span><span class="sxs-lookup"><span data-stu-id="e2634-449">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="e2634-450"><xref:System.Web.HttpServerUtility.UrlDecode%2A> 是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-450"><xref:System.Web.HttpServerUtility.UrlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-451"><xref:System.Web.HttpServerUtility.UrlDecode%2A> 使用 <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> 对字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-451">Internally, <xref:System.Web.HttpServerUtility.UrlDecode%2A> uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="e2634-452">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e2634-452">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-453">下面的示例将名为 `EncodedString` （在 URL 中接收）的字符串解码为名为 `DecodedString`的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-453">The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2634-454">编码字符串，以便通过 URL 从 Web 服务器到客户端进行可靠的 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="e2634-454">Encodes a string for reliable HTTP transmission from the Web server to a client through the URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-455"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-455"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-456"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 使用 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-456">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="e2634-457">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e2634-457">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public string UrlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlEncode : string -&gt; string" Usage="httpServerUtility.UrlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-458">要进行 URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-458">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="e2634-459">对字符串进行 URL 编码，并返回已编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-459">URL-encodes a string and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="e2634-460">URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-460">The URL-encoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-461">URL 编码可确保所有浏览器都能正确地传输 URL 字符串中的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-461">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="e2634-462">某些浏览器可能会截断或损坏诸如问号（？）、与号（&）、斜杠标记（/）和空格等字符。</span><span class="sxs-lookup"><span data-stu-id="e2634-462">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="e2634-463">因此，这些字符必须在 `<a>` 标记中进行编码，或在查询字符串中进行编码，浏览器可以通过请求字符串将字符串重新发送。</span><span class="sxs-lookup"><span data-stu-id="e2634-463">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="e2634-464">此方法是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-464">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-465">在内部，此方法使用 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-465">Internally, this method uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="e2634-466">在 ASP.NET 网页的代码隐藏文件中，通过 `Server` 属性访问 <xref:System.Web.HttpServerUtility> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-466">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="e2634-467">在不在代码隐藏文件中的类中，使用 `HttpContext.Current.Server` 访问 <xref:System.Web.HttpServerUtility> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="e2634-467">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="e2634-468">在 web 应用程序之外，使用 <xref:System.Net.WebUtility> 类对值进行编码或解码。</span><span class="sxs-lookup"><span data-stu-id="e2634-468">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-469">下面的示例演示如何对用作超链接的查询字符串值的值进行 URL 编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-469">The following example shows how to URL-encode a value that is used as a query string value of a hyperlink.</span></span> <span data-ttu-id="e2634-470">代码驻留在网页的代码隐藏文件中。</span><span class="sxs-lookup"><span data-stu-id="e2634-470">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="e2634-471">在此示例中，要编码的值仅用于简化示例，并显示你可能 URL 编码的值的类型。</span><span class="sxs-lookup"><span data-stu-id="e2634-471">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode.</span></span> <span data-ttu-id="e2634-472">通常，您需要对从用户或请求收到的值进行 URL 编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-472">Typically, you would URL-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="e2634-473">`NextPage` 引用 `HyperLink` 控件。</span><span class="sxs-lookup"><span data-stu-id="e2634-473">`NextPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="e2634-474">下面的示例与前面的示例类似，只不过它演示了如何从代码隐藏文件之外的类中对值进行 URL 编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-474">The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public void UrlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.UrlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.UrlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-475">要编码的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-475">The text string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="e2634-476"><see cref="T:System.IO.TextWriter" /> 输出包含已编码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="e2634-476">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span></span></param>
        <summary><span data-ttu-id="e2634-477">对字符串进行 URL 编码，并将结果输出发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span><span class="sxs-lookup"><span data-stu-id="e2634-477">URL-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-478">URL 编码可确保所有浏览器都能正确地传输 URL 字符串中的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-478">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="e2634-479">某些浏览器可能会截断或损坏诸如问号（？）、与号（&）、斜杠标记（/）和空格等字符。</span><span class="sxs-lookup"><span data-stu-id="e2634-479">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="e2634-480">因此，这些字符必须在 `<a>` 标记中进行编码，或在查询字符串中进行编码，浏览器可以通过请求字符串将字符串重新发送。</span><span class="sxs-lookup"><span data-stu-id="e2634-480">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="e2634-481"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 是在运行时从 ASP.NET 应用程序访问 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 方法的一种简便方法。</span><span class="sxs-lookup"><span data-stu-id="e2634-481"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e2634-482"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 使用 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-482">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="e2634-483">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e2634-483">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2634-484">下面的示例对字符串进行编码以便通过 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="e2634-484">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="e2634-485">它对名为 `TestString`的字符串进行编码，该字符串包含文本 "This is a \<Test String >."，并将其复制到名为 `EncodedString` 的字符串中，如 "This + is + a +% 3cTest + String% 3e."。</span><span class="sxs-lookup"><span data-stu-id="e2634-485">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This+is+a+%3cTest+String%3e.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public string UrlPathEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlPathEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlPathEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlPathEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlPathEncode : string -&gt; string" Usage="httpServerUtility.UrlPathEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e2634-486">要进行 URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-486">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="e2634-487">请勿使用；仅适用于浏览器兼容性。</span><span class="sxs-lookup"><span data-stu-id="e2634-487">Do not use; intended only for browser compatibility.</span></span> <span data-ttu-id="e2634-488">改用 <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" /></span><span class="sxs-lookup"><span data-stu-id="e2634-488">Use <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="e2634-489">URL 已编码的文本。</span><span class="sxs-lookup"><span data-stu-id="e2634-489">The URL encoded text.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenDecode">
      <MemberSignature Language="C#" Value="public static byte[] UrlTokenDecode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlTokenDecode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenDecode (input As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlTokenDecode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlTokenDecode : string -&gt; byte[]" Usage="System.Web.HttpServerUtility.UrlTokenDecode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e2634-490">要解码的 URL 字符串标记。</span><span class="sxs-lookup"><span data-stu-id="e2634-490">The URL string token to decode.</span></span></param>
        <summary><span data-ttu-id="e2634-491">将 URL 字符串标记解码为使用 64 进制数字的等效字节数组。</span><span class="sxs-lookup"><span data-stu-id="e2634-491">Decodes a URL string token to its equivalent byte array using base 64 digits.</span></span></summary>
        <returns><span data-ttu-id="e2634-492">包含解码后的 URL 字符串标记的字节数组。</span><span class="sxs-lookup"><span data-stu-id="e2634-492">The byte array containing the decoded URL string token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-493"><xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> 方法将 URL 字符串标记（它将二进制数据编码为64进制）转换为其等效的字节数组表示形式。</span><span class="sxs-lookup"><span data-stu-id="e2634-493">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</span></span> <span data-ttu-id="e2634-494">使用 <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> 方法对 URL 中传输的令牌进行解码，并使用 <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>进行编码。</span><span class="sxs-lookup"><span data-stu-id="e2634-494">Use the <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method to decode tokens transmitted on the URL and encoded by using the <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</span></span>  
  
 <span data-ttu-id="e2634-495">如果 `input` 参数的长度小于1，则 <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> 方法将返回一个空字节数组。</span><span class="sxs-lookup"><span data-stu-id="e2634-495">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method will return an empty byte array if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-496"><paramref name="input" /> 参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-496">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="UrlTokenEncode">
      <MemberSignature Language="C#" Value="public static string UrlTokenEncode (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlTokenEncode(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenEncode (input As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlTokenEncode(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlTokenEncode : byte[] -&gt; string" Usage="System.Web.HttpServerUtility.UrlTokenEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e2634-497">要编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="e2634-497">The byte array to encode.</span></span></param>
        <summary><span data-ttu-id="e2634-498">将一个字节数组编码为使用 Base 64 编码方案的等效字符串表示形式，Base 64 是一种适于通过 URL 传输数据的编码方案。</span><span class="sxs-lookup"><span data-stu-id="e2634-498">Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</span></span></summary>
        <returns><span data-ttu-id="e2634-499">如果字节数组的长度大于 1，则为包含编码后的标记的字符串；否则为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e2634-499">The string containing the encoded token if the byte array *length* is greater than one; otherwise, an empty string ("").</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2634-500"><xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> 方法将字节数组转换为以64进制数字编码的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="e2634-500">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> method converts a byte array into an equivalent string representation encoded with base 64 digits.</span></span> <span data-ttu-id="e2634-501">生成的字符串标记可以在 URL 上传输。</span><span class="sxs-lookup"><span data-stu-id="e2634-501">The resulting string token can be transmitted on the URL.</span></span>  
  
 <span data-ttu-id="e2634-502">如果 `input` 参数的长度小于1，<xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> 将返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="e2634-502">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> will return an empty string if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2634-503"><paramref name="input" /> 参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2634-503">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
