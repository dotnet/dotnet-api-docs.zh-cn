<Type Name="UnvalidatedRequestValuesBase" FullName="System.Web.UnvalidatedRequestValuesBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1adad61ca62e79f4f35e9df052e7f71876fcf87b" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70498183" /></Metadata><TypeSignature Language="C#" Value="public abstract class UnvalidatedRequestValuesBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UnvalidatedRequestValuesBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UnvalidatedRequestValuesBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UnvalidatedRequestValuesBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnvalidatedRequestValuesBase abstract" />
  <TypeSignature Language="F#" Value="type UnvalidatedRequestValuesBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c5796-101">为提供对 HTTP 请求值的权限的类提供基类，不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-101">Serves as the base class for classes that provide access to HTTP request values without triggering ASP.NET request validation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5796-102">有关请求验证的信息，请参阅 <xref:System.Web.UnvalidatedRequestValues> 。</span><span class="sxs-lookup"><span data-stu-id="c5796-102">For information about request validation, see <xref:System.Web.UnvalidatedRequestValues>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UnvalidatedRequestValuesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UnvalidatedRequestValuesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UnvalidatedRequestValuesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5796-103">从派生类中的构造函数进行调用以便初始化 <see cref="T:System.Web.UnvalidatedRequestValuesBase" /> 类。</span><span class="sxs-lookup"><span data-stu-id="c5796-103">Called from constructors in derived classes in order to initialize the <see cref="T:System.Web.UnvalidatedRequestValuesBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.UnvalidatedRequestValuesBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-104">在派生类中重写时，获取客户端发送的 cookies 集合，不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-104">When overridden in a derived class, gets the collection of cookies that the client sent, without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-105">来自 HTTP 请求的 cookie。</span><span class="sxs-lookup"><span data-stu-id="c5796-105">The cookies from the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-106">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-106">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-107">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-107">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpFileCollectionBase Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollectionBase Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.Files" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Files As HttpFileCollectionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpFileCollectionBase ^ Files { System::Web::HttpFileCollectionBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollectionBase" Usage="System.Web.UnvalidatedRequestValuesBase.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollectionBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-108">当在派生类中重写，获取客户端上传的文件集合，不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-108">When overridden in a derived class, gets the collection of files that the client uploaded, without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-109">来自 HTTP 请求的文件。</span><span class="sxs-lookup"><span data-stu-id="c5796-109">The files from the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-110">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-110">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-111">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-111">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.Form" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.UnvalidatedRequestValuesBase.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-112">当在派生类中重写，获取客户端提交的窗体变量集合，不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-112">When overridden in a derived class, gets the collection of form variables that the client submitted, without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-113">来自 HTTP 请求的变量形式。</span><span class="sxs-lookup"><span data-stu-id="c5796-113">The form variables from the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-114">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-114">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-115">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-115">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.UnvalidatedRequestValuesBase.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-116">在派生类中重写时，获取客户端发送的 HTTP 标头集合，在不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-116">When overridden in a derived class, gets the collection of HTTP headers that the client sent, without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-117">HTTP 请求中的标头。</span><span class="sxs-lookup"><span data-stu-id="c5796-117">The headers from the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-118">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-118">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-119">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-119">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string field] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(field As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ field); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.UnvalidatedRequestValuesBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="c5796-120">要检索的对象的键。</span><span class="sxs-lookup"><span data-stu-id="c5796-120">The key of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="c5796-121">在派生类中重写时，从 <see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.Cookies" />、<see cref="P:System.Web.HttpRequest.QueryString" /> 或 <see cref="P:System.Web.HttpRequest.ServerVariables" /> 集合获取指定的对象，在不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-121">When overridden in a derived class, gets the specified object from the <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.QueryString" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection, without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-122">由 <paramref name="field" /> 参数指定的对象。</span><span class="sxs-lookup"><span data-stu-id="c5796-122">The object specified by the <paramref name="field" /> parameter.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-123">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-123">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-124">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-124">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UnvalidatedRequestValuesBase.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-125">在派生类中重写时，获取所请求资源的虚拟路径，不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-125">When overridden in a derived class, gets the virtual path of the requested resource without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-126">虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="c5796-126">The virtual path.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-127">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-127">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-128">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-128">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public virtual string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.UnvalidatedRequestValuesBase.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-129">在派生类中重写时，在不触发 ASP.NET 请求验证的情况下，获取具有 URL 扩展名的资源的附加路径信息。</span><span class="sxs-lookup"><span data-stu-id="c5796-129">When overridden in a derived class, gets additional path information for a resource that has a URL extension, without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-130">包含资源的附加路径信息的字符串。</span><span class="sxs-lookup"><span data-stu-id="c5796-130">A string that contains additional path information for a resource.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-131">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-131">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-132">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-132">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.UnvalidatedRequestValuesBase.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-133">在派生类中重写时，获取客户端提交的 HTTP 查询字符串集合，不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-133">When overridden in a derived class, gets the collection of HTTP query string variables that the client submitted, without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-134">客户端发送的查询字符串变量的集合。</span><span class="sxs-lookup"><span data-stu-id="c5796-134">The collection of query string variables sent by the client.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-135">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-135">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-136">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-136">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public virtual string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.UnvalidatedRequestValuesBase.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-137">在派生类中重写时，获取遵守网站名称的所请求的 URL 部分，不触发 ASP.NET 请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-137">When overridden in a derived class, gets the part of the requested URL that follows the website name, without triggering ASP.NET request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-138">遵守网站名称的 URL 部件。</span><span class="sxs-lookup"><span data-stu-id="c5796-138">The part of the URL that follows the website name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5796-139">如果完整的请求 URL 为 `http://www.contoso.com/default.aspx?id=44` ，则的值 <xref:System.Web.UnvalidatedRequestValuesBase.RawUrl%2A> 为 `/default.aspx?id=44` 。</span><span class="sxs-lookup"><span data-stu-id="c5796-139">If the complete request URL is `http://www.contoso.com/default.aspx?id=44`, the value of <xref:System.Web.UnvalidatedRequestValuesBase.RawUrl%2A> is `/default.aspx?id=44`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-140">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-140">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-141">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-141">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public virtual Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.UnvalidatedRequestValuesBase.Url" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.UnvalidatedRequestValuesBase.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5796-142">当在派生类中重写时，为请求获取 URL 数据，不触发请求验证。</span><span class="sxs-lookup"><span data-stu-id="c5796-142">When overridden in a derived class, gets the URL data for the request without triggering request validation.</span></span></summary>
        <value><span data-ttu-id="c5796-143">一个对象，它包含该请求的 URL 数据。</span><span class="sxs-lookup"><span data-stu-id="c5796-143">An object that contains the URL data for the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5796-144">你可以从该属性返回的对象中检索 URL 数据，例如端口号、主机名、路径信息和有关用户的数据 <xref:System.Uri> 。</span><span class="sxs-lookup"><span data-stu-id="c5796-144">You can retrieve URL data such as the port number, host name, path information, and data about the user from the <xref:System.Uri> object that this property returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c5796-145">未实现该属性。</span><span class="sxs-lookup"><span data-stu-id="c5796-145">The property is not implemented.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c5796-146">如果在派生类中重写此属性，则必须手动检查数据是否存在潜在的跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="c5796-146">If you override this property in a derived class, you must manually check the data for potential cross-site scripting attacks.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
